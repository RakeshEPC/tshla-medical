{"version":3,"file":"PumpDriveLogin-M2ljJFXa.js","sources":["../../src/pages/PumpDriveLogin.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { pumpAuthService, type LoginCredentials } from '../services/pumpAuth.service';\n\ninterface FormData {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n}\n\nexport default function PumpDriveLogin() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState<FormData>({\n    email: '',\n    password: '',\n    rememberMe: false\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const validateForm = (): Record<string, string> => {\n    const newErrors: Record<string, string> = {};\n\n    // Email validation\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Password validation\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    }\n\n    return newErrors;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    setIsSubmitting(true);\n    setErrors({});\n\n    try {\n      const loginCredentials: LoginCredentials = {\n        email: formData.email,\n        password: formData.password\n      };\n\n      const result = await pumpAuthService.login(loginCredentials);\n\n      if (result.success) {\n        // Login successful, check if there's a redirect path\n        const redirectPath = sessionStorage.getItem('pumpDriveRedirectAfterLogin');\n        if (redirectPath) {\n          sessionStorage.removeItem('pumpDriveRedirectAfterLogin');\n          navigate(redirectPath);\n        } else {\n          // Default redirect to PumpDrive assessment\n          navigate('/pumpdrive');\n        }\n      } else {\n        setErrors({ general: result.message });\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setErrors({\n        general: error instanceof Error ? error.message : 'Login failed. Please try again.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: keyof FormData, value: string | boolean) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear specific field error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 to-pink-100 p-6\">\n      <div className=\"max-w-md mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"text-4xl mb-4\">üîê</div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Welcome Back\n          </h1>\n          <p className=\"text-gray-600\">\n            Sign in to continue your pump assessment\n          </p>\n        </div>\n\n        {/* Login Form */}\n        <div className=\"bg-white rounded-xl shadow-lg p-8\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* General Error */}\n            {errors.general && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <p className=\"text-red-700 text-sm\">{errors.general}</p>\n              </div>\n            )}\n\n            {/* Email Field */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email Address\n              </label>\n              <input\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => handleInputChange('email', e.target.value)}\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-colors ${\n                  errors.email ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                }`}\n                placeholder=\"your@email.com\"\n                autoComplete=\"email\"\n              />\n              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\n            </div>\n\n            {/* Password Field */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  value={formData.password}\n                  onChange={(e) => handleInputChange('password', e.target.value)}\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-colors ${\n                    errors.password ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Enter your password\"\n                  autoComplete=\"current-password\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                >\n                  {showPassword ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è'}\n                </button>\n              </div>\n              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\n            </div>\n\n            {/* Remember Me & Forgot Password */}\n            <div className=\"flex items-center justify-between\">\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.rememberMe}\n                  onChange={(e) => handleInputChange('rememberMe', e.target.checked)}\n                  className=\"w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500\"\n                />\n                <span className=\"ml-2 text-sm text-gray-700\">Remember me</span>\n              </label>\n              <button\n                type=\"button\"\n                className=\"text-sm text-purple-600 hover:underline\"\n                onClick={() => {\n                  // TODO: Implement forgot password\n                  alert('Forgot password functionality coming soon!');\n                }}\n              >\n                Forgot password?\n              </button>\n            </div>\n\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-4 px-6 rounded-lg font-semibold text-lg hover:from-purple-700 hover:to-pink-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? 'Signing In...' : 'Sign In'}\n            </button>\n          </form>\n\n          {/* Create Account Link */}\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-gray-600\">\n              Don't have an account?{' '}\n              <button\n                onClick={() => navigate('/pumpdrive/create-account')}\n                className=\"text-purple-600 hover:underline font-medium\"\n              >\n                Create Account\n              </button>\n            </p>\n          </div>\n\n          {/* Welcome Info */}\n          <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-start\">\n              <span className=\"mr-2 text-green-500\">‚ú®</span>\n              <div className=\"text-sm text-green-700\">\n                <p className=\"font-medium mb-1\">Welcome to PumpDrive</p>\n                <p>Get personalized insulin pump recommendations based on your unique needs and lifestyle.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Back to Home */}\n        <div className=\"mt-6 text-center\">\n          <button\n            onClick={() => navigate('/')}\n            className=\"text-gray-600 hover:text-gray-800 text-sm\"\n          >\n            ‚Üê Back to Home\n          </button>\n        </div>\n\n        {/* Security Notice */}\n        <div className=\"mt-6 text-center\">\n          <div className=\"flex justify-center items-center space-x-6 text-sm text-gray-500\">\n            <div className=\"flex items-center\">\n              <span className=\"mr-2\">üîí</span>\n              Secure Login\n            </div>\n            <div className=\"flex items-center\">\n              <span className=\"mr-2\">üè•</span>\n              HIPAA Compliant\n            </div>\n            <div className=\"flex items-center\">\n              <span className=\"mr-2\">‚ö°</span>\n              Quick Access\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["PumpDriveLogin","navigate","useNavigate","formData","setFormData","useState","errors","setErrors","isSubmitting","setIsSubmitting","showPassword","setShowPassword","validateForm","newErrors","handleSubmit","e","validationErrors","loginCredentials","result","pumpAuthService","redirectPath","error","handleInputChange","field","value","prev","jsxs","jsx"],"mappings":"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"}