import{b as r,l as s}from"./index-JAW6HvUl.js";class i{STORAGE_PREFIX="tshla_patient_";SESSION_KEY="tshla_patient_session";generateInternalId(){let e;do e=Math.floor(Math.random()*9e7+1e7).toString();while(this.internalIdExists(e));return e}generateAvaId(){let t;do{const n=Math.floor(Math.random()*900+100),e=Math.floor(Math.random()*900+100);t=`AVA ${n}-${e}`}while(this.avaIdExists(t));return t}internalIdExists(t){return this.getAllPatients().some(e=>e.internalId===t)}avaIdExists(t){return this.getAllPatients().some(e=>e.patientAvaId===t)}async registerPatient(t){const n=this.generateInternalId(),e=this.generateAvaId(),a={internalId:n,patientAvaId:e,firstName:t.firstName,lastName:t.lastName,email:t.email.toLowerCase(),phone:t.phone,dateOfBirth:t.dateOfBirth,createdAt:new Date().toISOString(),isActive:!0,hasCompletedOnboarding:!1,programs:{pumpdrive:{enrolled:t.program==="pumpdrive"||t.program==="both"},weightloss:{enrolled:t.program==="weightloss"||t.program==="both"}},preferences:{communicationMethod:"email",language:"en",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone}};return this.savePatient(a),await this.sendWelcomeEmail(a),a}async loginWithAvaId(t){let n=null;if(t.avaId){const a=this.formatAvaId(t.avaId);n=this.getPatientByAvaId(a)}if(!n&&t.email&&(n=this.getPatientByEmail(t.email.toLowerCase())),!n)throw new Error("Invalid login credentials");n.lastLogin=new Date().toISOString(),this.savePatient(n);const e=this.createSession(n);return{patient:n,session:e}}formatAvaId(t){const n=t.replace(/[^A-Z0-9]/gi,"");if(!n.toUpperCase().startsWith("AVA"))throw new Error("Invalid AVA ID format");const e=n.substring(3);if(e.length!==6)throw new Error("Invalid AVA ID format");return`AVA ${e.substring(0,3)}-${e.substring(3,6)}`}createSession(t){const n={sessionId:this.generateSessionId(),patientAvaId:t.patientAvaId,internalId:t.internalId,startedAt:new Date().toISOString(),lastActivity:new Date().toISOString(),isActive:!0,deviceInfo:{userAgent:navigator.userAgent}};return sessionStorage.setItem(this.SESSION_KEY,JSON.stringify(n)),n}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substring(2,15)}`}getCurrentSession(){const t=sessionStorage.getItem(this.SESSION_KEY);if(t)try{return JSON.parse(t)}catch{r("patient","Error message",{})}return null}getCurrentPatient(){const t=this.getCurrentSession();return t?this.getPatientByInternalId(t.internalId):null}logout(){sessionStorage.removeItem(this.SESSION_KEY)}savePatient(t){localStorage.setItem(`${this.STORAGE_PREFIX}id_${t.internalId}`,JSON.stringify(t)),localStorage.setItem(`${this.STORAGE_PREFIX}ava_${t.patientAvaId.replace(/\s/g,"_")}`,t.internalId),localStorage.setItem(`${this.STORAGE_PREFIX}email_${t.email}`,t.internalId),this.updatePatientIndex(t.internalId)}updatePatientIndex(t){const n=`${this.STORAGE_PREFIX}index`,e=localStorage.getItem(n);let a=[];if(e)try{a=JSON.parse(e)}catch{r("patient","Error message",{})}a.includes(t)||(a.push(t),localStorage.setItem(n,JSON.stringify(a)))}getPatientByInternalId(t){const n=localStorage.getItem(`${this.STORAGE_PREFIX}id_${t}`);if(n)try{return JSON.parse(n)}catch{r("patient","Error message",{})}return null}getPatientByAvaId(t){const n=`${this.STORAGE_PREFIX}ava_${t.replace(/\s/g,"_")}`,e=localStorage.getItem(n);return e?this.getPatientByInternalId(e):null}getPatientByEmail(t){const n=`${this.STORAGE_PREFIX}email_${t.toLowerCase()}`,e=localStorage.getItem(n);return e?this.getPatientByInternalId(e):null}getAllPatients(){const t=`${this.STORAGE_PREFIX}index`,n=localStorage.getItem(t);if(!n)return[];try{return JSON.parse(n).map(a=>this.getPatientByInternalId(a)).filter(a=>a!==null)}catch{return r("patient","Error message",{}),[]}}updatePatientProgram(t,n,e){const a=this.getPatientByInternalId(t);return a?(a.programs[n]||(a.programs[n]={enrolled:!0}),a.programs[n]={...a.programs[n],...e},this.savePatient(a),a):null}savePumpRecommendations(t,n){const e=this.getPatientByInternalId(t);e&&(e.programs.pumpdrive||(e.programs.pumpdrive={enrolled:!0}),e.programs.pumpdrive.finalRecommendations=n,e.programs.pumpdrive.lastActivity=new Date().toISOString(),this.savePatient(e))}savePersonalizedReport(t,n){const e=this.getPatientByInternalId(t);e&&(e.programs.pumpdrive||(e.programs.pumpdrive={enrolled:!0}),e.programs.pumpdrive.personalReport=n,e.programs.pumpdrive.lastActivity=new Date().toISOString(),this.savePatient(e))}async sendWelcomeEmail(t){s("patient","Debug message",{})}}const m=new i;export{m as patientService};
//# sourceMappingURL=patient.service-CxaGvQcl.js.map
