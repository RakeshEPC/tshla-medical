import{g as t,b as i,l as n,h as o}from"./index-CFDQeSWK.js";class c{baseUrl="https://tshla-pump-api-container.redpebble-e4551b7a.eastus.azurecontainerapps.io";tokenKey="pump_auth_token";userKey="pump_user_data";validatePassword(e){const s=[];return e.length<8&&s.push("Password must be at least 8 characters long"),/[A-Z]/.test(e)||s.push("Password must contain at least 1 uppercase letter"),/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(e)||s.push("Password must contain at least 1 special character (!@#$%^&*)"),{isValid:s.length===0,errors:s}}async registerUser(e){try{t("PumpAuth","Registering new user",{email:e.email,username:e.username,isResearchParticipant:e.isResearchParticipant});const s=await fetch(`${this.baseUrl}/api/auth/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),r=await s.json();if(!s.ok)throw new Error(r.message||r.error||`HTTP ${s.status}`);return r.token&&localStorage.setItem(this.tokenKey,r.token),r.user&&localStorage.setItem(this.userKey,JSON.stringify(r.user)),t("PumpAuth","User registered successfully",{userId:r.user?.id,isResearchParticipant:r.user?.isResearchParticipant}),r}catch(s){throw i("PumpAuth","User registration failed",{error:s}),new Error(`Registration failed: ${s instanceof Error?s.message:"Unknown error"}`)}}async loginUser(e){try{t("PumpAuth","User login attempt",{email:e.email});const s=await fetch(`${this.baseUrl}/api/auth/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),r=await s.json();if(!s.ok)throw new Error(r.message||r.error||`HTTP ${s.status}`);return r.token&&localStorage.setItem(this.tokenKey,r.token),r.user&&localStorage.setItem(this.userKey,JSON.stringify(r.user)),t("PumpAuth","User logged in successfully",{userId:r.user?.id,accessExpired:r.accessExpired}),r}catch(s){throw i("PumpAuth","User login failed",{error:s}),new Error(`Login failed: ${s instanceof Error?s.message:"Unknown error"}`)}}async checkAccess(){try{const e=this.getToken();if(!e)throw new Error("No authentication token found");const s=await fetch(`${this.baseUrl}/api/auth/check-access`,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}}),r=await s.json();if(!s.ok)throw new Error(r.message||r.error||`HTTP ${s.status}`);return n("PumpAuth","Access check completed",{accessStatus:r.accessStatus,hoursRemaining:r.hoursRemaining}),r}catch(e){throw i("PumpAuth","Access check failed",{error:e}),new Error(`Access check failed: ${e instanceof Error?e.message:"Unknown error"}`)}}async renewAccess(e){try{t("PumpAuth","Renewing access for user",{userId:e});const s=await fetch(`${this.baseUrl}/api/auth/renew-access`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:e})}),r=await s.json();if(!s.ok)throw new Error(r.message||r.error||`HTTP ${s.status}`);const a=this.getUser();return a&&(a.accessExpiresAt=r.accessExpiresAt,localStorage.setItem(this.userKey,JSON.stringify(a))),t("PumpAuth","Access renewed successfully",{userId:e,newExpiryTime:r.accessExpiresAt}),r}catch(s){throw i("PumpAuth","Access renewal failed",{error:s,userId:e}),new Error(`Access renewal failed: ${s instanceof Error?s.message:"Unknown error"}`)}}getToken(){return localStorage.getItem(this.tokenKey)}getUser(){const e=localStorage.getItem(this.userKey);if(!e)return null;try{return JSON.parse(e)}catch(s){return o("PumpAuth","Failed to parse stored user data",{error:s}),null}}isAuthenticated(){const e=this.getToken(),s=this.getUser();return!!(e&&s)}isAccessExpired(){const e=this.getUser();if(!e||!e.accessExpiresAt)return!0;const s=new Date(e.accessExpiresAt);return new Date>=s}getHoursRemaining(){const e=this.getUser();if(!e||!e.accessExpiresAt)return 0;const s=new Date(e.accessExpiresAt),r=new Date,a=s.getTime()-r.getTime();return a<=0?0:Math.floor(a/(1e3*60*60))}logout(){localStorage.removeItem(this.tokenKey),localStorage.removeItem(this.userKey),t("PumpAuth","User logged out successfully",{})}async login(e){return this.loginUser(e)}clearAll(){this.logout(),n("PumpAuth","All authentication data cleared",{})}getAuthHeaders(){const e=this.getToken();if(!e)throw new Error("No authentication token available");return{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}}validateRegistrationData(e){const s=[];e.email?/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.email)||s.push("Invalid email format"):s.push("Email is required"),e.firstName?e.firstName.length<1?s.push("First name must be at least 1 character"):e.firstName.length>50&&s.push("First name must be less than 50 characters"):s.push("First name is required"),e.lastName?e.lastName.length<1?s.push("Last name must be at least 1 character"):e.lastName.length>50&&s.push("Last name must be less than 50 characters"):s.push("Last name is required"),e.phoneNumber?/^\+?[\d\s\-\(\)]{10,15}$/.test(e.phoneNumber)||s.push("Please enter a valid phone number"):s.push("Phone number is required");const r=this.validatePassword(e.password);return r.isValid||s.push(...r.errors),e.isResearchParticipant&&e.researchData&&(e.researchData.fullName||s.push("Full name is required for research participants"),e.researchData.dateOfBirth||s.push("Date of birth is required for research participants"),e.researchData.mailingAddress||s.push("Mailing address is required for research participants")),s}}const l=new c;export{l as pumpAuthService};
//# sourceMappingURL=pumpAuth.service-C_hgfJl8.js.map
