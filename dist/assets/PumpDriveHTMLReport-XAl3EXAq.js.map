{"version":3,"file":"PumpDriveHTMLReport-XAl3EXAq.js","sources":["../../src/pages/PumpDriveHTMLReport.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../styles/pump-report-print.css';\n\ninterface PumpRecommendation {\n  topRecommendation: {\n    name: string;\n    score: number;\n    explanation: string;\n    keyFeatures: string[];\n    pros: string[];\n    cons: string[];\n  };\n  alternatives: Array<{\n    name: string;\n    score: number;\n    explanation: string;\n    keyFeatures: string[];\n  }>;\n  decisionSummary: {\n    userPriorities: string[];\n    keyFactors: string[];\n    confidence: number;\n  };\n  detailedAnalysis: string;\n}\n\n// Legacy interface for backward compatibility\ninterface LegacyPumpRecommendation {\n  topChoice: {\n    name: string;\n    score: number;\n    reasons: string[];\n  };\n  alternatives: Array<{\n    name: string;\n    score: number;\n    reasons: string[];\n  }>;\n  keyFactors: string[];\n  personalizedInsights: string;\n}\n\ninterface QAItem {\n  question: string;\n  answer: string;\n  timestamp?: string;\n}\n\nexport default function PumpDriveHTMLReport() {\n  const navigate = useNavigate();\n  const { assessmentId } = useParams();\n  const [patientName, setPatientName] = useState('');\n  const [recommendation, setRecommendation] = useState<PumpRecommendation | LegacyPumpRecommendation | null>(null);\n  const [sliderData, setSliderData] = useState<Record<string, number>>({});\n  const [featureData, setFeatureData] = useState<any[]>([]);\n  const [clarifyingData, setClarifyingData] = useState<Record<string, string>>({});\n  const [conversationData, setConversationData] = useState<QAItem[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadReportData();\n  }, [assessmentId]);\n\n  const loadReportData = async () => {\n    try {\n      // Get patient name from session storage or use default\n      const storedName = sessionStorage.getItem('pumpDrivePatientName') || '';\n      setPatientName(storedName || 'Pump Drive Assessment');\n\n      // Load recommendation data\n      const storedRecommendation = sessionStorage.getItem('pumpDriveRecommendation');\n      if (storedRecommendation) {\n        setRecommendation(JSON.parse(storedRecommendation));\n      }\n\n      // Load user preferences\n      const storedSliders = sessionStorage.getItem('pumpDriveSliders');\n      if (storedSliders) {\n        setSliderData(JSON.parse(storedSliders));\n      }\n\n      // Load selected features\n      const storedFeatures = sessionStorage.getItem('selectedPumpFeatures');\n      if (storedFeatures) {\n        setFeatureData(JSON.parse(storedFeatures));\n      }\n\n      // Load clarifying responses\n      const storedClarifying = sessionStorage.getItem('pumpDriveClarifyingResponses');\n      if (storedClarifying) {\n        setClarifyingData(JSON.parse(storedClarifying));\n      }\n\n      // Load conversation history\n      const storedConversation = sessionStorage.getItem('pumpDriveConversation');\n      if (storedConversation) {\n        setConversationData(JSON.parse(storedConversation));\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading report data:', error);\n      setLoading(false);\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleSaveHTML = () => {\n    const htmlContent = document.documentElement.outerHTML;\n    const blob = new Blob([htmlContent], { type: 'text/html' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `pump-report-${patientName.replace(/\\s+/g, '-').toLowerCase()}-${new Date().toISOString().split('T')[0]}.html`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  const getExcitingBenefits = (pumpName: string): string[] => {\n    const benefits: Record<string, string[]> = {\n      'Medtronic 780G': [\n        'Most aggressive blood sugar control - wake up with better numbers!',\n        'Swim up to 12 feet deep - no more missing pool parties!',\n        'AA batteries available everywhere - never worry about charging!',\n        'Large 300-unit capacity - fewer interruptions to your day!',\n        'Proven track record - thousands of happy users worldwide!'\n      ],\n      't:slim X2': [\n        'Smartphone-like touchscreen - so easy your kids could use it!',\n        'Multiple CGM options - freedom to choose what works for you!',\n        'Sleek, modern design - looks like a cool tech device!',\n        'Loaner program for travel - never stuck without backup!',\n        'Regular software updates - your pump gets better over time!'\n      ],\n      'Tandem Mobi': [\n        'Smallest rechargeable pump ever - barely notice you\\'re wearing it!',\n        'Apple Watch control - manage diabetes right from your wrist!',\n        'Ultra-discreet - fits anywhere, visible to no one!',\n        'Quick-release feature - perfect for sports and activities!',\n        'Modern tech that actually makes diabetes easier!'\n      ],\n      'Omnipod 5': [\n        'Completely tubeless - total freedom of movement!',\n        'Waterproof design - swim, shower, exercise without worry!',\n        'No buttons to accidentally press - set it and forget it!',\n        'Automatic insulin delivery - like having a personal assistant!',\n        'Pod system means no pump to drop or break!'\n      ],\n      'Beta Bionics iLet': [\n        'Revolutionary dual-hormone technology - glucagon AND insulin!',\n        'Just enter your weight - the simplest setup ever!',\n        'Learns your body automatically - gets smarter every day!',\n        'Handles both highs AND lows - complete diabetes management!',\n        'Future of diabetes care, available today!'\n      ],\n      'Twiist': [\n        'Incredibly lightweight at just 2 ounces - you\\'ll forget it\\'s there!',\n        'Apple Watch bolusing - control everything from your wrist!',\n        'Ultra-minimal design - maximum discretion!',\n        'Perfect for active lifestyles - built for movement!',\n        'Cutting-edge technology in the smallest package!'\n      ]\n    };\n\n    return benefits[pumpName] || [\n      'Automated insulin delivery - freedom from constant management!',\n      'Better blood sugar control - feel your best every day!',\n      'Modern technology - diabetes care that actually helps!',\n      'Improved quality of life - more time for what matters!',\n      'Join thousands of happy pump users!'\n    ];\n  };\n\n  // Helper function to get recommendation data in consistent format\n  const getRecommendationData = () => {\n    if (!recommendation) return null;\n\n    // Check if it's the new format\n    if ('topRecommendation' in recommendation) {\n      return {\n        topChoice: {\n          name: recommendation.topRecommendation.name,\n          score: recommendation.topRecommendation.score,\n          reasons: recommendation.topRecommendation.pros || []\n        },\n        alternatives: recommendation.alternatives.map(alt => ({\n          name: alt.name,\n          score: alt.score,\n          reasons: [alt.explanation]\n        })),\n        keyFactors: recommendation.decisionSummary.userPriorities || [],\n        personalizedInsights: recommendation.detailedAnalysis\n      };\n    }\n\n    // Legacy format\n    return recommendation as LegacyPumpRecommendation;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"report-container\">\n        <div className=\"loading-message\">Loading your pump report...</div>\n      </div>\n    );\n  }\n\n  const recData = getRecommendationData();\n\n  if (!recData) {\n    return (\n      <div className=\"report-container\">\n        <div className=\"error-message\">\n          <h2>No Report Data Found</h2>\n          <p>Please complete a pump assessment first.</p>\n          <button onClick={() => navigate('/pumpdrive')} className=\"action-button\">\n            Start Assessment\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"report-container\">\n      {/* Print Controls - Hidden when printing */}\n      <div className=\"print-controls no-print\">\n        <button onClick={() => navigate('/pumpdrive/results')} className=\"back-button\">\n          ‚Üê Back to Results\n        </button>\n        <div className=\"print-actions\">\n          <button onClick={handlePrint} className=\"print-button\">\n            üñ®Ô∏è Print Report\n          </button>\n          <button onClick={handleSaveHTML} className=\"save-button\">\n            üíæ Save as HTML\n          </button>\n        </div>\n      </div>\n\n      {/* Report Content */}\n      <div className=\"report-content\">\n        {/* Header */}\n        <header className=\"report-header\">\n          <div className=\"header-content\">\n            <h1>Your Perfect Pump Match</h1>\n            {patientName && <h2>For: {patientName}</h2>}\n            <div className=\"report-date\">\n              Generated on {new Date().toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              })}\n            </div>\n          </div>\n        </header>\n\n        {/* What You Told Us Section */}\n        <section className=\"preferences-section\">\n          <h2 className=\"section-title\">What You Told Us</h2>\n\n          {Object.keys(sliderData).length > 0 && (\n            <div className=\"preferences-group\">\n              <h3>Your Top Priorities:</h3>\n              <ul className=\"preferences-list\">\n                {Object.entries(sliderData)\n                  .filter(([_, value]) => value >= 7)\n                  .map(([key, value]) => (\n                    <li key={key}>\n                      {key.replace(/([A-Z])/g, ' $1').trim()}: {value}/10\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          )}\n\n          {featureData.length > 0 && (\n            <div className=\"preferences-group\">\n              <h3>Features You Wanted:</h3>\n              <ul className=\"preferences-list\">\n                {featureData.slice(0, 5).map((feature, index) => (\n                  <li key={index}>\n                    {feature.name || feature.title || feature || 'Unknown feature'}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </section>\n\n        {/* Page break before recommendation */}\n        <div className=\"page-break\"></div>\n\n        {/* Your Perfect Match Section */}\n        <section className=\"recommendation-section\">\n          <h2 className=\"section-title\">Your Perfect Match</h2>\n\n          <div className=\"top-recommendation\">\n            <h3 className=\"pump-name\">{recData.topChoice.name}</h3>\n            <div className=\"match-score\">Match Score: {recData.topChoice.score}/100</div>\n\n            <div className=\"reasons-group\">\n              <h4>Why This Pump is Perfect for You:</h4>\n              <ul className=\"reasons-list\">\n                {recData.topChoice.reasons.slice(0, 4).map((reason, index) => (\n                  <li key={index}>{reason}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          {/* Alternative Options */}\n          {recData.alternatives && recData.alternatives.length > 0 && (\n            <div className=\"alternatives-section\">\n              <h4>Alternative Options:</h4>\n              {recData.alternatives.slice(0, 2).map((alt, index) => (\n                <div key={index} className=\"alternative-item\">\n                  <strong>{alt.name}</strong> (Score: {alt.score}/100)\n                  {alt.reasons && alt.reasons.length > 0 && (\n                    <p>{alt.reasons[0]}</p>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n\n        {/* Q&A Sections */}\n        {Object.keys(clarifyingData).length > 0 && (\n          <section className=\"qa-section\">\n            <h2 className=\"section-title\">Clarifying Questions We Asked</h2>\n            {Object.entries(clarifyingData).map(([question, answer], index) => (\n              <div key={index} className=\"qa-item\">\n                <div className=\"question\">\n                  <strong>Q:</strong> {question}\n                </div>\n                <div className=\"answer\">\n                  <strong>A:</strong> {answer}\n                </div>\n              </div>\n            ))}\n          </section>\n        )}\n\n        {conversationData.length > 0 && (\n          <section className=\"qa-section\">\n            <h2 className=\"section-title\">Your Follow-up Questions & Our Full Answers</h2>\n            {conversationData.map((qa, index) => (\n              <div key={index} className=\"qa-item\">\n                <div className=\"question\">\n                  <strong>Q:</strong> {qa.question}\n                </div>\n                <div className=\"answer\">\n                  <strong>A:</strong> {qa.answer}\n                </div>\n              </div>\n            ))}\n          </section>\n        )}\n\n        {/* Page break before benefits */}\n        <div className=\"page-break\"></div>\n\n        {/* Amazing Benefits Section */}\n        <section className=\"benefits-section\">\n          <h2 className=\"section-title benefits-title\">Amazing Benefits Waiting for You</h2>\n\n          <ul className=\"benefits-list\">\n            {getExcitingBenefits(recData.topChoice.name).map((benefit, index) => (\n              <li key={index} className=\"benefit-item\">{benefit}</li>\n            ))}\n          </ul>\n\n          <div className=\"encouragement\">\n            <p className=\"ready-text\">Ready to transform your diabetes management?</p>\n            <p className=\"share-text\">Share this report with your healthcare provider to get started!</p>\n          </div>\n        </section>\n\n        {/* Footer */}\n        <footer className=\"report-footer\">\n          <div className=\"footer-content\">\n            <p>Generated by TSHLA Medical AI</p>\n            <p>For more information, visit www.tshla.ai</p>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}"],"names":["PumpDriveHTMLReport","navigate","useNavigate","assessmentId","useParams","patientName","setPatientName","useState","recommendation","setRecommendation","sliderData","setSliderData","featureData","setFeatureData","clarifyingData","setClarifyingData","conversationData","setConversationData","loading","setLoading","useEffect","loadReportData","storedName","storedRecommendation","storedSliders","storedFeatures","storedClarifying","storedConversation","error","handlePrint","handleSaveHTML","htmlContent","blob","url","link","getExcitingBenefits","pumpName","getRecommendationData","alt","jsx","recData","jsxs","_","value","key","feature","index","reason","question","answer","qa","benefit"],"mappings":"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"}