{"version":3,"file":"PatientLogin-LR8oxxuR.js","sources":["../../src/pages/PatientLogin.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { patientService } from '../services/patient.service';\nimport type { PatientLogin } from '../types/patient.types';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\nexport default function PatientLoginPage() {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [loginMethod, setLoginMethod] = useState<'ava' | 'email'>('ava');\n\n  const [loginData, setLoginData] = useState<PatientLogin>({\n    avaId: '',\n    email: '',\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [showAvaFormat, setShowAvaFormat] = useState(false);\n\n  const formatAvaIdInput = (value: string) => {\n    // Remove all non-alphanumeric characters\n    let cleaned = value.toUpperCase().replace(/[^A-Z0-9]/g, '');\n\n    // If it doesn't start with AVA, add it\n    if (!cleaned.startsWith('AVA') && cleaned.length > 0) {\n      // Check if they're typing numbers (might be just the number part)\n      if (/^\\d/.test(cleaned)) {\n        cleaned = 'AVA' + cleaned;\n      }\n    }\n\n    // Format as AVA ###-### if we have enough digits\n    if (cleaned.startsWith('AVA')) {\n      const numbers = cleaned.substring(3);\n      if (numbers.length >= 3) {\n        const formatted = `AVA ${numbers.substring(0, 3)}`;\n        if (numbers.length > 3) {\n          return formatted + '-' + numbers.substring(3, 6);\n        }\n        return formatted;\n      }\n      return cleaned.replace('AVA', 'AVA ');\n    }\n\n    return value;\n  };\n\n  const handleAvaIdChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const formatted = formatAvaIdInput(e.target.value);\n    setLoginData({ ...loginData, avaId: formatted });\n    setErrors({});\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (loginMethod === 'ava') {\n      if (!loginData.avaId) {\n        newErrors.avaId = 'AVA ID is required';\n      } else {\n        // Check format: AVA ###-###\n        const avaPattern = /^AVA \\d{3}-\\d{3}$/;\n        if (!avaPattern.test(loginData.avaId)) {\n          newErrors.avaId = 'Please enter a valid AVA ID (AVA ###-###)';\n        }\n      }\n    } else {\n      if (!loginData.email) {\n        newErrors.email = 'Email is required';\n      } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(loginData.email)) {\n        newErrors.email = 'Please enter a valid email';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const loginPayload =\n        loginMethod === 'ava' ? { avaId: loginData.avaId } : { email: loginData.email };\n\n      const { patient, session } = await patientService.loginWithAvaId(loginPayload);\n\n      // Determine where to redirect based on patient's enrolled programs\n      if (\n        patient.programs.pumpdrive?.enrolled &&\n        !patient.programs.pumpdrive?.finalRecommendations\n      ) {\n        navigate('/pumpdrive');\n      } else if (patient.programs.weightloss?.enrolled) {\n        navigate('/patient/dashboard');\n      } else {\n        navigate('/patient/dashboard');\n      }\n    } catch (error) {\n      logError('PatientLogin', 'Error message', {});\n      setErrors({\n        submit:\n          loginMethod === 'ava'\n            ? 'Invalid AVA ID. Please check and try again.'\n            : 'Invalid email or account not found.',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50 flex items-center justify-center p-6\">\n      <div className=\"max-w-md w-full\">\n        {/* Logo/Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-blue-600 to-green-600 rounded-full mb-4\">\n            <span className=\"text-white text-3xl font-bold\">AVA</span>\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Welcome Back</h1>\n          <p className=\"text-gray-600\">Log in to continue your health journey</p>\n        </div>\n\n        {/* Login Form */}\n        <div className=\"bg-white rounded-3xl shadow-xl p-8\">\n          {/* Login Method Toggle */}\n          <div className=\"flex bg-gray-100 rounded-xl p-1 mb-6\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                setLoginMethod('ava');\n                setErrors({});\n              }}\n              className={`flex-1 py-2 px-4 rounded-lg font-medium transition-all ${\n                loginMethod === 'ava' ? 'bg-white shadow-sm text-blue-600' : 'text-gray-600'\n              }`}\n            >\n              AVA ID\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setLoginMethod('email');\n                setErrors({});\n              }}\n              className={`flex-1 py-2 px-4 rounded-lg font-medium transition-all ${\n                loginMethod === 'email' ? 'bg-white shadow-sm text-blue-600' : 'text-gray-600'\n              }`}\n            >\n              Email\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {loginMethod === 'ava' ? (\n              <>\n                {/* AVA ID Input */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Your AVA ID\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={loginData.avaId}\n                    onChange={handleAvaIdChange}\n                    placeholder=\"AVA 123-456\"\n                    className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono text-lg ${\n                      errors.avaId ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                    maxLength={11}\n                  />\n                  {errors.avaId && <p className=\"text-red-500 text-sm mt-1\">{errors.avaId}</p>}\n\n                  {/* Format Helper */}\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowAvaFormat(!showAvaFormat)}\n                    className=\"text-sm text-blue-600 hover:text-blue-700 mt-2\"\n                  >\n                    What's my AVA ID?\n                  </button>\n\n                  {showAvaFormat && (\n                    <div className=\"mt-3 p-3 bg-blue-50 rounded-lg text-sm\">\n                      <p className=\"text-gray-700 mb-2\">\n                        Your AVA ID was provided when you registered. It looks like:\n                      </p>\n                      <p className=\"font-mono font-bold text-blue-600 text-center text-lg\">\n                        AVA 123-456\n                      </p>\n                      <p className=\"text-gray-600 mt-2\">\n                        Check your welcome email for your unique AVA ID.\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <>\n                {/* Email Input */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    value={loginData.email}\n                    onChange={e => {\n                      setLoginData({ ...loginData, email: e.target.value });\n                      setErrors({});\n                    }}\n                    placeholder=\"john.smith@email.com\"\n                    className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\n                      errors.email ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  />\n                  {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\n                </div>\n              </>\n            )}\n\n            {/* Error Message */}\n            {errors.submit && (\n              <div className=\"bg-red-50 text-red-600 p-4 rounded-xl text-sm\">{errors.submit}</div>\n            )}\n\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className={`w-full py-4 rounded-xl font-semibold text-white transition-all ${\n                isLoading\n                  ? 'bg-gray-400 cursor-not-allowed'\n                  : 'bg-gradient-to-r from-blue-600 to-green-600 hover:from-blue-700 hover:to-green-700 transform hover:scale-[1.02]'\n              }`}\n            >\n              {isLoading ? (\n                <div className=\"flex items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                  Logging in...\n                </div>\n              ) : (\n                'Log In'\n              )}\n            </button>\n          </form>\n\n          {/* Divider */}\n          <div className=\"relative my-6\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-white text-gray-500\">or</span>\n            </div>\n          </div>\n\n          {/* Register Link */}\n          <div className=\"text-center\">\n            <p className=\"text-gray-600 mb-3\">Don't have an account?</p>\n            <button\n              type=\"button\"\n              onClick={() => navigate('/patient-register')}\n              className=\"w-full py-3 border-2 border-blue-600 text-blue-600 rounded-xl font-semibold hover:bg-blue-50 transition-colors\"\n            >\n              Create New Account\n            </button>\n          </div>\n        </div>\n\n        {/* Help Links */}\n        <div className=\"mt-6 text-center text-sm text-gray-500\">\n          <button\n            type=\"button\"\n            onClick={() => navigate('/forgot-ava-id')}\n            className=\"hover:text-gray-700\"\n          >\n            Forgot your AVA ID?\n          </button>\n          <span className=\"mx-2\">•</span>\n          <button\n            type=\"button\"\n            onClick={() => navigate('/contact')}\n            className=\"hover:text-gray-700\"\n          >\n            Contact Support\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["PatientLoginPage","navigate","useNavigate","isLoading","setIsLoading","useState","loginMethod","setLoginMethod","loginData","setLoginData","errors","setErrors","showAvaFormat","setShowAvaFormat","formatAvaIdInput","value","cleaned","numbers","formatted","handleAvaIdChange","e","validateForm","newErrors","handleSubmit","loginPayload","patient","session","patientService","logError","jsxs","jsx","Fragment"],"mappings":"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"}