{"version":3,"file":"TemplateDebug-BGFQBXro.js","sources":["../../src/pages/TemplateDebug.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { templateStorage } from '../lib/templateStorage';\nimport type { Template } from '../types/template.types';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\nexport default function TemplateDebug() {\n  const [templates, setTemplates] = useState<Template[]>([]);\n  const [selectedTemplate, setSelectedTemplate] = useState<Template | null>(null);\n  const [rawJson, setRawJson] = useState<string>('');\n\n  useEffect(() => {\n    loadTemplates();\n  }, []);\n\n  const loadTemplates = () => {\n    const allTemplates = templateStorage.getTemplates();\n    setTemplates(allTemplates);\n\n    // Log all templates for debugging\n    logDebug('TemplateDebug', 'Debug message', {});\n    allTemplates.forEach(template => {\n      logDebug('TemplateDebug', 'Debug message', {});\n      if (template.sections) {\n        logDebug('TemplateDebug', 'Debug message', {});\n        Object.entries(template.sections).forEach(([key, section]) => {\n          if (typeof section === 'object' && section !== null) {\n            logDebug('TemplateDebug', 'Debug message', {});\n            logDebug('TemplateDebug', 'Debug message', {});\n          }\n        });\n      }\n    });\n\n    // Find rakesh 222 or any template with 222 in name\n    const rakesh222 = allTemplates.find(\n      t =>\n        t.name.toLowerCase().includes('222') ||\n        t.name.toLowerCase() === 'rakesh 222' ||\n        t.name.toLowerCase() === 'rakesh222'\n    );\n\n    if (rakesh222) {\n      setSelectedTemplate(rakesh222);\n      setRawJson(JSON.stringify(rakesh222, null, 2));\n      logDebug('TemplateDebug', 'Debug message', {});\n    } else {\n      // Try to find any rakesh template\n      const rakeshTemplate = allTemplates.find(t => t.name.toLowerCase().includes('rakesh'));\n      if (rakeshTemplate) {\n        setSelectedTemplate(rakeshTemplate);\n        setRawJson(JSON.stringify(rakeshTemplate, null, 2));\n        logDebug('TemplateDebug', 'Debug message', {});\n      }\n    }\n  };\n\n  const analyzeTemplate = (template: Template) => {\n    const issues: string[] = [];\n\n    if (template.sections) {\n      Object.entries(template.sections).forEach(([key, value]) => {\n        if (typeof value === 'object' && value !== null) {\n          if (!value.title && !value.aiInstructions) {\n            issues.push(`Section '${key}' is object but missing title/aiInstructions`);\n          }\n          if (value.title && !value.aiInstructions) {\n            issues.push(`Section '${key}' has title but no aiInstructions`);\n          }\n          if (!value.title && value.aiInstructions) {\n            issues.push(`Section '${key}' has aiInstructions but no title`);\n          }\n        }\n      });\n    }\n\n    return issues;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <h1 className=\"text-2xl font-bold mb-6\">Template Debug Tool</h1>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Template List */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-lg font-semibold\">All Templates</h2>\n              <button\n                onClick={() => {\n                  const rakeshTemplates = templates.filter(\n                    t =>\n                      t.name.toLowerCase().includes('rakesh') ||\n                      t.name.toLowerCase().includes('222')\n                  );\n                  if (rakeshTemplates.length > 0) {\n                    alert(\n                      `Found ${rakeshTemplates.length} Rakesh template(s):\\n${rakeshTemplates.map(t => `- ${t.name} (${t.id})`).join('\\n')}`\n                    );\n                  } else {\n                    alert('No Rakesh or 222 templates found');\n                  }\n                }}\n                className=\"text-sm px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n              >\n                Find Rakesh/222\n              </button>\n            </div>\n            <div className=\"space-y-2\">\n              {templates.map(template => (\n                <button\n                  key={template.id}\n                  onClick={() => {\n                    setSelectedTemplate(template);\n                    setRawJson(JSON.stringify(template, null, 2));\n                  }}\n                  className={`w-full text-left p-3 rounded-lg border ${\n                    selectedTemplate?.id === template.id\n                      ? 'bg-blue-50 border-blue-500'\n                      : 'hover:bg-gray-50 border-gray-200'\n                  }`}\n                >\n                  <div className=\"font-medium\">{template.name}</div>\n                  <div className=\"text-sm text-gray-500\">\n                    Type: {template.template_type} | Sections:{' '}\n                    {Object.keys(template.sections || {}).length}\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Template Details */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-lg font-semibold mb-4\">Template Analysis</h2>\n            {selectedTemplate ? (\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"font-medium text-gray-700\">Name:</h3>\n                  <p>{selectedTemplate.name}</p>\n                </div>\n\n                <div>\n                  <h3 className=\"font-medium text-gray-700\">Type:</h3>\n                  <p>{selectedTemplate.template_type}</p>\n                </div>\n\n                <div>\n                  <h3 className=\"font-medium text-gray-700\">Sections:</h3>\n                  <div className=\"mt-2 space-y-2\">\n                    {Object.entries(selectedTemplate.sections || {}).map(([key, value]) => (\n                      <div key={key} className=\"p-3 bg-gray-50 rounded-lg\">\n                        <div className=\"font-medium text-sm\">Key: {key}</div>\n                        <div className=\"text-sm mt-1\">\n                          Type: {typeof value}\n                          {typeof value === 'object' && value !== null && (\n                            <>\n                              <br />\n                              Has title: {value.title ? '✅' : '❌'}\n                              <br />\n                              Has aiInstructions: {value.aiInstructions ? '✅' : '❌'}\n                              {value.title && (\n                                <>\n                                  <br />\n                                  Title: {value.title}\n                                </>\n                              )}\n                              {value.aiInstructions && (\n                                <>\n                                  <br />\n                                  Instructions: {value.aiInstructions}\n                                </>\n                              )}\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"font-medium text-gray-700\">Issues:</h3>\n                  <div className=\"mt-2\">\n                    {analyzeTemplate(selectedTemplate).length > 0 ? (\n                      <ul className=\"list-disc list-inside space-y-1\">\n                        {analyzeTemplate(selectedTemplate).map((issue, i) => (\n                          <li key={i} className=\"text-red-600 text-sm\">\n                            {issue}\n                          </li>\n                        ))}\n                      </ul>\n                    ) : (\n                      <p className=\"text-green-600 text-sm\">✅ No issues found</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <p className=\"text-gray-500\">Select a template to analyze</p>\n            )}\n          </div>\n        </div>\n\n        {/* Raw JSON */}\n        <div className=\"mt-6 bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-lg font-semibold mb-4\">Raw Template JSON</h2>\n          <pre className=\"bg-gray-100 p-4 rounded-lg overflow-auto text-xs\">\n            {rawJson || 'Select a template to view JSON'}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["TemplateDebug","templates","setTemplates","useState","selectedTemplate","setSelectedTemplate","rawJson","setRawJson","useEffect","loadTemplates","allTemplates","templateStorage","logDebug","template","key","section","rakesh222","t","rakeshTemplate","analyzeTemplate","issues","value","jsxs","jsx","rakeshTemplates","Fragment","issue","i"],"mappings":"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"}