{"version":3,"file":"CreateAccount-BPiuQHMH.js","sources":["../../node_modules/lucide-react/dist/esm/icons/briefcase.js","../../node_modules/lucide-react/dist/esm/icons/graduation-cap.js","../../node_modules/lucide-react/dist/esm/icons/map-pin.js","../../src/pages/CreateAccount.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\", key: \"jecpp\" }],\n  [\"rect\", { width: \"20\", height: \"14\", x: \"2\", y: \"6\", rx: \"2\", key: \"i6l2r4\" }]\n];\nconst Briefcase = createLucideIcon(\"briefcase\", __iconNode);\n\nexport { __iconNode, Briefcase as default };\n//# sourceMappingURL=briefcase.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z\",\n      key: \"j76jl0\"\n    }\n  ],\n  [\"path\", { d: \"M22 10v6\", key: \"1lu8f3\" }],\n  [\"path\", { d: \"M6 12.5V16a6 3 0 0 0 12 0v-3.5\", key: \"1r8lef\" }]\n];\nconst GraduationCap = createLucideIcon(\"graduation-cap\", __iconNode);\n\nexport { __iconNode, GraduationCap as default };\n//# sourceMappingURL=graduation-cap.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0\",\n      key: \"1r0f0z\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"10\", r: \"3\", key: \"ilqhr7\" }]\n];\nconst MapPin = createLucideIcon(\"map-pin\", __iconNode);\n\nexport { __iconNode, MapPin as default };\n//# sourceMappingURL=map-pin.js.map\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  User,\n  Mail,\n  Lock,\n  Phone,\n  Building,\n  Award,\n  Calendar,\n  MapPin,\n  Shield,\n  Check,\n  AlertCircle,\n  Stethoscope,\n  GraduationCap,\n  Briefcase,\n  Users,\n  FileText,\n} from 'lucide-react';\n\ninterface RegistrationData {\n  // Basic Information\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  phone: string;\n\n  // Professional Information\n  role: 'doctor' | 'dietician' | 'psychiatrist' | 'nurse' | 'admin';\n  specialty: string;\n  subSpecialty?: string;\n  licenseNumber: string;\n  licenseState: string;\n  npiNumber?: string; // National Provider Identifier\n  deaNumber?: string; // DEA for prescribing\n\n  // Education & Experience\n  medicalSchool?: string;\n  graduationYear?: string;\n  residencyProgram?: string;\n  fellowshipProgram?: string;\n  yearsOfExperience: string;\n  boardCertifications?: string[];\n\n  // Practice Information\n  practiceName: string;\n  practiceAddress: string;\n  practiceCity: string;\n  practiceState: string;\n  practiceZip: string;\n  practicePhone?: string;\n  practiceType: 'solo' | 'group' | 'hospital' | 'clinic' | 'other';\n\n  // System Preferences\n  emrExperience?: string[];\n  preferredLanguage: string;\n  timezone: string;\n\n  // Compliance\n  hipaaTrainingCompleted: boolean;\n  backgroundCheckConsent: boolean;\n  termsAccepted: boolean;\n}\n\nconst SPECIALTIES = {\n  doctor: [\n    'Endocrinology',\n    'Internal Medicine',\n    'Family Medicine',\n    'Cardiology',\n    'Pulmonology',\n    'Gastroenterology',\n    'Nephrology',\n    'Rheumatology',\n    'Infectious Disease',\n    'Hematology/Oncology',\n    'Neurology',\n    'Pediatrics',\n    'Obstetrics/Gynecology',\n    'Psychiatry',\n    'Surgery',\n    'Emergency Medicine',\n    'Anesthesiology',\n    'Radiology',\n    'Pathology',\n    'Other',\n  ],\n  dietician: [\n    'Clinical Nutrition',\n    'Diabetes Education',\n    'Pediatric Nutrition',\n    'Sports Nutrition',\n    'Eating Disorders',\n    'Weight Management',\n    'Renal Nutrition',\n    'Oncology Nutrition',\n    'Critical Care Nutrition',\n    'Community Nutrition',\n    'Other',\n  ],\n  psychiatrist: [\n    'Adult Psychiatry',\n    'Child & Adolescent Psychiatry',\n    'Geriatric Psychiatry',\n    'Addiction Psychiatry',\n    'Forensic Psychiatry',\n    'Consultation-Liaison',\n    'Neuropsychiatry',\n    'Psychosomatic Medicine',\n    'Sleep Medicine',\n    'Other',\n  ],\n  nurse: [\n    'Medical-Surgical',\n    'Critical Care',\n    'Emergency',\n    'Pediatrics',\n    'Obstetrics',\n    'Oncology',\n    'Psychiatric',\n    'Community Health',\n    'Case Management',\n    'Other',\n  ],\n  admin: ['Healthcare Administration', 'Clinical Operations', 'IT', 'Other'],\n  nutritionist: [\n    'General Nutrition',\n    'Sports Nutrition',\n    'Weight Management',\n    'Wellness Coaching',\n    'Community Nutrition',\n    'Corporate Wellness',\n    'Other',\n  ],\n  medical_assistant: [\n    'Clinical Support',\n    'Administrative Support',\n    'Phlebotomy',\n    'EKG/ECG',\n    'Injections',\n    'Other',\n  ],\n  front_office: [\n    'Reception',\n    'Scheduling',\n    'Patient Registration',\n    'Insurance Verification',\n    'Medical Records',\n    'Other',\n  ],\n  billing: [\n    'Medical Coding',\n    'Claims Processing',\n    'Insurance Appeals',\n    'Payment Posting',\n    'Patient Billing',\n    'Other',\n  ],\n  prior_auth: [\n    'Medication Authorization',\n    'Procedure Authorization',\n    'DME Authorization',\n    'Appeals Management',\n    'Other',\n  ],\n};\n\nconst EMR_SYSTEMS = [\n  'Epic',\n  'Cerner',\n  'Athenahealth',\n  'Allscripts',\n  'NextGen',\n  'eClinicalWorks',\n  'Practice Fusion',\n  'DrChrono',\n  'Kareo',\n  'Other',\n];\n\nexport default function CreateAccount() {\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [errors, setErrors] = useState<Partial<Record<keyof RegistrationData, string>>>({});\n  const [loading, setLoading] = useState(false);\n\n  const [formData, setFormData] = useState<RegistrationData>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    phone: '',\n    role: 'doctor',\n    specialty: '',\n    licenseNumber: '',\n    licenseState: '',\n    yearsOfExperience: '',\n    practiceName: '',\n    practiceAddress: '',\n    practiceCity: '',\n    practiceState: '',\n    practiceZip: '',\n    practiceType: 'group',\n    preferredLanguage: 'English',\n    timezone: 'America/New_York',\n    hipaaTrainingCompleted: false,\n    backgroundCheckConsent: false,\n    termsAccepted: false,\n    boardCertifications: [],\n    emrExperience: [],\n  });\n\n  const validateStep = (stepNumber: number): boolean => {\n    const newErrors: Partial<Record<keyof RegistrationData, string>> = {};\n\n    // Define which roles require licenses\n    const licensedRoles = ['doctor', 'psychiatrist', 'nurse', 'dietician'];\n    const requiresLicense = licensedRoles.includes(formData.role);\n\n    switch (stepNumber) {\n      case 1: // Basic Information\n        if (!formData.firstName) newErrors.firstName = 'First name is required';\n        if (!formData.lastName) newErrors.lastName = 'Last name is required';\n        if (!formData.email) newErrors.email = 'Email is required';\n        else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n          newErrors.email = 'Invalid email format';\n        }\n        if (!formData.password) newErrors.password = 'Password is required';\n        else if (formData.password.length < 12) {\n          newErrors.password = 'Password must be at least 12 characters';\n        }\n        if (formData.password !== formData.confirmPassword) {\n          newErrors.confirmPassword = 'Passwords do not match';\n        }\n        if (!formData.phone) newErrors.phone = 'Phone number is required';\n        break;\n\n      case 2: // Professional Information\n        if (!formData.specialty) newErrors.specialty = 'Specialty is required';\n        // Only require license for licensed roles\n        if (requiresLicense) {\n          if (!formData.licenseNumber) newErrors.licenseNumber = 'License number is required';\n          if (!formData.licenseState) newErrors.licenseState = 'License state is required';\n        }\n        if (!formData.yearsOfExperience)\n          newErrors.yearsOfExperience = 'Years of experience is required';\n        break;\n\n      case 3: // Practice Information\n        if (!formData.practiceName) newErrors.practiceName = 'Practice name is required';\n        if (!formData.practiceAddress) newErrors.practiceAddress = 'Practice address is required';\n        if (!formData.practiceCity) newErrors.practiceCity = 'City is required';\n        if (!formData.practiceState) newErrors.practiceState = 'State is required';\n        if (!formData.practiceZip) newErrors.practiceZip = 'ZIP code is required';\n        break;\n\n      case 4: // Compliance & Consent\n        if (!formData.hipaaTrainingCompleted) {\n          newErrors.hipaaTrainingCompleted = 'HIPAA training confirmation is required';\n        }\n        if (!formData.backgroundCheckConsent) {\n          newErrors.backgroundCheckConsent = 'Background check consent is required';\n        }\n        if (!formData.termsAccepted) {\n          newErrors.termsAccepted = 'You must accept the terms and conditions';\n        }\n        break;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleNext = () => {\n    if (validateStep(step)) {\n      setStep(step + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setStep(step - 1);\n  };\n\n  const handleSubmit = async () => {\n    if (!validateStep(4)) return;\n\n    setLoading(true);\n\n    // Simulate account creation\n    setTimeout(() => {\n      // Store the new account data\n      const newUser = {\n        id: `user-${Date.now()}`,\n        email: formData.email,\n        name: `${formData.firstName} ${formData.lastName}`,\n        role: formData.role,\n        specialty: formData.specialty,\n        licenseNumber: formData.licenseNumber,\n        practiceName: formData.practiceName,\n      };\n\n      localStorage.setItem('pending_verification', JSON.stringify(newUser));\n\n      // Redirect to verification page\n      navigate('/account-verification');\n    }, 2000);\n  };\n\n  const updateField = (field: keyof RegistrationData, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Clear error for this field\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }));\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">Create Your Account</h1>\n          <p className=\"text-gray-600\">Join TSHLA Medical's network of healthcare professionals</p>\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-center\">\n            {[1, 2, 3, 4].map(stepNumber => (\n              <div key={stepNumber} className=\"flex items-center\">\n                <div\n                  className={`w-10 h-10 rounded-full flex items-center justify-center font-semibold ${\n                    step >= stepNumber ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-500'\n                  }`}\n                >\n                  {step > stepNumber ? <Check className=\"w-5 h-5\" /> : stepNumber}\n                </div>\n                {stepNumber < 4 && (\n                  <div\n                    className={`w-24 h-1 ${step > stepNumber ? 'bg-blue-600' : 'bg-gray-200'}`}\n                  />\n                )}\n              </div>\n            ))}\n          </div>\n          <div className=\"flex justify-between mt-2 px-8\">\n            <span className=\"text-xs text-gray-600\">Basic Info</span>\n            <span className=\"text-xs text-gray-600\">Professional</span>\n            <span className=\"text-xs text-gray-600\">Practice</span>\n            <span className=\"text-xs text-gray-600\">Compliance</span>\n          </div>\n        </div>\n\n        {/* Form */}\n        <div className=\"bg-white rounded-2xl shadow-xl p-8\">\n          {step === 1 && (\n            <div className=\"space-y-6\">\n              <h2 className=\"text-2xl font-semibold mb-6 flex items-center\">\n                <User className=\"w-6 h-6 mr-2 text-blue-600\" />\n                Basic Information\n              </h2>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    First Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.firstName}\n                    onChange={e => updateField('firstName', e.target.value)}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.firstName ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  />\n                  {errors.firstName && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.firstName}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Last Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.lastName}\n                    onChange={e => updateField('lastName', e.target.value)}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.lastName ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  />\n                  {errors.lastName && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.lastName}</p>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Mail className=\"w-4 h-4 inline mr-1\" />\n                  Email Address *\n                </label>\n                <input\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={e => updateField('email', e.target.value)}\n                  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                    errors.email ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                />\n                {errors.email && <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>}\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    <Lock className=\"w-4 h-4 inline mr-1\" />\n                    Password *\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={formData.password}\n                    onChange={e => updateField('password', e.target.value)}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.password ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  />\n                  {errors.password && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.password}</p>\n                  )}\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Min 12 characters, include uppercase, lowercase, number, special character\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Confirm Password *\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={formData.confirmPassword}\n                    onChange={e => updateField('confirmPassword', e.target.value)}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.confirmPassword ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  />\n                  {errors.confirmPassword && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.confirmPassword}</p>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Phone className=\"w-4 h-4 inline mr-1\" />\n                  Phone Number *\n                </label>\n                <input\n                  type=\"tel\"\n                  value={formData.phone}\n                  onChange={e => updateField('phone', e.target.value)}\n                  placeholder=\"(555) 123-4567\"\n                  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                    errors.phone ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                />\n                {errors.phone && <p className=\"text-red-500 text-xs mt-1\">{errors.phone}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Users className=\"w-4 h-4 inline mr-1\" />\n                  Role *\n                </label>\n                <select\n                  value={formData.role}\n                  onChange={e => updateField('role', e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"doctor\">Doctor (MD/DO)</option>\n                  <option value=\"dietician\">Dietician (RD)</option>\n                  <option value=\"psychiatrist\">Psychiatrist</option>\n                  <option value=\"nurse\">Nurse (RN/NP)</option>\n                  <option value=\"nutritionist\">Nutritionist</option>\n                  <option value=\"medical_assistant\">Medical Assistant (MA)</option>\n                  <option value=\"front_office\">Front Office</option>\n                  <option value=\"billing\">Billing Specialist</option>\n                  <option value=\"prior_auth\">Prior Authorization</option>\n                  <option value=\"admin\">Administrator</option>\n                </select>\n              </div>\n            </div>\n          )}\n\n          {step === 2 && (\n            <div className=\"space-y-6\">\n              <h2 className=\"text-2xl font-semibold mb-6 flex items-center\">\n                <Stethoscope className=\"w-6 h-6 mr-2 text-blue-600\" />\n                Professional Information\n              </h2>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Primary Specialty *\n                  </label>\n                  <select\n                    value={formData.specialty}\n                    onChange={e => updateField('specialty', e.target.value)}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.specialty ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  >\n                    <option value=\"\">Select Specialty</option>\n                    {(SPECIALTIES[formData.role] || SPECIALTIES.admin).map(spec => (\n                      <option key={spec} value={spec}>\n                        {spec}\n                      </option>\n                    ))}\n                  </select>\n                  {errors.specialty && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.specialty}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Sub-Specialty (Optional)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.subSpecialty || ''}\n                    onChange={e => updateField('subSpecialty', e.target.value)}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              {['doctor', 'psychiatrist', 'nurse', 'dietician'].includes(formData.role) && (\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      <Award className=\"w-4 h-4 inline mr-1\" />\n                      License Number *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.licenseNumber}\n                      onChange={e => updateField('licenseNumber', e.target.value)}\n                      className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                        errors.licenseNumber ? 'border-red-500' : 'border-gray-300'\n                      }`}\n                    />\n                    {errors.licenseNumber && (\n                      <p className=\"text-red-500 text-xs mt-1\">{errors.licenseNumber}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      License State *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.licenseState}\n                      onChange={e => updateField('licenseState', e.target.value)}\n                      placeholder=\"e.g., CA, NY, TX\"\n                      className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                        errors.licenseState ? 'border-red-500' : 'border-gray-300'\n                      }`}\n                    />\n                    {errors.licenseState && (\n                      <p className=\"text-red-500 text-xs mt-1\">{errors.licenseState}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {['doctor', 'psychiatrist', 'nurse'].includes(formData.role) && (\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      NPI Number (Optional)\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.npiNumber || ''}\n                      onChange={e => updateField('npiNumber', e.target.value)}\n                      placeholder=\"10-digit NPI\"\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      DEA Number (Optional)\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.deaNumber || ''}\n                      onChange={e => updateField('deaNumber', e.target.value)}\n                      placeholder=\"For prescribing providers\"\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <Briefcase className=\"w-4 h-4 inline mr-1\" />\n                  Years of Experience *\n                </label>\n                <select\n                  value={formData.yearsOfExperience}\n                  onChange={e => updateField('yearsOfExperience', e.target.value)}\n                  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                    errors.yearsOfExperience ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                >\n                  <option value=\"\">Select Years</option>\n                  <option value=\"0-2\">0-2 years</option>\n                  <option value=\"3-5\">3-5 years</option>\n                  <option value=\"6-10\">6-10 years</option>\n                  <option value=\"11-15\">11-15 years</option>\n                  <option value=\"16-20\">16-20 years</option>\n                  <option value=\"20+\">20+ years</option>\n                </select>\n                {errors.yearsOfExperience && (\n                  <p className=\"text-red-500 text-xs mt-1\">{errors.yearsOfExperience}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <GraduationCap className=\"w-4 h-4 inline mr-1\" />\n                  Medical School / Training Program (Optional)\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.medicalSchool || ''}\n                  onChange={e => updateField('medicalSchool', e.target.value)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  EMR Experience (Select all that apply)\n                </label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                  {EMR_SYSTEMS.map(emr => (\n                    <label key={emr} className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        checked={formData.emrExperience?.includes(emr) || false}\n                        onChange={e => {\n                          const current = formData.emrExperience || [];\n                          if (e.target.checked) {\n                            updateField('emrExperience', [...current, emr]);\n                          } else {\n                            updateField(\n                              'emrExperience',\n                              current.filter(e => e !== emr)\n                            );\n                          }\n                        }}\n                        className=\"mr-2\"\n                      />\n                      <span className=\"text-sm\">{emr}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {step === 3 && (\n            <div className=\"space-y-6\">\n              <h2 className=\"text-2xl font-semibold mb-6 flex items-center\">\n                <Building className=\"w-6 h-6 mr-2 text-blue-600\" />\n                Practice Information\n              </h2>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Practice Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.practiceName}\n                  onChange={e => updateField('practiceName', e.target.value)}\n                  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                    errors.practiceName ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                />\n                {errors.practiceName && (\n                  <p className=\"text-red-500 text-xs mt-1\">{errors.practiceName}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Practice Type *\n                </label>\n                <select\n                  value={formData.practiceType}\n                  onChange={e => updateField('practiceType', e.target.value as any)}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"solo\">Solo Practice</option>\n                  <option value=\"group\">Group Practice</option>\n                  <option value=\"hospital\">Hospital</option>\n                  <option value=\"clinic\">Clinic</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  <MapPin className=\"w-4 h-4 inline mr-1\" />\n                  Practice Address *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.practiceAddress}\n                  onChange={e => updateField('practiceAddress', e.target.value)}\n                  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                    errors.practiceAddress ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                />\n                {errors.practiceAddress && (\n                  <p className=\"text-red-500 text-xs mt-1\">{errors.practiceAddress}</p>\n                )}\n              </div>\n\n              <div className=\"grid md:grid-cols-3 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">City *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.practiceCity}\n                    onChange={e => updateField('practiceCity', e.target.value)}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.practiceCity ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  />\n                  {errors.practiceCity && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.practiceCity}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">State *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.practiceState}\n                    onChange={e => updateField('practiceState', e.target.value)}\n                    placeholder=\"e.g., CA\"\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.practiceState ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  />\n                  {errors.practiceState && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.practiceState}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">ZIP Code *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.practiceZip}\n                    onChange={e => updateField('practiceZip', e.target.value)}\n                    className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 ${\n                      errors.practiceZip ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                  />\n                  {errors.practiceZip && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.practiceZip}</p>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Preferred Language\n                  </label>\n                  <select\n                    value={formData.preferredLanguage}\n                    onChange={e => updateField('preferredLanguage', e.target.value)}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"English\">English</option>\n                    <option value=\"Spanish\">Spanish</option>\n                    <option value=\"Mandarin\">Mandarin</option>\n                    <option value=\"Hindi\">Hindi</option>\n                    <option value=\"French\">French</option>\n                    <option value=\"Other\">Other</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Time Zone</label>\n                  <select\n                    value={formData.timezone}\n                    onChange={e => updateField('timezone', e.target.value)}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"America/New_York\">Eastern Time</option>\n                    <option value=\"America/Chicago\">Central Time</option>\n                    <option value=\"America/Denver\">Mountain Time</option>\n                    <option value=\"America/Los_Angeles\">Pacific Time</option>\n                    <option value=\"America/Anchorage\">Alaska Time</option>\n                    <option value=\"Pacific/Honolulu\">Hawaii Time</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {step === 4 && (\n            <div className=\"space-y-6\">\n              <h2 className=\"text-2xl font-semibold mb-6 flex items-center\">\n                <Shield className=\"w-6 h-6 mr-2 text-blue-600\" />\n                Compliance & Consent\n              </h2>\n\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-blue-900 mb-2\">HIPAA Compliance</h3>\n                <p className=\"text-sm text-blue-700 mb-3\">\n                  TSHLA Medical is fully HIPAA compliant. All data is encrypted and access is logged\n                  for audit purposes.\n                </p>\n                <label className=\"flex items-start\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.hipaaTrainingCompleted}\n                    onChange={e => updateField('hipaaTrainingCompleted', e.target.checked)}\n                    className=\"mt-1 mr-3\"\n                  />\n                  <span className=\"text-sm\">\n                    I confirm that I have completed HIPAA training and understand my\n                    responsibilities regarding protected health information (PHI) *\n                  </span>\n                </label>\n                {errors.hipaaTrainingCompleted && (\n                  <p className=\"text-red-500 text-xs mt-1 ml-6\">{errors.hipaaTrainingCompleted}</p>\n                )}\n              </div>\n\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-yellow-900 mb-2\">Background Check</h3>\n                <p className=\"text-sm text-yellow-700 mb-3\">\n                  A background check is required for all healthcare providers to ensure patient\n                  safety.\n                </p>\n                <label className=\"flex items-start\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.backgroundCheckConsent}\n                    onChange={e => updateField('backgroundCheckConsent', e.target.checked)}\n                    className=\"mt-1 mr-3\"\n                  />\n                  <span className=\"text-sm\">\n                    I consent to a background check and verification of my professional credentials\n                    *\n                  </span>\n                </label>\n                {errors.backgroundCheckConsent && (\n                  <p className=\"text-red-500 text-xs mt-1 ml-6\">{errors.backgroundCheckConsent}</p>\n                )}\n              </div>\n\n              <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Terms & Conditions</h3>\n                <div className=\"bg-white border border-gray-300 rounded p-3 mb-3 max-h-48 overflow-y-auto text-xs text-gray-600\">\n                  <p className=\"mb-2\">\n                    <strong>1. Acceptance of Terms</strong>\n                    <br />\n                    By creating an account, you agree to comply with all TSHLA Medical policies and\n                    procedures.\n                  </p>\n                  <p className=\"mb-2\">\n                    <strong>2. Professional Conduct</strong>\n                    <br />\n                    You agree to maintain professional standards and provide accurate medical\n                    information.\n                  </p>\n                  <p className=\"mb-2\">\n                    <strong>3. Data Security</strong>\n                    <br />\n                    You are responsible for maintaining the security of your login credentials.\n                  </p>\n                  <p className=\"mb-2\">\n                    <strong>4. Patient Privacy</strong>\n                    <br />\n                    You agree to protect patient privacy in accordance with HIPAA regulations.\n                  </p>\n                  <p>\n                    <strong>5. Liability</strong>\n                    <br />\n                    TSHLA Medical provides tools for documentation but is not responsible for\n                    clinical decisions.\n                  </p>\n                </div>\n                <label className=\"flex items-start\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.termsAccepted}\n                    onChange={e => updateField('termsAccepted', e.target.checked)}\n                    className=\"mt-1 mr-3\"\n                  />\n                  <span className=\"text-sm\">\n                    I have read and accept the Terms & Conditions and Privacy Policy *\n                  </span>\n                </label>\n                {errors.termsAccepted && (\n                  <p className=\"text-red-500 text-xs mt-1 ml-6\">{errors.termsAccepted}</p>\n                )}\n              </div>\n\n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-green-900 mb-2\">\n                  <FileText className=\"w-4 h-4 inline mr-1\" />\n                  Next Steps\n                </h3>\n                <ol className=\"text-sm text-green-700 space-y-1 list-decimal list-inside\">\n                  <li>Your account will be created upon submission</li>\n                  <li>We'll verify your credentials (usually within 24-48 hours)</li>\n                  <li>You'll receive an email with login instructions</li>\n                  <li>Complete the onboarding tutorial (15 minutes)</li>\n                  <li>Start using TSHLA Medical!</li>\n                </ol>\n              </div>\n            </div>\n          )}\n\n          {/* Navigation Buttons */}\n          <div className=\"flex justify-between mt-8 pt-6 border-t border-gray-200\">\n            {step > 1 && (\n              <button\n                onClick={handleBack}\n                className=\"px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\"\n              >\n                Back\n              </button>\n            )}\n\n            {step < 4 ? (\n              <button\n                onClick={handleNext}\n                className=\"ml-auto px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Next\n              </button>\n            ) : (\n              <button\n                onClick={handleSubmit}\n                disabled={loading}\n                className=\"ml-auto px-8 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed font-semibold\"\n              >\n                {loading ? 'Creating Account...' : 'Create Account'}\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Help Section */}\n        <div className=\"mt-8 text-center text-sm text-gray-600\">\n          <p>\n            Already have an account?{' '}\n            <a href=\"/login\" className=\"text-blue-600 hover:text-blue-700 font-medium\">\n              Sign In\n            </a>\n          </p>\n          <p className=\"mt-2\">\n            Need help? Contact{' '}\n            <a href=\"mailto:support@tshla.ai\" className=\"text-blue-600 hover:text-blue-700\">\n              support@tshla.ai\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["__iconNode","Briefcase","createLucideIcon","GraduationCap","MapPin","SPECIALTIES","EMR_SYSTEMS","CreateAccount","navigate","useNavigate","step","setStep","useState","errors","setErrors","loading","setLoading","formData","setFormData","validateStep","stepNumber","newErrors","requiresLicense","handleNext","handleBack","handleSubmit","newUser","updateField","field","value","prev","jsxs","jsx","Check","User","e","Mail","Lock","Phone","Users","Stethoscope","spec","Award","emr","current","Building","Shield","FileText"],"mappings":"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","x_google_ignoreList":[0,1,2]}