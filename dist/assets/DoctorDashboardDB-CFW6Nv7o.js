import{b as c,d as P,e as g,f as W,u as z,r as h,j as e}from"./index-CFDQeSWK.js";import{g as _,a as I}from"./patientMaster.service-Cbm1Ni03.js";class V{convertTo24HourSlot(a,t){const[s,r]=t.split(" ");let[i,l]=s.split(":");return i==="12"?i=r==="AM"?"00":"12":r==="PM"&&(i=String(parseInt(i,10)+12)),`${a} ${i.padStart(2,"0")}:${l}`}async getDoctorAppointments(a,t){const s=_(),r=t||new Date().toISOString().split("T")[0];try{return(await s.query("appointments",[a,r])).sort((l,w)=>l.appointment_slot.localeCompare(w.appointment_slot))}catch{return c("appointmentBrowser","Error message",{}),[]}}async createAppointment(a,t){const s=_(),r=I(),i=this.convertTo24HourSlot(t.appointment_date,t.appointment_time);try{if((await s.query("appointments",[a,t.appointment_date])).filter(v=>v.appointment_slot===i&&!v.is_deleted).length>0)throw new Error(`Time slot ${t.appointment_time} is already booked`);const j={id:r,doctor_id:a,patient_id:t.patient_id||`patient-${I()}`,patient_name:t.patient_name,patient_mrn:t.patient_mrn,patient_phone:t.patient_phone,patient_email:t.patient_email,patient_dob:t.patient_dob,appointment_date:t.appointment_date,appointment_time:t.appointment_time,appointment_slot:i,duration_minutes:t.duration_minutes||30,status:"scheduled",visit_type:t.visit_type||"follow-up",chief_complaint:t.chief_complaint,notes:t.notes,location:t.location,room_number:t.room_number,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),created_by:a};return await s.execute("add:appointments",j),await P.log({action:"CREATE_APPOINTMENT",userId:a,resourceType:"appointment",resourceId:r,details:{patient_name:t.patient_name,appointment_time:t.appointment_time,appointment_date:t.appointment_date}}),j}catch(l){throw c("appointmentBrowser","Error message",{}),l}}async updateAppointment(a,t,s){const r=_();try{const i=await r.queryOne("appointments",a);if(!i)throw new Error("Appointment not found");if(i.doctor_id!==t)throw new Error("Unauthorized to update this appointment");const l={...i,...s,updated_at:new Date().toISOString(),updated_by:t};return s.appointment_time&&s.appointment_date&&(l.appointment_slot=this.convertTo24HourSlot(s.appointment_date,s.appointment_time)),await r.execute("put:appointments",l),await P.log({action:"UPDATE_APPOINTMENT",userId:t,resourceType:"appointment",resourceId:a,details:{updates:s}}),l}catch(i){throw c("appointmentBrowser","Error message",{}),i}}async updateStatus(a,t,s){const r=_();try{const i=await r.queryOne("appointments",a);if(!i)throw new Error("Appointment not found");const l={...i,status:s,updated_at:new Date().toISOString(),updated_by:t};await r.execute("put:appointments",l),await P.log({action:"UPDATE_APPOINTMENT_STATUS",userId:t,resourceType:"appointment",resourceId:a,details:{status:s}})}catch(i){throw c("appointmentBrowser","Error message",{}),i}}async cancelAppointment(a,t,s){const r=_();try{const i=await r.queryOne("appointments",a);if(!i)throw new Error("Appointment not found");const l={...i,status:"cancelled",is_deleted:1,deleted_at:new Date().toISOString(),deleted_by:t,notes:i.notes?`${i.notes} | Cancellation: ${s||"Cancelled by doctor"}`:s||"Cancelled by doctor"};await r.execute("put:appointments",l),await P.log({action:"CANCEL_APPOINTMENT",userId:t,resourceType:"appointment",resourceId:a,details:{reason:s}})}catch(i){throw c("appointmentBrowser","Error message",{}),i}}async getAvailableSlots(a,t){const s=[];for(let r=9;r<12;r++)s.push(`${r}:00 AM`),s.push(`${r}:30 AM`);s.push("12:00 PM","12:30 PM");for(let r=1;r<=5;r++)s.push(`${r}:00 PM`),s.push(`${r}:30 PM`);try{const i=(await this.getDoctorAppointments(a,t)).map(l=>l.appointment_time);return s.filter(l=>!i.includes(l))}catch{return c("appointmentBrowser","Error message",{}),s}}async quickAddAppointment(a,t,s){return this.createAppointment(a,{patient_name:`Patient @ ${s}`,patient_mrn:`TBD-${Date.now().toString().slice(-6)}`,appointment_date:t,appointment_time:s,notes:"Placeholder - update patient details"})}async getDoctorStats(a,t){const s=t||new Date().toISOString().split("T")[0];try{const r=await this.getDoctorAppointments(a,s);return{total:r.length,completed:r.filter(i=>i.status==="completed").length,scheduled:r.filter(i=>i.status==="scheduled").length,cancelled:r.filter(i=>i.status==="cancelled").length,noShow:r.filter(i=>i.status==="no-show").length}}catch{return c("appointmentBrowser","Error message",{}),{total:0,completed:0,scheduled:0,cancelled:0,noShow:0}}}async getPatientAppointments(a){const t=_();try{return(await t.query("appointments")).filter(r=>r.patient_id===a&&!r.is_deleted).sort((r,i)=>r.appointment_slot.localeCompare(i.appointment_slot))}catch{return c("appointmentBrowser","Error message",{}),[]}}async getPracticeAppointments(a,t){const s=_(),r=t||new Date().toISOString().split("T")[0];try{return(await s.query("appointments")).filter(l=>l.appointment_date===r&&!l.is_deleted).sort((l,w)=>l.doctor_id!==w.doctor_id?l.doctor_id.localeCompare(w.doctor_id):l.appointment_slot.localeCompare(w.appointment_slot))}catch{return c("appointmentBrowser","Error message",{}),[]}}}const x=new V;class N{static async getMyAppointments(a){try{const t=g.getCurrentUser();if(!t)throw new Error("Not authenticated");return await x.getDoctorAppointments(t.id,a)}catch(t){throw c("App","Error message",{}),t}}static async getPracticeAppointments(a){try{const t=g.getCurrentUser();if(!t)throw new Error("Not authenticated");const s=t.specialty||"default";return await x.getPracticeAppointments(s,a)}catch(t){throw c("App","Error message",{}),t}}static async createAppointment(a){try{const t=g.getCurrentUser();if(!t)throw new Error("Not authenticated");return await x.createAppointment(t.id,a)}catch(t){throw c("App","Error message",{}),t}}static async updateAppointment(a,t){try{const s=g.getCurrentUser();if(!s)throw new Error("Not authenticated");return await x.updateAppointment(a,s.id,t)}catch(s){throw c("App","Error message",{}),s}}static async updateAppointmentStatus(a,t){try{const s=g.getCurrentUser();if(!s)throw new Error("Not authenticated");await x.updateStatus(a,s.id,t)}catch(s){throw c("App","Error message",{}),s}}static async cancelAppointment(a,t){try{const s=g.getCurrentUser();if(!s)throw new Error("Not authenticated");await x.cancelAppointment(a,s.id,t)}catch(s){throw c("App","Error message",{}),s}}static async getAvailableSlots(a){try{const t=g.getCurrentUser();if(!t)throw new Error("Not authenticated");return await x.getAvailableSlots(t.id,a)}catch{c("App","Error message",{});const s=[];for(let r=9;r<12;r++)s.push(`${r}:00 AM`),s.push(`${r}:30 AM`);s.push("12:00 PM","12:30 PM");for(let r=1;r<=5;r++)s.push(`${r}:00 PM`),s.push(`${r}:30 PM`);return s}}static async quickAddAppointment(a,t){try{const s=g.getCurrentUser();if(!s)throw new Error("Not authenticated");return await x.quickAddAppointment(s.id,a,t)}catch(s){throw c("App","Error message",{}),s}}static async getAppointmentStats(a){try{const t=g.getCurrentUser();if(!t)throw new Error("Not authenticated");return await x.getDoctorStats(t.id,a)}catch{return c("App","Error message",{}),{total:0,completed:0,scheduled:0,cancelled:0,noShow:0}}}static async getPatientAppointments(a){try{return await x.getPatientAppointments(a)}catch(t){throw c("App","Error message",{}),t}}}const G=()=>{const u=[];for(let a=9;a<12;a++)u.push(`${a}:00 AM`),u.push(`${a}:30 AM`);u.push("12:00 PM"),u.push("12:30 PM");for(let a=1;a<=5;a++)u.push(`${a}:00 PM`),u.push(`${a}:30 PM`);return u};function Y(){const{user:u,logout:a}=W(),t=z(),r=g.getCurrentUser()?.name||"Dr. Smith",[i,l]=h.useState([]),[w,j]=h.useState(!0),[v,D]=h.useState(null),[k,M]=h.useState(!1),[b]=h.useState(()=>new Date().toISOString().split("T")[0]),[$,A]=h.useState({total:0,completed:0,scheduled:0,cancelled:0,noShow:0}),[q,S]=h.useState(!1),[y,C]=h.useState(null),[d,m]=h.useState({patient_name:"",patient_mrn:"",appointment_date:b,appointment_time:"",patient_phone:"",patient_email:"",patient_dob:"",chief_complaint:"",visit_type:"follow-up"}),T=G(),E=h.useCallback(async()=>{try{j(!0),D(null);const[n,o]=await Promise.all([N.getMyAppointments(b),N.getAppointmentStats(b)]);l(n),A(o)}catch{c("DoctorDashboardDB","Error message",{}),D("Failed to load appointments. Please try again.")}finally{j(!1)}},[b]);h.useEffect(()=>{E();const n=setInterval(()=>{M(!0),E().finally(()=>M(!1))},3e4);return()=>clearInterval(n)},[E]);const O=n=>{t(`/dictation/${n}`)},R=async n=>{try{const o=await N.quickAddAppointment(b,n);l(p=>[...p,o].sort((f,Q)=>f.appointment_slot.localeCompare(Q.appointment_slot))),A(p=>({...p,total:p.total+1,scheduled:p.scheduled+1}))}catch{c("DoctorDashboardDB","Error message",{}),alert("Failed to add appointment. Please try again.")}},F=n=>{C(n),m({patient_name:n.patient_name.startsWith("Patient @")?"":n.patient_name,patient_mrn:n.patient_mrn.startsWith("TBD-")?"":n.patient_mrn,appointment_date:n.appointment_date,appointment_time:n.appointment_time,patient_phone:n.patient_phone||"",patient_email:n.patient_email||"",patient_dob:n.patient_dob||"",chief_complaint:n.chief_complaint||"",visit_type:n.visit_type||"follow-up"}),S(!0)},L=async()=>{if(!d.appointment_time){alert("Please select an appointment time");return}try{let n;y?(n=await N.updateAppointment(y.id,d),l(o=>o.map(p=>p.id===y.id?n:p))):(n=await N.createAppointment({...d,patient_name:d.patient_name||`Patient @ ${d.appointment_time}`,patient_mrn:d.patient_mrn||`MRN${Date.now().toString().slice(-6)}`}),l(o=>[...o,n].sort((p,f)=>p.appointment_slot.localeCompare(f.appointment_slot))),A(o=>({...o,total:o.total+1,scheduled:o.scheduled+1}))),m({patient_name:"",patient_mrn:"",appointment_date:b,appointment_time:"",patient_phone:"",patient_email:"",patient_dob:"",chief_complaint:"",visit_type:"follow-up"}),S(!1),C(null)}catch(n){c("DoctorDashboardDB","Error message",{}),alert(n.message||"Failed to save appointment. Please try again.")}},H=async n=>{if(confirm("Are you sure you want to cancel this appointment?"))try{await N.cancelAppointment(n,"Cancelled by doctor"),l(o=>o.filter(p=>p.id!==n)),A(o=>({...o,total:o.total-1,scheduled:Math.max(0,o.scheduled-1),cancelled:o.cancelled+1}))}catch{c("DoctorDashboardDB","Error message",{}),alert("Failed to cancel appointment. Please try again.")}},B=async(n,o)=>{try{await N.updateAppointmentStatus(n,o),l(p=>p.map(f=>f.id===n?{...f,status:o}:f)),o==="completed"&&A(p=>({...p,scheduled:Math.max(0,p.scheduled-1),completed:p.completed+1}))}catch{c("DoctorDashboardDB","Error message",{}),alert("Failed to update status. Please try again.")}},U=i.map(n=>n.appointment_time);return w&&!k?e.jsx("div",{className:"min-h-screen bg-gray-50 flex items-center justify-center",children:e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"}),e.jsx("p",{className:"mt-4 text-gray-600",children:"Loading appointments..."})]})}):e.jsxs("div",{className:"min-h-screen bg-gray-50",children:[e.jsx("div",{className:"bg-white shadow-sm border-b",children:e.jsx("div",{className:"px-4",children:e.jsxs("div",{className:"flex justify-between items-center h-12",children:[e.jsxs("div",{className:"flex items-center space-x-6",children:[e.jsx("h1",{className:"text-lg font-semibold",children:"TSHLA Medical"}),e.jsxs("span",{className:"text-xs text-gray-500",children:[r?.name||u?.name||"Dr. Provider",r?.specialty&&` • ${r.specialty}`]}),k&&e.jsx("span",{className:"text-xs text-blue-600 animate-pulse",children:"Syncing..."})]}),e.jsx("button",{onClick:()=>t("/quick-note"),className:"px-4 py-1.5 bg-purple-600 text-white text-sm font-medium rounded-lg hover:bg-purple-700 transition flex items-center gap-2",children:"⚡ Quick Note"}),e.jsxs("div",{className:"flex items-center space-x-4",children:[e.jsx("button",{onClick:E,className:"text-xs text-blue-600 hover:text-blue-800 font-medium",disabled:k,children:"🔄 Refresh"}),e.jsx("button",{onClick:()=>t("/doctor/templates"),className:"text-xs text-blue-600 hover:text-blue-800 font-medium",children:"📝 Templates"}),e.jsx("button",{onClick:()=>t("/doctor/profile"),className:"text-xs text-blue-600 hover:text-blue-800 font-medium",children:"⚙️ Profile"}),e.jsx("button",{onClick:a,className:"text-xs text-gray-600 hover:text-gray-900",children:"Sign Out"})]})]})})}),v&&e.jsx("div",{className:"bg-red-50 border-l-4 border-red-400 p-4 m-4",children:e.jsxs("div",{className:"flex",children:[e.jsx("div",{className:"flex-shrink-0",children:"⚠️"}),e.jsx("div",{className:"ml-3",children:e.jsx("p",{className:"text-sm text-red-700",children:v})})]})}),e.jsxs("div",{className:"flex",children:[e.jsxs("div",{className:"w-1/2 p-4",children:[e.jsxs("div",{className:"mb-3 flex justify-between items-center",children:[e.jsxs("div",{children:[e.jsx("h2",{className:"text-lg font-bold text-gray-900",children:"Today's Schedule"}),e.jsx("p",{className:"text-xs text-gray-600",children:new Date(b).toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})})]}),e.jsx("div",{className:"flex gap-2",children:e.jsx("button",{onClick:()=>{C(null),m({patient_name:"",patient_mrn:"",appointment_date:b,appointment_time:"",patient_phone:"",patient_email:"",patient_dob:"",chief_complaint:"",visit_type:"follow-up"}),S(!0)},className:"px-3 py-1.5 bg-green-600 text-white text-sm rounded-lg hover:bg-green-700 transition",children:"+ Full Add"})})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow",children:[e.jsx("div",{className:"px-3 py-2 border-b border-gray-200",children:e.jsxs("div",{className:"flex justify-between items-center",children:[e.jsx("h3",{className:"text-sm font-medium text-gray-900",children:"Time Slots"}),e.jsxs("span",{className:"text-xs text-gray-500",children:[i.length," appointments scheduled"]})]})}),e.jsx("div",{className:"max-h-[calc(100vh-200px)] overflow-y-auto p-2",children:e.jsx("div",{className:"space-y-1",children:T.map(n=>{const o=i.find(f=>f.appointment_time===n),p=!!o;return e.jsxs("div",{className:"flex items-center gap-2 p-2 rounded-lg hover:bg-gray-50 transition",children:[e.jsx("div",{className:"w-20 text-xs font-medium text-gray-600",children:n}),p&&o?e.jsx("div",{className:`flex-1 rounded-lg p-2 border ${o.status==="completed"?"bg-green-50 border-green-200":o.status==="in-progress"?"bg-yellow-50 border-yellow-200":o.status==="cancelled"?"bg-red-50 border-red-200":"bg-blue-50 border-blue-200"}`,children:e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{className:"flex-1",children:[e.jsxs("p",{className:`text-sm font-medium ${o.patient_name.startsWith("Patient @")?"text-gray-500 italic":"text-gray-900"}`,children:[o.patient_name,o.patient_name.startsWith("Patient @")&&" (Placeholder)"]}),e.jsxs("div",{className:"flex items-center gap-2 mt-1",children:[e.jsx("p",{className:"text-xs text-gray-500",children:o.patient_mrn}),o.status!=="scheduled"&&e.jsx("span",{className:`text-xs px-2 py-0.5 rounded-full ${o.status==="completed"?"bg-green-100 text-green-700":o.status==="in-progress"?"bg-yellow-100 text-yellow-700":o.status==="cancelled"?"bg-red-100 text-red-700":"bg-gray-100 text-gray-700"}`,children:o.status})]})]}),e.jsxs("div",{className:"flex items-center gap-1",children:[o.status==="scheduled"&&e.jsx("button",{onClick:()=>B(o.id,"in-progress"),className:"px-2 py-1 text-xs bg-yellow-500 text-white rounded hover:bg-yellow-600",title:"Start appointment",children:"▶️"}),o.status==="in-progress"&&e.jsx("button",{onClick:()=>B(o.id,"completed"),className:"px-2 py-1 text-xs bg-green-500 text-white rounded hover:bg-green-600",title:"Complete appointment",children:"✓"}),e.jsx("button",{onClick:()=>F(o),className:"px-2 py-1 text-xs bg-yellow-500 text-white rounded hover:bg-yellow-600",title:"Edit patient info",children:"✏️"}),e.jsx("button",{onClick:()=>O(o.patient_id),className:"px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700",children:"🎤"}),e.jsx("button",{onClick:()=>H(o.id),className:"px-2 py-1 text-xs bg-red-500 text-white rounded hover:bg-red-600",title:"Cancel",children:"✕"})]})]})}):e.jsx("div",{className:"flex-1 border-2 border-dashed border-gray-300 rounded-lg p-2 hover:border-green-400 transition",children:e.jsxs("button",{onClick:()=>R(n),className:"w-full text-left flex items-center justify-between group",children:[e.jsx("span",{className:"text-xs text-gray-400 group-hover:text-green-600",children:"Available slot"}),e.jsx("span",{className:"text-xs text-green-600 opacity-0 group-hover:opacity-100 transition",children:"+ Quick Add"})]})})]},n)})})})]}),e.jsxs("div",{className:"mt-4 grid grid-cols-3 gap-3",children:[e.jsxs("div",{className:"bg-white rounded-lg shadow p-3",children:[e.jsx("h4",{className:"text-xs font-medium text-gray-500",children:"Total"}),e.jsx("p",{className:"mt-1 text-xl font-bold text-blue-600",children:$.total})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow p-3",children:[e.jsx("h4",{className:"text-xs font-medium text-gray-500",children:"Completed"}),e.jsx("p",{className:"mt-1 text-xl font-bold text-green-600",children:$.completed})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow p-3",children:[e.jsx("h4",{className:"text-xs font-medium text-gray-500",children:"Available"}),e.jsx("p",{className:"mt-1 text-xl font-bold text-gray-600",children:T.length-i.length})]})]})]}),e.jsx("div",{className:"w-1/2 p-4",children:q?e.jsxs("div",{className:"bg-white rounded-lg shadow p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:y?"Edit Appointment":"Add New Appointment"}),e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Patient Name *"}),e.jsx("input",{type:"text",value:d.patient_name,onChange:n=>m({...d,patient_name:n.target.value}),className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",placeholder:"Enter patient name"})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"MRN"}),e.jsx("input",{type:"text",value:d.patient_mrn,onChange:n=>m({...d,patient_mrn:n.target.value}),className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",placeholder:"Auto-generated"})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Appointment Time *"}),e.jsxs("select",{value:d.appointment_time,onChange:n=>m({...d,appointment_time:n.target.value}),className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",children:[e.jsx("option",{value:"",children:"Select time"}),T.map(n=>e.jsxs("option",{value:n,disabled:U.includes(n)&&(!y||y.appointment_time!==n),children:[n," ",U.includes(n)&&(!y||y.appointment_time!==n)?"(Occupied)":""]},n))]})]})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Phone"}),e.jsx("input",{type:"tel",value:d.patient_phone||"",onChange:n=>m({...d,patient_phone:n.target.value}),className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",placeholder:"(555) 123-4567"})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Date of Birth"}),e.jsx("input",{type:"date",value:d.patient_dob||"",onChange:n=>m({...d,patient_dob:n.target.value}),className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"})]})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Email"}),e.jsx("input",{type:"email",value:d.patient_email||"",onChange:n=>m({...d,patient_email:n.target.value}),className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",placeholder:"patient@email.com"})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Visit Type"}),e.jsxs("select",{value:d.visit_type,onChange:n=>m({...d,visit_type:n.target.value}),className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",children:[e.jsx("option",{value:"follow-up",children:"Follow-up"}),e.jsx("option",{value:"new-patient",children:"New Patient"}),e.jsx("option",{value:"urgent",children:"Urgent"}),e.jsx("option",{value:"telehealth",children:"Telehealth"}),e.jsx("option",{value:"procedure",children:"Procedure"})]})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:"Chief Complaint"}),e.jsx("textarea",{value:d.chief_complaint||"",onChange:n=>m({...d,chief_complaint:n.target.value}),className:"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500",rows:2,placeholder:"Reason for visit..."})]}),e.jsxs("div",{className:"flex gap-3 pt-4",children:[e.jsx("button",{onClick:L,className:"flex-1 px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition",children:y?"Update Appointment":"Add Appointment"}),e.jsx("button",{onClick:()=>{S(!1),C(null),m({patient_name:"",patient_mrn:"",appointment_date:b,appointment_time:"",patient_phone:"",patient_email:"",patient_dob:"",chief_complaint:"",visit_type:"follow-up"})},className:"px-4 py-2 bg-gray-200 text-gray-700 font-medium rounded-lg hover:bg-gray-300 transition",children:"Cancel"})]})]})]}):e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"bg-white rounded-lg shadow p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"Recent Appointments"}),e.jsxs("div",{className:"space-y-3",children:[i.slice(0,5).map(n=>e.jsxs("div",{className:"flex items-center justify-between p-3 bg-gray-50 rounded-lg",children:[e.jsxs("div",{children:[e.jsx("p",{className:"font-medium text-sm",children:n.patient_name}),e.jsxs("p",{className:"text-xs text-gray-500",children:[n.appointment_time," • ",n.patient_mrn]})]}),e.jsx("button",{onClick:()=>O(n.patient_id),className:"px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700",children:"Start Dictation"})]},n.id)),i.length===0&&e.jsx("p",{className:"text-sm text-gray-500 text-center py-4",children:"No appointments scheduled yet"})]})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"Quick Actions"}),e.jsxs("div",{className:"grid grid-cols-2 gap-3",children:[e.jsx("button",{onClick:()=>t("/quick-note"),className:"p-3 bg-purple-50 text-purple-700 rounded-lg hover:bg-purple-100 transition text-sm font-medium",children:"⚡ Quick Note"}),e.jsx("button",{onClick:()=>t("/doctor/templates"),className:"p-3 bg-blue-50 text-blue-700 rounded-lg hover:bg-blue-100 transition text-sm font-medium",children:"📝 Templates"}),e.jsx("button",{onClick:()=>t("/doctor/patients"),className:"p-3 bg-green-50 text-green-700 rounded-lg hover:bg-green-100 transition text-sm font-medium",children:"👥 All Patients"}),e.jsx("button",{onClick:()=>t("/doctor/reports"),className:"p-3 bg-gray-50 text-gray-700 rounded-lg hover:bg-gray-100 transition text-sm font-medium",children:"📊 Reports"})]})]})]})})]})]})}export{Y as default};
//# sourceMappingURL=DoctorDashboardDB-CFW6Nv7o.js.map
