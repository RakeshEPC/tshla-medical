{"version":3,"file":"FixTemplateIssues-AgkG9uUw.js","sources":["../../src/utils/fixTemplateRIssue.ts","../../src/utils/fixCorruptedTemplates.ts","../../src/pages/FixTemplateIssues.tsx"],"sourcesContent":["// Fix \"R:\" appearing in section titles\nimport { templateStorage } from '../lib/templateStorage';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\nexport function fixRInSectionTitles(): void {\n  logDebug('App', 'Debug message', {});\n\n  const templates = templateStorage.getTemplates();\n  let fixedCount = 0;\n\n  templates.forEach(template => {\n    let needsUpdate = false;\n    const updatedSections = { ...template.sections };\n\n    Object.entries(template.sections).forEach(([key, section]) => {\n      if (typeof section === 'object' && section !== null && section.title) {\n        // Check if title starts with \"R:\" or has \"R:\" pattern\n        if (section.title.startsWith('R:') || section.title.match(/^R\\s*:/)) {\n          logDebug('App', 'Debug message', {});\n\n          // Remove \"R:\" from the beginning\n          updatedSections[key] = {\n            ...section,\n            title: section.title.replace(/^R\\s*:\\s*/, '').trim(),\n          };\n          needsUpdate = true;\n          fixedCount++;\n        }\n      }\n    });\n\n    if (needsUpdate) {\n      logDebug('App', 'Debug message', {});\n      templateStorage.updateTemplate(template.id, { sections: updatedSections });\n    }\n  });\n\n  if (fixedCount > 0) {\n    logDebug('App', 'Debug message', {});\n    return true;\n  } else {\n    logDebug('App', 'Debug message', {});\n    return false;\n  }\n}\n\n// Check how \"R:\" affects AI processing\nexport function analyzeRImpact(): {\n  hasRPrefix: boolean;\n  affectedTemplates: string[];\n  explanation: string;\n} {\n  const templates = templateStorage.getTemplates();\n  const affectedTemplates: string[] = [];\n\n  templates.forEach(template => {\n    Object.entries(template.sections).forEach(([key, section]) => {\n      if (typeof section === 'object' && section !== null && section.title) {\n        if (section.title.startsWith('R:') || section.title.match(/^R\\s*:/)) {\n          if (!affectedTemplates.includes(template.name)) {\n            affectedTemplates.push(template.name);\n          }\n        }\n      }\n    });\n  });\n\n  const hasRPrefix = affectedTemplates.length > 0;\n\n  let explanation = '';\n  if (hasRPrefix) {\n    explanation = `The \"R:\" prefix in section titles can affect AI processing in several ways:\n    \n1. **Section Recognition**: The AI might not properly recognize section names like \"R: Subjective\" as \"Subjective\", leading to incorrect categorization.\n\n2. **Content Extraction**: When the AI looks for specific sections (e.g., \"Assessment\"), it might miss sections labeled as \"R: Assessment\".\n\n3. **Output Formatting**: The processed note will include the \"R:\" prefix in section headers, making the output look unprofessional.\n\n4. **Template Matching**: The enhanced template processor expects standard section names. The \"R:\" prefix can cause the processor to skip these sections or process them incorrectly.\n\n5. **Data Extraction**: Features like medication extraction or follow-up time parsing rely on finding the correct sections. The \"R:\" prefix disrupts this pattern matching.\n\nAffected templates: ${affectedTemplates.join(', ')}\n\nThe \"R:\" likely came from copying/pasting or a formatting issue when creating the template. It should be removed for proper AI processing.`;\n  } else {\n    explanation =\n      'No \"R:\" prefixes found in templates. The issue might be in the display or processing logic rather than the template data itself.';\n  }\n\n  return {\n    hasRPrefix,\n    affectedTemplates,\n    explanation,\n  };\n}\n","// Fix corrupted templates in localStorage\nimport type { Template, TemplateSection } from '../types/template.types';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\nexport function fixCorruptedTemplates(): void {\n  const STORAGE_KEY = 'medical_templates_v2';\n\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    if (!stored) {\n      logDebug('App', 'Debug message', {});\n      return;\n    }\n\n    const templates: Template[] = JSON.parse(stored);\n    let fixedCount = 0;\n\n    const fixedTemplates = templates.map(template => {\n      if (!template.sections) return template;\n\n      // Check if this template needs fixing\n      const needsFix = Object.values(template.sections).some(\n        section =>\n          typeof section === 'string' ||\n          (typeof section === 'object' &&\n            section !== null &&\n            (!section.title || !section.aiInstructions))\n      );\n\n      if (!needsFix) return template;\n\n      logDebug('App', 'Debug message', {});\n      fixedCount++;\n\n      // Only keep valid sections with title and aiInstructions\n      const fixedSections: Record<string, TemplateSection> = {};\n\n      Object.entries(template.sections).forEach(([key, value]) => {\n        if (\n          typeof value === 'object' &&\n          value !== null &&\n          'title' in value &&\n          'aiInstructions' in value &&\n          value.title &&\n          value.aiInstructions\n        ) {\n          fixedSections[key] = value as TemplateSection;\n        } else {\n          logDebug('App', 'Debug message', {});\n        }\n      });\n\n      return {\n        ...template,\n        sections: fixedSections,\n      };\n    });\n\n    if (fixedCount > 0) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(fixedTemplates));\n      logDebug('App', 'Debug message', {});\n    } else {\n      logDebug('App', 'Debug message', {});\n    }\n  } catch (error) {\n    logError('App', 'Error message', {});\n  }\n}\n\n// Run this function on app startup or manually\nexport function initTemplatesFix(): void {\n  if (typeof window !== 'undefined') {\n    logDebug('App', 'Debug message', {});\n    fixCorruptedTemplates();\n  }\n}\n","import React, { useState } from 'react';\nimport { fixRInSectionTitles, analyzeRImpact } from '../utils/fixTemplateRIssue';\nimport { fixCorruptedTemplates } from '../utils/fixCorruptedTemplates';\n\nexport default function FixTemplateIssues() {\n  const [analysis, setAnalysis] = useState<any>(null);\n  const [fixApplied, setFixApplied] = useState(false);\n  const [corruptionFixed, setCorruptionFixed] = useState(false);\n\n  const runAnalysis = () => {\n    const result = analyzeRImpact();\n    setAnalysis(result);\n  };\n\n  const applyFix = () => {\n    const fixed = fixRInSectionTitles();\n    setFixApplied(true);\n    // Re-run analysis after fix\n    setTimeout(() => {\n      runAnalysis();\n    }, 100);\n  };\n\n  const fixCorruption = () => {\n    fixCorruptedTemplates();\n    setCorruptionFixed(true);\n    // Re-run analysis after fix\n    setTimeout(() => {\n      runAnalysis();\n    }, 100);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold mb-8\">Template Issue Analyzer & Fixer</h1>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Template Analysis</h2>\n\n          <div className=\"space-y-4\">\n            <button\n              onClick={runAnalysis}\n              className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600\"\n            >\n              Analyze Templates for \"R:\" Issue\n            </button>\n\n            {analysis && (\n              <div className=\"mt-6 space-y-4\">\n                <div\n                  className={`p-4 rounded-lg ${analysis.hasRPrefix ? 'bg-red-50 border border-red-200' : 'bg-green-50 border border-green-200'}`}\n                >\n                  <h3 className=\"font-semibold mb-2\">\n                    {analysis.hasRPrefix ? '⚠️ Issues Found' : '✅ No Issues Found'}\n                  </h3>\n\n                  {analysis.affectedTemplates.length > 0 && (\n                    <div className=\"mb-3\">\n                      <strong>Affected Templates:</strong>\n                      <ul className=\"list-disc list-inside mt-1\">\n                        {analysis.affectedTemplates.map((template: string) => (\n                          <li key={template}>{template}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n\n                  <div className=\"whitespace-pre-wrap text-sm text-gray-700\">\n                    {analysis.explanation}\n                  </div>\n                </div>\n\n                {analysis.hasRPrefix && !fixApplied && (\n                  <button\n                    onClick={applyFix}\n                    className=\"bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600\"\n                  >\n                    Fix \"R:\" Prefixes in Templates\n                  </button>\n                )}\n\n                {fixApplied && (\n                  <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n                    ✅ Fix applied successfully! The \"R:\" prefixes have been removed from section\n                    titles.\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Other Template Fixes</h2>\n\n          <div className=\"space-y-4\">\n            <div>\n              <p className=\"text-gray-600 mb-3\">\n                Fix corrupted template sections (removes invalid sections without proper\n                title/aiInstructions):\n              </p>\n              <button\n                onClick={fixCorruption}\n                className=\"bg-purple-500 text-white px-6 py-2 rounded-lg hover:bg-purple-600\"\n              >\n                Fix Corrupted Templates\n              </button>\n\n              {corruptionFixed && (\n                <div className=\"mt-3 p-4 bg-purple-50 border border-purple-200 rounded-lg\">\n                  ✅ Corruption fix applied! Invalid template sections have been removed.\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <h3 className=\"font-semibold mb-2\">How This Affects AI Processing:</h3>\n          <p className=\"text-sm text-gray-700\">\n            The \"R:\" prefix in section titles interferes with the AI's ability to:\n          </p>\n          <ul className=\"list-disc list-inside mt-2 text-sm text-gray-700\">\n            <li>Properly categorize medical information into correct sections</li>\n            <li>Extract specific data like medications, labs, and follow-up times</li>\n            <li>Match dictated content with template section instructions</li>\n            <li>Generate clean, professional-looking clinical notes</li>\n          </ul>\n          <p className=\"text-sm text-gray-700 mt-2\">\n            <strong>Answer to your question:</strong> Yes, the \"R:\" does mess up the AI processing.\n            It causes the AI to misidentify sections and fail to apply the correct formatting rules.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["fixRInSectionTitles","logDebug","templates","templateStorage","fixedCount","template","needsUpdate","updatedSections","key","section","analyzeRImpact","affectedTemplates","hasRPrefix","explanation","fixCorruptedTemplates","STORAGE_KEY","stored","fixedTemplates","fixedSections","value","logError","FixTemplateIssues","analysis","setAnalysis","useState","fixApplied","setFixApplied","corruptionFixed","setCorruptionFixed","runAnalysis","result","applyFix","fixCorruption","jsxs","jsx"],"mappings":"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"}