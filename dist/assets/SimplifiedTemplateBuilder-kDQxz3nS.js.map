{"version":3,"file":"SimplifiedTemplateBuilder-kDQxz3nS.js","sources":["../../node_modules/lucide-react/dist/esm/icons/chevron-up.js","../../src/pages/SimplifiedTemplateBuilder.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"m18 15-6-6-6 6\", key: \"153udz\" }]];\nconst ChevronUp = createLucideIcon(\"chevron-up\", __iconNode);\n\nexport { __iconNode, ChevronUp as default };\n//# sourceMappingURL=chevron-up.js.map\n","import React, { useState, useEffect } from 'react';\nimport {\n  Save,\n  Plus,\n  Trash2,\n  FileText,\n  ArrowLeft,\n  Home,\n  ChevronUp,\n  ChevronDown,\n  Star,\n} from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { templateStorage } from '../lib/templateStorage';\nimport type { Template } from '../types/template.types';\n\ninterface TemplateSection {\n  id: string;\n  title: string;\n  aiInstructions: string;\n  order: number;\n}\n\nexport default function SimplifiedTemplateBuilder() {\n  const navigate = useNavigate();\n  const [templateName, setTemplateName] = useState('');\n  const [generalInstructions, setGeneralInstructions] = useState('');\n  const [sections, setSections] = useState<TemplateSection[]>([\n    {\n      id: 'section-1',\n      title: 'Chief Complaint',\n      aiInstructions: 'Extract the main reason for the visit',\n      order: 0,\n    },\n  ]);\n  const [savedTemplates, setSavedTemplates] = useState<Template[]>([]);\n  const [editingTemplateId, setEditingTemplateId] = useState<string | null>(null);\n  const [defaultTemplateId, setDefaultTemplateId] = useState<string>('');\n\n  // Load saved templates and default template\n  useEffect(() => {\n    loadSavedTemplates();\n    const storedDefault = localStorage.getItem('defaultTemplateId');\n    if (storedDefault) {\n      setDefaultTemplateId(storedDefault);\n    }\n  }, []);\n\n  const loadSavedTemplates = () => {\n    const allTemplates = templateStorage.getTemplates();\n    const customTemplates = allTemplates.filter(t => !t.is_system_template);\n    setSavedTemplates(customTemplates);\n  };\n\n  // Set default template\n  const setAsDefault = (templateId: string) => {\n    localStorage.setItem('defaultTemplateId', templateId);\n    setDefaultTemplateId(templateId);\n    alert('Default template set successfully!');\n  };\n\n  // Add new section\n  const addSection = () => {\n    const newSection: TemplateSection = {\n      id: `section-${Date.now()}`,\n      title: '',\n      aiInstructions: '',\n      order: sections.length,\n    };\n    setSections([...sections, newSection]);\n  };\n\n  // Remove section\n  const removeSection = (id: string) => {\n    if (sections.length > 1) {\n      setSections(sections.filter(s => s.id !== id));\n    }\n  };\n\n  // Update section\n  const updateSection = (id: string, field: 'title' | 'aiInstructions', value: string) => {\n    setSections(sections.map(s => (s.id === id ? { ...s, [field]: value } : s)));\n  };\n\n  // Move section up\n  const moveUp = (index: number) => {\n    if (index === 0) return;\n    const newSections = [...sections];\n    [newSections[index], newSections[index - 1]] = [newSections[index - 1], newSections[index]];\n    newSections.forEach((s, i) => (s.order = i));\n    setSections(newSections);\n  };\n\n  // Move section down\n  const moveDown = (index: number) => {\n    if (index === sections.length - 1) return;\n    const newSections = [...sections];\n    [newSections[index], newSections[index + 1]] = [newSections[index + 1], newSections[index]];\n    newSections.forEach((s, i) => (s.order = i));\n    setSections(newSections);\n  };\n\n  // Save template\n  const saveTemplate = async () => {\n    if (!templateName || sections.length === 0) {\n      alert('Please provide a template name and at least one section');\n      return;\n    }\n\n    // Validate sections\n    const invalidSections = sections.filter(s => !s.title || !s.aiInstructions);\n    if (invalidSections.length > 0) {\n      alert('Please fill in all section titles and AI instructions');\n      return;\n    }\n\n    // Convert sections to template format\n    const templateSections: any = {};\n    sections.forEach(section => {\n      const key = section.title.toLowerCase().replace(/\\s+/g, '_');\n      templateSections[key] = {\n        title: section.title,\n        aiInstructions: section.aiInstructions,\n        order: section.order,\n      };\n    });\n\n    const template: Omit<Template, 'id' | 'created_at' | 'usage_count'> = {\n      name: templateName,\n      specialty: 'General',\n      template_type: 'custom',\n      sections: templateSections,\n      generalInstructions: generalInstructions,\n      is_shared: false,\n      is_system_template: false,\n    };\n\n    if (editingTemplateId) {\n      // Update existing template\n      templateStorage.updateTemplate(editingTemplateId, template);\n      alert('Template updated successfully!');\n    } else {\n      // Create new template\n      const savedTemplate = templateStorage.createTemplate(template);\n      if (!defaultTemplateId) {\n        // If no default template, set this as default\n        setAsDefault(savedTemplate.id);\n      }\n      alert('Template created successfully!');\n    }\n\n    loadSavedTemplates();\n    clearForm();\n  };\n\n  // Clear form\n  const clearForm = () => {\n    setTemplateName('');\n    setGeneralInstructions('');\n    setSections([\n      {\n        id: 'section-1',\n        title: 'Chief Complaint',\n        aiInstructions: 'Extract the main reason for the visit',\n        order: 0,\n      },\n    ]);\n    setEditingTemplateId(null);\n  };\n\n  // Load template for editing\n  const loadTemplate = (template: Template) => {\n    setEditingTemplateId(template.id);\n    setTemplateName(template.name);\n    setGeneralInstructions((template as any).generalInstructions || '');\n\n    // Convert template sections back to editable format\n    const loadedSections: TemplateSection[] = [];\n    if (template.sections) {\n      Object.entries(template.sections).forEach(([key, value]: [string, any]) => {\n        if (typeof value === 'object' && value.title) {\n          loadedSections.push({\n            id: `section-${Date.now()}-${key}`,\n            title: value.title,\n            aiInstructions: value.aiInstructions || '',\n            order: value.order || loadedSections.length,\n          });\n        }\n      });\n    }\n\n    if (loadedSections.length > 0) {\n      loadedSections.sort((a, b) => a.order - b.order);\n      setSections(loadedSections);\n    }\n  };\n\n  // Delete template\n  const deleteTemplate = (id: string) => {\n    if (confirm('Are you sure you want to delete this template?')) {\n      templateStorage.deleteTemplate(id);\n      if (defaultTemplateId === id) {\n        localStorage.removeItem('defaultTemplateId');\n        setDefaultTemplateId('');\n      }\n      loadSavedTemplates();\n    }\n  };\n\n  // Common templates for quick start\n  const quickStartTemplates = [\n    {\n      name: 'SOAP Note',\n      sections: [\n        { title: 'Subjective', ai: 'Extract patient complaints, symptoms, and history' },\n        { title: 'Objective', ai: 'Extract vital signs, physical exam findings, and lab results' },\n        { title: 'Assessment', ai: 'Extract diagnoses and clinical impressions' },\n        { title: 'Plan', ai: 'Extract treatment plan, medications, and follow-up' },\n      ],\n    },\n    {\n      name: 'Follow-up Visit',\n      sections: [\n        { title: 'Chief Complaint', ai: 'Extract the reason for follow-up' },\n        { title: 'Progress Since Last Visit', ai: 'Extract improvements or worsening of symptoms' },\n        { title: 'Current Medications', ai: 'List all current medications with doses' },\n        { title: 'Assessment & Plan', ai: 'Extract assessment and treatment changes' },\n      ],\n    },\n    {\n      name: 'Medication Management',\n      sections: [\n        { title: 'Current Medications', ai: 'List all medications with doses and frequencies' },\n        { title: 'Medication Efficacy', ai: 'Extract how well medications are working' },\n        { title: 'Side Effects', ai: 'Extract any reported side effects' },\n        { title: 'Medication Changes', ai: 'Extract all medication changes (start/stop/adjust)' },\n      ],\n    },\n  ];\n\n  const loadQuickTemplate = (quickTemplate: any) => {\n    setTemplateName(quickTemplate.name);\n    const newSections = quickTemplate.sections.map((s: any, index: number) => ({\n      id: `section-${Date.now()}-${index}`,\n      title: s.title,\n      aiInstructions: s.ai,\n      order: index,\n    }));\n    setSections(newSections);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"max-w-6xl mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-8\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={() => navigate('/schedule')}\n                className=\"p-2 bg-blue-100 hover:bg-blue-200 rounded-lg transition\"\n              >\n                <ArrowLeft className=\"h-5 w-5 text-blue-600\" />\n              </button>\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-900\">Template Builder</h1>\n                <p className=\"text-gray-600 mt-1\">Create custom medical note templates</p>\n              </div>\n            </div>\n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => navigate('/doctor')}\n                className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg flex items-center gap-2 transition\"\n              >\n                <Home className=\"h-5 w-5\" />\n                Dashboard\n              </button>\n              <button\n                onClick={clearForm}\n                className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition\"\n              >\n                New Template\n              </button>\n              <button\n                onClick={saveTemplate}\n                disabled={!templateName || sections.length === 0}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed transition\"\n              >\n                <Save className=\"h-5 w-5\" />\n                {editingTemplateId ? 'Update' : 'Save'} Template\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Main Editor */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n              {/* Template Name */}\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Template Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={templateName}\n                  onChange={e => setTemplateName(e.target.value)}\n                  placeholder=\"e.g., Diabetes Follow-up, Cardiology Consult\"\n                  className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-lg\"\n                />\n              </div>\n\n              {/* General AI Instructions */}\n              <div className=\"mb-6 bg-blue-50 border-2 border-blue-200 rounded-lg p-4\">\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  General AI Instructions (Applied to Entire Template)\n                </label>\n                <textarea\n                  value={generalInstructions}\n                  onChange={e => setGeneralInstructions(e.target.value)}\n                  placeholder=\"General instructions for AI processing that apply to all sections. For example: 'Use third person throughout. Be concise and professional. Include specific numeric values when mentioned. Avoid redundancy between sections.'\"\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-sm\"\n                />\n                <p className=\"text-xs text-gray-600 mt-2\">\n                  These instructions will be applied to the entire note processing, in addition to\n                  individual section instructions.\n                </p>\n              </div>\n\n              {/* Sections */}\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-semibold text-gray-800\">Template Sections</h3>\n                  <button\n                    onClick={addSection}\n                    className=\"px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center gap-2 transition\"\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                    Add Section\n                  </button>\n                </div>\n\n                {sections.map((section, index) => (\n                  <div\n                    key={section.id}\n                    className=\"bg-gray-50 rounded-lg p-4 border-2 border-gray-200 hover:border-blue-300 transition\"\n                  >\n                    <div className=\"flex items-start gap-3\">\n                      {/* Move buttons */}\n                      <div className=\"flex flex-col gap-1 mt-8\">\n                        <button\n                          onClick={() => moveUp(index)}\n                          disabled={index === 0}\n                          className=\"p-1 hover:bg-gray-200 rounded disabled:opacity-30 disabled:cursor-not-allowed\"\n                        >\n                          <ChevronUp className=\"h-4 w-4\" />\n                        </button>\n                        <button\n                          onClick={() => moveDown(index)}\n                          disabled={index === sections.length - 1}\n                          className=\"p-1 hover:bg-gray-200 rounded disabled:opacity-30 disabled:cursor-not-allowed\"\n                        >\n                          <ChevronDown className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n\n                      {/* Section content */}\n                      <div className=\"flex-1 space-y-3\">\n                        <input\n                          type=\"text\"\n                          value={section.title}\n                          onChange={e => updateSection(section.id, 'title', e.target.value)}\n                          placeholder=\"Section title (e.g., Chief Complaint)\"\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 font-medium\"\n                        />\n                        <textarea\n                          value={section.aiInstructions}\n                          onChange={e =>\n                            updateSection(section.id, 'aiInstructions', e.target.value)\n                          }\n                          placeholder=\"AI instructions - What should be extracted for this section?\"\n                          rows={2}\n                          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 text-sm\"\n                        />\n                      </div>\n\n                      {/* Delete button */}\n                      <button\n                        onClick={() => removeSection(section.id)}\n                        disabled={sections.length === 1}\n                        className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg disabled:opacity-30 disabled:cursor-not-allowed\"\n                      >\n                        <Trash2 className=\"h-5 w-5\" />\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Quick Start Templates */}\n            <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n              <h2 className=\"text-lg font-semibold mb-4 text-gray-800\">Quick Start Templates</h2>\n              <div className=\"space-y-2\">\n                {quickStartTemplates.map(template => (\n                  <button\n                    key={template.name}\n                    onClick={() => loadQuickTemplate(template)}\n                    className=\"w-full text-left px-4 py-3 bg-blue-50 hover:bg-blue-100 rounded-lg transition\"\n                  >\n                    <div className=\"font-medium text-blue-700\">{template.name}</div>\n                    <div className=\"text-xs text-gray-600 mt-1\">\n                      {template.sections.length} sections\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Saved Templates */}\n            <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n              <h2 className=\"text-lg font-semibold mb-4 text-gray-800\">My Templates</h2>\n              <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n                {savedTemplates.length === 0 ? (\n                  <p className=\"text-gray-500 text-sm text-center py-4\">No custom templates yet</p>\n                ) : (\n                  savedTemplates.map(template => (\n                    <div\n                      key={template.id}\n                      className=\"group bg-gray-50 hover:bg-gray-100 rounded-lg p-3 transition\"\n                    >\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <button onClick={() => loadTemplate(template)} className=\"flex-1 text-left\">\n                          <div className=\"flex items-center gap-2\">\n                            <FileText className=\"h-4 w-4 text-blue-600\" />\n                            <span className=\"font-medium text-gray-800\">{template.name}</span>\n                            {defaultTemplateId === template.id && (\n                              <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\n                            )}\n                          </div>\n                        </button>\n                      </div>\n                      <div className=\"flex gap-2 mt-2\">\n                        <button\n                          onClick={() => setAsDefault(template.id)}\n                          className={`px-2 py-1 text-xs rounded ${\n                            defaultTemplateId === template.id\n                              ? 'bg-yellow-100 text-yellow-700'\n                              : 'bg-gray-200 hover:bg-gray-300 text-gray-600'\n                          }`}\n                        >\n                          {defaultTemplateId === template.id ? '✓ Default' : 'Set Default'}\n                        </button>\n                        <button\n                          onClick={() => deleteTemplate(template.id)}\n                          className=\"px-2 py-1 bg-red-100 hover:bg-red-200 text-red-600 text-xs rounded\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["__iconNode","ChevronUp","createLucideIcon","SimplifiedTemplateBuilder","navigate","useNavigate","templateName","setTemplateName","useState","generalInstructions","setGeneralInstructions","sections","setSections","savedTemplates","setSavedTemplates","editingTemplateId","setEditingTemplateId","defaultTemplateId","setDefaultTemplateId","useEffect","loadSavedTemplates","storedDefault","customTemplates","templateStorage","t","setAsDefault","templateId","addSection","newSection","removeSection","id","updateSection","field","value","s","moveUp","index","newSections","i","moveDown","saveTemplate","templateSections","section","key","template","savedTemplate","clearForm","loadTemplate","loadedSections","a","b","deleteTemplate","quickStartTemplates","loadQuickTemplate","quickTemplate","jsxs","jsx","ArrowLeft","Home","Save","e","Plus","ChevronDown","Trash2","FileText","Star"],"mappings":"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","x_google_ignoreList":[0]}