{"version":3,"mappings":"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","names":["SLIDERS","FEATURE_CATEGORIES","PumpDriveUnified","navigate","useNavigate","currentStep","setCurrentStep","useState","completedSteps","setCompletedSteps","sliderValues","setSliderValues","selectedFeatures","setSelectedFeatures","freeText","setFreeText","charCount","setCharCount","isProcessing","setIsProcessing","recommendation","setRecommendation","clarifyingQuestions","setClarifyingQuestions","clarifyingAnswers","setClarifyingAnswers","useEffect","completedStepsToAdd","savedSliders","savedFeatures","savedText","textData","handleSliderChange","sliderId","value","prev","completeSliders","toggleFeature","feature","f","completeFeatures","handleTextChange","e","text","completeStory","sessionId","freeTextMCPService","completeAssessmentData","analysis","freeTextData","checkForClarifyingQuestions","error","skipStory","inputData","pumpDrivePureAI","__vitePreload","result","completeClarifyingQuestions","responsesObject","question","index","savedQuestions","getStepProgress","steps","completed","step","renderProgressBar","jsxs","jsx","pump","factor","i","key","insight","slider","category","categoryFeatures","PUMP_FEATURES","isSelected","newAnswers"],"ignoreList":[],"sources":["../../src/pages/PumpDriveUnified.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { sliderMCPService } from '../services/sliderMCP.service';\nimport { freeTextMCPService } from '../services/freeTextMCP.service';\nimport { PUMP_FEATURES } from '../data/pumpFeatures';\nimport type { PumpFeature } from '../data/pumpFeatures';\n\ninterface SliderData {\n  id: string;\n  title: string;\n  emoji: string;\n  examples: {\n    low: string;\n    medium: string;\n    high: string;\n  };\n}\n\nconst SLIDERS: SliderData[] = [\n  {\n    id: 'activity',\n    title: 'How Active Are You?',\n    emoji: '🏃',\n    examples: {\n      low: '1: Mostly at desk, light walking, prefer comfort',\n      medium: '5: Regular walks, some gym, weekend activities',\n      high: '10: Daily workouts, sports, always on the move'\n    }\n  },\n  {\n    id: 'techComfort',\n    title: 'How Much Do You Love Technology?',\n    emoji: '📱',\n    examples: {\n      low: '1: Keep it simple, basic phone features only',\n      medium: '5: Use apps daily, learn gradually, pretty comfortable',\n      high: '10: Love new gadgets, early adopter, tech is exciting!'\n    }\n  },\n  {\n    id: 'simplicity',\n    title: 'Do You Prefer Simple or Advanced?',\n    emoji: '🎛️',\n    examples: {\n      low: '1: Keep it super simple, fewer buttons and options',\n      medium: '5: Some features are nice, but not overwhelming',\n      high: '10: Give me all the features, data, and control options'\n    }\n  },\n  {\n    id: 'discreteness',\n    title: 'How Important is Hiding Your Device?',\n    emoji: '🤫',\n    examples: {\n      low: '1: Must be completely hidden, nobody should notice',\n      medium: '5: Prefer discreet but okay if sometimes visible',\n      high: '10: Don\\'t care who sees it, function over appearance'\n    }\n  },\n  {\n    id: 'timeDedication',\n    title: 'How Much Time Can You Spend on Device Care?',\n    emoji: '⏰',\n    examples: {\n      low: '1: Minimal time, want set-and-forget simplicity',\n      medium: '5: A few minutes daily for basic maintenance',\n      high: '10: Happy to spend time for optimal performance'\n    }\n  }\n];\n\nconst FEATURE_CATEGORIES = [\n  { id: 'power', name: 'Power & Charging', emoji: '🔋' },\n  { id: 'design', name: 'Design & Size', emoji: '🎨' },\n  { id: 'interface', name: 'Controls & Interface', emoji: '📱' },\n  { id: 'convenience', name: 'Convenience Features', emoji: '✨' },\n  { id: 'automation', name: 'Automation Level', emoji: '🤖' }\n];\n\ntype AssessmentStep = 'sliders' | 'features' | 'story' | 'clarify' | 'results';\n\nconst PumpDriveUnified: React.FC = () => {\n  const navigate = useNavigate();\n  \n  // Step management\n  const [currentStep, setCurrentStep] = useState<AssessmentStep>('sliders');\n  const [completedSteps, setCompletedSteps] = useState<AssessmentStep[]>([]);\n  \n  // Slider data\n  const [sliderValues, setSliderValues] = useState<Record<string, number>>({\n    activity: 5,\n    techComfort: 5,\n    simplicity: 5,\n    discreteness: 5,\n    timeDedication: 5\n  });\n  \n  // Feature selection data\n  const [selectedFeatures, setSelectedFeatures] = useState<PumpFeature[]>([]);\n  \n  // Free text data\n  const [freeText, setFreeText] = useState('');\n  const [charCount, setCharCount] = useState(0);\n  \n  // Processing state\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [recommendation, setRecommendation] = useState<any>(null);\n\n  // Clarifying questions state\n  const [clarifyingQuestions, setClarifyingQuestions] = useState<string[]>([]);\n  const [clarifyingAnswers, setClarifyingAnswers] = useState<string[]>([]);\n  \n  // Load saved data on mount\n  useEffect(() => {\n    const completedStepsToAdd: AssessmentStep[] = [];\n\n    // Load slider data\n    const savedSliders = sessionStorage.getItem('pumpDriveSliders');\n    if (savedSliders) {\n      setSliderValues(JSON.parse(savedSliders));\n      completedStepsToAdd.push('sliders');\n    }\n\n    // Load feature data\n    const savedFeatures = sessionStorage.getItem('selectedPumpFeatures');\n    if (savedFeatures) {\n      setSelectedFeatures(JSON.parse(savedFeatures));\n      completedStepsToAdd.push('features');\n    }\n\n    // Load free text data\n    const savedText = sessionStorage.getItem('pumpDriveFreeText');\n    if (savedText) {\n      const textData = JSON.parse(savedText);\n      setFreeText(textData.currentSituation || '');\n      setCharCount(textData.currentSituation?.length || 0);\n      completedStepsToAdd.push('story');\n    }\n\n    // Set all completed steps at once to avoid multiple state updates\n    if (completedStepsToAdd.length > 0) {\n      setCompletedSteps(completedStepsToAdd);\n    }\n  }, []);\n\n  const handleSliderChange = (sliderId: string, value: number) => {\n    setSliderValues(prev => ({\n      ...prev,\n      [sliderId]: value\n    }));\n  };\n\n  const completeSliders = () => {\n    sessionStorage.setItem('pumpDriveSliders', JSON.stringify(sliderValues));\n    if (!completedSteps.includes('sliders')) {\n      setCompletedSteps(prev => [...prev, 'sliders']);\n    }\n    setCurrentStep('features');\n  };\n\n  const toggleFeature = (feature: PumpFeature) => {\n    setSelectedFeatures(prev => {\n      const isSelected = prev.find(f => f.id === feature.id);\n      if (isSelected) {\n        return prev.filter(f => f.id !== feature.id);\n      } else {\n        return [...prev, feature];\n      }\n    });\n  };\n\n  const completeFeatures = () => {\n    sessionStorage.setItem('selectedPumpFeatures', JSON.stringify(selectedFeatures));\n    if (!completedSteps.includes('features')) {\n      setCompletedSteps(prev => [...prev, 'features']);\n    }\n    setCurrentStep('story');\n  };\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const text = e.target.value;\n    setFreeText(text);\n    setCharCount(text.length);\n  };\n\n  const completeStory = async () => {\n    try {\n      // Save complete assessment data to MCP server\n      const sessionId = freeTextMCPService.generateSessionId();\n      \n      const completeAssessmentData = {\n        sessionId,\n        sliderValues,\n        selectedFeatures,\n        freeText: freeText.trim()\n      };\n      \n      console.log('🎯 Saving assessment data to local storage...');\n\n      // MCP server temporarily disabled - using local storage only\n      // try {\n      //   const response = await fetch('http://localhost:3001/mcp', {\n      //     method: 'POST',\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       tool: 'save_complete_assessment',\n      //       args: completeAssessmentData\n      //     })\n      //   });\n      //\n      //   const result = await response.json();\n      //   console.log('✅ MCP server response:', result);\n      // } catch (mcpError) {\n      //   console.warn('⚠️ MCP server not available, continuing with local storage:', mcpError);\n      // }\n      \n      // Save free text data locally as backup\n      if (freeText.trim()) {\n        const analysis = freeTextMCPService.analyzeText(freeText);\n        await freeTextMCPService.saveFreeTextResponse(sessionId, freeText.trim(), analysis);\n        sessionStorage.setItem('freeTextSessionId', sessionId);\n      }\n      \n      const freeTextData = {\n        currentSituation: freeText.trim(),\n        timestamp: new Date().toISOString()\n      };\n      sessionStorage.setItem('pumpDriveFreeText', JSON.stringify(freeTextData));\n      \n      if (!completedSteps.includes('story')) {\n        setCompletedSteps(prev => [...prev, 'story']);\n      }\n      \n      // Check if we need clarifying questions before going to results\n      await checkForClarifyingQuestions();\n      \n    } catch (error) {\n      console.error('❌ Error saving story:', error);\n      alert('Error saving your story. Please try again.');\n    }\n  };\n\n  const skipStory = async () => {\n    const freeTextData = {\n      currentSituation: '',\n      timestamp: new Date().toISOString()\n    };\n    sessionStorage.setItem('pumpDriveFreeText', JSON.stringify(freeTextData));\n    \n    if (!completedSteps.includes('story')) {\n      setCompletedSteps(prev => [...prev, 'story']);\n    }\n    \n    await checkForClarifyingQuestions();\n  };\n\n  const checkForClarifyingQuestions = async () => {\n    try {\n      setIsProcessing(true);\n      console.log('🤔 Checking if clarifying questions are needed...');\n\n      // Prepare input data for AI analysis\n      const inputData = {\n        sliders: sliderValues,\n        selectedFeatures: selectedFeatures,\n        userText: freeText.trim()\n      };\n\n      console.log('📊 Input data for AI:', inputData);\n\n      // Import the AI service\n      const { pumpDrivePureAI } = await import('../services/pumpDrivePureAI.service');\n\n      // Call AI to determine if clarifying questions are needed\n      const result = await pumpDrivePureAI.generateRecommendation(inputData);\n\n      if (result.needsClarification && result.clarifyingQuestions && result.clarifyingQuestions.length > 0) {\n        console.log('❓ Clarifying questions needed:', result.clarifyingQuestions);\n\n        // Save clarifying questions and show them\n        setClarifyingQuestions(result.clarifyingQuestions);\n        sessionStorage.setItem('pumpDriveClarifyingQuestions', JSON.stringify(result.clarifyingQuestions));\n        setCurrentStep('clarify');\n      } else {\n        console.log('✅ No clarifying questions needed, going to results');\n        // Go directly to results\n        navigate('/pumpdrive/results');\n      }\n\n    } catch (error) {\n      console.error('❌ Error checking for clarifying questions:', error);\n      // Fall back to going to results\n      navigate('/pumpdrive/results');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const completeClarifyingQuestions = async () => {\n    try {\n      setIsProcessing(true);\n      console.log('💾 Saving clarifying answers:', clarifyingAnswers);\n      console.log('💾 Clarifying questions:', clarifyingQuestions);\n\n      // Convert array of answers to object keyed by question\n      const responsesObject: Record<string, string> = {};\n\n      if (clarifyingQuestions.length > 0) {\n        clarifyingQuestions.forEach((question, index) => {\n          responsesObject[question] = clarifyingAnswers[index] || '';\n        });\n      } else {\n        // Fallback: try to get questions from sessionStorage\n        const savedQuestions = sessionStorage.getItem('pumpDriveClarifyingQuestions');\n        if (savedQuestions) {\n          const questions = JSON.parse(savedQuestions);\n          questions.forEach((question: string, index: number) => {\n            responsesObject[question] = clarifyingAnswers[index] || '';\n          });\n        }\n      }\n\n      console.log('💾 Responses object:', responsesObject);\n\n      // Save clarifying responses to sessionStorage as object\n      sessionStorage.setItem('pumpDriveClarifyingResponses', JSON.stringify(responsesObject));\n\n      // Mark clarify step as complete\n      if (!completedSteps.includes('clarify')) {\n        setCompletedSteps(prev => [...prev, 'clarify']);\n      }\n\n      // Navigate to results\n      navigate('/pumpdrive/results');\n    } catch (error) {\n      console.error('❌ Error saving clarifying answers:', error);\n      alert('Error saving your answers. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const generateRecommendation = async () => {\n    setIsProcessing(true);\n    setCurrentStep('results');\n    \n    try {\n      console.log('🎯 Generating comprehensive recommendation...');\n      console.log('📊 Sliders:', sliderValues);\n      console.log('⭐ Features:', selectedFeatures.length);\n      console.log('💭 Story length:', freeText.length);\n      \n      // Use the enhanced slider MCP service which now considers all three inputs\n      const analysis = await sliderMCPService.generateRecommendation(sliderValues);\n      \n      setRecommendation(analysis);\n      console.log('✅ Comprehensive recommendation generated!');\n      \n    } catch (error) {\n      console.error('❌ Error generating recommendation:', error);\n      alert('Error generating recommendation. Please try again.');\n      setCurrentStep('story');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const getStepProgress = () => {\n    const steps = ['sliders', 'features', 'story', 'clarify'];\n    const completed = steps.filter(step => completedSteps.includes(step as AssessmentStep)).length;\n    return Math.round((completed / steps.length) * 100);\n  };\n\n  const renderProgressBar = () => (\n    <div className=\"mb-8\">\n      <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n        <span>Complete Assessment</span>\n        <span>{getStepProgress()}% Complete</span>\n      </div>\n      <div className=\"w-full bg-gray-200 rounded-full h-3\">\n        <div \n          className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-3 rounded-full transition-all duration-500\"\n          style={{ width: `${getStepProgress()}%` }}\n        ></div>\n      </div>\n      \n      {/* Step indicators */}\n      <div className=\"flex justify-between mt-4\">\n        <div className={`flex items-center ${currentStep === 'sliders' ? 'text-blue-600 font-semibold' : completedSteps.includes('sliders') ? 'text-green-600' : 'text-gray-400'}`}>\n          <span className=\"mr-2\">{completedSteps.includes('sliders') ? '✅' : '🎚️'}</span>\n          <span className=\"text-sm\">Preferences</span>\n        </div>\n        <div className={`flex items-center ${currentStep === 'features' ? 'text-blue-600 font-semibold' : completedSteps.includes('features') ? 'text-green-600' : 'text-gray-400'}`}>\n          <span className=\"mr-2\">{completedSteps.includes('features') ? '✅' : '⭐'}</span>\n          <span className=\"text-sm\">Features</span>\n        </div>\n        <div className={`flex items-center ${currentStep === 'story' ? 'text-blue-600 font-semibold' : completedSteps.includes('story') ? 'text-green-600' : 'text-gray-400'}`}>\n          <span className=\"mr-2\">{completedSteps.includes('story') ? '✅' : '💭'}</span>\n          <span className=\"text-sm\">Your Story</span>\n        </div>\n        <div className={`flex items-center ${currentStep === 'clarify' ? 'text-blue-600 font-semibold' : completedSteps.includes('clarify') ? 'text-green-600' : 'text-gray-400'}`}>\n          <span className=\"mr-2\">{completedSteps.includes('clarify') ? '✅' : '❓'}</span>\n          <span className=\"text-sm\">Questions</span>\n        </div>\n        <div className={`flex items-center ${currentStep === 'results' ? 'text-blue-600 font-semibold' : 'text-gray-400'}`}>\n          <span className=\"mr-2\">🎯</span>\n          <span className=\"text-sm\">Results</span>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (currentStep === 'results') {\n    if (isProcessing) {\n      return (\n        <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 p-4\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center py-16\">\n              <div className=\"animate-spin rounded-full h-20 w-20 border-b-4 border-blue-600 mx-auto mb-8\"></div>\n              <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">\n                🤖 Analyzing Your Perfect Match...\n              </h1>\n              <div className=\"space-y-3 text-gray-600\">\n                <p>📊 Processing your preference sliders...</p>\n                <p>⭐ Evaluating your feature selections...</p>\n                <p>💭 Understanding your personal story...</p>\n                <p>🎯 Finding your ideal insulin pump...</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (recommendation) {\n      console.log('🔍 DEBUG - Results page data:');\n      console.log('📊 sliderValues:', sliderValues);\n      console.log('⭐ selectedFeatures:', selectedFeatures);\n      console.log('💭 freeText:', freeText);\n      \n      return (\n        <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 p-4\">\n          <div className=\"max-w-4xl mx-auto\">\n            {/* Results Header */}\n            <div className=\"text-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-gray-800 mb-4\">\n                🎯 Your Perfect Pump Match\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-4\">\n                Based on your comprehensive assessment\n              </p>\n              <div className=\"flex justify-center space-x-6 text-sm text-gray-500\">\n                <span>📊 {Object.keys(sliderValues).length} preferences</span>\n                <span>⭐ {selectedFeatures.length} features</span>\n                <span>💭 {freeText.length > 0 ? 'Personal story included' : 'No story shared'}</span>\n              </div>\n              <div className=\"w-24 h-1 bg-green-500 mx-auto mt-4 rounded\"></div>\n            </div>\n\n            {/* Your Assessment Summary */}\n            <div className=\"bg-blue-50 rounded-2xl p-8 shadow-lg border border-blue-100 mb-8\">\n              <h2 className=\"text-3xl font-bold text-blue-800 mb-6 text-center\">\n                📊 Your Complete Assessment\n              </h2>\n              <p className=\"text-center text-blue-600 mb-8\">\n                Here's exactly what you told us about your preferences and needs:\n              </p>\n\n              {/* Slider Preferences */}\n              <div className=\"bg-white rounded-xl p-6 mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n                  <span className=\"text-2xl mr-3\">🎛️</span>\n                  Your Lifestyle Preferences (1-10 scale)\n                </h3>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                      <span className=\"flex items-center\">\n                        <span className=\"text-xl mr-2\">🏃</span>\n                        <span className=\"font-medium\">Activity Level:</span>\n                      </span>\n                      <span className=\"text-xl font-bold text-blue-600\">{sliderValues.activity}/10</span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                      <span className=\"flex items-center\">\n                        <span className=\"text-xl mr-2\">📱</span>\n                        <span className=\"font-medium\">Technology Love:</span>\n                      </span>\n                      <span className=\"text-xl font-bold text-blue-600\">{sliderValues.techComfort}/10</span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                      <span className=\"flex items-center\">\n                        <span className=\"text-xl mr-2\">🎛️</span>\n                        <span className=\"font-medium\">Advanced Features:</span>\n                      </span>\n                      <span className=\"text-xl font-bold text-blue-600\">{sliderValues.simplicity}/10</span>\n                    </div>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                      <span className=\"flex items-center\">\n                        <span className=\"text-xl mr-2\">🤫</span>\n                        <span className=\"font-medium\">Privacy Needs:</span>\n                      </span>\n                      <span className=\"text-xl font-bold text-blue-600\">{sliderValues.discreteness}/10</span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                      <span className=\"flex items-center\">\n                        <span className=\"text-xl mr-2\">⏰</span>\n                        <span className=\"font-medium\">Time for Care:</span>\n                      </span>\n                      <span className=\"text-xl font-bold text-blue-600\">{sliderValues.timeDedication}/10</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Selected Features */}\n              {selectedFeatures.length > 0 && (\n                <div className=\"bg-white rounded-xl p-6 mb-6\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n                    <span className=\"text-2xl mr-3\">⭐</span>\n                    Features You Selected ({selectedFeatures.length})\n                  </h3>\n                  <div className=\"grid md:grid-cols-2 gap-3\">\n                    {selectedFeatures.map((feature, index) => (\n                      <div key={index} className=\"flex items-center p-3 bg-green-50 rounded-lg border-l-4 border-green-400\">\n                        <span className=\"text-2xl mr-3\">{feature.emoji}</span>\n                        <div>\n                          <div className=\"font-semibold text-gray-800\">{feature.title}</div>\n                          <div className=\"text-sm text-gray-600\">{feature.description}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Personal Story */}\n              {freeText.trim() && (\n                <div className=\"bg-white rounded-xl p-6\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n                    <span className=\"text-2xl mr-3\">💭</span>\n                    Your Personal Story\n                  </h3>\n                  <div className=\"bg-purple-50 p-4 rounded-lg border-l-4 border-purple-400\">\n                    <p className=\"text-gray-700 leading-relaxed italic text-lg\">\n                      \"{freeText.trim()}\"\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {!selectedFeatures.length && !freeText.trim() && (\n                <div className=\"bg-white rounded-xl p-6\">\n                  <div className=\"text-center text-gray-500\">\n                    <p>Your recommendations are based solely on your lifestyle preferences.</p>\n                    <p className=\"text-sm mt-2\">You chose not to select specific features or share your personal story.</p>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* AI Recommendations */}\n            <div className=\"text-center mb-6\">\n              <h2 className=\"text-3xl font-bold text-gray-800\">\n                🤖 AI Analysis & Recommendations\n              </h2>\n              <p className=\"text-gray-600 mt-2\">\n                Based on your complete assessment above, here are your personalized pump recommendations:\n              </p>\n            </div>\n\n            {/* Top Pumps */}\n            <div className=\"space-y-6 mb-8\">\n              {recommendation.recommendation.topPumps.map((pump: any, index: number) => (\n                <div key={pump.pumpId} className=\"bg-white rounded-2xl p-8 shadow-lg border border-gray-100\">\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <div>\n                      <h2 className=\"text-2xl font-bold text-gray-800\">{pump.pumpName}</h2>\n                      <div className=\"text-lg text-gray-600\">Match Score: {pump.score}%</div>\n                    </div>\n                    <div className=\"text-4xl\">\n                      {index === 0 ? '🏆' : index === 1 ? '🥈' : '🥉'}\n                    </div>\n                  </div>\n\n                  <div className=\"grid md:grid-cols-2 gap-6\">\n                    <div>\n                      <h3 className=\"font-semibold text-gray-700 mb-3\">Why This Pump Matches You:</h3>\n                      <ul className=\"space-y-2\">\n                        {pump.matchFactors.map((factor: string, i: number) => (\n                          <li key={i} className=\"flex items-start\">\n                            <span className=\"text-green-500 mr-2\">✓</span>\n                            <span className=\"text-gray-600\">{factor}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    <div>\n                      <h3 className=\"font-semibold text-gray-700 mb-3\">Your Preferences Influence:</h3>\n                      <div className=\"space-y-1 text-sm\">\n                        {Object.entries(pump.sliderInfluence).map(([key, value]) => (\n                          <div key={key} className=\"flex justify-between\">\n                            <span className=\"capitalize text-gray-600\">{key}:</span>\n                            <span className=\"font-semibold\">{value}/10</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Insights */}\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">💡 Personalized Insights</h2>\n              <div className=\"space-y-3\">\n                {recommendation.recommendation.personalizedInsights.map((insight: string, index: number) => (\n                  <div key={index} className=\"flex items-start\">\n                    <span className=\"text-blue-500 mr-3 mt-1\">🔹</span>\n                    <p className=\"text-gray-700\">{insight}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Next Steps */}\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">🚀 Next Steps</h2>\n              <div className=\"space-y-3\">\n                {recommendation.recommendation.nextSteps.map((step: string, index: number) => (\n                  <div key={index} className=\"flex items-start\">\n                    <span className=\"bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm mr-3 mt-0.5\">\n                      {index + 1}\n                    </span>\n                    <p className=\"text-gray-700\">{step}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Actions */}\n            <div className=\"text-center space-x-4\">\n              <button\n                onClick={() => {\n                  setCurrentStep('sliders');\n                  setRecommendation(null);\n                }}\n                className=\"px-8 py-3 rounded-xl text-lg font-semibold bg-gray-200 text-gray-700 hover:bg-gray-300 transition-all\"\n              >\n                ↩️ Start Over\n              </button>\n              <button\n                onClick={() => window.print()}\n                className=\"px-8 py-3 rounded-xl text-lg font-semibold bg-green-600 text-white hover:bg-green-700 transition-all\"\n              >\n                🖨️ Print Results\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-gray-800 mb-4\">\n            🎯 Complete Pump Assessment\n          </h1>\n          <p className=\"text-xl text-gray-600\">\n            Comprehensive evaluation to find your perfect insulin pump\n          </p>\n          <div className=\"w-24 h-1 bg-blue-500 mx-auto mt-4 rounded\"></div>\n        </div>\n\n        {renderProgressBar()}\n\n        {/* Step 1: Sliders */}\n        {currentStep === 'sliders' && (\n          <div>\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-gray-800 mb-2\">\n                🎚️ Step 1: Your Preferences\n              </h2>\n              <p className=\"text-gray-600\">Tell us about your lifestyle and preferences</p>\n            </div>\n\n            <div className=\"space-y-8 mb-8\">\n              {SLIDERS.map((slider) => (\n                <div key={slider.id} className=\"bg-white rounded-2xl p-8 shadow-lg border border-gray-100\">\n                  <div className=\"flex items-center mb-6\">\n                    <span className=\"text-3xl mr-4\">{slider.emoji}</span>\n                    <h3 className=\"text-2xl font-semibold text-gray-800\">{slider.title}</h3>\n                  </div>\n\n                  <div className=\"grid md:grid-cols-3 gap-4 mb-8 text-sm\">\n                    <div className=\"bg-red-50 p-4 rounded-lg border-l-4 border-red-400\">\n                      <div className=\"font-semibold text-red-700 mb-2\">Low (1-3)</div>\n                      <div className=\"text-red-600\">{slider.examples.low}</div>\n                    </div>\n                    <div className=\"bg-yellow-50 p-4 rounded-lg border-l-4 border-yellow-400\">\n                      <div className=\"font-semibold text-yellow-700 mb-2\">Medium (4-7)</div>\n                      <div className=\"text-yellow-600\">{slider.examples.medium}</div>\n                    </div>\n                    <div className=\"bg-green-50 p-4 rounded-lg border-l-4 border-green-400\">\n                      <div className=\"font-semibold text-green-700 mb-2\">High (8-10)</div>\n                      <div className=\"text-green-600\">{slider.examples.high}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"relative\">\n                    <div className=\"flex justify-between text-sm text-gray-500 mb-2\">\n                      <span>1</span>\n                      <span className=\"font-semibold text-lg text-gray-800\">\n                        Your Rating: {sliderValues[slider.id]}\n                      </span>\n                      <span>10</span>\n                    </div>\n                    \n                    <input\n                      type=\"range\"\n                      min=\"1\"\n                      max=\"10\"\n                      value={sliderValues[slider.id]}\n                      onChange={(e) => handleSliderChange(slider.id, parseInt(e.target.value))}\n                      className=\"w-full h-3 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\n                      style={{\n                        background: `linear-gradient(to right, #ef4444 0%, #eab308 50%, #22c55e 100%)`\n                      }}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"text-center\">\n              <button\n                onClick={completeSliders}\n                className=\"px-12 py-4 rounded-2xl text-xl font-semibold bg-blue-600 text-white hover:bg-blue-700 hover:scale-105 transition-all transform shadow-lg\"\n              >\n                ⭐ Continue to Features\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Features */}\n        {currentStep === 'features' && (\n          <div>\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-gray-800 mb-2\">\n                ⭐ Step 2: Appealing Features\n              </h2>\n              <p className=\"text-gray-600\">Select features that appeal to you (without knowing which pump they're from)</p>\n            </div>\n\n            <div className=\"space-y-8 mb-8\">\n              {FEATURE_CATEGORIES.map(category => {\n                const categoryFeatures = PUMP_FEATURES.filter(f => f.category === category.id);\n                if (categoryFeatures.length === 0) return null;\n\n                return (\n                  <div key={category.id} className=\"bg-white rounded-2xl p-8 shadow-lg border border-gray-100\">\n                    <h3 className=\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\">\n                      <span className=\"text-3xl mr-3\">{category.emoji}</span>\n                      {category.name}\n                    </h3>\n                    \n                    <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {categoryFeatures.map(feature => {\n                        const isSelected = selectedFeatures.find(f => f.id === feature.id);\n                        \n                        return (\n                          <div\n                            key={feature.id}\n                            onClick={() => toggleFeature(feature)}\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all transform hover:scale-105 ${\n                              isSelected \n                                ? 'border-green-500 bg-green-50 shadow-lg' \n                                : 'border-gray-200 hover:border-blue-300 hover:bg-blue-50'\n                            }`}\n                          >\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <span className=\"text-2xl\">{feature.emoji}</span>\n                              <div className={`w-5 h-5 rounded-full border-2 ${\n                                isSelected ? 'bg-green-500 border-green-500' : 'border-gray-300'\n                              }`}>\n                                {isSelected && <div className=\"text-white text-xs text-center\">✓</div>}\n                              </div>\n                            </div>\n                            <h4 className=\"font-semibold text-gray-800 mb-2\">{feature.title}</h4>\n                            <p className=\"text-sm text-gray-600\">{feature.description}</p>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-500 mb-4\">\n                Selected {selectedFeatures.length} feature{selectedFeatures.length !== 1 ? 's' : ''}\n              </p>\n              <button\n                onClick={completeFeatures}\n                className=\"px-12 py-4 rounded-2xl text-xl font-semibold bg-purple-600 text-white hover:bg-purple-700 hover:scale-105 transition-all transform shadow-lg\"\n              >\n                💭 Share Your Story\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Free Text Story */}\n        {currentStep === 'story' && (\n          <div>\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-gray-800 mb-2\">\n                💭 Step 3: Your Story\n              </h2>\n              <p className=\"text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n                Tell us about your current situation, concerns, and excitement about getting a new pump\n              </p>\n            </div>\n\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8\">\n              <div className=\"mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n                  <span className=\"text-2xl mr-3\">🗣️</span>\n                  Share Your Experience\n                </h3>\n                <div className=\"bg-purple-50 p-6 rounded-lg border-l-4 border-purple-400\">\n                  <p className=\"text-gray-700 leading-relaxed mb-4\">\n                    <strong>Help us understand:</strong>\n                  </p>\n                  <ul className=\"space-y-2 text-gray-700\">\n                    <li>• What do you like or dislike about your current diabetes management?</li>\n                    <li>• What concerns or fears do you have about switching to a new pump?</li>\n                    <li>• What are you most excited about with a potential new pump?</li>\n                    <li>• Any specific challenges or goals you'd like to address?</li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"mb-6\">\n                <textarea\n                  value={freeText}\n                  onChange={handleTextChange}\n                  placeholder=\"Take your time and share whatever feels important to you. There are no right or wrong answers - we just want to understand your unique situation better...\"\n                  className=\"w-full h-64 p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent resize-none text-gray-700 leading-relaxed\"\n                  maxLength={2000}\n                />\n                \n                <div className=\"flex justify-between mt-2 text-sm\">\n                  <span className=\"text-gray-500\">\n                    {charCount === 0 ? 'Feel free to write as much or as little as you\\'d like' : 'Thank you for sharing your thoughts'}\n                  </span>\n                  <span className={`${charCount > 1800 ? 'text-orange-500' : 'text-gray-400'}`}>\n                    {charCount}/2000 characters\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"bg-green-50 p-4 rounded-lg border border-green-200 mb-6\">\n                <h4 className=\"text-sm font-semibold text-green-800 mb-2\">💡 Why this helps:</h4>\n                <div className=\"text-sm text-green-700 space-y-1\">\n                  <p>• More personalized pump recommendations</p>\n                  <p>• Better understanding of your specific needs and concerns</p>\n                  <p>• Tailored advice for your transition process</p>\n                </div>\n              </div>\n\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <button\n                  onClick={skipStory}\n                  className=\"px-8 py-3 rounded-xl text-lg font-semibold bg-gray-200 text-gray-700 hover:bg-gray-300 transition-all\"\n                >\n                  ⏭️ Skip Story\n                </button>\n                \n                <button\n                  onClick={completeStory}\n                  disabled={isProcessing}\n                  className={`px-8 py-3 rounded-xl text-lg font-semibold transition-all transform ${\n                    isProcessing\n                      ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                      : 'bg-green-600 text-white hover:bg-green-700 hover:scale-105 shadow-lg'\n                  }`}\n                >\n                  {isProcessing ? (\n                    <span className=\"flex items-center justify-center\">\n                      <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Processing...\n                    </span>\n                  ) : (\n                    '🎯 Get My Recommendations'\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 4: Clarifying Questions */}\n        {currentStep === 'clarify' && (\n          <div>\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-gray-800 mb-2\">\n                ❓ Step 4: A Few Quick Questions\n              </h2>\n              <p className=\"text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n                Based on your responses, we have a few clarifying questions to give you the best recommendations\n              </p>\n            </div>\n\n            <div className=\"bg-white rounded-2xl p-8 shadow-lg border border-gray-100 mb-8\">\n              <div className=\"mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n                  <span className=\"text-2xl mr-3\">🤔</span>\n                  AI-Generated Follow-up Questions\n                </h3>\n                <div className=\"bg-blue-50 p-6 rounded-lg border-l-4 border-blue-400\">\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    <strong>Our AI has analyzed your responses</strong> and identified these key areas where a bit more detail would help us provide the most accurate recommendations for you.\n                  </p>\n                </div>\n              </div>\n\n              {clarifyingQuestions.length > 0 ? (\n                <div className=\"space-y-6 mb-8\">\n                  {clarifyingQuestions.map((question, index) => (\n                    <div key={index} className=\"border border-gray-200 rounded-lg p-6\">\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-lg font-semibold text-gray-800 mb-2 flex items-center\">\n                          <span className=\"bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full mr-3\">\n                            Question {index + 1}\n                          </span>\n                        </h4>\n                        <p className=\"text-gray-700 leading-relaxed\">{question}</p>\n                      </div>\n                      <textarea\n                        value={clarifyingAnswers[index] || ''}\n                        onChange={(e) => {\n                          const newAnswers = [...clarifyingAnswers];\n                          newAnswers[index] = e.target.value;\n                          setClarifyingAnswers(newAnswers);\n                        }}\n                        placeholder=\"Please share your thoughts on this question...\"\n                        className=\"w-full h-24 p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-gray-700\"\n                        maxLength={500}\n                      />\n                      <div className=\"text-right mt-2\">\n                        <span className=\"text-xs text-gray-400\">\n                          {(clarifyingAnswers[index] || '').length}/500 characters\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-gray-500\">No clarifying questions needed. Proceeding to results...</div>\n                </div>\n              )}\n\n              <div className=\"bg-green-50 p-4 rounded-lg border border-green-200 mb-6\">\n                <h4 className=\"text-sm font-semibold text-green-800 mb-2\">💡 Why these questions matter:</h4>\n                <div className=\"text-sm text-green-700 space-y-1\">\n                  <p>• Help us understand nuances in your responses</p>\n                  <p>• Ensure recommendations match your specific situation</p>\n                  <p>• Provide more accurate and personalized advice</p>\n                </div>\n              </div>\n\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <button\n                  onClick={() => {\n                    // Skip clarifying questions and go to results\n                    navigate('/pumpdrive/results');\n                  }}\n                  className=\"px-8 py-3 rounded-xl text-lg font-semibold bg-gray-200 text-gray-700 hover:bg-gray-300 transition-all\"\n                >\n                  ⏭️ Skip Questions\n                </button>\n\n                <button\n                  onClick={completeClarifyingQuestions}\n                  disabled={isProcessing}\n                  className={`px-8 py-3 rounded-xl text-lg font-semibold transition-all transform ${\n                    isProcessing\n                      ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                      : 'bg-blue-600 text-white hover:bg-blue-700 hover:scale-105 shadow-lg'\n                  }`}\n                >\n                  {isProcessing ? (\n                    <span className=\"flex items-center justify-center\">\n                      <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Processing...\n                    </span>\n                  ) : (\n                    '🎯 Get My Final Recommendations'\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <style jsx>{`\n          .slider::-webkit-slider-thumb {\n            appearance: none;\n            height: 25px;\n            width: 25px;\n            border-radius: 50%;\n            background: #3b82f6;\n            cursor: pointer;\n            border: 2px solid white;\n            box-shadow: 0 2px 6px rgba(0,0,0,0.2);\n          }\n\n          .slider::-moz-range-thumb {\n            height: 25px;\n            width: 25px;\n            border-radius: 50%;\n            background: #3b82f6;\n            cursor: pointer;\n            border: 2px solid white;\n            box-shadow: 0 2px 6px rgba(0,0,0,0.2);\n          }\n        `}</style>\n      </div>\n    </div>\n  );\n};\n\nexport default PumpDriveUnified;"],"file":"assets/PumpDriveUnified-BNpgPK-B.js"}