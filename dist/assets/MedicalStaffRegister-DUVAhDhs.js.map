{"version":3,"file":"MedicalStaffRegister-DUVAhDhs.js","sources":["../../src/pages/MedicalStaffRegister.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface FormData {\n  email: string;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  role: 'doctor' | 'nurse' | 'staff' | 'medical_assistant' | 'admin';\n  practice: string;\n  specialty: string;\n}\n\nexport default function MedicalStaffRegister() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState<FormData>({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    firstName: '',\n    lastName: '',\n    role: 'doctor',\n    practice: '',\n    specialty: ''\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n\n  const validateForm = (): Record<string, string> => {\n    const newErrors: Record<string, string> = {};\n\n    // Email validation\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Password validation\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else {\n      if (formData.password.length < 8) {\n        newErrors.password = 'Password must be at least 8 characters long';\n      } else if (!/[A-Z]/.test(formData.password)) {\n        newErrors.password = 'Password must contain at least 1 uppercase letter';\n      } else if (!/[a-z]/.test(formData.password)) {\n        newErrors.password = 'Password must contain at least 1 lowercase letter';\n      } else if (!/[0-9]/.test(formData.password)) {\n        newErrors.password = 'Password must contain at least 1 number';\n      }\n    }\n\n    // Confirm password validation\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    // First name validation\n    if (!formData.firstName) {\n      newErrors.firstName = 'First name is required';\n    }\n\n    // Last name validation\n    if (!formData.lastName) {\n      newErrors.lastName = 'Last name is required';\n    }\n\n    return newErrors;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    setIsSubmitting(true);\n    setErrors({});\n\n    try {\n      const baseUrl = process.env.NODE_ENV === 'production'\n        ? (import.meta.env.VITE_MEDICAL_API_URL || 'https://api.tshla.ai')\n        : (import.meta.env.VITE_MEDICAL_API_URL || 'http://localhost:3003');\n\n      const response = await fetch(`${baseUrl}/api/medical/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          password: formData.password,\n          firstName: formData.firstName,\n          lastName: formData.lastName,\n          role: formData.role,\n          practice: formData.practice || undefined,\n          specialty: formData.specialty || undefined\n        }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok && result.success) {\n        setRegistrationSuccess(true);\n        // Clear form\n        setFormData({\n          email: '',\n          password: '',\n          confirmPassword: '',\n          firstName: '',\n          lastName: '',\n          role: 'doctor',\n          practice: '',\n          specialty: ''\n        });\n      } else {\n        setErrors({ general: result.error || 'Registration failed. Please try again.' });\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setErrors({\n        general: error instanceof Error ? error.message : 'Registration failed. Please try again.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: keyof FormData, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear specific field error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  if (registrationSuccess) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-blue-700 to-sky-600 flex items-center justify-center p-4\">\n        <div className=\"bg-white rounded-3xl shadow-2xl w-full max-w-md p-8 text-center\">\n          <div className=\"flex items-center justify-center w-16 h-16 bg-green-600 rounded-2xl mb-6 mx-auto\">\n            <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Registration Successful!</h1>\n          <p className=\"text-gray-600 mb-6\">\n            Your medical staff account has been created successfully. You can now login with your credentials.\n          </p>\n\n          <button\n            onClick={() => navigate('/login')}\n            className=\"w-full bg-blue-600 text-white rounded-xl py-3 font-semibold hover:bg-blue-700 transition-colors mb-4\"\n          >\n            Go to Login\n          </button>\n\n          <button\n            onClick={() => setRegistrationSuccess(false)}\n            className=\"text-blue-600 hover:underline text-sm\"\n          >\n            Register Another Account\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-blue-700 to-sky-600 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-3xl shadow-2xl w-full max-w-lg overflow-hidden\">\n        {/* Header */}\n        <div className=\"p-8 text-center\">\n          <div className=\"flex items-center justify-center w-16 h-16 bg-blue-600 rounded-2xl mb-6 mx-auto\">\n            <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\" />\n            </svg>\n          </div>\n\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Medical Staff Registration</h1>\n          <p className=\"text-gray-600\">Create your medical professional account</p>\n        </div>\n\n        {/* Registration Form */}\n        <div className=\"px-8 pb-8\">\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {/* General Error */}\n            {errors.general && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <p className=\"text-red-700 text-sm\">{errors.general}</p>\n              </div>\n            )}\n\n            {/* Name Fields */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  First Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.firstName}\n                  onChange={(e) => handleInputChange('firstName', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                    errors.firstName ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                  }`}\n                  placeholder=\"John\"\n                  disabled={isSubmitting}\n                />\n                {errors.firstName && <p className=\"text-red-500 text-xs mt-1\">{errors.firstName}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Last Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.lastName}\n                  onChange={(e) => handleInputChange('lastName', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                    errors.lastName ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Doe\"\n                  disabled={isSubmitting}\n                />\n                {errors.lastName && <p className=\"text-red-500 text-xs mt-1\">{errors.lastName}</p>}\n              </div>\n            </div>\n\n            {/* Email Field */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Email Address *\n              </label>\n              <input\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => handleInputChange('email', e.target.value)}\n                className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                  errors.email ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                }`}\n                placeholder=\"doctor@tshla.ai\"\n                autoComplete=\"email\"\n                disabled={isSubmitting}\n              />\n              {errors.email && <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>}\n            </div>\n\n            {/* Role Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Role *\n              </label>\n              <select\n                value={formData.role}\n                onChange={(e) => handleInputChange('role', e.target.value as FormData['role'])}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                disabled={isSubmitting}\n              >\n                <option value=\"doctor\">Doctor</option>\n                <option value=\"nurse\">Nurse</option>\n                <option value=\"staff\">Staff</option>\n                <option value=\"medical_assistant\">Medical Assistant</option>\n                <option value=\"admin\">Administrator</option>\n              </select>\n            </div>\n\n            {/* Practice and Specialty */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Practice\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.practice}\n                  onChange={(e) => handleInputChange('practice', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                  placeholder=\"TSHLA Medical\"\n                  disabled={isSubmitting}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Specialty\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specialty}\n                  onChange={(e) => handleInputChange('specialty', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                  placeholder=\"Endocrinology\"\n                  disabled={isSubmitting}\n                />\n              </div>\n            </div>\n\n            {/* Password Fields */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Password *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  value={formData.password}\n                  onChange={(e) => handleInputChange('password', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors pr-10 ${\n                    errors.password ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Enter secure password\"\n                  autoComplete=\"new-password\"\n                  disabled={isSubmitting}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                >\n                  {showPassword ? '👁️' : '👁️‍🗨️'}\n                </button>\n              </div>\n              {errors.password && <p className=\"text-red-500 text-xs mt-1\">{errors.password}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Confirm Password *\n              </label>\n              <input\n                type=\"password\"\n                value={formData.confirmPassword}\n                onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                  errors.confirmPassword ? 'border-red-300 bg-red-50' : 'border-gray-300'\n                }`}\n                placeholder=\"Confirm your password\"\n                autoComplete=\"new-password\"\n                disabled={isSubmitting}\n              />\n              {errors.confirmPassword && <p className=\"text-red-500 text-xs mt-1\">{errors.confirmPassword}</p>}\n            </div>\n\n            {/* Password Requirements */}\n            <div className=\"bg-gray-50 rounded-lg p-3\">\n              <p className=\"text-xs text-gray-600 font-medium mb-1\">Password requirements:</p>\n              <ul className=\"text-xs text-gray-500 space-y-0.5\">\n                <li>• At least 8 characters long</li>\n                <li>• Contains uppercase and lowercase letters</li>\n                <li>• Contains at least one number</li>\n              </ul>\n            </div>\n\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? 'Creating Account...' : 'Create Account'}\n            </button>\n          </form>\n\n          {/* Login Link */}\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-gray-600 text-sm\">\n              Already have an account?{' '}\n              <button\n                onClick={() => navigate('/login')}\n                className=\"text-blue-600 hover:underline font-medium\"\n              >\n                Sign In\n              </button>\n            </p>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"bg-gray-50 px-8 py-4 border-t border-gray-200\">\n          <div className=\"flex items-center justify-center text-xs text-gray-600\">\n            <div className=\"flex items-center\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n                />\n              </svg>\n              HIPAA Compliant & Secure\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["MedicalStaffRegister","navigate","useNavigate","formData","setFormData","useState","errors","setErrors","isSubmitting","setIsSubmitting","showPassword","setShowPassword","registrationSuccess","setRegistrationSuccess","validateForm","newErrors","handleSubmit","e","validationErrors","response","result","error","handleInputChange","field","value","prev","jsxs","jsx"],"mappings":"sDAcA,SAAwBA,GAAuB,CAC7C,MAAMC,EAAWC,EAAA,EACX,CAACC,EAAUC,CAAW,EAAIC,WAAmB,CACjD,MAAO,GACP,SAAU,GACV,gBAAiB,GACjB,UAAW,GACX,SAAU,GACV,KAAM,SACN,SAAU,GACV,UAAW,EAAA,CACZ,EAEK,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAiC,CAAA,CAAE,EACzD,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAS,EAAK,EAChD,CAACK,EAAcC,CAAe,EAAIN,EAAAA,SAAS,EAAK,EAChD,CAACO,EAAqBC,CAAsB,EAAIR,EAAAA,SAAS,EAAK,EAE9DS,EAAe,IAA8B,CACjD,MAAMC,EAAoC,CAAA,EAG1C,OAAKZ,EAAS,MAEF,6BAA6B,KAAKA,EAAS,KAAK,IAC1DY,EAAU,MAAQ,sCAFlBA,EAAU,MAAQ,oBAMfZ,EAAS,SAGRA,EAAS,SAAS,OAAS,EAC7BY,EAAU,SAAW,8CACX,QAAQ,KAAKZ,EAAS,QAAQ,EAE9B,QAAQ,KAAKA,EAAS,QAAQ,EAE9B,QAAQ,KAAKA,EAAS,QAAQ,IACxCY,EAAU,SAAW,2CAFrBA,EAAU,SAAW,oDAFrBA,EAAU,SAAW,oDALvBA,EAAU,SAAW,uBAclBZ,EAAS,gBAEHA,EAAS,WAAaA,EAAS,kBACxCY,EAAU,gBAAkB,0BAF5BA,EAAU,gBAAkB,+BAMzBZ,EAAS,YACZY,EAAU,UAAY,0BAInBZ,EAAS,WACZY,EAAU,SAAW,yBAGhBA,CACT,EAEMC,EAAe,MAAOC,GAAuB,CACjDA,EAAE,eAAA,EAEF,MAAMC,EAAmBJ,EAAA,EACzB,GAAI,OAAO,KAAKI,CAAgB,EAAE,OAAS,EAAG,CAC5CX,EAAUW,CAAgB,EAC1B,MACF,CAEAT,EAAgB,EAAI,EACpBF,EAAU,CAAA,CAAE,EAEZ,GAAI,CAKF,MAAMY,EAAW,MAAM,MAAM,wGAAmC,CAC9D,OAAQ,OACR,QAAS,CACP,eAAgB,kBAAA,EAElB,KAAM,KAAK,UAAU,CACnB,MAAOhB,EAAS,MAChB,SAAUA,EAAS,SACnB,UAAWA,EAAS,UACpB,SAAUA,EAAS,SACnB,KAAMA,EAAS,KACf,SAAUA,EAAS,UAAY,OAC/B,UAAWA,EAAS,WAAa,MAAA,CAClC,CAAA,CACF,EAEKiB,EAAS,MAAMD,EAAS,KAAA,EAE1BA,EAAS,IAAMC,EAAO,SACxBP,EAAuB,EAAI,EAE3BT,EAAY,CACV,MAAO,GACP,SAAU,GACV,gBAAiB,GACjB,UAAW,GACX,SAAU,GACV,KAAM,SACN,SAAU,GACV,UAAW,EAAA,CACZ,GAEDG,EAAU,CAAE,QAASa,EAAO,OAAS,yCAA0C,CAEnF,OAASC,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,EAC3Cd,EAAU,CACR,QAASc,aAAiB,MAAQA,EAAM,QAAU,wCAAA,CACnD,CACH,QAAA,CACEZ,EAAgB,EAAK,CACvB,CACF,EAEMa,EAAoB,CAACC,EAAuBC,IAAkB,CAClEpB,EAAYqB,IAAS,CACnB,GAAGA,EACH,CAACF,CAAK,EAAGC,CAAA,EACT,EAGElB,EAAOiB,CAAK,GACdhB,EAAUkB,GAAQ,CAChB,MAAMV,EAAY,CAAE,GAAGU,CAAA,EACvB,cAAOV,EAAUQ,CAAK,EACfR,CACT,CAAC,CAEL,EAEA,OAAIH,QAEC,MAAA,CAAI,UAAU,4GACb,SAAAc,EAAAA,KAAC,MAAA,CAAI,UAAU,kEACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,mFACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,qBAAqB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAC5E,SAAAA,EAAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,gBAAA,CAAiB,CAAA,CACxF,EACF,QAEC,KAAA,CAAG,UAAU,wCAAwC,SAAA,2BAAwB,QAC7E,IAAA,CAAE,UAAU,qBAAqB,SAAA,qGAElC,EAEAA,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM1B,EAAS,QAAQ,EAChC,UAAU,uGACX,SAAA,aAAA,CAAA,EAID0B,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMd,EAAuB,EAAK,EAC3C,UAAU,wCACX,SAAA,0BAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,QAKD,MAAA,CAAI,UAAU,4GACb,SAAAa,EAAAA,KAAC,MAAA,CAAI,UAAU,kEAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,kFACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,qBAAqB,KAAK,OAAO,OAAO,eAAe,QAAQ,YAC5E,SAAAA,EAAAA,IAAC,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,sFAAA,CAAuF,CAAA,CAC9J,EACF,QAEC,KAAA,CAAG,UAAU,wCAAwC,SAAA,6BAA0B,QAC/E,IAAA,CAAE,UAAU,gBAAgB,SAAA,2CAAwC,CAAA,EACvE,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,QAAC,OAAA,CAAK,SAAUV,EAAc,UAAU,YAErC,SAAA,CAAAV,EAAO,SACNqB,MAAC,MAAA,CAAI,UAAU,iDACb,SAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,uBAAwB,SAAArB,EAAO,OAAA,CAAQ,EACtD,EAIFoB,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,eAEhE,EACAC,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOxB,EAAS,UAChB,SAAWc,GAAMK,EAAkB,YAAaL,EAAE,OAAO,KAAK,EAC9D,UAAW,kHACTX,EAAO,UAAY,2BAA6B,iBAClD,GACA,YAAY,OACZ,SAAUE,CAAA,CAAA,EAEXF,EAAO,WAAaqB,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,SAAA,CAAU,CAAA,EAClF,SAEC,MAAA,CACC,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,cAEhE,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOxB,EAAS,SAChB,SAAWc,GAAMK,EAAkB,WAAYL,EAAE,OAAO,KAAK,EAC7D,UAAW,kHACTX,EAAO,SAAW,2BAA6B,iBACjD,GACA,YAAY,MACZ,SAAUE,CAAA,CAAA,EAEXF,EAAO,UAAYqB,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,QAAA,CAAS,CAAA,EAChF,CAAA,EACF,SAGC,MAAA,CACC,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,kBAEhE,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,MAAOxB,EAAS,MAChB,SAAWc,GAAMK,EAAkB,QAASL,EAAE,OAAO,KAAK,EAC1D,UAAW,kHACTX,EAAO,MAAQ,2BAA6B,iBAC9C,GACA,YAAY,kBACZ,aAAa,QACb,SAAUE,CAAA,CAAA,EAEXF,EAAO,OAASqB,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,KAAA,CAAM,CAAA,EAC1E,SAGC,MAAA,CACC,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,SAEhE,EACAD,EAAAA,KAAC,SAAA,CACC,MAAOvB,EAAS,KAChB,SAAWc,GAAMK,EAAkB,OAAQL,EAAE,OAAO,KAAyB,EAC7E,UAAU,iIACV,SAAUT,EAEV,SAAA,OAAC,SAAA,CAAO,MAAM,SAAS,SAAA,SAAM,QAC5B,SAAA,CAAO,MAAM,QAAQ,SAAA,QAAK,QAC1B,SAAA,CAAO,MAAM,QAAQ,SAAA,QAAK,QAC1B,SAAA,CAAO,MAAM,oBAAoB,SAAA,oBAAiB,QAClD,SAAA,CAAO,MAAM,QAAQ,SAAA,gBAAa,CAAA,CAAA,CAAA,CACrC,EACF,EAGAkB,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,WAEhE,EACAC,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOxB,EAAS,SAChB,SAAWc,GAAMK,EAAkB,WAAYL,EAAE,OAAO,KAAK,EAC7D,UAAU,iIACV,YAAY,gBACZ,SAAUT,CAAA,CAAA,CACZ,EACF,SAEC,MAAA,CACC,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,YAEhE,EACAmB,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOxB,EAAS,UAChB,SAAWc,GAAMK,EAAkB,YAAaL,EAAE,OAAO,KAAK,EAC9D,UAAU,iIACV,YAAY,gBACZ,SAAUT,CAAA,CAAA,CACZ,EACF,CAAA,EACF,SAGC,MAAA,CACC,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,aAEhE,EACAkB,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAMjB,EAAe,OAAS,WAC9B,MAAOP,EAAS,SAChB,SAAWc,GAAMK,EAAkB,WAAYL,EAAE,OAAO,KAAK,EAC7D,UAAW,wHACTX,EAAO,SAAW,2BAA6B,iBACjD,GACA,YAAY,wBACZ,aAAa,eACb,SAAUE,CAAA,CAAA,EAEZmB,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMhB,EAAgB,CAACD,CAAY,EAC5C,UAAU,wFAET,WAAe,MAAQ,SAAA,CAAA,CAC1B,EACF,EACCJ,EAAO,UAAYqB,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,QAAA,CAAS,CAAA,EAChF,SAEC,MAAA,CACC,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,qBAEhE,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOxB,EAAS,gBAChB,SAAWc,GAAMK,EAAkB,kBAAmBL,EAAE,OAAO,KAAK,EACpE,UAAW,kHACTX,EAAO,gBAAkB,2BAA6B,iBACxD,GACA,YAAY,wBACZ,aAAa,eACb,SAAUE,CAAA,CAAA,EAEXF,EAAO,iBAAmBqB,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAO,eAAA,CAAgB,CAAA,EAC9F,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,OAAC,IAAA,CAAE,UAAU,yCAAyC,SAAA,yBAAsB,EAC5EA,EAAAA,KAAC,KAAA,CAAG,UAAU,oCACZ,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAA,+BAA4B,EAChCA,EAAAA,IAAC,MAAG,SAAA,6CAA0C,EAC9CA,EAAAA,IAAC,MAAG,SAAA,iCAA8B,CAAA,EACpC,CAAA,EACF,EAGAA,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAUnB,EACV,UAAU,uJAET,WAAe,sBAAwB,gBAAA,CAAA,CAC1C,EACF,QAGC,MAAA,CAAI,UAAU,mBACb,SAAAkB,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,2BACV,IACzBC,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM1B,EAAS,QAAQ,EAChC,UAAU,4CACX,SAAA,SAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,CAAA,EACF,QAGC,MAAA,CAAI,UAAU,gDACb,SAAA0B,EAAAA,IAAC,MAAA,CAAI,UAAU,yDACb,SAAAD,OAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,eAAe,KAAK,OAAO,OAAO,eAAe,QAAQ,YACtE,SAAAA,EAAAA,IAAC,OAAA,CACC,cAAc,QACd,eAAe,QACf,YAAa,EACb,EAAE,gMAAA,CAAA,EAEN,EAAM,0BAAA,CAAA,CAER,CAAA,CACF,EACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ"}