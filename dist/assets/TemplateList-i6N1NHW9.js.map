{"version":3,"file":"TemplateList-i6N1NHW9.js","sources":["../../src/pages/TemplateList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowLeft, FileText, Star, Clock, Plus, Edit2, Copy, Trash2 } from 'lucide-react';\nimport { doctorProfileService, type DoctorTemplate } from '../services/doctorProfile.service';\nimport { unifiedAuthService } from '../services/unifiedAuth.service';\nimport { getDefaultTemplatesForDoctor } from '../data/standardTemplates';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\nexport default function TemplateList() {\n  const navigate = useNavigate();\n  const [templates, setTemplates] = useState<DoctorTemplate[]>([]);\n  const [loading, setLoading] = useState(true);\n  const currentUser = unifiedAuthService.getCurrentUser();\n  const currentDoctor = currentUser?.name || 'Dr. Smith';\n\n  useEffect(() => {\n    loadTemplates();\n  }, []);\n\n  const loadTemplates = async () => {\n    if (!currentDoctor) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      doctorProfileService.initialize(currentDoctor.id);\n      const allTemplates = await doctorProfileService.getTemplates();\n\n      // If no templates exist, create default ones\n      if (allTemplates.length === 0) {\n        logDebug('TemplateList', 'Debug message', {});\n        const defaults = getDefaultTemplatesForDoctor(currentDoctor.id);\n\n        // Save each default template\n        for (const template of defaults) {\n          await doctorProfileService.createTemplate(template, currentDoctor.id);\n        }\n\n        // Reload templates\n        const updatedTemplates = await doctorProfileService.getTemplates();\n        setTemplates(updatedTemplates);\n      } else {\n        setTemplates(allTemplates);\n      }\n    } catch (error) {\n      logError('TemplateList', 'Error message', {});\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteTemplate = async (templateId: string) => {\n    if (!confirm('Are you sure you want to delete this template?')) return;\n\n    try {\n      await doctorProfileService.deleteTemplate(templateId, currentDoctor?.id);\n      await loadTemplates();\n    } catch (error) {\n      logError('TemplateList', 'Error message', {});\n    }\n  };\n\n  const duplicateTemplate = async (template: DoctorTemplate) => {\n    const newName = prompt('Enter name for the duplicate:', `${template.name} (Copy)`);\n    if (!newName) return;\n\n    try {\n      await doctorProfileService.duplicateTemplate(template.id, newName, currentDoctor?.id);\n      await loadTemplates();\n    } catch (error) {\n      logError('TemplateList', 'Error message', {});\n    }\n  };\n\n  if (!currentDoctor) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600\">Please log in to view templates</p>\n          <button\n            onClick={() => navigate('/login')}\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            Go to Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading templates...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <button\n                onClick={() => navigate(-1)}\n                className=\"mr-4 p-2 hover:bg-gray-100 rounded-lg\"\n              >\n                <ArrowLeft className=\"h-5 w-5\" />\n              </button>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Template Library</h1>\n            </div>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => navigate('/doctor-templates')}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n              >\n                <Plus className=\"h-4 w-4\" />\n                Create Template\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Template Stats */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n          <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Templates</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{templates.length}</p>\n              </div>\n              <FileText className=\"h-8 w-8 text-blue-500\" />\n            </div>\n          </div>\n          <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Standard Templates</p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {\n                    templates.filter(\n                      t =>\n                        t.name.includes('SOAP') ||\n                        t.name.includes('Diabetes') ||\n                        t.name.includes('Progress') ||\n                        t.name.includes('Telehealth') ||\n                        t.name.includes('New Patient')\n                    ).length\n                  }\n                </p>\n              </div>\n              <Star className=\"h-8 w-8 text-yellow-500\" />\n            </div>\n          </div>\n          <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Custom Templates</p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {\n                    templates.filter(\n                      t =>\n                        !t.name.includes('SOAP') &&\n                        !t.name.includes('Diabetes') &&\n                        !t.name.includes('Progress') &&\n                        !t.name.includes('Telehealth') &&\n                        !t.name.includes('New Patient')\n                    ).length\n                  }\n                </p>\n              </div>\n              <Edit2 className=\"h-8 w-8 text-green-500\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Template List */}\n        <div className=\"bg-white rounded-lg shadow-sm\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">All Templates</h2>\n          </div>\n          <div className=\"divide-y divide-gray-200\">\n            {templates.length === 0 ? (\n              <div className=\"px-6 py-12 text-center\">\n                <FileText className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <p className=\"text-gray-600 mb-4\">No templates found</p>\n                <button\n                  onClick={async () => {\n                    if (currentDoctor) {\n                      const defaults = getDefaultTemplatesForDoctor(currentDoctor.id);\n                      for (const template of defaults) {\n                        await doctorProfileService.createTemplate(template, currentDoctor.id);\n                      }\n                      await loadTemplates();\n                    }\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                >\n                  Load Standard Templates\n                </button>\n              </div>\n            ) : (\n              templates.map(template => (\n                <div key={template.id} className=\"px-6 py-4 hover:bg-gray-50\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2\">\n                        <h3 className=\"text-lg font-medium text-gray-900\">{template.name}</h3>\n                        {template.isDefault && (\n                          <span className=\"px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded\">\n                            Default\n                          </span>\n                        )}\n                      </div>\n                      {template.description && (\n                        <p className=\"mt-1 text-sm text-gray-600\">{template.description}</p>\n                      )}\n                      <div className=\"mt-2 flex items-center gap-4 text-xs text-gray-500\">\n                        <span className=\"flex items-center gap-1\">\n                          <FileText className=\"h-3 w-3\" />\n                          {template.visitType || 'General'}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Clock className=\"h-3 w-3\" />\n                          {template.usageCount || 0} uses\n                        </span>\n                        <span>{Object.keys(template.sections || {}).length} sections</span>\n                      </div>\n\n                      {/* Section Preview */}\n                      <div className=\"mt-3 p-3 bg-gray-50 rounded-lg\">\n                        <p className=\"text-xs font-medium text-gray-700 mb-2\">Sections:</p>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {Object.entries(template.sections || {})\n                            .slice(0, 5)\n                            .map(([key, section]) => (\n                              <span\n                                key={key}\n                                className=\"px-2 py-1 text-xs bg-white rounded border border-gray-200\"\n                              >\n                                {section.title}\n                              </span>\n                            ))}\n                          {Object.keys(template.sections || {}).length > 5 && (\n                            <span className=\"px-2 py-1 text-xs text-gray-500\">\n                              +{Object.keys(template.sections).length - 5} more\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center gap-2 ml-4\">\n                      <button\n                        onClick={() => navigate(`/doctor-templates?edit=${template.id}`)}\n                        className=\"p-2 hover:bg-gray-100 rounded-lg\"\n                        title=\"Edit template\"\n                      >\n                        <Edit2 className=\"h-4 w-4 text-gray-600\" />\n                      </button>\n                      <button\n                        onClick={() => duplicateTemplate(template)}\n                        className=\"p-2 hover:bg-gray-100 rounded-lg\"\n                        title=\"Duplicate template\"\n                      >\n                        <Copy className=\"h-4 w-4 text-gray-600\" />\n                      </button>\n                      <button\n                        onClick={() => deleteTemplate(template.id)}\n                        className=\"p-2 hover:bg-gray-100 rounded-lg\"\n                        title=\"Delete template\"\n                      >\n                        <Trash2 className=\"h-4 w-4 text-red-600\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["TemplateList","navigate","useNavigate","templates","setTemplates","useState","loading","setLoading","currentDoctor","unifiedAuthService","useEffect","loadTemplates","doctorProfileService","allTemplates","logDebug","defaults","getDefaultTemplatesForDoctor","template","updatedTemplates","logError","deleteTemplate","templateId","duplicateTemplate","newName","jsxs","jsx","ArrowLeft","Plus","FileText","t","Star","Edit2","Clock","key","section","Copy","Trash2"],"mappings":"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"}