import{b as h}from"./index-CFDQeSWK.js";class y{STORAGE_PREFIX="weightloss_";currentProfile=null;createProfile(e){const t={patientId:e,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),demographics:{age:0,sex:"female",height:0,startingWeight:0,preferredUnits:{weight:"kg",height:"cm"}},medical:{diagnoses:[],currentMedications:[],labResults:{},medicalHistory:{}},dietary:{dietPattern:"omnivore",foodsToAvoid:{allergies:[],intolerances:[],preferences:[],religious:[],medical:[]},staples:{breakfast:[],lunch:[],dinner:[],snacks:[]},cuisinePreferences:[]},lifestyle:{schedule:{wakeTime:"07:00",sleepTime:"23:00",workShift:"day",mealTimes:{}},activity:{baseline:"sedentary",exerciseHabits:{frequency:"none",types:[],gymAccess:!1,homeEquipment:[]}},cooking:{homeVsRestaurant:50,skillLevel:"beginner",timeAvailable:"moderate",budget:"moderate"},travel:{frequency:"occasional",types:"domestic"}},targets:{protein:{target:80,calculation:"per_kg",perKg:1.2},steps:{minimum:5e3,target:8e3},sleep:{minimumHours:6,targetHours:8},hydration:{target:2e3},redFlags:{dizziness:!0,vomitingDuration:24,severNausea:!0,chestPain:!0,severeWeakness:!0,customRules:[]}},preferences:{communication:{bestTimes:["08:00","12:00","18:00"],quietHours:{start:"22:00",end:"07:00"},frequency:"daily",channels:["app","push"]},tone:"coach",language:"en",consent:{dataSharing:!1,anonymizedAnalytics:!0,coachingBoundaries:[]}},onboardingComplete:!1};return this.saveProfile(t),this.currentProfile=t,t}loadProfile(e){const t=localStorage.getItem(`${this.STORAGE_PREFIX}profile_${e}`);if(t)try{return this.currentProfile=JSON.parse(t),this.currentProfile}catch{h("App","Error message",{})}return null}saveProfile(e){e.updatedAt=new Date().toISOString(),localStorage.setItem(`${this.STORAGE_PREFIX}profile_${e.patientId}`,JSON.stringify(e)),this.currentProfile=e}updateProfileSection(e,t,a){const s=this.loadProfile(e);return s?(s[t]={...s[t],...a},this.saveProfile(s),s):null}completeOnboarding(e){const t=this.loadProfile(e);t&&(t.onboardingComplete=!0,this.saveProfile(t))}saveDailyCheckin(e){const t=`${this.STORAGE_PREFIX}daily_${e.patientId}_${e.date}`;localStorage.setItem(t,JSON.stringify(e));const a=`${this.STORAGE_PREFIX}today_${e.patientId}`;localStorage.setItem(a,e.date)}getDailyCheckins(e,t,a){const s=[],i=new Date(t),o=new Date(a);for(let r=new Date(i);r<=o;r.setDate(r.getDate()+1)){const n=r.toISOString().split("T")[0],l=`${this.STORAGE_PREFIX}daily_${e}_${n}`,c=localStorage.getItem(l);if(c)try{s.push(JSON.parse(c))}catch{h("App","Error message",{})}}return s}isTodayCheckinComplete(e){const t=new Date().toISOString().split("T")[0],a=`${this.STORAGE_PREFIX}daily_${e}_${t}`;return localStorage.getItem(a)!==null}saveWeeklyCheckin(e){const t=`${this.STORAGE_PREFIX}weekly_${e.patientId}_${e.weekStarting}`;localStorage.setItem(t,JSON.stringify(e))}getPatientMetadata(e){const t=`${this.STORAGE_PREFIX}metadata_${e}`,a=localStorage.getItem(t);if(a)try{return JSON.parse(a)}catch{h("App","Error message",{})}return{cohorts:[],engagementStats:{replyRate:0,checkinStreak:0,lastActive:new Date().toISOString(),nudgesCompleted:0,dropoffs:0},progressMarkers:{week4:0,week8:0,week12:0,bestWeek:0},interventions:[],escalations:[]}}updateEngagementStats(e,t){const a=this.getPatientMetadata(e);a.engagementStats={...a.engagementStats,...t,lastActive:new Date().toISOString()};const s=`${this.STORAGE_PREFIX}metadata_${e}`;localStorage.setItem(s,JSON.stringify(a))}calculateProgress(e){const t=this.loadProfile(e);if(!t)return{totalWeightLoss:0,percentageLoss:0,averageWeeklyLoss:0,currentStreak:0,daysOnProgram:0};const a=new Date(t.createdAt).toISOString().split("T")[0],s=new Date().toISOString().split("T")[0],i=this.getDailyCheckins(e,a,s),o=i.length>0&&i[i.length-1].weight||t.demographics.startingWeight,r=t.demographics.startingWeight-o,n=r/t.demographics.startingWeight*100,l=Math.floor((new Date().getTime()-new Date(t.createdAt).getTime())/(1e3*60*60*24)),c=Math.max(1,Math.floor(l/7)),u=r/c;let m=0;const S=new Date;for(let g=0;g<30;g++){const d=new Date(S);d.setDate(d.getDate()-g);const f=d.toISOString().split("T")[0];if(i.find(p=>p.date===f))m++;else if(g>0)break}return{totalWeightLoss:r,percentageLoss:n,averageWeeklyLoss:u,currentStreak:m,daysOnProgram:l}}detectStall(e){const t=this.getDailyCheckins(e,new Date(Date.now()-12096e5).toISOString().split("T")[0],new Date().toISOString().split("T")[0]);if(t.length<7)return{isStalled:!1,daysStalled:0};const a=t.filter(r=>r.weight).map(r=>r.weight);if(a.length<7)return{isStalled:!1,daysStalled:0};const s=a.slice(-7),i=s.reduce((r,n)=>r+n,0)/s.length;return Math.max(...s.map(r=>Math.abs(r-i)))<.5?{isStalled:!0,daysStalled:7,suggestedIntervention:{type:"protein_reset",duration:5,plan:{daily:[],goals:["Increase protein to 1.5g/kg","Reduce carbs by 30%","Maintain activity"],tracking:["protein","weight","hunger"]},expectedOutcome:"Break through plateau by resetting metabolism"}}:{isStalled:!1,daysStalled:0}}getCurrentProfile(){return this.currentProfile}}const w=new y;export{w};
//# sourceMappingURL=weightLossProfile.service-DOqGLedQ.js.map
