{"version":3,"file":"QuickNoteModern-Ck6IyiYH.js","sources":["../../node_modules/lucide-react/dist/esm/icons/brain.js","../../node_modules/lucide-react/dist/esm/icons/heart.js","../../node_modules/lucide-react/dist/esm/icons/mic.js","../../node_modules/lucide-react/dist/esm/icons/sparkles.js","../../node_modules/lucide-react/dist/esm/icons/square.js","../../node_modules/lucide-react/dist/esm/icons/zap.js","../../src/pages/QuickNoteModern.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 18V5\", key: \"adv99a\" }],\n  [\"path\", { d: \"M15 13a4.17 4.17 0 0 1-3-4 4.17 4.17 0 0 1-3 4\", key: \"1e3is1\" }],\n  [\"path\", { d: \"M17.598 6.5A3 3 0 1 0 12 5a3 3 0 1 0-5.598 1.5\", key: \"1gqd8o\" }],\n  [\"path\", { d: \"M17.997 5.125a4 4 0 0 1 2.526 5.77\", key: \"iwvgf7\" }],\n  [\"path\", { d: \"M18 18a4 4 0 0 0 2-7.464\", key: \"efp6ie\" }],\n  [\"path\", { d: \"M19.967 17.483A4 4 0 1 1 12 18a4 4 0 1 1-7.967-.517\", key: \"1gq6am\" }],\n  [\"path\", { d: \"M6 18a4 4 0 0 1-2-7.464\", key: \"k1g0md\" }],\n  [\"path\", { d: \"M6.003 5.125a4 4 0 0 0-2.526 5.77\", key: \"q97ue3\" }]\n];\nconst Brain = createLucideIcon(\"brain\", __iconNode);\n\nexport { __iconNode, Brain as default };\n//# sourceMappingURL=brain.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M2 9.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5l-5.492 5.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5\",\n      key: \"mvr1a0\"\n    }\n  ]\n];\nconst Heart = createLucideIcon(\"heart\", __iconNode);\n\nexport { __iconNode, Heart as default };\n//# sourceMappingURL=heart.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 19v3\", key: \"npa21l\" }],\n  [\"path\", { d: \"M19 10v2a7 7 0 0 1-14 0v-2\", key: \"1vc78b\" }],\n  [\"rect\", { x: \"9\", y: \"2\", width: \"6\", height: \"13\", rx: \"3\", key: \"s6n7sd\" }]\n];\nconst Mic = createLucideIcon(\"mic\", __iconNode);\n\nexport { __iconNode, Mic as default };\n//# sourceMappingURL=mic.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M11.017 2.814a1 1 0 0 1 1.966 0l1.051 5.558a2 2 0 0 0 1.594 1.594l5.558 1.051a1 1 0 0 1 0 1.966l-5.558 1.051a2 2 0 0 0-1.594 1.594l-1.051 5.558a1 1 0 0 1-1.966 0l-1.051-5.558a2 2 0 0 0-1.594-1.594l-5.558-1.051a1 1 0 0 1 0-1.966l5.558-1.051a2 2 0 0 0 1.594-1.594z\",\n      key: \"1s2grr\"\n    }\n  ],\n  [\"path\", { d: \"M20 2v4\", key: \"1rf3ol\" }],\n  [\"path\", { d: \"M22 4h-4\", key: \"gwowj6\" }],\n  [\"circle\", { cx: \"4\", cy: \"20\", r: \"2\", key: \"6kqj1y\" }]\n];\nconst Sparkles = createLucideIcon(\"sparkles\", __iconNode);\n\nexport { __iconNode, Sparkles as default };\n//# sourceMappingURL=sparkles.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", key: \"afitv7\" }]\n];\nconst Square = createLucideIcon(\"square\", __iconNode);\n\nexport { __iconNode, Square as default };\n//# sourceMappingURL=square.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z\",\n      key: \"1xq2db\"\n    }\n  ]\n];\nconst Zap = createLucideIcon(\"zap\", __iconNode);\n\nexport { __iconNode, Zap as default };\n//# sourceMappingURL=zap.js.map\n","import { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// Azure services removed - AI and speech services no longer available\nimport { medicalCorrections } from '../services/medicalCorrections.service';\nimport { doctorProfileService, type DoctorTemplate } from '../services/doctorProfile.service';\nimport { unifiedAuthService } from '../services/unifiedAuth.service';\nimport { \n  Mic, \n  MicOff, \n  Brain, \n  Sparkles, \n  User, \n  Calendar, \n  Mail, \n  FileText, \n  Copy, \n  Download,\n  ArrowLeft,\n  Play,\n  Square,\n  Zap,\n  Heart,\n  Star,\n  ChevronDown\n} from 'lucide-react';\nimport '../styles/modernUI.css';\nimport '../styles/quicknote-calm.css';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\ninterface PatientDetails {\n  name: string;\n  mrn: string;\n  dob: string;\n  email: string;\n  visitDate: string;\n}\n\nexport default function QuickNoteModern() {\n  const navigate = useNavigate();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [interimText, setInterimText] = useState('');\n  const [processedNote, setProcessedNote] = useState('');\n  const [editableNote, setEditableNote] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [showProcessed, setShowProcessed] = useState(false);\n  const [isEditingNote, setIsEditingNote] = useState(false);\n  const [recordingError, setRecordingError] = useState<string>('');\n  const [recordingMode, setRecordingMode] = useState<'dictation' | 'conversation'>('dictation');\n  const [selectedTemplate, setSelectedTemplate] = useState<DoctorTemplate | null>(null);\n  const [templates, setTemplates] = useState<DoctorTemplate[]>([]);\n  const [showTemplateSelector, setShowTemplateSelector] = useState(false);\n  const [currentUser, setCurrentUser] = useState<any>(null);\n\n  const [patientDetails, setPatientDetails] = useState<PatientDetails>({\n    name: '',\n    mrn: '',\n    dob: '',\n    email: '',\n    visitDate: new Date().toLocaleDateString()\n  });\n\n  const [wordCount, setWordCount] = useState(0);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const recordingIntervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Load user and templates\n  useEffect(() => {\n    const user = unifiedAuthService.getCurrentUser();\n    setCurrentUser(user);\n    loadTemplates();\n  }, []);\n\n  // Update word count\n  useEffect(() => {\n    const words = transcript.trim().split(/\\s+/).filter(word => word.length > 0);\n    setWordCount(words.length);\n  }, [transcript]);\n\n  // Recording duration timer\n  useEffect(() => {\n    if (isRecording) {\n      setRecordingDuration(0);\n      recordingIntervalRef.current = setInterval(() => {\n        setRecordingDuration(prev => prev + 1);\n      }, 1000);\n    } else {\n      if (recordingIntervalRef.current) {\n        clearInterval(recordingIntervalRef.current);\n      }\n    }\n\n    return () => {\n      if (recordingIntervalRef.current) {\n        clearInterval(recordingIntervalRef.current);\n      }\n    };\n  }, [isRecording]);\n\n  const loadTemplates = async () => {\n    try {\n      const currentUser = unifiedAuthService.getCurrentUser();\n      const doctorId = currentUser?.id || currentUser?.email || 'doctor-default-001';\n      \n      doctorProfileService.initialize(doctorId);\n      const allTemplates = await doctorProfileService.getTemplates(doctorId);\n      setTemplates(allTemplates);\n\n      const defaultTemplate = await doctorProfileService.getDefaultTemplate(doctorId);\n      if (defaultTemplate) {\n        setSelectedTemplate(defaultTemplate);\n      }\n    } catch (error) {\n      logError('QuickNoteModern', 'Error message', {});\n    }\n  };\n\n  const formatDuration = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const startRecording = async () => {\n    if (isRecording) return;\n    \n    try {\n      logDebug('QuickNoteModern', 'Debug message', {});\n      logDebug('QuickNoteModern', 'Debug message', {}); \n      \n      const transcriptionStarted = await azureSpeechTranscription.startRecording(\n        (text, isFinal) => {\n          const corrected = medicalCorrections.correctTranscription(text);\n          \n          if (!isFinal) {\n            setInterimText(corrected);\n          } else {\n            setTranscript(prev => {\n              const updated = prev + (prev ? ' ' : '') + corrected;\n              return updated;\n            });\n            setInterimText('');\n          }\n        },\n        (error) => {\n          logError('QuickNoteModern', 'Error message', {});\n          setRecordingError(`Error: ${error}`);\n          setIsRecording(false);\n        }\n      );\n      \n      if (transcriptionStarted) {\n        setIsRecording(true);\n        setRecordingError('');\n      } else {\n        setRecordingError('Failed to start recording');\n      }\n    } catch (error) {\n      logError('QuickNoteModern', 'Error message', {});\n      setRecordingError('Failed to start recording. Please try again.');\n    }\n  };\n\n  const stopRecording = async () => {\n    if (!isRecording) return;\n    \n    setIsRecording(false);\n    \n    try {\n      azureSpeechTranscription.stopRecording();\n      \n      let completeTranscript = transcript;\n      if (interimText.trim()) {\n        const correctedText = medicalCorrections.correctTranscription(interimText);\n        completeTranscript = transcript + (transcript ? ' ' : '') + correctedText;\n        setTranscript(completeTranscript);\n        setInterimText('');\n      }\n\n      // Auto-process with AI after recording stops\n      if (completeTranscript.trim()) {\n        setTimeout(() => {\n          processWithAI(completeTranscript);\n        }, 500);\n      }\n    } catch (error) {\n      logError('QuickNoteModern', 'Error message', {});\n    }\n  };\n\n  const processWithAI = async (transcriptToProcess?: string) => {\n    const contentToProcess = transcriptToProcess || transcript;\n    \n    if (!contentToProcess.trim()) {\n      alert('Please record some content first');\n      return;\n    }\n\n    setIsProcessing(true);\n    setShowProcessed(false);\n\n    try {\n      const patientContext = `\nPATIENT INFORMATION:\nName: ${patientDetails.name || '[Not provided]'}\nMRN: ${patientDetails.mrn || '[Not provided]'}\nDOB: ${patientDetails.dob || '[Not provided]'}\nEmail: ${patientDetails.email || '[Not provided]'}\nVisit Date: ${patientDetails.visitDate}\n      `.trim();\n\n      const combinedContent = recordingMode === 'conversation' \n        ? `CONVERSATION TRANSCRIPT:\\n${contentToProcess}`\n        : contentToProcess;\n\n      const minimalPatientData = {\n        id: 'quick-note-modern',\n        name: patientDetails.name || 'Unknown Patient',\n        mrn: patientDetails.mrn || 'Unknown MRN',\n        dob: patientDetails.dob || '',\n        email: patientDetails.email || '',\n        diagnosis: [],\n        medications: [],\n        labResults: [],\n        vitalSigns: {\n          bp: '',\n          hr: '',\n          temp: '',\n          weight: '',\n          bmi: ''\n        }\n      };\n      \n      let templateInstructions = undefined;\n      logDebug('QuickNoteModern', 'Debug message', {});\n      if (selectedTemplate) {\n        logInfo('QuickNoteModern', 'Info message', {});\n        try {\n          const settings = await doctorProfileService.getSettings();\n          templateInstructions = {\n            template: selectedTemplate,\n            doctorSettings: settings\n          };\n          logInfo('QuickNoteModern', 'Info message', {});\n        } catch (error) {\n          templateInstructions = {\n            template: selectedTemplate,\n            doctorSettings: null\n          };\n          logDebug('QuickNoteModern', 'Debug message', {});\n        }\n      } else {\n        logDebug('QuickNoteModern', 'Debug message', {});\n      }\n      \n      const result = await azureAIService.processMedicalTranscription(\n        combinedContent,\n        minimalPatientData,\n        null,\n        `Patient context: ${patientContext}`,\n        templateInstructions\n      );\n      \n      const processedContent = result.formatted;\n      setProcessedNote(processedContent);\n      setEditableNote(processedContent);\n      setShowProcessed(true);\n    } catch (error) {\n      logError('QuickNoteModern', 'Error message', {});\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      alert(`Failed to process with AI: ${errorMessage}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const copyToClipboard = async (text?: string) => {\n    try {\n      const textToCopy = text || editableNote;\n      await navigator.clipboard.writeText(textToCopy.replace(/###\\s*/g, '').replace(/\\*\\*(.*?)\\*\\*/g, '$1'));\n      \n      // Show a simple notification\n      const notification = document.createElement('div');\n      notification.className = 'fixed top-4 right-4 bg-green-600 text-white px-4 py-3 rounded-lg shadow-lg z-50 notification-calm';\n      notification.innerHTML = '✓ Copied to clipboard';\n      document.body.appendChild(notification);\n      \n      setTimeout(() => {\n        if (document.body.contains(notification)) document.body.removeChild(notification);\n      }, 2000);\n    } catch (error) {\n      logError('QuickNoteModern', 'Error message', {});\n      alert('Failed to copy to clipboard');\n    }\n  };\n\n  const clearAll = () => {\n    setTranscript('');\n    setInterimText('');\n    setProcessedNote('');\n    setEditableNote('');\n    setShowProcessed(false);\n    setIsEditingNote(false);\n    setWordCount(0);\n    setRecordingDuration(0);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 relative overflow-hidden\">\n      {/* Subtle background pattern */}\n      <div className=\"absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none opacity-30\">\n        <div className=\"absolute -top-4 -left-4 w-96 h-96 bg-blue-200 rounded-full filter blur-3xl opacity-40\"></div>\n        <div className=\"absolute -bottom-4 -right-4 w-96 h-96 bg-indigo-200 rounded-full filter blur-3xl opacity-40\"></div>\n      </div>\n\n      {/* Header */}\n      <div className=\"glass-card-calm mx-4 mt-4 p-4 relative z-10\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center gap-4\">\n            <button\n              onClick={() => navigate('/doctor')}\n              className=\"glass-button p-2 rounded-lg hover:scale-105 transition-transform\"\n            >\n              <ArrowLeft className=\"w-5 h-5\" />\n            </button>\n            <div>\n              <h1 className=\"text-2xl font-bold text-calm-gradient flex items-center gap-2\">\n                <Zap className=\"w-6 h-6\" />\n                Quick Note\n              </h1>\n              <p className=\"text-sm text-gray-600\">\n                Welcome, {currentUser?.name || 'Doctor'}\n              </p>\n            </div>\n          </div>\n          \n          {/* Recording Stats */}\n          <div className=\"flex items-center gap-4\">\n            <div className=\"status-indicator status-ready\">\n              📝 {wordCount} words\n            </div>\n            <div className=\"status-indicator status-ready\">\n              ⏱️ {formatDuration(recordingDuration)}\n            </div>\n            <button\n              onClick={() => {\n                unifiedAuthService.logout();\n                navigate('/login');\n              }}\n              className=\"btn-calm btn-calm-danger px-4 py-2 text-sm\"\n            >\n              Sign Out\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"px-4 py-6 relative z-10\">\n        <div className=\"max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-[400px_1fr] gap-6\">\n          \n          {/* Left Column - Recording & Patient */}\n          <div className=\"space-y-6\">\n            \n            {/* Recording Mode Selection */}\n            <div className=\"glass-card-calm p-6 card-hover-calm\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                <Star className=\"w-5 h-5 text-yellow-500\" />\n                Recording Mode\n              </h3>\n              \n              <div className=\"grid grid-cols-2 gap-3\">\n                <button\n                  onClick={() => setRecordingMode('dictation')}\n                  className={`p-4 rounded-xl transition-all duration-300 ${\n                    recordingMode === 'dictation'\n                      ? 'bg-blue-600 text-white shadow-md'\n                      : 'bg-white border border-gray-200 text-gray-700 hover:bg-blue-50 hover:border-blue-200'\n                  }`}\n                >\n                  <Mic className=\"w-8 h-8 mx-auto mb-2\" />\n                  <div className=\"text-sm font-semibold\">Dictation</div>\n                  <div className=\"text-xs opacity-75\">Single speaker</div>\n                </button>\n                \n                <button\n                  onClick={() => setRecordingMode('conversation')}\n                  className={`p-4 rounded-xl transition-all duration-300 ${\n                    recordingMode === 'conversation'\n                      ? 'bg-indigo-600 text-white shadow-md'\n                      : 'bg-white border border-gray-200 text-gray-700 hover:bg-indigo-50 hover:border-indigo-200'\n                  }`}\n                >\n                  <User className=\"w-8 h-8 mx-auto mb-2\" />\n                  <div className=\"text-sm font-semibold\">Conversation</div>\n                  <div className=\"text-xs opacity-75\">Multi-speaker</div>\n                </button>\n              </div>\n            </div>\n\n            {/* Recording Controls */}\n            <div className=\"glass-card-calm p-6 card-hover-calm text-center\">\n              <div className=\"mb-6\">\n                <div className=\"flex justify-center gap-4 mb-4\">\n                  {/* Start Recording Button */}\n                  <button\n                    onClick={startRecording}\n                    disabled={isRecording || isProcessing}\n                    className={`w-20 h-20 rounded-full flex items-center justify-center transition-all duration-300 ${\n                      isRecording || isProcessing\n                        ? 'bg-gray-300 cursor-not-allowed'\n                        : 'bg-green-600 hover:bg-green-700 shadow-lg hover:shadow-xl'\n                    } text-white`}\n                  >\n                    <Play className=\"w-8 h-8 ml-1\" />\n                  </button>\n                  \n                  {/* Stop Recording Button */}\n                  <button\n                    onClick={stopRecording}\n                    disabled={!isRecording || isProcessing}\n                    className={`w-20 h-20 rounded-full flex items-center justify-center transition-all duration-300 ${\n                      !isRecording || isProcessing\n                        ? 'bg-gray-300 cursor-not-allowed'\n                        : 'bg-red-600 hover:bg-red-700 shadow-lg hover:shadow-xl'\n                    } text-white`}\n                  >\n                    <Square className=\"w-8 h-8\" />\n                  </button>\n                </div>\n                \n                {/* Recording Status */}\n                <div className=\"mt-4\">\n                  <div className=\"text-lg font-semibold text-gray-800\">\n                    {isRecording ? '🎙️ Recording...' : '🎤 Ready to Record'}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    {isRecording ? `Duration: ${formatDuration(recordingDuration)}` : 'Click start to begin'}\n                  </div>\n                  \n                  {/* Simple Recording Indicator */}\n                  {isRecording && (\n                    <div className=\"mt-3 flex justify-center\">\n                      <div className=\"status-indicator status-recording\">\n                        <div className=\"w-2 h-2 bg-red-500 rounded-full recording-dot\"></div>\n                        <span>Recording Live</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex gap-3 justify-center\">\n                <button\n                  onClick={() => processWithAI()}\n                  disabled={!transcript.trim() || isProcessing}\n                  className=\"btn-calm btn-calm-primary px-6 py-3 flex items-center gap-2\"\n                >\n                  {isProcessing ? (\n                    <>\n                      <div className=\"spinner-calm\"></div>\n                      Processing...\n                    </>\n                  ) : (\n                    <>\n                      <Brain className=\"w-5 h-5\" />\n                      AI Process\n                    </>\n                  )}\n                </button>\n                \n                <button\n                  onClick={clearAll}\n                  className=\"btn-calm btn-calm-danger px-6 py-3 flex items-center gap-2\"\n                >\n                  <Sparkles className=\"w-5 h-5\" />\n                  Clear\n                </button>\n              </div>\n\n              {recordingError && (\n                <div className=\"mt-4 p-3 bg-red-100 border border-red-300 rounded-lg text-red-700 text-sm animate-shake\">\n                  {recordingError}\n                </div>\n              )}\n            </div>\n\n            {/* Template Selection */}\n            <div className=\"glass-card-calm p-6 card-hover-calm\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                <FileText className=\"w-5 h-5 text-blue-500\" />\n                Template\n              </h3>\n              \n              <button\n                onClick={() => setShowTemplateSelector(!showTemplateSelector)}\n                className=\"glass-button w-full p-3 rounded-lg text-left flex items-center justify-between hover:scale-105 transition-transform\"\n              >\n                <span>{selectedTemplate ? selectedTemplate.name : 'No Template Selected'}</span>\n                <ChevronDown className={`w-4 h-4 transition-transform ${showTemplateSelector ? 'rotate-180' : ''}`} />\n              </button>\n\n              {showTemplateSelector && (\n                <div className=\"mt-3 glass-card p-3 max-h-48 overflow-y-auto modern-scrollbar slide-in-right\">\n                  <button\n                    onClick={() => {\n                      setSelectedTemplate(null);\n                      setShowTemplateSelector(false);\n                    }}\n                    className=\"w-full p-2 text-left hover:bg-white hover:bg-opacity-50 rounded text-sm\"\n                  >\n                    No Template (Standard SOAP)\n                  </button>\n                  \n                  {templates.map(template => (\n                    <button\n                      key={template.id}\n                      onClick={() => {\n                        setSelectedTemplate(template);\n                        setShowTemplateSelector(false);\n                      }}\n                      className=\"w-full p-2 text-left hover:bg-white hover:bg-opacity-50 rounded text-sm\"\n                    >\n                      {template.name}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Patient Details */}\n            <div className=\"glass-card-calm p-6 card-hover-calm\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                <Heart className=\"w-5 h-5 text-red-500\" />\n                Patient Information\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Patient Name</label>\n                  <input\n                    type=\"text\"\n                    value={patientDetails.name}\n                    onChange={(e) => setPatientDetails(prev => ({ ...prev, name: e.target.value }))}\n                    className=\"modern-input-calm w-full\"\n                    placeholder=\"Enter patient name\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">MRN</label>\n                  <input\n                    type=\"text\"\n                    value={patientDetails.mrn}\n                    onChange={(e) => setPatientDetails(prev => ({ ...prev, mrn: e.target.value }))}\n                    className=\"modern-input-calm w-full\"\n                    placeholder=\"Medical Record Number\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date of Birth</label>\n                  <input\n                    type=\"date\"\n                    value={patientDetails.dob}\n                    onChange={(e) => setPatientDetails(prev => ({ ...prev, dob: e.target.value }))}\n                    className=\"modern-input-calm w-full\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={patientDetails.email}\n                    onChange={(e) => setPatientDetails(prev => ({ ...prev, email: e.target.value }))}\n                    className=\"modern-input-calm w-full\"\n                    placeholder=\"patient@email.com\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Live Transcript - Moved to Left Sidebar */}\n            <div className=\"glass-card-calm p-6 card-hover-calm\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                <FileText className=\"w-5 h-5 text-green-500\" />\n                Live Transcript\n              </h3>\n              \n              <div className=\"bg-white bg-opacity-80 rounded-xl p-3 min-h-48 max-h-64 overflow-y-auto calm-scrollbar\">\n                {transcript || interimText ? (\n                  <div className=\"text-gray-800 whitespace-pre-wrap text-sm leading-relaxed\">\n                    {transcript}\n                    {interimText && (\n                      <span className=\"text-blue-500 italic\">{interimText}</span>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-center h-full text-gray-500\">\n                    <div className=\"text-center\">\n                      <Mic className=\"w-12 h-12 mx-auto mb-3 opacity-50\" />\n                      <p className=\"text-sm\">Start recording to see your transcript</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Right Column - AI Generated Note (Much Larger) */}\n          <div className=\"glass-card-calm p-6 card-hover-calm\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold flex items-center gap-2\">\n                <Sparkles className=\"w-5 h-5 text-purple-500\" />\n                AI-Generated Note\n              </h3>\n              \n              {showProcessed && (\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => setIsEditingNote(!isEditingNote)}\n                    className={`glass-button p-2 rounded-lg hover:scale-105 transition-transform ${isEditingNote ? 'bg-blue-100' : ''}`}\n                    title={isEditingNote ? \"View formatted\" : \"Edit note\"}\n                  >\n                    <FileText className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => copyToClipboard()}\n                    className=\"glass-button p-2 rounded-lg hover:scale-105 transition-transform\"\n                    title=\"Copy to clipboard\"\n                  >\n                    <Copy className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => {\n                      const printContent = editableNote.replace(/###\\s*/g, '').replace(/\\*\\*(.*?)\\*\\*/g, '$1');\n                      const printWindow = window.open('', '_blank');\n                      if (printWindow) {\n                        printWindow.document.write(`\n                          <html>\n                            <head>\n                              <title>Medical Note - ${patientDetails.name || 'Patient'}</title>\n                              <style>\n                                body { font-family: Arial, sans-serif; padding: 20px; white-space: pre-wrap; }\n                                @media print { body { padding: 10px; } }\n                              </style>\n                            </head>\n                            <body>${printContent.replace(/\\n/g, '<br>')}</body>\n                          </html>\n                        `);\n                        printWindow.document.close();\n                        printWindow.print();\n                      }\n                    }}\n                    className=\"glass-button p-2 rounded-lg hover:scale-105 transition-transform\"\n                    title=\"Print note\"\n                  >\n                    <Download className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              )}\n            </div>\n            \n            <div className={`bg-white bg-opacity-80 rounded-xl p-4 min-h-[700px] max-h-[900px] overflow-y-auto calm-scrollbar editable-note-container ${isEditingNote ? 'editing' : ''}`}>\n              {showProcessed && editableNote ? (\n                <>\n                  <div className=\"edit-indicator\"></div>\n                  {isEditingNote ? (\n                    <textarea\n                      value={editableNote}\n                      onChange={(e) => setEditableNote(e.target.value)}\n                      className=\"note-textarea w-full h-full min-h-[650px] p-2\"\n                      placeholder=\"Edit your medical note here...\"\n                      autoFocus\n                      onBlur={() => setIsEditingNote(false)}\n                    />\n                  ) : (\n                    <div \n                      className=\"text-gray-800 whitespace-pre-wrap text-sm leading-relaxed cursor-text min-h-[650px]\"\n                      onClick={() => setIsEditingNote(true)}\n                      title=\"Click to edit\"\n                    >\n                      {editableNote.split('\\n').map((line, index) => {\n                        if (line.startsWith('###')) {\n                          return (\n                            <h3 key={index} className=\"text-lg font-bold text-blue-600 mt-4 mb-2\">\n                              {line.replace('###', '').trim()}\n                            </h3>\n                          );\n                        } else if (line.includes('**')) {\n                          return (\n                            <p key={index} className=\"mb-2\">\n                              {line.split('**').map((part, i) => \n                                i % 2 === 1 ? <strong key={i} className=\"font-semibold\">{part}</strong> : part\n                              )}\n                            </p>\n                          );\n                        } else {\n                          return <p key={index} className=\"mb-2\">{line}</p>;\n                        }\n                      })}\n                    </div>\n                  )}\n                </>\n              ) : (\n                <div className=\"flex items-center justify-center h-full text-gray-500\">\n                  <div className=\"text-center\">\n                    <Brain className=\"w-16 h-16 mx-auto mb-4 opacity-50\" />\n                    <p className=\"text-lg\">Your AI-generated note will appear here</p>\n                    <p className=\"text-sm mt-2\">Record your dictation and process with AI!</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["__iconNode","Brain","createLucideIcon","Heart","Mic","Sparkles","Square","Zap","QuickNoteModern","navigate","useNavigate","isRecording","setIsRecording","useState","transcript","setTranscript","interimText","setInterimText","processedNote","setProcessedNote","editableNote","setEditableNote","isProcessing","setIsProcessing","showProcessed","setShowProcessed","isEditingNote","setIsEditingNote","recordingError","setRecordingError","recordingMode","setRecordingMode","selectedTemplate","setSelectedTemplate","templates","setTemplates","showTemplateSelector","setShowTemplateSelector","currentUser","setCurrentUser","patientDetails","setPatientDetails","wordCount","setWordCount","recordingDuration","setRecordingDuration","recordingIntervalRef","useRef","useEffect","user","unifiedAuthService","loadTemplates","words","word","prev","doctorId","doctorProfileService","allTemplates","defaultTemplate","logError","formatDuration","seconds","mins","secs","startRecording","logDebug","text","isFinal","corrected","medicalCorrections","error","stopRecording","completeTranscript","correctedText","processWithAI","transcriptToProcess","contentToProcess","patientContext","combinedContent","minimalPatientData","templateInstructions","logInfo","settings","processedContent","errorMessage","copyToClipboard","textToCopy","notification","clearAll","jsxs","jsx","ArrowLeft","Star","User","Play","Fragment","FileText","ChevronDown","template","e","Copy","printContent","printWindow","Download","line","index","part","i"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}