{"version":3,"file":"PrintNotePage-DFpr6Oxy.js","sources":["../../src/pages/PrintNotePage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Printer,\n  Download,\n  Share2,\n  FileText,\n  Mail,\n  Calendar,\n  User,\n  Clock,\n  ArrowLeft,\n} from 'lucide-react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\ninterface VisitNote {\n  id: string;\n  patientName: string;\n  patientDOB: string;\n  patientMRN: string;\n  visitDate: string;\n  visitType: string;\n  provider: string;\n  processedNote: string;\n  rawTranscript?: string;\n  template?: string;\n  vitals?: {\n    bp: string;\n    pulse: string;\n    temp: string;\n    resp: string;\n    o2sat: string;\n    weight: string;\n    height: string;\n  };\n  medications?: string[];\n  allergies?: string[];\n  diagnoses?: string[];\n  followUp?: string;\n}\n\nexport default function PrintNotePage() {\n  const { visitId } = useParams();\n  const navigate = useNavigate();\n  const printRef = useRef<HTMLDivElement>(null);\n  const [note, setNote] = useState<VisitNote | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [printFormat, setPrintFormat] = useState('full');\n  const [includeLetterhead, setIncludeLetterhead] = useState(true);\n  const [fontSize, setFontSize] = useState('normal');\n\n  useEffect(() => {\n    fetchVisitNote();\n  }, [visitId]);\n\n  const fetchVisitNote = async () => {\n    // Try to get the saved visit data from localStorage\n    const savedVisit = localStorage.getItem('last-visit-data');\n    const patientData = localStorage.getItem('last-patient-data');\n\n    if (savedVisit) {\n      try {\n        const visitData = JSON.parse(savedVisit);\n        const patient = patientData ? JSON.parse(patientData) : null;\n\n        // Create note object from saved data\n        const realNote: VisitNote = {\n          id: visitId || '1',\n          patientName: patient?.name || visitData.patientName || 'Patient Name',\n          patientDOB: patient?.dob || '1980-01-01',\n          patientMRN: patient?.mrn || visitData.patientMRN || 'MRN001',\n          visitDate: visitData.visitDate || new Date().toISOString(),\n          visitType: visitData.visitType || 'Clinical Visit',\n          provider: localStorage.getItem('doctor_name') || 'Dr. Provider',\n          processedNote: visitData.processedNote || visitData.note || '',\n          rawTranscript: visitData.transcript || '',\n          template: visitData.template || '',\n          medications:\n            patient?.medications?.map((m: any) => `${m.name} ${m.dosage} - ${m.frequency}`) || [],\n          allergies: patient?.allergies || [],\n          diagnoses: patient?.diagnosis || [],\n          vitals: patient?.vitalSigns || {\n            bp: '120/80',\n            pulse: '72',\n            temp: '98.6Â°F',\n            resp: '16',\n            o2sat: '98%',\n            weight: '150 lbs',\n            height: '5\\'8\"',\n          },\n          followUp: visitData.followUp || 'As needed',\n        };\n\n        setNote(realNote);\n        setLoading(false);\n      } catch (error) {\n        logError('PrintNotePage', 'Error message', {});\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleDownloadPDF = () => {\n    // In production, generate actual PDF\n    alert('PDF download functionality would be implemented here');\n  };\n\n  const handleEmail = () => {\n    // In production, open email dialog\n    alert('Email functionality would be implemented here');\n  };\n\n  const handleFax = () => {\n    // In production, open fax dialog\n    alert('Fax functionality would be implemented here');\n  };\n\n  // Parse sections from processed note\n  const parseSections = (noteText: string) => {\n    const sections: { [key: string]: string } = {};\n    const sectionRegex = /^([A-Z\\s]+):$/gm;\n    const lines = noteText.split('\\n');\n    let currentSection = '';\n    let currentContent: string[] = [];\n\n    lines.forEach(line => {\n      const sectionMatch = line.match(/^([A-Z\\s]+):$/);\n      if (sectionMatch) {\n        if (currentSection) {\n          sections[currentSection] = currentContent.join('\\n').trim();\n        }\n        currentSection = sectionMatch[1];\n        currentContent = [];\n      } else {\n        currentContent.push(line);\n      }\n    });\n\n    if (currentSection) {\n      sections[currentSection] = currentContent.join('\\n').trim();\n    }\n\n    return sections;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!note) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex flex-col items-center justify-center\">\n        <p className=\"text-gray-600 mb-4\">No note data found</p>\n        <button\n          onClick={() => navigate(-1)}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <ArrowLeft className=\"h-5 w-5\" />\n          Go Back\n        </button>\n      </div>\n    );\n  }\n\n  const sections = parseSections(note.processedNote);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Add print styles */}\n      <style>{`\n        @media print {\n          @page {\n            size: letter;\n            margin: 0.75in;\n          }\n          \n          body {\n            print-color-adjust: exact;\n            -webkit-print-color-adjust: exact;\n          }\n          \n          .print\\\\:hidden {\n            display: none !important;\n          }\n          \n          .print\\\\:block {\n            display: block !important;\n          }\n          \n          .print\\\\:break-after-page {\n            page-break-after: always;\n          }\n          \n          .print\\\\:font-serif {\n            font-family: 'Times New Roman', Times, serif !important;\n          }\n          \n          .text-${fontSize} {\n            ${\n              fontSize === 'small'\n                ? 'font-size: 11pt !important;'\n                : fontSize === 'large'\n                  ? 'font-size: 14pt !important;'\n                  : 'font-size: 12pt !important;'\n            }\n          }\n        }\n      `}</style>\n\n      {/* Control Panel - Hidden in print */}\n      <div className=\"print:hidden bg-white border-b border-gray-200 sticky top-0 z-10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-4\">\n              <button onClick={() => navigate(-1)} className=\"p-2 hover:bg-gray-100 rounded-lg\">\n                <ArrowLeft className=\"h-5 w-5\" />\n              </button>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Print Clinical Note</h1>\n            </div>\n            <div className=\"flex gap-3 items-center\">\n              <select\n                value={fontSize}\n                onChange={e => setFontSize(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\"\n              >\n                <option value=\"small\">Small Text</option>\n                <option value=\"normal\">Normal Text</option>\n                <option value=\"large\">Large Text</option>\n              </select>\n\n              <select\n                value={printFormat}\n                onChange={e => setPrintFormat(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\"\n              >\n                <option value=\"full\">Full Note</option>\n                <option value=\"summary\">Summary Only</option>\n                <option value=\"patient\">Patient Copy</option>\n              </select>\n\n              <label className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={includeLetterhead}\n                  onChange={e => setIncludeLetterhead(e.target.checked)}\n                  className=\"rounded\"\n                />\n                <span className=\"text-sm\">Letterhead</span>\n              </label>\n\n              <button\n                onClick={handlePrint}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n              >\n                <Printer className=\"h-5 w-5\" />\n                Print\n              </button>\n\n              <button\n                onClick={handleDownloadPDF}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center gap-2\"\n              >\n                <Download className=\"h-5 w-5\" />\n                PDF\n              </button>\n\n              <button\n                onClick={handleEmail}\n                className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 flex items-center gap-2\"\n              >\n                <Mail className=\"h-5 w-5\" />\n                Email\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Printable Content */}\n      <div\n        className={`max-w-4xl mx-auto p-8 bg-white print:p-0 print:max-w-full text-${fontSize}`}\n        ref={printRef}\n      >\n        <div className=\"print:font-serif\">\n          {/* Letterhead */}\n          {includeLetterhead && (\n            <div className=\"mb-8 pb-6 border-b-2 border-blue-600 print:mb-6\">\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <h1 className=\"text-3xl font-bold text-blue-700 mb-2\">TSHLA Medical Center</h1>\n                  <p className=\"text-gray-700 font-medium\">Excellence in Healthcare</p>\n                  <div className=\"mt-2 text-sm text-gray-600\">\n                    <p>123 Medical Plaza, Suite 100</p>\n                    <p>San Francisco, CA 94105</p>\n                    <p>Phone: (415) 555-0100 | Fax: (415) 555-0101</p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <img src=\"/logo.png\" alt=\"TSHLA\" className=\"h-16 w-auto mb-2\" />\n                  <p className=\"text-xs text-gray-500\">NPI: 1234567890</p>\n                  <p className=\"text-xs text-gray-500\">Tax ID: 12-3456789</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Patient Header */}\n          <div className=\"mb-6 p-4 bg-blue-50 rounded-lg print:bg-gray-50 print:border print:border-gray-300\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <h2 className=\"font-bold text-lg mb-2 text-blue-900\">Patient Information</h2>\n                <p className=\"font-semibold text-gray-800\">Name: {note.patientName}</p>\n                <p className=\"text-gray-700\">\n                  DOB: {new Date(note.patientDOB).toLocaleDateString()}\n                </p>\n                <p className=\"text-gray-700\">MRN: {note.patientMRN}</p>\n              </div>\n              <div className=\"text-right\">\n                <h2 className=\"font-bold text-lg mb-2 text-blue-900\">Visit Details</h2>\n                <p className=\"font-semibold text-gray-800\">\n                  Date: {new Date(note.visitDate).toLocaleDateString()}\n                </p>\n                <p className=\"text-gray-700\">Type: {note.visitType}</p>\n                <p className=\"text-gray-700\">Provider: {note.provider}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Allergies Alert */}\n          {note.allergies && note.allergies.length > 0 && (\n            <div className=\"mb-6 p-4 bg-red-50 border-2 border-red-300 rounded-lg print:border-red-500\">\n              <p className=\"font-bold text-red-800 text-lg\">\n                â ï¸ ALLERGIES: {note.allergies.join(', ')}\n              </p>\n            </div>\n          )}\n\n          {/* Vital Signs */}\n          {note.vitals && printFormat === 'full' && (\n            <div className=\"mb-6 p-4 bg-gray-50 rounded-lg print:border print:border-gray-300\">\n              <h2 className=\"text-lg font-bold mb-3 text-gray-900 border-b pb-2\">VITAL SIGNS</h2>\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div>\n                  <span className=\"font-semibold\">BP:</span> {note.vitals.bp}\n                </div>\n                <div>\n                  <span className=\"font-semibold\">Pulse:</span> {note.vitals.pulse}\n                </div>\n                <div>\n                  <span className=\"font-semibold\">Temp:</span> {note.vitals.temp}\n                </div>\n                <div>\n                  <span className=\"font-semibold\">Resp:</span> {note.vitals.resp}\n                </div>\n                <div>\n                  <span className=\"font-semibold\">O2 Sat:</span> {note.vitals.o2sat}\n                </div>\n                <div>\n                  <span className=\"font-semibold\">Weight:</span> {note.vitals.weight}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Processed Note Content */}\n          <div className=\"mb-6\">\n            <h2 className=\"text-xl font-bold mb-4 text-gray-900 border-b-2 border-blue-600 pb-2\">\n              CLINICAL NOTE\n            </h2>\n\n            {/* If we have parsed sections, display them formatted */}\n            {Object.keys(sections).length > 0 ? (\n              Object.entries(sections).map(([sectionTitle, content]) => (\n                <div key={sectionTitle} className=\"mb-6\">\n                  <h3 className=\"text-lg font-bold mb-2 text-blue-800\">{sectionTitle}</h3>\n                  <div className=\"text-gray-700 leading-relaxed whitespace-pre-wrap pl-4\">\n                    {content}\n                  </div>\n                </div>\n              ))\n            ) : (\n              /* Otherwise display the full processed note */\n              <div className=\"text-gray-700 leading-relaxed whitespace-pre-wrap\">\n                {note.processedNote}\n              </div>\n            )}\n          </div>\n\n          {/* Current Medications */}\n          {note.medications && note.medications.length > 0 && (\n            <div className=\"mb-6 p-4 bg-yellow-50 rounded-lg print:border print:border-gray-300\">\n              <h2 className=\"text-lg font-bold mb-3 text-gray-900 border-b pb-2\">\n                CURRENT MEDICATIONS\n              </h2>\n              <ul className=\"list-disc list-inside text-gray-700 space-y-1\">\n                {note.medications.map((med, index) => (\n                  <li key={index} className=\"ml-2\">\n                    {med}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Diagnoses */}\n          {note.diagnoses && note.diagnoses.length > 0 && (\n            <div className=\"mb-6 p-4 bg-green-50 rounded-lg print:border print:border-gray-300\">\n              <h2 className=\"text-lg font-bold mb-3 text-gray-900 border-b pb-2\">DIAGNOSES</h2>\n              <ul className=\"list-disc list-inside text-gray-700 space-y-1\">\n                {note.diagnoses.map((dx, index) => (\n                  <li key={index} className=\"ml-2\">\n                    {dx}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Follow-up */}\n          {note.followUp && (\n            <div className=\"mb-6 p-4 bg-blue-50 rounded-lg print:border print:border-gray-300\">\n              <h2 className=\"text-lg font-bold mb-2 text-gray-900\">FOLLOW-UP</h2>\n              <p className=\"text-gray-700\">{note.followUp}</p>\n            </div>\n          )}\n\n          {/* Raw Transcript (if requested) */}\n          {printFormat === 'full' && note.rawTranscript && (\n            <div className=\"mb-6 p-4 bg-gray-50 rounded-lg print:border print:border-gray-300 print:break-after-page\">\n              <h2 className=\"text-lg font-bold mb-3 text-gray-900 border-b pb-2\">\n                ORIGINAL TRANSCRIPT\n              </h2>\n              <p className=\"text-gray-600 text-sm italic whitespace-pre-wrap\">\n                {note.rawTranscript}\n              </p>\n            </div>\n          )}\n\n          {/* Signature Section */}\n          <div className=\"mt-12 pt-6 border-t-2 border-gray-400\">\n            <div className=\"grid grid-cols-2 gap-8\">\n              <div>\n                <div className=\"mb-8\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Provider Signature</p>\n                  <div className=\"border-b-2 border-gray-400 h-16 mb-2\"></div>\n                  <p className=\"font-semibold\">{note.provider}</p>\n                  <p className=\"text-sm text-gray-600\">License #: CA123456</p>\n                  <p className=\"text-sm text-gray-600\">Date: {new Date().toLocaleDateString()}</p>\n                </div>\n              </div>\n              <div>\n                <div className=\"mb-8\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Patient Acknowledgment</p>\n                  <div className=\"border-b-2 border-gray-400 h-16 mb-2\"></div>\n                  <p className=\"text-sm text-gray-600\">Patient/Guardian Signature</p>\n                  <p className=\"text-sm text-gray-600\">Date: _______________</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Footer */}\n          <div className=\"mt-8 pt-4 border-t border-gray-300 text-center print:mt-4\">\n            <p className=\"text-xs text-gray-500 mb-1\">\n              This document contains confidential medical information protected under HIPAA.\n            </p>\n            <p className=\"text-xs text-gray-500 mb-1\">\n              Unauthorized disclosure is prohibited by law.\n            </p>\n            <div className=\"flex justify-between text-xs text-gray-400 mt-2\">\n              <span>Generated: {new Date().toLocaleString()}</span>\n              <span>\n                Document ID: {note.id}-{Date.now()}\n              </span>\n              <span>Page 1 of 1</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["PrintNotePage","visitId","useParams","navigate","useNavigate","printRef","useRef","note","setNote","useState","loading","setLoading","printFormat","setPrintFormat","includeLetterhead","setIncludeLetterhead","fontSize","setFontSize","useEffect","fetchVisitNote","savedVisit","patientData","visitData","patient","realNote","m","logError","handlePrint","handleDownloadPDF","handleEmail","parseSections","noteText","sections","lines","currentSection","currentContent","line","sectionMatch","jsx","jsxs","ArrowLeft","e","Printer","Download","Mail","sectionTitle","content","med","index","dx"],"mappings":"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"}