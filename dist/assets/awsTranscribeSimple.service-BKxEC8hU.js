import{g as I,b as w,l as y}from"./index-JAW6HvUl.js";import{H as T,n as $,i as rt,a as at,c as Pe,b as ot,S as ae,m as ct,d as dt,e as lt,f as ut,t as Me,h as ke,j as pt,ab as gt,B as mt,k as ft,r as ht,l as St,p as Et,N as bt,o as wt,q as yt,s as xt,u as Ct,v as vt,D as At,W as Tt,w as _t,x as Rt,y as It,z as Pt,A as Mt,C as kt,F as Dt,G as Ot,I as $t,J as Ut,K as Nt,L as Ft,M as Lt,O as Ht,P as zt,Q as qt,R as Bt,T as Vt,U as jt,V as Wt,X as Gt,Y as Kt,Z as Qt,_ as Yt,$ as Zt,a0 as A,a1 as D,a2 as Jt,a3 as Xt,a4 as m,a5 as M,a6 as g,ac as v,ad as en,ae as oe,af as ce,a8 as tn,a9 as nn,aa as sn}from"./resolveDefaultsModeConfig-R7vZuTP0.js";const rn=e=>(t,n)=>async s=>{const{request:i}=s;return T.isInstance(i)?e.eventStreamPayloadHandler.handle(t,s,n):t(s)},an={tags:["EVENT_STREAM","SIGNATURE","HANDLE"],name:"eventStreamHandlingMiddleware",relation:"after",toMiddleware:"awsAuthMiddleware",override:!0},on=e=>async t=>{const{request:n}=t;return T.isInstance(n)?(n.headers={...n.headers,"content-type":"application/vnd.amazon.eventstream","x-amz-content-sha256":"STREAMING-AWS4-HMAC-SHA256-EVENTS"},e({...t,request:n})):e(t)},cn={step:"build",tags:["EVENT_STREAM","HEADER","CONTENT_TYPE","CONTENT_SHA256"],name:"eventStreamHeaderMiddleware",override:!0},dn=e=>({applyToStack:t=>{t.addRelativeTo(rn(e),an),t.add(on,cn)}}),B=e=>{if(e==null)return{};if(Array.isArray(e))return e.filter(t=>t!=null).map(B);if(typeof e=="object"){const t={};for(const n of Object.keys(e))e[n]!=null&&(t[n]=B(e[n]));return t}return e},ln=()=>e=>async t=>{const n={...t.input},s=await e(t),i=s.output;return n.SessionId&&i.SessionId==null&&(i.SessionId=n.SessionId),s},un={step:"initialize",name:"injectSessionIdMiddleware",tags:["WEBSOCKET","EVENT_STREAM"],override:!0},pn=(e,t)=>n=>s=>{const{request:i}=s;if(T.isInstance(i)&&e.requestHandler.metadata?.handlerProtocol?.toLowerCase().includes("websocket")){i.protocol="wss:",i.method="GET",i.path=`${i.path}-websocket`;const{headers:r}=i;delete r["content-type"],delete r["x-amz-content-sha256"];for(const a of Object.keys(r))if(a.indexOf(t.headerPrefix)===0){const o=a.replace(t.headerPrefix,"");i.query[o]=r[a]}r["x-amz-user-agent"]&&(i.query["user-agent"]=r["x-amz-user-agent"]),i.headers={host:r.host??i.hostname}}return n(s)},gn={name:"websocketEndpointMiddleware",tags:["WEBSOCKET","EVENT_STREAM"],relation:"after",toMiddleware:"eventStreamHeaderMiddleware",override:!0},mn=(e,t)=>({applyToStack:n=>{n.addRelativeTo(pn(e,t),gn),n.add(ln(),un)}});const fn=e=>t=>async n=>{if(!T.isInstance(n.request))return t(n);const{request:s}=n,{handlerProtocol:i=""}=e.requestHandler.metadata||{};if(i.indexOf("h2")>=0&&!s.headers[":authority"])delete s.headers.host,s.headers[":authority"]=s.hostname+(s.port?":"+s.port:"");else if(!s.headers.host){let r=s.hostname;s.port!=null&&(r+=`:${s.port}`),s.headers.host=r}return t(n)},hn={name:"hostHeaderMiddleware",step:"build",priority:"low",tags:["HOST"],override:!0},Sn=e=>({applyToStack:t=>{t.add(fn(e),hn)}}),En=()=>(e,t)=>async n=>{try{const s=await e(n),{clientName:i,commandName:r,logger:a,dynamoDbDocumentClientOptions:o={}}=t,{overrideInputFilterSensitiveLog:d,overrideOutputFilterSensitiveLog:c}=o,u=d??t.inputFilterSensitiveLog,l=c??t.outputFilterSensitiveLog,{$metadata:p,...f}=s.output;return a?.info?.({clientName:i,commandName:r,input:u(n.input),output:l(f),metadata:p}),s}catch(s){const{clientName:i,commandName:r,logger:a,dynamoDbDocumentClientOptions:o={}}=t,{overrideInputFilterSensitiveLog:d}=o,c=d??t.inputFilterSensitiveLog;throw a?.error?.({clientName:i,commandName:r,input:c(n.input),error:s,metadata:s.$metadata}),s}},bn={name:"loggerMiddleware",tags:["LOGGER"],step:"initialize",override:!0},wn=e=>({applyToStack:t=>{t.add(En(),bn)}}),yn={step:"build",tags:["RECURSION_DETECTION"],name:"recursionDetectionMiddleware",override:!0,priority:"low"},xn=()=>e=>async t=>e(t),Cn=e=>({applyToStack:t=>{t.add(xn(),yn)}}),vn=void 0;function An(e){return e===void 0?!0:typeof e=="string"&&e.length<=50}function Tn(e){const t=$(e.userAgentAppId??vn),{customUserAgent:n}=e;return Object.assign(e,{customUserAgent:typeof n=="string"?[[n]]:n,userAgentAppId:async()=>{const s=await t();if(!An(s)){const i=e.logger?.constructor?.name==="NoOpLogger"||!e.logger?console:e.logger;typeof s!="string"?i?.warn("userAgentAppId must be a string or undefined."):s.length>50&&i?.warn("The provided userAgentAppId exceeds the maximum length of 50 characters.")}return s}})}const De=(e,t=!1)=>{if(t){for(const n of e.split("."))if(!De(n))return!1;return!0}return!(!rt(e)||e.length<3||e.length>63||e!==e.toLowerCase()||at(e))},de=":",_n="/",Rn=e=>{const t=e.split(de);if(t.length<6)return null;const[n,s,i,r,a,...o]=t;if(n!=="arn"||s===""||i===""||o.join(de)==="")return null;const d=o.map(c=>c.split(_n)).flat();return{partition:s,service:i,region:r,accountId:a,resourceId:d}},In=[{id:"aws",outputs:{dnsSuffix:"amazonaws.com",dualStackDnsSuffix:"api.aws",implicitGlobalRegion:"us-east-1",name:"aws",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^(us|eu|ap|sa|ca|me|af|il|mx)\\-\\w+\\-\\d+$",regions:{"af-south-1":{description:"Africa (Cape Town)"},"ap-east-1":{description:"Asia Pacific (Hong Kong)"},"ap-east-2":{description:"Asia Pacific (Taipei)"},"ap-northeast-1":{description:"Asia Pacific (Tokyo)"},"ap-northeast-2":{description:"Asia Pacific (Seoul)"},"ap-northeast-3":{description:"Asia Pacific (Osaka)"},"ap-south-1":{description:"Asia Pacific (Mumbai)"},"ap-south-2":{description:"Asia Pacific (Hyderabad)"},"ap-southeast-1":{description:"Asia Pacific (Singapore)"},"ap-southeast-2":{description:"Asia Pacific (Sydney)"},"ap-southeast-3":{description:"Asia Pacific (Jakarta)"},"ap-southeast-4":{description:"Asia Pacific (Melbourne)"},"ap-southeast-5":{description:"Asia Pacific (Malaysia)"},"ap-southeast-6":{description:"Asia Pacific (New Zealand)"},"ap-southeast-7":{description:"Asia Pacific (Thailand)"},"aws-global":{description:"aws global region"},"ca-central-1":{description:"Canada (Central)"},"ca-west-1":{description:"Canada West (Calgary)"},"eu-central-1":{description:"Europe (Frankfurt)"},"eu-central-2":{description:"Europe (Zurich)"},"eu-north-1":{description:"Europe (Stockholm)"},"eu-south-1":{description:"Europe (Milan)"},"eu-south-2":{description:"Europe (Spain)"},"eu-west-1":{description:"Europe (Ireland)"},"eu-west-2":{description:"Europe (London)"},"eu-west-3":{description:"Europe (Paris)"},"il-central-1":{description:"Israel (Tel Aviv)"},"me-central-1":{description:"Middle East (UAE)"},"me-south-1":{description:"Middle East (Bahrain)"},"mx-central-1":{description:"Mexico (Central)"},"sa-east-1":{description:"South America (Sao Paulo)"},"us-east-1":{description:"US East (N. Virginia)"},"us-east-2":{description:"US East (Ohio)"},"us-west-1":{description:"US West (N. California)"},"us-west-2":{description:"US West (Oregon)"}}},{id:"aws-cn",outputs:{dnsSuffix:"amazonaws.com.cn",dualStackDnsSuffix:"api.amazonwebservices.com.cn",implicitGlobalRegion:"cn-northwest-1",name:"aws-cn",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^cn\\-\\w+\\-\\d+$",regions:{"aws-cn-global":{description:"aws-cn global region"},"cn-north-1":{description:"China (Beijing)"},"cn-northwest-1":{description:"China (Ningxia)"}}},{id:"aws-eusc",outputs:{dnsSuffix:"amazonaws.eu",dualStackDnsSuffix:"api.amazonwebservices.eu",implicitGlobalRegion:"eusc-de-east-1",name:"aws-eusc",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^eusc\\-(de)\\-\\w+\\-\\d+$",regions:{"eusc-de-east-1":{description:"EU (Germany)"}}},{id:"aws-iso",outputs:{dnsSuffix:"c2s.ic.gov",dualStackDnsSuffix:"api.aws.ic.gov",implicitGlobalRegion:"us-iso-east-1",name:"aws-iso",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^us\\-iso\\-\\w+\\-\\d+$",regions:{"aws-iso-global":{description:"aws-iso global region"},"us-iso-east-1":{description:"US ISO East"},"us-iso-west-1":{description:"US ISO WEST"}}},{id:"aws-iso-b",outputs:{dnsSuffix:"sc2s.sgov.gov",dualStackDnsSuffix:"api.aws.scloud",implicitGlobalRegion:"us-isob-east-1",name:"aws-iso-b",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^us\\-isob\\-\\w+\\-\\d+$",regions:{"aws-iso-b-global":{description:"aws-iso-b global region"},"us-isob-east-1":{description:"US ISOB East (Ohio)"}}},{id:"aws-iso-e",outputs:{dnsSuffix:"cloud.adc-e.uk",dualStackDnsSuffix:"api.cloud-aws.adc-e.uk",implicitGlobalRegion:"eu-isoe-west-1",name:"aws-iso-e",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^eu\\-isoe\\-\\w+\\-\\d+$",regions:{"aws-iso-e-global":{description:"aws-iso-e global region"},"eu-isoe-west-1":{description:"EU ISOE West"}}},{id:"aws-iso-f",outputs:{dnsSuffix:"csp.hci.ic.gov",dualStackDnsSuffix:"api.aws.hci.ic.gov",implicitGlobalRegion:"us-isof-south-1",name:"aws-iso-f",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^us\\-isof\\-\\w+\\-\\d+$",regions:{"aws-iso-f-global":{description:"aws-iso-f global region"},"us-isof-east-1":{description:"US ISOF EAST"},"us-isof-south-1":{description:"US ISOF SOUTH"}}},{id:"aws-us-gov",outputs:{dnsSuffix:"amazonaws.com",dualStackDnsSuffix:"api.aws",implicitGlobalRegion:"us-gov-west-1",name:"aws-us-gov",supportsDualStack:!0,supportsFIPS:!0},regionRegex:"^us\\-gov\\-\\w+\\-\\d+$",regions:{"aws-us-gov-global":{description:"aws-us-gov global region"},"us-gov-east-1":{description:"AWS GovCloud (US-East)"},"us-gov-west-1":{description:"AWS GovCloud (US-West)"}}}],Pn={partitions:In};let Mn=Pn;const kn=e=>{const{partitions:t}=Mn;for(const s of t){const{regions:i,outputs:r}=s;for(const[a,o]of Object.entries(i))if(a===e)return{...r,...o}}for(const s of t){const{regionRegex:i,outputs:r}=s;if(new RegExp(i).test(e))return{...r}}const n=t.find(s=>s.id==="aws");if(!n)throw new Error("Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.");return{...n.outputs}},Oe={isVirtualHostableS3Bucket:De,parseArn:Rn,partition:kn};Pe.aws=Oe;function Dn(e,t,n){return e.$source||(e.$source={}),e.$source[t]=n,e}function h(e,t,n){e.__aws_sdk_context?e.__aws_sdk_context.features||(e.__aws_sdk_context.features={}):e.__aws_sdk_context={features:{}},e.__aws_sdk_context.features[t]=n}const le=e=>ot.isInstance(e)?e.headers?.date??e.headers?.Date:void 0,$e=e=>new Date(Date.now()+e),On=(e,t)=>Math.abs($e(t).getTime()-e)>=3e5,ue=(e,t)=>{const n=Date.parse(e);return On(n,t)?n-Date.now():t},U=(e,t)=>{if(!t)throw new Error(`Property \`${e}\` is not resolved for AWS SDK SigV4Auth`);return t},$n=async e=>{const t=U("context",e.context),n=U("config",e.config),s=t.endpointV2?.properties?.authSchemes?.[0],r=await U("signer",n.signer)(s),a=e?.signingRegion,o=e?.signingRegionSet,d=e?.signingName;return{config:n,signer:r,signingRegion:a,signingRegionSet:o,signingName:d}};class Un{async sign(t,n,s){if(!T.isInstance(t))throw new Error("The request is not an instance of `HttpRequest` and cannot be signed");const i=await $n(s),{config:r,signer:a}=i;let{signingRegion:o,signingName:d}=i;const c=s.context;if(c?.authSchemes?.length??!1){const[l,p]=c.authSchemes;l?.name==="sigv4a"&&p?.name==="sigv4"&&(o=p?.signingRegion??o,d=p?.signingName??d)}return await a.sign(t,{signingDate:$e(r.systemClockOffset),signingRegion:o,signingService:d})}errorHandler(t){return n=>{const s=n.ServerTime??le(n.$response);if(s){const i=U("config",t.config),r=i.systemClockOffset;i.systemClockOffset=ue(s,i.systemClockOffset),i.systemClockOffset!==r&&n.$metadata&&(n.$metadata.clockSkewCorrected=!0)}throw n}}successHandler(t,n){const s=le(t);if(s){const i=U("config",n.config);i.systemClockOffset=ue(s,i.systemClockOffset)}}}const Nn=e=>{let t=e.credentials,n=!!e.credentials,s;Object.defineProperty(e,"credentials",{set(c){c&&c!==t&&c!==s&&(n=!0),t=c;const u=Fn(e,{credentials:t,credentialDefaultProvider:e.credentialDefaultProvider}),l=Ln(e,u);n&&!l.attributed?(s=async p=>l(p).then(f=>Dn(f,"CREDENTIALS_CODE","e")),s.memoized=l.memoized,s.configBound=l.configBound,s.attributed=!0):s=l},get(){return s},enumerable:!0,configurable:!0}),e.credentials=t;const{signingEscapePath:i=!0,systemClockOffset:r=e.systemClockOffset||0,sha256:a}=e;let o;return e.signer?o=$(e.signer):e.regionInfoProvider?o=()=>$(e.region)().then(async c=>[await e.regionInfoProvider(c,{useFipsEndpoint:await e.useFipsEndpoint(),useDualstackEndpoint:await e.useDualstackEndpoint()})||{},c]).then(([c,u])=>{const{signingRegion:l,signingService:p}=c;e.signingRegion=e.signingRegion||l||u,e.signingName=e.signingName||p||e.serviceId;const f={...e,credentials:e.credentials,region:e.signingRegion,service:e.signingName,sha256:a,uriEscapePath:i},L=e.signerConstructor||ae;return new L(f)}):o=async c=>{c=Object.assign({},{name:"sigv4",signingName:e.signingName||e.defaultSigningName,signingRegion:await $(e.region)(),properties:{}},c);const u=c.signingRegion,l=c.signingName;e.signingRegion=e.signingRegion||u,e.signingName=e.signingName||l||e.serviceId;const p={...e,credentials:e.credentials,region:e.signingRegion,service:e.signingName,sha256:a,uriEscapePath:i},f=e.signerConstructor||ae;return new f(p)},Object.assign(e,{systemClockOffset:r,signingEscapePath:i,signer:o})};function Fn(e,{credentials:t,credentialDefaultProvider:n}){let s;return t?t?.memoized?s=t:s=ct(t,lt,dt):n?s=$(n(Object.assign({},e,{parentClientConfig:e}))):s=async()=>{throw new Error("@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.")},s.memoized=!0,s}function Ln(e,t){if(t.configBound)return t;const n=async s=>t({...s,callerClientConfig:e});return n.memoized=t.memoized,n.configBound=!0,n}const Hn=(e,t)=>ut(e,t).then(n=>(t?.utf8Encoder??Me)(n)),_=(e,t)=>Hn(e,t).then(n=>{if(n.length)try{return JSON.parse(n)}catch(s){throw s?.name==="SyntaxError"&&Object.defineProperty(s,"$responseBodyText",{value:n}),s}return{}}),zn=async(e,t)=>{const n=await _(e,t);return n.message=n.message??n.Message,n},qn=(e,t)=>{const n=(r,a)=>Object.keys(r).find(o=>o.toLowerCase()===a.toLowerCase()),s=r=>{let a=r;return typeof a=="number"&&(a=a.toString()),a.indexOf(",")>=0&&(a=a.split(",")[0]),a.indexOf(":")>=0&&(a=a.split(":")[0]),a.indexOf("#")>=0&&(a=a.split("#")[1]),a},i=n(e.headers,"x-amzn-errortype");if(i!==void 0)return s(e.headers[i]);if(t&&typeof t=="object"){const r=n(t,"code");if(r&&t[r]!==void 0)return s(t[r]);if(t.__type!==void 0)return s(t.__type)}},Bn=/\d{12}\.ddb/;async function Vn(e,t,n){if(n.request?.headers?.["smithy-protocol"]==="rpc-v2-cbor"&&h(e,"PROTOCOL_RPC_V2_CBOR","M"),typeof t.retryStrategy=="function"){const r=await t.retryStrategy();typeof r.acquireInitialRetryToken=="function"?r.constructor?.name?.includes("Adaptive")?h(e,"RETRY_MODE_ADAPTIVE","F"):h(e,"RETRY_MODE_STANDARD","E"):h(e,"RETRY_MODE_LEGACY","D")}if(typeof t.accountIdEndpointMode=="function"){const r=e.endpointV2;switch(String(r?.url?.hostname).match(Bn)&&h(e,"ACCOUNT_ID_ENDPOINT","O"),await t.accountIdEndpointMode?.()){case"disabled":h(e,"ACCOUNT_ID_MODE_DISABLED","Q");break;case"preferred":h(e,"ACCOUNT_ID_MODE_PREFERRED","P");break;case"required":h(e,"ACCOUNT_ID_MODE_REQUIRED","R");break}}const i=e.__smithy_context?.selectedHttpAuthScheme?.identity;if(i?.$source){const r=i;r.accountId&&h(e,"RESOLVED_ACCOUNT_ID","T");for(const[a,o]of Object.entries(r.$source??{}))h(e,a,o)}}const pe="user-agent",H="x-amz-user-agent",ge=" ",z="/",jn=/[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g,Wn=/[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g,me="-",Gn=1024;function Kn(e){let t="";for(const n in e){const s=e[n];if(t.length+s.length+1<=Gn){t.length?t+=","+s:t+=s;continue}break}return t}const Qn=e=>(t,n)=>async s=>{const{request:i}=s;if(!T.isInstance(i))return t(s);const{headers:r}=i,a=n?.userAgent?.map(F)||[],o=(await e.defaultUserAgentProvider()).map(F);await Vn(n,e,s);const d=n;o.push(`m/${Kn(Object.assign({},n.__smithy_context?.features,d.__aws_sdk_context?.features))}`);const c=e?.customUserAgent?.map(F)||[],u=await e.userAgentAppId();u&&o.push(F([`app/${u}`]));const l=[].concat([...o,...a,...c]).join(ge),p=[...o.filter(f=>f.startsWith("aws-sdk-")),...c].join(ge);return e.runtime!=="browser"?(p&&(r[H]=r[H]?`${r[pe]} ${p}`:p),r[pe]=l):r[H]=l,t({...s,request:i})},F=e=>{const t=e[0].split(z).map(a=>a.replace(jn,me)).join(z),n=e[1]?.replace(Wn,me),s=t.indexOf(z),i=t.substring(0,s);let r=t.substring(s+1);return i==="api"&&(r=r.toLowerCase()),[i,r,n].filter(a=>a&&a.length>0).reduce((a,o,d)=>{switch(d){case 0:return o;case 1:return`${a}/${o}`;default:return`${a}#${o}`}},"")},Yn={name:"getUserAgentMiddleware",step:"build",priority:"low",tags:["SET_USER_AGENT","USER_AGENT"],override:!0},Zn=e=>({applyToStack:t=>{t.add(Qn(e),Yn)}}),Jn=async(e,t,n)=>({operation:pt(t).operation,region:await ke(e.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});function Xn(e){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"transcribe",region:e.region},propertiesExtractor:(t,n)=>({signingProperties:{config:t,context:n}})}}const es=e=>{const t=[];switch(e.operation){default:t.push(Xn(e))}return t},ts=e=>{const t=Nn(e);return Object.assign(t,{authSchemePreference:ke(e.authSchemePreference??[])})},ns=e=>Object.assign(e,{useDualstackEndpoint:e.useDualstackEndpoint??!1,useFipsEndpoint:e.useFipsEndpoint??!1,defaultSigningName:"transcribe"}),ss={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}},is="3.899.0",rs={version:is},as={handle:(e,t)=>e(t)},os=e=>t=>async n=>{n.input.SessionId===void 0&&cs(e)&&(n.input.SessionId=gt());const s={...n.input},i=await t(n),r=i.output;for(const a of Object.keys(r))r[a]===void 0&&s[a]&&(r[a]=s[a]);return i},cs=e=>e.requestHandler.metadata?.handlerProtocol?.includes("websocket"),ds={step:"initialize",name:"injectResponseValuesMiddleware",tags:["WEBSOCKET","EVENT_STREAM"],override:!0},ls=e=>t=>n=>{const{request:s}=n;return T.isInstance(s)&&e.requestHandler.metadata?.handlerProtocol?.includes("websocket")&&(s.hostname=`${s.hostname}:8443`,s.headers.host=s.hostname),t(n)},us={name:"websocketPortMiddleware",tags:["WEBSOCKET","EVENT_STREAM","PORT"],relation:"after",toMiddleware:"eventStreamHeaderMiddleware",override:!0},ps=e=>({applyToStack:t=>{t.addRelativeTo(ls(e),us),t.add(os(e),ds)}}),gs=({serviceId:e,clientVersion:t})=>async n=>{const s=typeof window<"u"&&window?.navigator?.userAgent?mt.parse(window.navigator.userAgent):void 0,i=[["aws-sdk-js",t],["ua","2.1"],[`os/${s?.os?.name||"other"}`,s?.os?.version],["lang/js"],["md/browser",`${s?.browser?.name??"unknown"}_${s?.browser?.version??"unknown"}`]];e&&i.push([`api/${e}`,t]);const r=await n?.userAgentAppId?.();return r&&i.push([`app/${r}`]),i},Ue="required",E="fn",b="argv",k="ref",fe=!0,he="isSet",N="booleanEquals",P="error",O="endpoint",x="tree",X="PartitionResult",Se={[Ue]:!1,type:"String"},Ee={[Ue]:!0,default:!1,type:"Boolean"},be={[k]:"Endpoint"},Ne={[E]:N,[b]:[{[k]:"UseFIPS"},!0]},Fe={[E]:N,[b]:[{[k]:"UseDualStack"},!0]},S={},we={[E]:"getAttr",[b]:[{[k]:X},"supportsFIPS"]},ye={[E]:N,[b]:[!0,{[E]:"getAttr",[b]:[{[k]:X},"supportsDualStack"]}]},xe=[Ne],Ce=[Fe],ve=[{[k]:"Region"}],ms={parameters:{Region:Se,UseDualStack:Ee,UseFIPS:Ee,Endpoint:Se},rules:[{conditions:[{[E]:he,[b]:[be]}],rules:[{conditions:xe,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:P},{conditions:Ce,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:P},{endpoint:{url:be,properties:S,headers:S},type:O}],type:x},{conditions:[{[E]:he,[b]:ve}],rules:[{conditions:[{[E]:"aws.partition",[b]:ve,assign:X}],rules:[{conditions:[Ne,Fe],rules:[{conditions:[{[E]:N,[b]:[fe,we]},ye],rules:[{endpoint:{url:"https://transcribestreaming-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:S,headers:S},type:O}],type:x},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:P}],type:x},{conditions:xe,rules:[{conditions:[{[E]:N,[b]:[we,fe]}],rules:[{endpoint:{url:"https://transcribestreaming-fips.{Region}.{PartitionResult#dnsSuffix}",properties:S,headers:S},type:O}],type:x},{error:"FIPS is enabled but this partition does not support FIPS",type:P}],type:x},{conditions:Ce,rules:[{conditions:[ye],rules:[{endpoint:{url:"https://transcribestreaming.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:S,headers:S},type:O}],type:x},{error:"DualStack is enabled but this partition does not support DualStack",type:P}],type:x},{endpoint:{url:"https://transcribestreaming.{Region}.{PartitionResult#dnsSuffix}",properties:S,headers:S},type:O}],type:x}],type:x},{error:"Invalid Configuration: Missing Region",type:P}]},fs=ms,hs=new ft({size:50,params:["Endpoint","Region","UseDualStack","UseFIPS"]}),Ss=(e,t={})=>hs.get(e,()=>ht(fs,{endpointParams:e,logger:t.logger}));Pe.aws=Oe;const Es=e=>({apiVersion:"2017-10-26",base64Decoder:e?.base64Decoder??yt,base64Encoder:e?.base64Encoder??wt,disableHostPrefix:e?.disableHostPrefix??!1,endpointProvider:e?.endpointProvider??Ss,extensions:e?.extensions??[],httpAuthSchemeProvider:e?.httpAuthSchemeProvider??es,httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:t=>t.getIdentityProvider("aws.auth#sigv4"),signer:new Un}],logger:e?.logger??new bt,serviceId:e?.serviceId??"Transcribe Streaming",urlParser:e?.urlParser??Et,utf8Decoder:e?.utf8Decoder??St,utf8Encoder:e?.utf8Encoder??Me}),bs=e=>{const t=xt(e),n=()=>t().then(Ot),s=Es(e);return{...s,...e,runtime:"browser",defaultsMode:t,bodyLengthChecker:e?.bodyLengthChecker??Pt,credentialDefaultProvider:e?.credentialDefaultProvider??(i=>()=>Promise.reject(new Error("Credential is missing"))),defaultUserAgentProvider:e?.defaultUserAgentProvider??gs({serviceId:s.serviceId,clientVersion:rs.version}),eventStreamPayloadHandlerProvider:e?.eventStreamPayloadHandlerProvider??(()=>as),eventStreamSerdeProvider:e?.eventStreamSerdeProvider??It,maxAttempts:e?.maxAttempts??Rt,region:e?.region??_t("Region is missing"),requestHandler:Tt.create(e?.requestHandler??n,Dt.create(n)),retryMode:e?.retryMode??(async()=>(await n()).retryMode||At),sha256:e?.sha256??vt,streamCollector:e?.streamCollector??Ct,useDualstackEndpoint:e?.useDualstackEndpoint??(()=>Promise.resolve(kt)),useFipsEndpoint:e?.useFipsEndpoint??(()=>Promise.resolve(Mt))}},ws=e=>({setRegion(t){e.region=t},region(){return e.region}}),ys=e=>({region:e.region()}),xs=e=>{const t=e.httpAuthSchemes;let n=e.httpAuthSchemeProvider,s=e.credentials;return{setHttpAuthScheme(i){const r=t.findIndex(a=>a.schemeId===i.schemeId);r===-1?t.push(i):t.splice(r,1,i)},httpAuthSchemes(){return t},setHttpAuthSchemeProvider(i){n=i},httpAuthSchemeProvider(){return n},setCredentials(i){s=i},credentials(){return s}}},Cs=e=>({httpAuthSchemes:e.httpAuthSchemes(),httpAuthSchemeProvider:e.httpAuthSchemeProvider(),credentials:e.credentials()}),vs=(e,t)=>{const n=Object.assign(ws(e),$t(e),Ut(e),xs(e));return t.forEach(s=>s.configure(n)),Object.assign(e,ys(n),Nt(n),Ft(n),Cs(n))};class As extends Lt{config;constructor(...[t]){const n=bs(t||{});super(n),this.initConfig=n;const s=ns(n),i=Tn(s),r=Ht(i),a=zt(r),o=a,d=qt(o),c=Bt(d),u=ts(c),l=Vt(u),p=jt(l),f=vs(p,t?.extensions||[]);this.config=f,this.middlewareStack.use(Zn(this.config)),this.middlewareStack.use(Wt(this.config)),this.middlewareStack.use(Gt(this.config)),this.middlewareStack.use(Sn(this.config)),this.middlewareStack.use(wn(this.config)),this.middlewareStack.use(Cn(this.config)),this.middlewareStack.use(Kt(this.config,{httpAuthSchemeParametersProvider:Jn,identityProviderConfigProvider:async L=>new Yt({"aws.auth#sigv4":L.credentials})})),this.middlewareStack.use(Qt(this.config))}destroy(){super.destroy()}}class C extends Zt{constructor(t){super(t),Object.setPrototypeOf(this,C.prototype)}}var V;(function(e){e.visit=(t,n)=>t.AudioEvent!==void 0?n.AudioEvent(t.AudioEvent):t.ConfigurationEvent!==void 0?n.ConfigurationEvent(t.ConfigurationEvent):n._(t.$unknown[0],t.$unknown[1])})(V||(V={}));class ee extends C{name="BadRequestException";$fault="client";Message;constructor(t){super({name:"BadRequestException",$fault:"client",...t}),Object.setPrototypeOf(this,ee.prototype),this.Message=t.Message}}class te extends C{name="ConflictException";$fault="client";Message;constructor(t){super({name:"ConflictException",$fault:"client",...t}),Object.setPrototypeOf(this,te.prototype),this.Message=t.Message}}class ne extends C{name="InternalFailureException";$fault="server";Message;constructor(t){super({name:"InternalFailureException",$fault:"server",...t}),Object.setPrototypeOf(this,ne.prototype),this.Message=t.Message}}class se extends C{name="LimitExceededException";$fault="client";Message;constructor(t){super({name:"LimitExceededException",$fault:"client",...t}),Object.setPrototypeOf(this,se.prototype),this.Message=t.Message}}class ie extends C{name="ServiceUnavailableException";$fault="server";Message;constructor(t){super({name:"ServiceUnavailableException",$fault:"server",...t}),Object.setPrototypeOf(this,ie.prototype),this.Message=t.Message}}var Ae;(function(e){e.visit=(t,n)=>t.UtteranceEvent!==void 0?n.UtteranceEvent(t.UtteranceEvent):t.CategoryEvent!==void 0?n.CategoryEvent(t.CategoryEvent):t.BadRequestException!==void 0?n.BadRequestException(t.BadRequestException):t.LimitExceededException!==void 0?n.LimitExceededException(t.LimitExceededException):t.InternalFailureException!==void 0?n.InternalFailureException(t.InternalFailureException):t.ConflictException!==void 0?n.ConflictException(t.ConflictException):t.ServiceUnavailableException!==void 0?n.ServiceUnavailableException(t.ServiceUnavailableException):n._(t.$unknown[0],t.$unknown[1])})(Ae||(Ae={}));class re extends C{name="ResourceNotFoundException";$fault="client";Message;constructor(t){super({name:"ResourceNotFoundException",$fault:"client",...t}),Object.setPrototypeOf(this,re.prototype),this.Message=t.Message}}const ai={PHI:"PHI"};var Te;(function(e){e.visit=(t,n)=>t.AudioEvent!==void 0?n.AudioEvent(t.AudioEvent):t.SessionControlEvent!==void 0?n.SessionControlEvent(t.SessionControlEvent):t.ConfigurationEvent!==void 0?n.ConfigurationEvent(t.ConfigurationEvent):n._(t.$unknown[0],t.$unknown[1])})(Te||(Te={}));var _e;(function(e){e.visit=(t,n)=>t.TranscriptEvent!==void 0?n.TranscriptEvent(t.TranscriptEvent):t.BadRequestException!==void 0?n.BadRequestException(t.BadRequestException):t.LimitExceededException!==void 0?n.LimitExceededException(t.LimitExceededException):t.InternalFailureException!==void 0?n.InternalFailureException(t.InternalFailureException):t.ConflictException!==void 0?n.ConflictException(t.ConflictException):t.ServiceUnavailableException!==void 0?n.ServiceUnavailableException(t.ServiceUnavailableException):n._(t.$unknown[0],t.$unknown[1])})(_e||(_e={}));var Re;(function(e){e.visit=(t,n)=>t.TranscriptEvent!==void 0?n.TranscriptEvent(t.TranscriptEvent):t.BadRequestException!==void 0?n.BadRequestException(t.BadRequestException):t.LimitExceededException!==void 0?n.LimitExceededException(t.LimitExceededException):t.InternalFailureException!==void 0?n.InternalFailureException(t.InternalFailureException):t.ConflictException!==void 0?n.ConflictException(t.ConflictException):t.ServiceUnavailableException!==void 0?n.ServiceUnavailableException(t.ServiceUnavailableException):n._(t.$unknown[0],t.$unknown[1])})(Re||(Re={}));var Ie;(function(e){e.visit=(t,n)=>t.TranscriptEvent!==void 0?n.TranscriptEvent(t.TranscriptEvent):t.BadRequestException!==void 0?n.BadRequestException(t.BadRequestException):t.LimitExceededException!==void 0?n.LimitExceededException(t.LimitExceededException):t.InternalFailureException!==void 0?n.InternalFailureException(t.InternalFailureException):t.ConflictException!==void 0?n.ConflictException(t.ConflictException):t.ServiceUnavailableException!==void 0?n.ServiceUnavailableException(t.ServiceUnavailableException):n._(t.$unknown[0],t.$unknown[1])})(Ie||(Ie={}));const Ts=e=>({...e,...e.AudioStream&&{AudioStream:"STREAMING_CONTENT"}}),_s=e=>({...e,...e.TranscriptResultStream&&{TranscriptResultStream:"STREAMING_CONTENT"}}),Rs=async(e,t)=>{const n=Jt(e,t),s=A({},D,{"content-type":"application/json",[Je]:e[je],[Z]:[()=>D(e[W]),()=>e[W].toString()],[Xe]:e[We],[st]:e[Ye],[et]:e[Ge],[nt]:e[Qe],[J]:[()=>D(e[K]),()=>e[K].toString()],[tt]:e[Ke],[Q]:[()=>D(e[j]),()=>e[j].toString()],[Y]:[()=>D(e[G]),()=>e[G].toString()],[Ze]:e[Ve]});n.bp("/medical-stream-transcription");let i;return e.AudioStream!==void 0&&(i=Ds(e.AudioStream,t)),n.m("POST").h(s).b(i),n.build()},Is=async(e,t)=>{if(e.statusCode!==200&&e.statusCode>=300)return Ps(e,t);const n=A({$metadata:R(e),[Xs]:[,e.headers[ei]],[je]:[,e.headers[Je]],[W]:[()=>e.headers[Z]!==void 0,()=>oe(e.headers[Z])],[We]:[,e.headers[Xe]],[Ye]:[,e.headers[st]],[Ge]:[,e.headers[et]],[Qe]:[,e.headers[nt]],[K]:[()=>e.headers[J]!==void 0,()=>ce(e.headers[J])],[Ke]:[,e.headers[tt]],[j]:[()=>e.headers[Q]!==void 0,()=>ce(e.headers[Q])],[G]:[()=>e.headers[Y]!==void 0,()=>oe(e.headers[Y])],[Ve]:[,e.headers[Ze]]}),s=e.body;return n.TranscriptResultStream=Us(s,t),n},Ps=async(e,t)=>{const n={...e,body:await zn(e.body,t)},s=qn(e,n.body);switch(s){case"BadRequestException":case"com.amazonaws.transcribestreaming#BadRequestException":throw await Le(n);case"InternalFailureException":case"com.amazonaws.transcribestreaming#InternalFailureException":throw await ze(n);case"LimitExceededException":case"com.amazonaws.transcribestreaming#LimitExceededException":throw await qe(n);case"ResourceNotFoundException":case"com.amazonaws.transcribestreaming#ResourceNotFoundException":throw await ks(n);case"ConflictException":case"com.amazonaws.transcribestreaming#ConflictException":throw await He(n);case"ServiceUnavailableException":case"com.amazonaws.transcribestreaming#ServiceUnavailableException":throw await Be(n);default:const i=n.body;return Ms({output:e,parsedBody:i,errorCode:s})}},Ms=Xt(C),Le=async(e,t)=>{const n=A({}),s=e.body,i=m(s,{Message:g});Object.assign(n,i);const r=new ee({$metadata:R(e),...n});return M(r,e.body)},He=async(e,t)=>{const n=A({}),s=e.body,i=m(s,{Message:g});Object.assign(n,i);const r=new te({$metadata:R(e),...n});return M(r,e.body)},ze=async(e,t)=>{const n=A({}),s=e.body,i=m(s,{Message:g});Object.assign(n,i);const r=new ne({$metadata:R(e),...n});return M(r,e.body)},qe=async(e,t)=>{const n=A({}),s=e.body,i=m(s,{Message:g});Object.assign(n,i);const r=new se({$metadata:R(e),...n});return M(r,e.body)},ks=async(e,t)=>{const n=A({}),s=e.body,i=m(s,{Message:g});Object.assign(n,i);const r=new re({$metadata:R(e),...n});return M(r,e.body)},Be=async(e,t)=>{const n=A({}),s=e.body,i=m(s,{Message:g});Object.assign(n,i);const r=new ie({$metadata:R(e),...n});return M(r,e.body)},Ds=(e,t)=>{const n=s=>V.visit(s,{AudioEvent:i=>Os(i),ConfigurationEvent:i=>$s(i,t),_:i=>i});return t.eventStreamMarshaller.serialize(e,n)},Os=(e,t)=>{const n={":event-type":{type:"string",value:"AudioEvent"},":message-type":{type:"string",value:"event"},":content-type":{type:"string",value:"application/octet-stream"}};let s=new Uint8Array;return e.AudioChunk!=null&&(s=e.AudioChunk),{headers:n,body:s}},$s=(e,t)=>{const n={":event-type":{type:"string",value:"ConfigurationEvent"},":message-type":{type:"string",value:"event"},":content-type":{type:"string",value:"application/json"}};let s=new Uint8Array;return s=B(e),s=t.utf8Decoder(JSON.stringify(s)),{headers:n,body:s}},Us=(e,t)=>t.eventStreamMarshaller.deserialize(e,async n=>n.TranscriptEvent!=null?{TranscriptEvent:await zs(n.TranscriptEvent,t)}:n.BadRequestException!=null?{BadRequestException:await Ns(n.BadRequestException,t)}:n.LimitExceededException!=null?{LimitExceededException:await Hs(n.LimitExceededException,t)}:n.InternalFailureException!=null?{InternalFailureException:await Ls(n.InternalFailureException,t)}:n.ConflictException!=null?{ConflictException:await Fs(n.ConflictException,t)}:n.ServiceUnavailableException!=null?{ServiceUnavailableException:await qs(n.ServiceUnavailableException,t)}:{$unknown:n}),Ns=async(e,t)=>{const n={...e,body:await _(e.body,t)};return Le(n)},Fs=async(e,t)=>{const n={...e,body:await _(e.body,t)};return He(n)},Ls=async(e,t)=>{const n={...e,body:await _(e.body,t)};return ze(n)},Hs=async(e,t)=>{const n={...e,body:await _(e.body,t)};return qe(n)},zs=async(e,t)=>{const n={},s=await _(e.body,t);return Object.assign(n,Js(s)),n},qs=async(e,t)=>{const n={...e,body:await _(e.body,t)};return Be(n)},Bs=(e,t)=>m(e,{Entities:n=>Ws(n),Items:n=>Ks(n),Transcript:g}),Vs=(e,t)=>(e||[]).filter(s=>s!=null).map(s=>Bs(s)),js=(e,t)=>m(e,{Category:g,Confidence:v,Content:g,EndTime:v,StartTime:v}),Ws=(e,t)=>(e||[]).filter(s=>s!=null).map(s=>js(s)),Gs=(e,t)=>m(e,{Confidence:v,Content:g,EndTime:v,Speaker:g,StartTime:v,Type:g}),Ks=(e,t)=>(e||[]).filter(s=>s!=null).map(s=>Gs(s)),Qs=(e,t)=>m(e,{Alternatives:n=>Vs(n),ChannelId:g,EndTime:v,IsPartial:en,ResultId:g,StartTime:v}),Ys=(e,t)=>(e||[]).filter(s=>s!=null).map(s=>Qs(s)),Zs=(e,t)=>m(e,{Results:n=>Ys(n)}),Js=(e,t)=>m(e,{Transcript:n=>Zs(n)}),R=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),Ve="ContentIdentificationType",j="EnableChannelIdentification",je="LanguageCode",We="MediaEncoding",W="MediaSampleRateHertz",G="NumberOfChannels",Xs="RequestId",Ge="Specialty",Ke="SessionId",K="ShowSpeakerLabel",Qe="Type",Ye="VocabularyName",ei="x-amzn-request-id",Ze="x-amzn-transcribe-content-identification-type",Q="x-amzn-transcribe-enable-channel-identification",Je="x-amzn-transcribe-language-code",Xe="x-amzn-transcribe-media-encoding",Y="x-amzn-transcribe-number-of-channels",et="x-amzn-transcribe-specialty",tt="x-amzn-transcribe-session-id",Z="x-amzn-transcribe-sample-rate",J="x-amzn-transcribe-show-speaker-label",nt="x-amzn-transcribe-type",st="x-amzn-transcribe-vocabulary-name";class ti extends tn.classBuilder().ep(ss).m(function(t,n,s,i){return[nn(s,this.serialize,this.deserialize),sn(s,t.getEndpointParameterInstructions()),dn(s),mn(s,{headerPrefix:"x-amzn-transcribe-"}),ps(s)]}).s("Transcribe","StartMedicalStreamTranscription",{eventStream:{input:!0,output:!0}}).n("TranscribeStreamingClient","StartMedicalStreamTranscriptionCommand").f(Ts,_s).ser(Rs).de(Is).build(){}class ni{medicalReplacements=new Map([[/met formin/gi,"metformin"],[/lice in a pril/gi,"lisinopril"],[/a tor va statin/gi,"atorvastatin"],[/met o pro lol/gi,"metoprolol"],[/am lo di pine/gi,"amlodipine"],[/oh meh pra zole/gi,"omeprazole"],[/gaba pentin/gi,"gabapentin"],[/hydro chloro thia zide/gi,"hydrochlorothiazide"],[/los ar tan/gi,"losartan"],[/sim va statin/gi,"simvastatin"],[/(\d+)\s*(milligrams?|mg\.?)/gi,"$1mg"],[/(\d+)\s*(micrograms?|mcg\.?)/gi,"$1mcg"],[/(\d+)\s*units?\b/gi,"$1 units"],[/(\d+)\s*milli\s*equivalents?/gi,"$1mEq"],[/\bonce\s+(?:a|per)\s+day\b/gi,"daily"],[/\btwice\s+(?:a|per)\s+day\b/gi,"BID"],[/\bthree\s+times\s+(?:a|per)\s+day\b/gi,"TID"],[/\bfour\s+times\s+(?:a|per)\s+day\b/gi,"QID"],[/\bas\s+needed\b/gi,"PRN"],[/\bat\s+bedtime\b/gi,"HS"],[/\bevery\s+(\d+)\s+hours?\b/gi,"Q$1H"],[/(\d+)\s+over\s+(\d+)/gi,"$1/$2"],[/(\d+)\s+slash\s+(\d+)/gi,"$1/$2"],[/(\d+\.?\d*)\s*degrees?\s*(?:fahrenheit)?/gi,"$1°F"],[/(\d+\.?\d*)\s*degrees?\s*celsius/gi,"$1°C"],[/(\d+)\s*(?:beats?\s*)?per\s*minute/gi,"$1 bpm"],[/(\d+)\s*percent/gi,"$1%"],[/high\s+blood\s+pressure/gi,"hypertension"],[/sugar\s+diabetes/gi,"diabetes mellitus"],[/type\s+two\s+diabetes/gi,"type 2 diabetes"],[/a\s*fib\b/gi,"atrial fibrillation"],[/c\s*o\s*p\s*d/gi,"COPD"],[/c\s*h\s*f/gi,"CHF"],[/m\s*i\b/gi,"MI"],[/c\s*v\s*a/gi,"CVA"],[/t\s*i\s*a/gi,"TIA"],[/u\s*t\s*i/gi,"UTI"],[/g\s*e\s*r\s*d/gi,"GERD"],[/cardio\s*vascular/gi,"cardiovascular"],[/gastro\s*intestinal/gi,"gastrointestinal"],[/genito\s*urinary/gi,"genitourinary"],[/musculo\s*skeletal/gi,"musculoskeletal"],[/no\s+acute\s+distress/gi,"no acute distress"],[/alert\s+and\s+oriented\s+times?\s+three/gi,"alert and oriented x3"],[/clear\s+to\s+auscultation\s+bilaterally/gi,"clear to auscultation bilaterally"],[/regular\s+rate\s+and\s+rhythm/gi,"regular rate and rhythm"],[/no\s+murmurs\s+rubs\s+or\s+gallops/gi,"no murmurs, rubs, or gallops"],[/soft\s+non-?tender\s+non-?distended/gi,"soft, non-tender, non-distended"],[/no\s+clubbing\s+cyanosis\s+or\s+edema/gi,"no clubbing, cyanosis, or edema"],[/a\s+one\s+c/gi,"A1C"],[/hemoglobin\s+a\s+one\s+c/gi,"HbA1c"],[/b\s+u\s+n/gi,"BUN"],[/c\s+b\s+c/gi,"CBC"],[/c\s+m\s+p/gi,"CMP"],[/t\s+s\s+h/gi,"TSH"],[/p\s+t\s+slash\s+i\s+n\s+r/gi,"PT/INR"],[/l\s+d\s+l/gi,"LDL"],[/h\s+d\s+l/gi,"HDL"],[/\bpo\b/gi,"PO"],[/\bim\b/gi,"IM"],[/\biv\b/gi,"IV"],[/\bsubq\b/gi,"SubQ"],[/\bbid\b/gi,"BID"],[/\btid\b/gi,"TID"],[/\bqid\b/gi,"QID"],[/\bprn\b/gi,"PRN"],[/\bhs\b/gi,"HS"],[/\bac\b/gi,"AC"],[/\bpc\b/gi,"PC"],[/\bone\s+thousand/gi,"1000"],[/\bfive\s+hundred/gi,"500"],[/\btwo\s+fifty/gi,"250"],[/\bone\s+twenty\s+five/gi,"125"],[/\bseventy\s+five/gi,"75"],[/\bfifty/gi,"50"],[/\btwenty\s+five/gi,"25"],[/\btwenty/gi,"20"],[/\bfifteen/gi,"15"],[/\bten/gi,"10"],[/\bfive/gi,"5"]]);enhanceTranscript(t){let n=t;return this.medicalReplacements.forEach((s,i)=>{n=n.replace(i,s)}),n=this.fixSentenceStructure(n),n=this.fixMedicalContext(n),n}fixSentenceStructure(t){return t.replace(/(\d+mg)(\s+[A-Z])/g,"$1.$2").replace(/(daily|BID|TID|QID|PRN)(\s+[A-Z])/g,"$1.$2").replace(/(follow up in \d+ (?:days?|weeks?|months?))(\s+[A-Z])/g,"$1.$2").replace(/\s+/g," ").replace(/\.\s*\./g,".").replace(/([.!?])\s*([a-z])/g,(n,s,i)=>`${s} ${i.toUpperCase()}`).replace(/([.!?,;:])([A-Za-z])/g,"$1 $2").trim()}fixMedicalContext(t){return t.replace(/blood pressure[:\s]+(\d+\/\d+)/gi,"Blood pressure: $1").replace(/BP[:\s]+(\d+\/\d+)/gi,"BP: $1").replace(/heart rate[:\s]+(\d+)/gi,"Heart rate: $1 bpm").replace(/pulse[:\s]+(\d+)/gi,"Pulse: $1 bpm").replace(/temperature[:\s]+(\d+\.?\d*)/gi,"Temperature: $1°F").replace(/temp[:\s]+(\d+\.?\d*)/gi,"Temp: $1°F").replace(/(?:oxygen|O2|sat)[:\s]+(\d+)/gi,"O2 sat: $1%").replace(/weight[:\s]+(\d+)/gi,"Weight: $1 lbs").replace(/A1C[:\s]+(\d+\.?\d*)/gi,"A1C: $1%").replace(/glucose[:\s]+(\d+)/gi,"Glucose: $1 mg/dL").replace(/creatinine[:\s]+(\d+\.?\d*)/gi,"Creatinine: $1 mg/dL")}getMedicalTermDensity(t){const n=["patient","diagnosis","medication","mg","daily","BID","TID","blood pressure","heart rate","temperature","exam","assessment","plan","follow up","symptoms","history","physical","vital"],s=t.toLowerCase().split(/\s+/),i=s.filter(r=>n.some(a=>a.includes(r)||r.includes(a))).length;return s.length>0?i/s.length:0}}const q=new ni;class it{client=null;audioContext=null;source=null;processor=null;mediaStream=null;audioQueue=[];isRecording=!1;currentTranscript="";constructor(){this.initializeClient()}initializeClient(){try{throw new Error("AWS credentials not configured. Please set VITE_AWS_ACCESS_KEY_ID and VITE_AWS_SECRET_ACCESS_KEY in environment variables.")}catch{w("awsTranscribeSimple","Error message",{})}}async startRecording(t,n){if(!this.client)return n("AWS client not initialized"),!1;try{y("awsTranscribeSimple","Debug message",{}),this.mediaStream=await navigator.mediaDevices.getUserMedia({audio:{sampleRate:16e3,channelCount:1,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1,sampleSize:16,latency:0}}),I("awsTranscribeSimple","Info message",{}),this.audioContext=new(window.AudioContext||window.webkitAudioContext)({sampleRate:16e3}),this.source=this.audioContext.createMediaStreamSource(this.mediaStream),this.processor=this.audioContext.createScriptProcessor(4096,1,1),this.currentTranscript="",this.audioQueue=[],this.isRecording=!0,this.processor.onaudioprocess=o=>{if(!this.isRecording)return;const d=o.inputBuffer.getChannelData(0);this.audioQueue.push(new Float32Array(d))},this.source.connect(this.processor),this.processor.connect(this.audioContext.destination);const s=this;async function*i(){for(y("awsTranscribeSimple","Debug message",{});s.isRecording||s.audioQueue.length>0;)if(s.audioQueue.length>0){const o=s.audioQueue.shift(),d=new Int16Array(o.length);for(let u=0;u<o.length;u++){const l=Math.max(-1,Math.min(1,o[u]));d[u]=l<0?l*32768:l*32767}yield{AudioEvent:{AudioChunk:new Uint8Array(d.buffer)}}}else await new Promise(o=>setTimeout(o,50));y("awsTranscribeSimple","Debug message",{})}y("awsTranscribeSimple","Debug message",{});const r=new ti({LanguageCode:"en-US",MediaSampleRateHertz:16e3,MediaEncoding:"pcm",Specialty:"PRIMARYCARE",Type:"DICTATION",ShowSpeakerLabels:!1,ContentIdentificationType:"PHI",EnablePartialResultsStabilization:!0,PartialResultsStability:"high",VocabularyName:void 0,AudioStream:i()}),a=await this.client.send(r);if(I("awsTranscribeSimple","Info message",{}),a.TranscriptResultStream)this.processTranscriptStream(a.TranscriptResultStream,t,n);else throw new Error("No TranscriptResultStream received");return I("awsTranscribeSimple","Info message",{}),!0}catch(s){w("awsTranscribeSimple","Error message",{}),w("awsTranscribeSimple","Error message",{}),w("awsTranscribeSimple","Error message",{}),w("awsTranscribeSimple","Error message",{});let i="AWS Transcribe Medical error: ";return s.name==="UnrecognizedClientException"||s.name==="InvalidSignatureException"?i+="Invalid AWS credentials. Please check your AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.":s.name==="AccessDeniedException"?i+="Access denied. Your AWS credentials don't have permission for Transcribe Medical.":s.name==="NetworkingError"||s.message?.includes("Network")?i+="Network error. Please check your internet connection and CORS settings.":s.$metadata?.httpStatusCode===403?i+="Permission denied. Ensure your AWS IAM user has TranscribeStreaming permissions.":i+=s.message||"Failed to start recording",n(i),this.cleanup(),!1}}async processTranscriptStream(t,n,s){try{y("awsTranscribeSimple","Debug message",{});let i=0;for await(const r of t){if(i++,r.TranscriptEvent){const a=r.TranscriptEvent.Transcript?.Results||[];for(const o of a)if(o.Alternatives&&o.Alternatives.length>0){const d=o.Alternatives[0].Transcript||"";if(d)if(o.IsPartial){const c=q.enhanceTranscript(d);y("awsTranscribeSimple","Debug message",{}),n(c,!1)}else{const c=q.enhanceTranscript(d);this.currentTranscript+=c+" ";const u=q.getMedicalTermDensity(c);I("awsTranscribeSimple","Info message",{}),y("awsTranscribeSimple","Debug message",{}),n(c,!0)}}}r.BadRequestException&&(w("awsTranscribeSimple","Error message",{}),s(`Bad request: ${r.BadRequestException.Message}`)),r.LimitExceededException&&(w("awsTranscribeSimple","Error message",{}),s(`Limit exceeded: ${r.LimitExceededException.Message}`)),r.InternalFailureException&&(w("awsTranscribeSimple","Error message",{}),s(`Internal failure: ${r.InternalFailureException.Message}`))}y("awsTranscribeSimple","Debug message",{})}catch(i){w("awsTranscribeSimple","Error message",{}),s(i.message||"Stream processing error")}}stopRecording(){return y("awsTranscribeSimple","Debug message",{}),this.isRecording=!1,this.cleanup(),I("awsTranscribeSimple","Info message",{}),this.currentTranscript}cleanup(){this.source&&(this.source.disconnect(),this.source=null),this.processor&&(this.processor.disconnect(),this.processor=null),this.audioContext&&this.audioContext.state!=="closed"&&(this.audioContext.close(),this.audioContext=null),this.mediaStream&&(this.mediaStream.getTracks().forEach(t=>t.stop()),this.mediaStream=null),this.audioQueue=[]}isInitialized(){return this.client!==null}isConfigured(){return this.client!==null}stop(){this.stopRecording()}getCurrentTranscript(){return this.currentTranscript}}const si=new it,oi=Object.freeze(Object.defineProperty({__proto__:null,AWSTranscribeSimpleService:it,awsTranscribeSimple:si},Symbol.toStringTag,{value:"Module"}));export{ai as M,ti as S,As as T,si as a,oi as b,q as m};
//# sourceMappingURL=awsTranscribeSimple.service-BKxEC8hU.js.map
