{"version":3,"file":"WeightLossDashboard-BQLWrjdo.js","sources":["../../src/pages/WeightLossDashboard.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { weightLossProfileService } from '../weightloss/weightLossProfile.service';\nimport type { WeightLossProfile, DailyCheckin } from '../weightloss/types';\n\nexport default function WeightLossDashboard() {\n  const navigate = useNavigate();\n  const [profile, setProfile] = useState<WeightLossProfile | null>(null);\n  const [checkins, setCheckins] = useState<DailyCheckin[]>([]);\n  const [progress, setProgress] = useState({\n    totalWeightLoss: 0,\n    percentageLoss: 0,\n    averageWeeklyLoss: 0,\n    currentStreak: 0,\n    daysOnProgram: 0,\n  });\n  const [stall, setStall] = useState({\n    isStalled: false,\n    daysStalled: 0,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [todayComplete, setTodayComplete] = useState(false);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const loadDashboardData = () => {\n    // For now, use the same patient ID pattern\n    const patientId = `patient_${Date.now()}`;\n    const existingProfile = weightLossProfileService.loadProfile(patientId);\n\n    if (!existingProfile) {\n      navigate('/weightloss/onboarding');\n      return;\n    }\n\n    setProfile(existingProfile);\n\n    // Load last 30 days of check-ins\n    const endDate = new Date().toISOString().split('T')[0];\n    const startDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n    const recentCheckins = weightLossProfileService.getDailyCheckins(\n      existingProfile.patientId,\n      startDate,\n      endDate\n    );\n    setCheckins(recentCheckins);\n\n    // Calculate progress\n    const progressData = weightLossProfileService.calculateProgress(existingProfile.patientId);\n    setProgress(progressData);\n\n    // Check for stalls\n    const stallData = weightLossProfileService.detectStall(existingProfile.patientId);\n    setStall(stallData);\n\n    // Check if today's check-in is complete\n    setTodayComplete(weightLossProfileService.isTodayCheckinComplete(existingProfile.patientId));\n\n    setIsLoading(false);\n  };\n\n  const getWeightTrend = () => {\n    if (checkins.length < 2) return 'stable';\n    const weights = checkins.filter(c => c.weight).map(c => c.weight!);\n    if (weights.length < 2) return 'stable';\n\n    const recent = weights.slice(-7);\n    const older = weights.slice(-14, -7);\n\n    if (older.length === 0) return 'stable';\n\n    const recentAvg = recent.reduce((a, b) => a + b, 0) / recent.length;\n    const olderAvg = older.reduce((a, b) => a + b, 0) / older.length;\n\n    if (recentAvg < olderAvg - 0.5) return 'down';\n    if (recentAvg > olderAvg + 0.5) return 'up';\n    return 'stable';\n  };\n\n  const formatWeight = (weight: number) => {\n    if (!profile) return weight.toString();\n    return profile.demographics.preferredUnits.weight === 'kg'\n      ? weight.toFixed(1)\n      : Math.round(weight * 2.20462).toString();\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-green-600 mx-auto mb-4\"></div>\n          <p className=\"text-lg text-gray-600\">Loading dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return null;\n  }\n\n  const weightTrend = getWeightTrend();\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Your Progress Dashboard</h1>\n              <p className=\"text-gray-600 mt-1\">Day {progress.daysOnProgram} of your journey</p>\n            </div>\n            <div className=\"flex space-x-3\">\n              {!todayComplete && (\n                <button\n                  onClick={() => navigate('/weightloss/checkin')}\n                  className=\"px-6 py-3 bg-gradient-to-r from-green-600 to-blue-600 text-white font-semibold rounded-lg hover:from-green-700 hover:to-blue-700 shadow-lg\"\n                >\n                  Today's Check-in\n                </button>\n              )}\n              <button\n                onClick={() => navigate('/weightloss/onboarding')}\n                className=\"px-6 py-3 bg-white text-gray-700 font-semibold rounded-lg border-2 border-gray-300 hover:bg-gray-50\"\n              >\n                Edit Profile\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Stall Alert */}\n        {stall.isStalled && (\n          <div className=\"bg-yellow-50 border-2 border-yellow-200 rounded-xl p-4 mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-3xl\">ü§î</div>\n              <div>\n                <div className=\"font-semibold text-yellow-800\">Weight Loss Plateau Detected</div>\n                <div className=\"text-sm text-yellow-700\">\n                  Your weight has been stable for {stall.daysStalled} days. Consider trying a\n                  protein reset or increasing activity.\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Key Metrics */}\n        <div className=\"grid md:grid-cols-4 gap-4 mb-6\">\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm text-gray-500\">Total Loss</span>\n              <span\n                className={`text-2xl ${weightTrend === 'down' ? 'üìâ' : weightTrend === 'up' ? 'üìà' : '‚û°Ô∏è'}`}\n              ></span>\n            </div>\n            <div className=\"text-3xl font-bold text-gray-900\">\n              {formatWeight(Math.abs(progress.totalWeightLoss))}{' '}\n              {profile.demographics.preferredUnits.weight}\n            </div>\n            <div\n              className={`text-sm mt-1 ${progress.totalWeightLoss > 0 ? 'text-green-600' : 'text-gray-600'}`}\n            >\n              {progress.percentageLoss.toFixed(1)}% of body weight\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm text-gray-500\">Weekly Average</span>\n              <span className=\"text-2xl\">üìä</span>\n            </div>\n            <div className=\"text-3xl font-bold text-gray-900\">\n              {formatWeight(Math.abs(progress.averageWeeklyLoss))}{' '}\n              {profile.demographics.preferredUnits.weight}\n            </div>\n            <div className=\"text-sm text-gray-600 mt-1\">per week</div>\n          </div>\n\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm text-gray-500\">Check-in Streak</span>\n              <span className=\"text-2xl\">üî•</span>\n            </div>\n            <div className=\"text-3xl font-bold text-gray-900\">{progress.currentStreak}</div>\n            <div className=\"text-sm text-gray-600 mt-1\">days</div>\n          </div>\n\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm text-gray-500\">Current Weight</span>\n              <span className=\"text-2xl\">‚öñÔ∏è</span>\n            </div>\n            <div className=\"text-3xl font-bold text-gray-900\">\n              {checkins.length > 0 && checkins[checkins.length - 1].weight\n                ? formatWeight(checkins[checkins.length - 1].weight)\n                : formatWeight(profile.demographics.startingWeight)}{' '}\n              {profile.demographics.preferredUnits.weight}\n            </div>\n            <div className=\"text-sm text-gray-600 mt-1\">\n              Goal: {formatWeight(profile.demographics.targetWeight || 0)}{' '}\n              {profile.demographics.preferredUnits.weight}\n            </div>\n          </div>\n        </div>\n\n        {/* Progress Charts */}\n        <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\n          {/* Weight Trend */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Weight Trend (Last 30 Days)</h2>\n            <div className=\"h-48 flex items-end space-x-1\">\n              {checkins.slice(-30).map((checkin, index) => {\n                const weight = checkin.weight || profile.demographics.startingWeight;\n                const maxWeight = Math.max(\n                  ...checkins.map(c => c.weight || profile.demographics.startingWeight)\n                );\n                const minWeight = Math.min(\n                  ...checkins.map(c => c.weight || profile.demographics.startingWeight)\n                );\n                const range = maxWeight - minWeight || 1;\n                const height = ((weight - minWeight) / range) * 100;\n\n                return (\n                  <div\n                    key={index}\n                    className=\"flex-1 bg-gradient-to-t from-blue-500 to-blue-400 rounded-t hover:from-blue-600 hover:to-blue-500 transition-all\"\n                    style={{ height: `${height}%`, minHeight: '4px' }}\n                    title={`${checkin.date}: ${formatWeight(weight)} ${profile.demographics.preferredUnits.weight}`}\n                  />\n                );\n              })}\n            </div>\n            <div className=\"flex justify-between text-xs text-gray-500 mt-2\">\n              <span>30 days ago</span>\n              <span>Today</span>\n            </div>\n          </div>\n\n          {/* Daily Goals Achievement */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Daily Goals (Last 7 Days)</h2>\n            <div className=\"space-y-3\">\n              {['Protein', 'Steps', 'Sleep', 'Water'].map(goal => {\n                const recentCheckins = checkins.slice(-7);\n                let achieved = 0;\n\n                recentCheckins.forEach(checkin => {\n                  if (\n                    goal === 'Protein' &&\n                    checkin.protein &&\n                    checkin.protein >= profile.targets.protein.target * 0.9\n                  )\n                    achieved++;\n                  if (\n                    goal === 'Steps' &&\n                    checkin.steps &&\n                    checkin.steps >= profile.targets.steps.minimum\n                  )\n                    achieved++;\n                  if (\n                    goal === 'Sleep' &&\n                    checkin.sleep &&\n                    checkin.sleep >= profile.targets.sleep.minimumHours\n                  )\n                    achieved++;\n                  if (\n                    goal === 'Water' &&\n                    checkin.hydration &&\n                    checkin.hydration >= profile.targets.hydration.target * 0.9\n                  )\n                    achieved++;\n                });\n\n                const percentage =\n                  recentCheckins.length > 0 ? (achieved / recentCheckins.length) * 100 : 0;\n\n                return (\n                  <div key={goal}>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span className=\"text-gray-700\">{goal}</span>\n                      <span className=\"text-gray-500\">{achieved}/7 days</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-3\">\n                      <div\n                        className={`h-3 rounded-full transition-all ${\n                          percentage >= 80\n                            ? 'bg-green-500'\n                            : percentage >= 50\n                              ? 'bg-yellow-500'\n                              : 'bg-red-500'\n                        }`}\n                        style={{ width: `${percentage}%` }}\n                      />\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Check-ins */}\n        <div className=\"bg-white rounded-xl shadow-lg p-6\">\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Recent Check-ins</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"text-left text-sm text-gray-500 border-b\">\n                  <th className=\"pb-2\">Date</th>\n                  <th className=\"pb-2\">Weight</th>\n                  <th className=\"pb-2\">Steps</th>\n                  <th className=\"pb-2\">Protein</th>\n                  <th className=\"pb-2\">Mood</th>\n                  <th className=\"pb-2\">Symptoms</th>\n                </tr>\n              </thead>\n              <tbody>\n                {checkins\n                  .slice(-7)\n                  .reverse()\n                  .map(checkin => (\n                    <tr key={checkin.date} className=\"border-b\">\n                      <td className=\"py-3 text-gray-900\">\n                        {new Date(checkin.date).toLocaleDateString('en-US', {\n                          month: 'short',\n                          day: 'numeric',\n                        })}\n                      </td>\n                      <td className=\"py-3\">\n                        {checkin.weight\n                          ? `${formatWeight(checkin.weight)} ${profile.demographics.preferredUnits.weight}`\n                          : '--'}\n                      </td>\n                      <td className=\"py-3\">{checkin.steps?.toLocaleString() || '--'}</td>\n                      <td className=\"py-3\">{checkin.protein ? `${checkin.protein}g` : '--'}</td>\n                      <td className=\"py-3\">\n                        {checkin.mood === 'great' && 'üòÑ'}\n                        {checkin.mood === 'good' && 'üôÇ'}\n                        {checkin.mood === 'okay' && 'üòê'}\n                        {checkin.mood === 'low' && 'üòï'}\n                        {checkin.mood === 'terrible' && 'üòî'}\n                      </td>\n                      <td className=\"py-3\">\n                        {checkin.nausea > 5 && 'ü§¢'}\n                        {checkin.constipation > 5 && 'üöΩ'}\n                        {checkin.nausea <= 5 && checkin.constipation <= 5 && '‚úì'}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["WeightLossDashboard","navigate","useNavigate","profile","setProfile","useState","checkins","setCheckins","progress","setProgress","stall","setStall","isLoading","setIsLoading","todayComplete","setTodayComplete","useEffect","loadDashboardData","patientId","existingProfile","weightLossProfileService","endDate","startDate","recentCheckins","progressData","stallData","getWeightTrend","weights","c","recent","older","recentAvg","a","b","olderAvg","formatWeight","weight","jsxs","jsx","weightTrend","checkin","index","maxWeight","minWeight","range","height","goal","achieved","percentage"],"mappings":"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"}