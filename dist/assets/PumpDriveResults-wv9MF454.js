import{b as x,h as _,l as w,g as R,u as Z,r as T,j as t}from"./index-CFDQeSWK.js";import{o as D}from"./openai.service-CgQn0nV5.js";import{P as F}from"./pumpDataComplete-A26PerGF.js";import{pumpAuthService as W}from"./pumpAuth.service-C_hgfJl8.js";const L=[{id:"primary_priority",type:"multiple_choice",phase:"core",category:"priorities",title:"What matters most to you in a pump?",description:"This helps us focus on your top priority",required:!0,options:[{value:"simplicity",label:"🎯 Simplest setup and daily use",weight:{automation:8,simplicity:10,cost:6}},{value:"technology",label:"🚀 Best technology and control features",weight:{features:10,automation:9,integration:8}},{value:"cost",label:"💰 Lowest total cost (device + supplies)",weight:{cost:10,simplicity:7,basic_features:8}},{value:"lifestyle",label:"🏃 Best fit for my active lifestyle",weight:{durability:9,discretion:8,waterproof:9}}],skipOption:{label:"Not sure yet",value:"skip"},timeEstimate:45,impactWeight:10},{id:"form_factor",type:"multiple_choice",phase:"core",category:"design",title:"Which pump design appeals to you?",description:"Think about what you'd be comfortable wearing daily",required:!1,options:[{value:"tubeless",label:"📱 Tubeless patch pump (like a large bandage)",weight:{tubeless:10,discretion:7,swimming:10}},{value:"tubing",label:"📞 Traditional pump with tubing",weight:{traditional:10,reliability:8,options:9}},{value:"either",label:"🤷 Either works for me",weight:{tubeless:5,traditional:5}}],skipOption:{label:"Show me both types",value:"skip"},timeEstimate:30,impactWeight:9},{id:"tech_comfort",type:"scale",phase:"core",category:"technology",title:"How comfortable are you with new technology?",description:"Be honest - this helps us match complexity to your preferences",required:!1,options:[{value:"low",label:"1-3: I prefer simple, fewer tech features",weight:{simplicity:9,basic_features:8,support:9}},{value:"medium",label:"4-6: I'm comfortable with moderate tech",weight:{moderate_features:8,learning:7}},{value:"high",label:"7-10: I love advanced features and customization",weight:{advanced_features:10,customization:9,integration:8}}],skipOption:{label:"Depends on the specific feature",value:"skip"},timeEstimate:30,impactWeight:8},{id:"budget_reality",type:"multiple_choice",phase:"core",category:"cost",title:"What's your biggest cost concern?",description:"Help us understand your financial priorities",required:!1,options:[{value:"upfront",label:"💵 High upfront device cost",weight:{low_upfront:9,basic_model:7}},{value:"ongoing",label:"📦 Monthly supply costs",weight:{efficient_supplies:9,longer_wear:8}},{value:"insurance",label:"🏥 Insurance coverage limitations",weight:{insurance_friendly:10,standard_options:8}},{value:"not_concerned",label:"✨ Cost isn't my main concern",weight:{premium_features:7,latest_tech:6}}],skipOption:{label:"Prefer not to discuss finances",value:"skip"},timeEstimate:30,impactWeight:7},{id:"control_philosophy",type:"scenario",phase:"core",category:"control",title:"At 3 AM, your glucose trends slightly high. You'd prefer:",description:"This tells us about your automation comfort level",required:!1,options:[{value:"full_auto",label:"😴 System handles it automatically while I sleep",weight:{automation:10,closed_loop:9}},{value:"alert_auto",label:"🔔 Gentle alert, then system adjusts if I don't respond",weight:{hybrid_automation:9,alerts:7}},{value:"wake_me",label:"⏰ Wake me up so I can decide what to do",weight:{manual_control:8,alerts:10}},{value:"alert_only",label:"📱 Just alert me, no automatic adjustments",weight:{manual_control:10,basic_alerts:8}}],skipOption:{label:"I'm not sure about this scenario",value:"skip"},timeEstimate:45,impactWeight:9},{id:"activity_level",type:"multiple_choice",phase:"core",category:"lifestyle",title:"How would you describe your physical activity?",description:"Helps us recommend pumps that fit your lifestyle",required:!1,options:[{value:"very_active",label:"🏋️ Very active (sports, gym, swimming regularly)",weight:{waterproof:10,durability:9,temp_basal:8},followUp:["swimming_frequency","sport_types"]},{value:"moderately_active",label:"🚶 Moderately active (regular walks, occasional activities)",weight:{durability:6,temp_basal:6}},{value:"less_active",label:"🏠 Less active (mostly desk work, light activities)",weight:{compact:7,discretion:8}},{value:"varies",label:"📅 It varies significantly week to week",weight:{flexibility:8,temp_basal:7}}],skipOption:{label:"Activity level isn't important to me",value:"skip"},timeEstimate:30,impactWeight:6},{id:"discretion_needs",type:"multiple_choice",phase:"core",category:"lifestyle",title:"How important is it that your pump is discreet?",description:"Consider work, social situations, and personal comfort",required:!1,options:[{value:"very_important",label:"🤫 Very important - must be hidden/low profile",weight:{discretion:10,compact:9,tubeless:7}},{value:"somewhat_important",label:"👔 Somewhat important - prefer subtle",weight:{discretion:7,compact:6}},{value:"not_important",label:"🤷 Not important - function over form",weight:{functionality:8,features:7}},{value:"prefer_visible",label:"👁️ Actually prefer it visible for safety/medical ID",weight:{visibility:8,safety_features:7}}],skipOption:{label:"Haven't thought about this",value:"skip"},timeEstimate:30,impactWeight:6},{id:"support_style",type:"multiple_choice",phase:"core",category:"support",title:"When learning something new and complex, you prefer:",description:"This helps us recommend pumps with the right support resources",required:!1,options:[{value:"hands_on",label:"🤝 In-person training with a specialist",weight:{clinic_support:9,training_programs:8}},{value:"self_directed",label:"📚 Self-directed with good written materials/videos",weight:{documentation:8,video_resources:7}},{value:"phone_support",label:"📞 Phone support when I have questions",weight:{phone_support:9,availability:8}},{value:"trial_error",label:"🔧 Figure it out myself through trial and error",weight:{simple_design:8,intuitive:9}}],skipOption:{label:"Depends on the complexity",value:"skip"},timeEstimate:30,impactWeight:5},{id:"insurance_flexibility",type:"scale",phase:"refinement",category:"cost",title:"How flexible is your insurance with pump choices?",description:"Only appears if cost is a concern",required:!1,options:[{value:"very_limited",label:"1-2: Very limited - specific brands only",weight:{insurance_preferred:10,standard_options:9}},{value:"somewhat_limited",label:"3-4: Somewhat limited options",weight:{insurance_friendly:8,common_brands:7}},{value:"flexible",label:"5: Very flexible - most pumps covered",weight:{premium_options:6,latest_models:5}}],skipOption:{label:"I don't know my coverage details",value:"skip"},timeEstimate:30,impactWeight:7},{id:"advanced_features",type:"checkbox",phase:"refinement",category:"features",title:"Which advanced features interest you most?",description:"Select all that appeal to you",required:!1,options:[{value:"smartphone_control",label:"📱 Full smartphone app control",weight:{app_control:9,connectivity:8}},{value:"data_analysis",label:"📊 Detailed data analysis and trends",weight:{analytics:9,reporting:8}},{value:"integration",label:"🔗 Integration with other health apps",weight:{integration:10,ecosystem:8}},{value:"customization",label:"⚙️ Extensive customization options",weight:{customization:10,advanced_settings:9}}],skipOption:{label:"None of these matter to me",value:"skip"},timeEstimate:45,impactWeight:4},{id:"meal_management",type:"multiple_choice",phase:"advanced",category:"control",title:"How do you typically handle meal dosing?",required:!1,options:[{value:"precise_counting",label:"🔢 I count carbs precisely and like detailed control",weight:{precision_dosing:9,carb_ratios:8}},{value:"estimated_dosing",label:"🤷 I prefer simple/estimated dosing",weight:{simple_dosing:8,preset_meals:7}},{value:"automation",label:"🤖 I want automation to help with meal decisions",weight:{meal_automation:9,ai_assistance:8}}],skipOption:{label:"My meal patterns are too irregular",value:"skip"},timeEstimate:30,impactWeight:3},{id:"alert_preferences",type:"multiple_choice",phase:"advanced",category:"control",title:"During a busy workday, pump alerts should:",required:!1,options:[{value:"urgent_only",label:"🚨 Only for urgent situations",weight:{minimal_alerts:9,urgent_only:8}},{value:"helpful_reminders",label:"💡 Include helpful reminders",weight:{moderate_alerts:7,reminders:8}},{value:"comprehensive",label:"📋 Comprehensive feedback and data",weight:{detailed_alerts:8,full_feedback:9}},{value:"customizable",label:"⚙️ Customizable by time/situation",weight:{customizable_alerts:10,smart_alerts:9}}],skipOption:{label:"I haven't thought about this",value:"skip"},timeEstimate:30,impactWeight:3}];L.filter(b=>b.phase==="core"),L.filter(b=>b.phase==="refinement"),L.filter(b=>b.phase==="advanced");const ee=[{questionId:"primary_priority",answerValue:"simplicity",featurePreferences:[{dimension:"userInterface",desiredValue:"Touchscreen",weight:10},{dimension:"algorithm",desiredValue:"simplicity",weight:9},{dimension:"userInterface",desiredValue:"Minimalist",weight:8}]},{questionId:"primary_priority",answerValue:"technology",featurePreferences:[{dimension:"algorithm",desiredValue:"Control-IQ",weight:9},{dimension:"phoneControl",desiredValue:"App",weight:10},{dimension:"userInterface",desiredValue:"Phone",weight:8},{dimension:"dataSharing",desiredValue:"Share",weight:7}]},{questionId:"primary_priority",answerValue:"cost",featurePreferences:[{dimension:"battery",desiredValue:"AA Battery",weight:8},{dimension:"reservoirCapacity",desiredValue:"300 units",weight:7},{dimension:"clinicSupport",desiredValue:"Large installed base",weight:6}]},{questionId:"primary_priority",answerValue:"lifestyle",featurePreferences:[{dimension:"waterResistance",desiredValue:"Water-resistant",weight:10},{dimension:"tubingStyle",desiredValue:"Tubeless pod",weight:9},{dimension:"wearability",desiredValue:"Discreet",weight:8}]},{questionId:"form_factor",answerValue:"tubeless",featurePreferences:[{dimension:"tubingStyle",desiredValue:"Tubeless pod",weight:10},{dimension:"waterResistance",desiredValue:"Water-resistant",weight:8},{dimension:"wearability",desiredValue:"Discreet",weight:7}]},{questionId:"form_factor",answerValue:"tubing",featurePreferences:[{dimension:"tubingStyle",desiredValue:"Tubed pump",weight:10},{dimension:"reservoirCapacity",desiredValue:"300 units",weight:7},{dimension:"battery",desiredValue:"AA Battery",weight:6}]},{questionId:"tech_comfort",answerValue:"low",featurePreferences:[{dimension:"userInterface",desiredValue:"Buttons",weight:9},{dimension:"algorithm",desiredValue:"Basic",weight:8},{dimension:"clinicSupport",desiredValue:"Large installed base",weight:8}]},{questionId:"tech_comfort",answerValue:"high",featurePreferences:[{dimension:"phoneControl",desiredValue:"App",weight:10},{dimension:"userInterface",desiredValue:"Phone",weight:9},{dimension:"algorithm",desiredValue:"Control-IQ",weight:8},{dimension:"dataSharing",desiredValue:"Share",weight:7}]},{questionId:"control_philosophy",answerValue:"full_auto",featurePreferences:[{dimension:"algorithm",desiredValue:"auto-corr",weight:10},{dimension:"cgmCompatibility",desiredValue:"Dexcom",weight:8},{dimension:"phoneControl",desiredValue:"App",weight:7}]},{questionId:"control_philosophy",answerValue:"wake_me",featurePreferences:[{dimension:"alertsCustomization",desiredValue:"On-pump options",weight:10},{dimension:"bolusWorkflow",desiredValue:"Carb + auto-corr support",weight:8},{dimension:"userInterface",desiredValue:"Buttons",weight:7}]},{questionId:"activity_level",answerValue:"very_active",featurePreferences:[{dimension:"waterResistance",desiredValue:"Water-resistant",weight:10},{dimension:"exerciseMode",desiredValue:"Activity temp target",weight:9},{dimension:"tubingStyle",desiredValue:"Tubeless pod",weight:8},{dimension:"wearability",desiredValue:"Discreet",weight:7}]},{questionId:"discretion_needs",answerValue:"very_important",featurePreferences:[{dimension:"tubingStyle",desiredValue:"Tubeless pod",weight:10},{dimension:"wearability",desiredValue:"Discreet",weight:9},{dimension:"phoneControl",desiredValue:"Full app control",weight:7}]},{questionId:"budget_reality",answerValue:"upfront",featurePreferences:[{dimension:"battery",desiredValue:"AA Battery",weight:8},{dimension:"clinicSupport",desiredValue:"Large installed base",weight:7}]},{questionId:"budget_reality",answerValue:"ongoing",featurePreferences:[{dimension:"reservoirCapacity",desiredValue:"300 units",weight:8},{dimension:"adhesiveTolerance",desiredValue:"Set + separate CGM",weight:6}]},{questionId:"primary_priority",answerValue:"lifestyle",featurePreferences:[{dimension:"tubingStyle",desiredValue:"Tubeless pod",weight:10},{dimension:"phoneControl",desiredValue:"Phone or controller",weight:8},{dimension:"userInterface",desiredValue:"Phone or controller",weight:7}]},{questionId:"primary_priority",answerValue:"cost",featurePreferences:[{dimension:"battery",desiredValue:"Rechargeable",weight:9},{dimension:"clinicSupport",desiredValue:"support",weight:6},{dimension:"tubingStyle",desiredValue:"compact",weight:7}]},{questionId:"form_factor",answerValue:"either",featurePreferences:[{dimension:"userInterface",desiredValue:"Phone-first",weight:8},{dimension:"tubingStyle",desiredValue:"Very short",weight:7},{dimension:"userInterface",desiredValue:"Phone-forward",weight:6}]},{questionId:"tech_comfort",answerValue:"medium",featurePreferences:[{dimension:"userInterface",desiredValue:"Touchscreen",weight:9},{dimension:"algorithm",desiredValue:"Control-IQ",weight:8},{dimension:"phoneControl",desiredValue:"Mobile bolus",weight:7}]},{questionId:"control_philosophy",answerValue:"alert_auto",featurePreferences:[{dimension:"algorithm",desiredValue:"adaptive",weight:10},{dimension:"userInterface",desiredValue:"Phone-forward",weight:9},{dimension:"phoneControl",desiredValue:"Phone-centric",weight:8}]},{questionId:"control_philosophy",answerValue:"alert_only",featurePreferences:[{dimension:"algorithm",desiredValue:"Meal-announce",weight:10},{dimension:"userInterface",desiredValue:"Minimalist",weight:9},{dimension:"tubingStyle",desiredValue:"simple sets",weight:8}]},{questionId:"primary_priority",answerValue:"simplicity",featurePreferences:[{dimension:"algorithm",desiredValue:"Meal-announce",weight:10},{dimension:"userInterface",desiredValue:"Minimalist",weight:9},{dimension:"tubingStyle",desiredValue:"simple",weight:7}]},{questionId:"tech_comfort",answerValue:"medium",featurePreferences:[{dimension:"userInterface",desiredValue:"Phone-forward",weight:10},{dimension:"algorithm",desiredValue:"adaptive",weight:9},{dimension:"battery",desiredValue:"Rechargeable",weight:8}]},{questionId:"tech_comfort",answerValue:"low",featurePreferences:[{dimension:"userInterface",desiredValue:"simple",weight:8},{dimension:"algorithm",desiredValue:"simplicity",weight:9},{dimension:"clinicSupport",desiredValue:"support",weight:6}]},{questionId:"activity_level",answerValue:"moderately_active",featurePreferences:[{dimension:"battery",desiredValue:"Rechargeable",weight:8},{dimension:"tubingStyle",desiredValue:"short",weight:7},{dimension:"userInterface",desiredValue:"Phone",weight:6}]},{questionId:"discretion_needs",answerValue:"somewhat_important",featurePreferences:[{dimension:"tubingStyle",desiredValue:"compact",weight:9},{dimension:"userInterface",desiredValue:"Phone-forward",weight:8},{dimension:"battery",desiredValue:"new platform",weight:6}]}];class se{userProfile=new Map;processAnswers(s){this.userProfile.clear();for(const[e,i]of Object.entries(s)){if(!i||i==="skip")continue;const r=Array.isArray(i)?i:[i];for(const a of r){const n=ee.filter(d=>d.questionId===e&&d.answerValue===a);for(const d of n)for(const o of d.featurePreferences)this.userProfile.has(o.dimension)||this.userProfile.set(o.dimension,[]),this.userProfile.get(o.dimension).push({value:o.desiredValue,weight:o.weight})}}}generateExplanation(s,e,i){const r=[];r.push(`The ${s.name} stands out as your best match.`);const a=Object.entries(e).filter(([n,d])=>d.percentage>=60).sort((n,d)=>d[1].percentage-n[1].percentage).slice(0,3);if(a.length>0){r.push("Key strengths that match your needs:");for(const[n,d]of a){const o=this.explainFeature(s,n,d);o&&r.push(`• ${o}`)}}return i.primary_priority==="simplicity"&&s.dimensions.userInterface?.includes("Buttons")&&r.push(`Perfect for your preference for simplicity with its ${s.dimensions.userInterface}.`),i.form_factor==="tubeless"&&s.dimensions.tubingStyle?.includes("Tubeless")&&r.push("The tubeless design gives you the freedom and discretion you wanted."),i.control_philosophy==="full_auto"&&s.dimensions.algorithm?.includes("SmartGuard")&&r.push(`Its ${s.dimensions.algorithm} provides the automation you're looking for.`),s.dimensions.waterResistance&&r.push(`${s.dimensions.waterResistance} for active lifestyles.`),r.join(" ")}explainFeature(s,e,i){const r=s.dimensions[e];switch(e){case"tubingStyle":return r?.includes("Tubeless")?"Tubeless pod design for maximum freedom":`${r} design`;case"algorithm":return`${r} for optimal glucose control`;case"waterResistance":return r?`${r} design`:null;case"phoneControl":return r?.includes("Full")?"Complete smartphone control via app":`${r} capability`;case"cgmCompatibility":return r?`Compatible with ${r} for automated adjustments`:null;case"userInterface":return`${r} interface for easy operation`;case"reservoirCapacity":return`${r} insulin capacity`;case"battery":return`${r} for convenient power management`;case"wearability":return`${r} design for comfort`;case"exerciseMode":return r?`${r} for active users`:null;default:return r?`${e}: ${r}`:null}}getRecommendations(s){throw new Error("Feature-based scoring removed. Use pumpDriveAI.service.ts for AI recommendations.")}extractDecisionFactors(s){const e=[];if(s.primary_priority){const i={simplicity:"Ease of use is your top priority",technology:"Advanced features matter most to you",cost:"Budget considerations are important",lifestyle:"Active lifestyle compatibility is crucial"};e.push(i[s.primary_priority]||"")}return s.form_factor==="tubeless"?e.push("You prefer tubeless pod design"):s.form_factor==="tubing"&&e.push("You prefer traditional tubed pumps"),s.control_philosophy==="full_auto"?e.push("You want maximum automation"):s.control_philosophy==="wake_me"&&e.push("You prefer manual control with alerts"),e.filter(i=>i.length>0)}}const z=new se;class te{async processUserResponses(s){const e=this.createUserProfile(s),i=this.analyzePreferences(s),r=this.formatPumpDatabase(),a=`You are an expert diabetes educator and insulin pump specialist. Based on the following patient responses, provide personalized insulin pump recommendations using the complete 23-dimension pump database extracted from PDF documentation.

CRITICAL ANALYSIS INSTRUCTIONS:
- DO NOT use any pre-calculated scores or ranking biases
- Analyze the patient's responses objectively without any pre-programmed scoring systems
- Base recommendations purely on objective analysis of patient needs against pump specifications

ANALYSIS PRIORITY HIERARCHY:
1. **EXPLICIT FEATURE SELECTIONS**: Features the patient specifically selected carry the highest weight
   - If patient selected "Apple Watch bolusing" → ONLY Twiist supports this (major factor)
   - If patient selected "2 ounces weight" → ONLY Twiist offers this (major factor)
   - If patient selected "swap batteries" → Favor pumps with replaceable batteries
2. **CLARIFYING RESPONSES**: Direct answers to conflict questions are second priority
3. **PERSONAL STORY KEYWORDS**: Specific medical/lifestyle needs mentioned in free text
4. **SLIDER PREFERENCES**: General lifestyle ratings are lower priority than explicit selections

CRITICAL DECISION RULES:

WEIGHT PRIORITIZATION:
- If user mentions "lightest", "lightweight", "minimal weight", or weight as a priority:
  → Twiist (2 oz - LIGHTEST) > Tandem Mobi (small) > Omnipod 5 (pod) > others
- Twiist at 2 oz is BY FAR the lightest pump available

TARGET GLUCOSE RANKINGS:
- LOWEST available targets:
  1. Twiist: 87 mg/dL (LOWEST standard target)
  2. Beta Bionics iLet: 60 mg/dL (only in special "lower than usual" mode)
  3. Medtronic 780G: 100 mg/dL (fixed aggressive target)
- If user wants "lowest target glucose" → strongly consider Twiist first

CONTROL TIGHTNESS/AGGRESSIVENESS:
- "Tightest control" or "most aggressive" means:
  1. Medtronic 780G: 100% correction (vs 60% for others) - MOST AGGRESSIVE
  2. Twiist: Aggressive microbolus-like basal modulations
  3. Others: Standard 60% correction approach
- For "best control" consider BOTH algorithm aggressiveness AND target flexibility

TECHNOLOGY FEATURES:
- "Tech-savvy" or "modern tech" priorities:
  1. Twiist: Apple Watch bolusing, emoji dosing, phone-first
  2. Tandem Mobi: Wireless charging, iPhone control
  3. t:slim X2: Touchscreen, multiple CGM options

CRITICAL PUMP FACTS:
- Apple Watch bolusing: ONLY Twiist supports this feature
- Lightest weight (2 oz): ONLY Twiist offers this
- Most aggressive algorithm: Medtronic 780G (100% correction)
- Lowest target glucose: Twiist (87 mg/dL standard target)

CONFLICT RESOLUTION:
- When patient selections conflict with slider ratings, prioritize explicit selections
- When multiple pumps match, use clarifying responses to break ties
- Always explain why selected features were/weren't prioritized in recommendation

PATIENT PROFILE:
${e}

PREFERENCE ANALYSIS:
${i}

COMPLETE INSULIN PUMP DATABASE (ALL 23 DIMENSIONS):
${r}

ANALYSIS INSTRUCTIONS:
1. Evaluate all pumps objectively using ALL 23 dimensions provided in the database
2. Consider ALL pump specifications: battery type, phone control, tubing, algorithm, CGM compatibility, target adjustability, exercise mode, bolus workflow, reservoir capacity, adhesive tolerance, water resistance, alerts customization, user interface, data sharing, clinic support, travel logistics, caregiver features, discretion/wearability, ecosystem integration, reliability/occlusion handling, cost/insurance, and software updates
3. Match patient preferences against comprehensive pump specifications
4. Prioritize features that matter most to this specific patient's lifestyle and medical needs
5. Explain reasoning based on how ALL relevant pump dimensions align with patient requirements
6. Provide balanced assessment considering the complete feature set of each pump

Please analyze the patient's needs across all 23 pump dimensions and provide:
1. Top recommended pump with detailed reasoning based on patient's specific words and comprehensive pump specifications
2. 2-3 alternative options ranked by suitability across all dimensions
3. Key factors that influenced your recommendation (include patient quotes and specific pump dimensions)
4. Personalized insights explaining how the recommended pump's complete feature set matches this patient's situation

Format your response as JSON with the following structure:
{
  "topChoice": {
    "name": "exact pump name from database",
    "score": 0-100,
    "reasons": ["specific reason based on patient words", "technical specification match", "lifestyle fit"]
  },
  "alternatives": [
    {
      "name": "exact pump name from database",
      "score": 0-100,
      "reasons": ["why this is second choice", "what it offers"]
    }
  ],
  "keyFactors": ["patient's stated priority 1", "patient's stated priority 2", "medical consideration"],
  "personalizedInsights": "Detailed explanation of why the top choice specifically matches what the patient said they wanted, including quotes from their responses where relevant"
}`;try{const n=await D.processText(a,{model:"gpt-4",temperature:.7,maxTokens:2e3}),d=this.parseClaudeResponse(n);return this.saveRecommendation(d),d}catch(n){throw x("pumpDriveAI","Error message",{}),n}}createUserProfile(s){let e="";const i={cost:"BUDGET & INSURANCE",lifestyle:"LIFESTYLE",algorithm:"CONTROL PREFERENCES",easeToStart:"GETTING STARTED",complexity:"DAILY USE & COMPLEXITY",support:"SUPPORT SYSTEM"};for(const[r,a]of Object.entries(s)){const n=i[r]||r.toUpperCase();e+=`
${n} CATEGORY:
`,e+=`Main Response: ${a.mainTranscript}
`,a.followUpTranscript&&(e+=`Additional Comments: ${a.followUpTranscript}
`),e+=`Topics Discussed: ${a.checkedQuestions.join(", ")}
`,e+=`
---
`}return e}analyzePreferences(s){let e=`PATIENT PREFERENCE SUMMARY:
`;const i=Object.keys(s);return e+=`Patient provided responses across ${i.length} categories:
`,i.forEach(r=>{const a=s[r];a.mainTranscript&&a.mainTranscript.trim()&&(e+=`- ${r.toUpperCase()}: Has detailed response
`)}),e+=`
Note: All user preferences will be considered equally by AI analysis.
`,e}formatPumpDatabase(){let s="";return F.forEach((e,i)=>{s+=`
${i+1}. ${e.name} (${e.manufacturer})
`,s+=`════════════════════════════════════════
`,s+=`   BATTERY: ${e.dimensions.battery?.type||e.dimensions.batteryInfo?.type||"N/A"} - ${e.dimensions.battery?.details||e.dimensions.batteryInfo?.details||"N/A"}
`,s+=`   PHONE CONTROL: ${e.dimensions.phoneControl.bolusFromPhone?"Bolus from phone":"View only"} - ${e.dimensions.phoneControl.details}
`,e.dimensions.phoneControl.appleWatch&&(s+=`   APPLE WATCH: ${e.dimensions.phoneControl.appleWatch?"Supported":"Not supported"}
`),s+=`   TUBING: ${e.dimensions.tubing.type} - ${e.dimensions.tubing.details}
`,e.dimensions.tubing.wearOptions&&(s+=`   WEAR OPTIONS: ${e.dimensions.tubing.wearOptions}
`),s+=`   ALGORITHM: ${e.dimensions.algorithm.type} (${e.dimensions.algorithm.aggressiveness}) - ${e.dimensions.algorithm.details}
`,s+=`   ADJUSTMENT FREQUENCY: ${e.dimensions.algorithm.adjustmentFrequency}
`,s+=`   CARB COUNTING: ${e.dimensions.algorithm.carbCounting?"Required":"Optional"}
`,s+=`   CGM COMPATIBILITY: ${e.dimensions.cgmCompatibility.compatible.join(", ")}
`,e.dimensions.cgmCompatibility.future&&e.dimensions.cgmCompatibility.future.length>0&&(s+=`   FUTURE CGM: ${e.dimensions.cgmCompatibility.future.join(", ")}
`),s+=`   TARGET ADJUSTABILITY: ${e.dimensions.targetAdjustability.customizable?"Customizable":"Limited"} - ${e.dimensions.targetAdjustability.ranges}
`,e.dimensions.targetAdjustability.exerciseMode&&(s+=`   EXERCISE TARGET: ${e.dimensions.targetAdjustability.exerciseMode}
`),s+=`   EXERCISE MODE: ${e.dimensions.exerciseMode.available?e.dimensions.exerciseMode.details:"Not available"}
`,s+=`   BOLUS WORKFLOW: ${e.dimensions.bolusWorkflow.details}
`;const r=e.dimensions.capacity||e.dimensions.reservoirCapacity;if(r&&(s+=`   RESERVOIR CAPACITY: ${r.units||r} units - ${r.details||r.changeFrequency||"Standard"}
`),e.dimensions.adhesive||e.dimensions.adhesiveTolerance){const a=e.dimensions.adhesive||e.dimensions.adhesiveTolerance;s+=`   ADHESIVE: ${a.type||"Standard"} - ${a.details||"Standard wear time"}
`}if(s+=`   WATER RESISTANCE: ${e.dimensions.waterResistance.rating} - ${e.dimensions.waterResistance.details}
`,e.dimensions.waterResistance.submersible&&(s+=`   SUBMERSIBLE: ${e.dimensions.waterResistance.depth} for ${e.dimensions.waterResistance.duration}
`),e.dimensions.alerts||e.dimensions.alertsCustomization){const a=e.dimensions.alerts||e.dimensions.alertsCustomization;s+=`   ALERTS: ${a.customizable?"Customizable":"Standard"} - ${a.details}
`}if(s+=`   INTERFACE: ${e.dimensions.interface?.type||e.dimensions.userInterface?.type||"N/A"} - ${e.dimensions.interface?.details||e.dimensions.userInterface?.details||"N/A"}
`,e.dimensions.dataSharing&&(s+=`   DATA SHARING: ${e.dimensions.dataSharing.platform} - ${e.dimensions.dataSharing.details}
`,s+=`   CAREGIVER SHARING: ${e.dimensions.dataSharing.shareWithCaregivers?"Yes":"No"}
`),e.dimensions.clinicSupport&&(s+=`   CLINIC SUPPORT: ${e.dimensions.clinicSupport.established} network - ${e.dimensions.clinicSupport.details}
`),e.dimensions.travel||e.dimensions.travelLogistics){const a=e.dimensions.travel||e.dimensions.travelLogistics;s+=`   TRAVEL: ${a.supplies||a.details}
`}if(e.dimensions.pediatric||e.dimensions.caregiverFeatures){const a=e.dimensions.pediatric||e.dimensions.caregiverFeatures;s+=`   CAREGIVER FEATURES: Remote monitoring: ${a.remoteMonitoring?"Yes":"No"}, Remote bolus: ${a.remoteBolus?"Yes":"No"}
`,s+=`   CAREGIVER APP: ${a.app||"Standard"} - ${a.details}
`}if(e.dimensions.discretion||e.dimensions.wearability){const a=e.dimensions.discretion||e.dimensions.wearability;s+=`   DISCRETION: ${a.size} size, ${a.visibility} - ${a.details}
`}e.dimensions.ecosystem&&(s+=`   ECOSYSTEM: Watch support: ${e.dimensions.ecosystem.watchSupport?"Yes":"No"}, Integrations: ${e.dimensions.ecosystem.integrations.join(", ")}
`,s+=`   ECOSYSTEM DETAILS: ${e.dimensions.ecosystem.details}
`),e.dimensions.reliability&&(s+=`   RELIABILITY: Occlusion detection: ${e.dimensions.reliability.occlusionDetection?"Yes":"No"} - ${e.dimensions.reliability.details}
`),s+=`   COST: ${e.dimensions.cost.coverage} coverage - ${e.dimensions.cost.details}
`,e.dimensions.cost.financialAssistance&&(s+=`   FINANCIAL ASSISTANCE: ${e.dimensions.cost.financialAssistance}
`),e.dimensions.updates&&(s+=`   UPDATES: ${e.dimensions.updates.automatic?"Automatic":"Manual"} - ${e.dimensions.updates.details}
`),s+=`   PROS: ${e.pros?.join(", ")||"N/A"}
`,s+=`   CONS: ${e.cons?.join(", ")||"N/A"}
`,s+=`   IDEAL FOR: ${e.idealFor?.join(", ")||"N/A"}
`,s+=`
`}),s}extractWeightInfo(s){return s.dimensions.tubing.type==="tubeless"?"Tubeless design":s.dimensions.discretion.size?`${s.dimensions.discretion.size} size`:"Standard form factor"}parseClaudeResponse(s){try{const e=s.match(/\{[\s\S]*\}/);return e?JSON.parse(e[0]):this.createFallbackRecommendation()}catch{return x("pumpDriveAI","Error message",{}),this.createFallbackRecommendation()}}createFallbackRecommendation(){return _("pumpDriveAI","Using fallback recommendation due to AI service failure",{}),{topChoice:{name:"Medtronic 780G",score:85,reasons:["Well-established hybrid closed-loop system","Strong clinical support and training resources","Good insurance coverage","Proven track record for glucose management"]},alternatives:[{name:"Tandem t:slim X2",score:80,reasons:["Touchscreen interface","Dexcom G6 integration","Remote software updates"]},{name:"Omnipod 5",score:75,reasons:["Tubeless design","Phone control","Automated insulin delivery"]}],keyFactors:["Insulin pump therapy experience","Technology comfort level","Insurance coverage requirements"],personalizedInsights:"Due to a temporary service issue, we've provided a general recommendation. The Medtronic 780G is a solid choice for most users with its proven hybrid closed-loop technology and excellent support network. Please contact your healthcare provider to discuss the best option for your specific needs."}}saveRecommendation(s){sessionStorage.setItem("pumpdrive_recommendation",JSON.stringify(s)),sessionStorage.setItem("pumpdrive_recommendation_timestamp",Date.now().toString())}async getRecommendations(s){const e={};return s.forEach(i=>{const r=i.category,a=i.responses;e[r]={category:r,mainTranscript:a.mainTranscript||"",followUpTranscript:a.followUpTranscript||"",checkedQuestions:a.checkedQuestions||[],timestamp:a.timestamp||Date.now()}}),await this.processUserResponses(e)}async generateSummaryReport(s){const e=`Create a concise summary report of this patient's insulin pump preferences based on their responses:

${this.createUserProfile(s)}

Provide a 2-3 paragraph summary highlighting:
1. Primary needs and concerns
2. Lifestyle factors
3. Technology comfort level
4. Support requirements`;try{return await D.processText(e,{model:"gpt-4",temperature:.7,maxTokens:2e3})}catch{return x("pumpDriveAI","Error message",{}),"Summary generation failed."}}async processSimplifiedFlow(){try{const s=JSON.parse(sessionStorage.getItem("pumpDriveSliders")||"{}"),e=JSON.parse(sessionStorage.getItem("selectedPumpFeatures")||"[]"),i=JSON.parse(sessionStorage.getItem("pumpDriveFreeText")||"{}"),r=JSON.parse(sessionStorage.getItem("pumpDriveClarifyingResponses")||"{}");try{const a=this.createSimplifiedUserProfile(s,e,i.currentSituation||"",r),n=this.formatPumpDatabase(),d=`You are an expert diabetes educator and insulin pump specialist. Based on the following patient assessment data, provide personalized insulin pump recommendations using the complete 23-dimension pump database extracted from PDF documentation.

CRITICAL ANALYSIS INSTRUCTIONS:
- DO NOT use any pre-calculated scores or ranking biases
- Analyze the patient's responses objectively without any pre-programmed scoring systems
- Base recommendations purely on objective analysis of patient needs against pump specifications

ANALYSIS PRIORITY HIERARCHY:
1. **EXPLICIT FEATURE SELECTIONS**: Features the patient specifically selected carry the highest weight
   - If patient selected "Apple Watch bolusing" → ONLY Twiist supports this (major factor)
   - If patient selected "2 ounces weight" → ONLY Twiist offers this (major factor)
   - If patient selected "swap batteries" → Favor pumps with replaceable batteries
2. **CLARIFYING RESPONSES**: Direct answers to conflict questions are second priority
3. **PERSONAL STORY KEYWORDS**: Specific medical/lifestyle needs mentioned in free text
4. **SLIDER PREFERENCES**: General lifestyle ratings are lower priority than explicit selections

CRITICAL DECISION RULES:

WEIGHT PRIORITIZATION:
- If user mentions "lightest", "lightweight", "minimal weight", or weight as a priority:
  → Twiist (2 oz - LIGHTEST) > Tandem Mobi (small) > Omnipod 5 (pod) > others
- Twiist at 2 oz is BY FAR the lightest pump available

TARGET GLUCOSE RANKINGS:
- LOWEST available targets:
  1. Twiist: 87 mg/dL (LOWEST standard target)
  2. Beta Bionics iLet: 60 mg/dL (only in special "lower than usual" mode)
  3. Medtronic 780G: 100 mg/dL (fixed aggressive target)
- If user wants "lowest target glucose" → strongly consider Twiist first

CONTROL TIGHTNESS/AGGRESSIVENESS:
- "Tightest control" or "most aggressive" means:
  1. Medtronic 780G: 100% correction (vs 60% for others) - MOST AGGRESSIVE
  2. Twiist: Aggressive microbolus-like basal modulations
  3. Others: Standard 60% correction approach
- For "best control" consider BOTH algorithm aggressiveness AND target flexibility

TECHNOLOGY FEATURES:
- "Tech-savvy" or "modern tech" priorities:
  1. Twiist: Apple Watch bolusing, emoji dosing, phone-first
  2. Tandem Mobi: Wireless charging, iPhone control
  3. t:slim X2: Touchscreen, multiple CGM options

CRITICAL PUMP FACTS:
- Apple Watch bolusing: ONLY Twiist supports this feature
- Lightest weight (2 oz): ONLY Twiist offers this
- Most aggressive algorithm: Medtronic 780G (100% correction)
- Lowest target glucose: Twiist (87 mg/dL standard target)

CONFLICT RESOLUTION:
- When patient selections conflict with slider ratings, prioritize explicit selections
- When multiple pumps match, use clarifying responses to break ties
- Always explain why selected features were/weren't prioritized in recommendation

PATIENT ASSESSMENT DATA:
${a}

COMPLETE INSULIN PUMP DATABASE (ALL 23 DIMENSIONS):
${n}

ANALYSIS INSTRUCTIONS:
1. Evaluate all pumps objectively using ALL 23 dimensions provided in the database
2. Consider ALL pump specifications: battery type, phone control, tubing, algorithm, CGM compatibility, target adjustability, exercise mode, bolus workflow, reservoir capacity, adhesive tolerance, water resistance, alerts customization, user interface, data sharing, clinic support, travel logistics, caregiver features, discretion/wearability, ecosystem integration, reliability/occlusion handling, cost/insurance, and software updates
3. Match patient preferences (slider values, selected features, free text input, and clarifying responses) against comprehensive pump specifications
4. Prioritize features that matter most to this specific patient's lifestyle and medical needs
5. Explain reasoning based on how ALL relevant pump dimensions align with patient requirements
6. Provide balanced assessment considering the complete feature set of each pump

Please analyze the patient's needs across all 23 pump dimensions and provide:
1. Top recommended pump with detailed reasoning based on patient's specific preferences and comprehensive pump specifications
2. 2-3 alternative options ranked by suitability across all dimensions
3. Key factors that influenced your recommendation (include patient quotes and specific pump dimensions)
4. Personalized insights explaining how the recommended pump's complete feature set matches this patient's situation

Format your response as JSON with the following structure:
{
  "topChoice": {
    "name": "exact pump name from database",
    "score": 0-100,
    "reasons": ["specific reason based on patient input", "feature match", "lifestyle fit"]
  },
  "alternatives": [
    {
      "name": "exact pump name from database",
      "score": 0-100,
      "reasons": ["why this is alternative choice", "what it offers"]
    }
  ],
  "keyFactors": ["patient's stated priority 1", "patient's stated priority 2", "key consideration"],
  "personalizedInsights": "Detailed explanation of why the top choice specifically matches what the patient indicated they wanted, including references to their slider values, selected features, and free text input where relevant"
}`,o=await D.processText(d,{model:"gpt-4",temperature:.7,maxTokens:2e3}),c=this.parseClaudeResponse(o);return this.saveRecommendation(c),c}catch(a){x("pumpDriveAI","AI processing failed - using enhanced fallback",{error:a});const n=this.createEnhancedFallbackRecommendation(s,e,i,r);return this.saveRecommendation(n),n}}catch(s){throw x("pumpDriveAI","Error processing simplified flow",{error:s}),s}}createEnhancedFallbackRecommendation(s,e,i,r){_("pumpDriveAI","Using enhanced fallback recommendation due to AI service failure",{slidersCount:Object.keys(s).length,featuresCount:e.length,hasFreeText:!!i?.currentSituation,clarifyingCount:Object.keys(r).length});let a="Medtronic 780G",n=85,d=["Well-established hybrid closed-loop system","Strong clinical support and training resources","Good insurance coverage"];const o=e.map(c=>c.title.toLowerCase());return o.some(c=>c.includes("apple watch"))?(a="Twiist",n=90,d=["Only pump with Apple Watch control","Lightest weight at 2 ounces","Modern smartphone integration"]):o.some(c=>c.includes("tubeless")||c.includes("patch"))?(a="Omnipod 5",n=88,d=["Tubeless patch design","Phone control capabilities","Automated insulin delivery"]):o.some(c=>c.includes("touchscreen")||c.includes("phone"))&&(a="Tandem t:slim X2",n=86,d=["Color touchscreen interface","Phone app integration","Remote software updates"]),{topChoice:{name:a,score:n,reasons:d},alternatives:[{name:"Medtronic 780G",score:85,reasons:["Proven hybrid closed-loop","Strong clinical support"]},{name:"Tandem t:slim X2",score:80,reasons:["Touchscreen interface","Dexcom integration"]}].filter(c=>c.name!==a),keyFactors:["Technology preferences from your selections","Insulin pump therapy experience","Lifestyle and activity level"],personalizedInsights:`Based on your preferences${o.length>0?` (especially interest in ${o.slice(0,2).join(" and ")})`:""}, we recommend the ${a}. While our AI service is temporarily unavailable, this recommendation considers your key requirements. Please discuss with your healthcare provider for a full personalized assessment.`}}createSimplifiedUserProfile(s,e,i,r){let a=`PATIENT PUMP ASSESSMENT PROFILE:

`;return Object.keys(s).length>0&&(a+=`SLIDER PREFERENCES (1-10 scale):
`,Object.entries(s).forEach(([n,d])=>{const o=n.charAt(0).toUpperCase()+n.slice(1).replace(/([A-Z])/g," $1");a+=`- ${o}: ${d}/10
`}),a+=`
`),e.length>0&&(a+=`SELECTED FEATURES (what patient specifically wants):
`,e.forEach(n=>{a+=`- ${n.title}
`}),a+=`
`),i.trim()&&(a+=`PATIENT'S PERSONAL STORY:
`,a+=`"${i}"

`),Object.keys(r).length>0&&(a+=`CLARIFYING RESPONSES:
`,Object.entries(r).forEach(([n,d])=>{a+=`Q: ${n}
`,a+=`A: ${d}

`})),a}async processWithClaude(s,e){try{w("pumpDriveAI","Processing prompt with Claude AI",{context:e});const i=await D.processText(s,{model:"gpt-4",temperature:.7,maxTokens:2e3});return R("pumpDriveAI","Successfully processed prompt with Claude AI",{}),i}catch(i){throw x("pumpDriveAI","Failed to process prompt with Claude AI",{error:i}),new Error("AI processing failed. Please try again.")}}async processFollowUpQuestion(s,e){for(let a=1;a<=2;a++)try{w("pumpDriveAI",`Processing follow-up question (attempt ${a}/2)`,{question:s});const n=this.formatPumpDatabase(),d=`You're a friendly diabetes educator helping someone understand their insulin pump recommendation. Answer their question in a conversational, easy-to-understand way.

THEIR RECOMMENDATION:
Top Choice: ${e.currentRecommendation?.topRecommendation?.name||"Not available"}
Score: ${e.currentRecommendation?.topRecommendation?.score||"N/A"}/100

Alternative Options:
${e.currentRecommendation?.alternatives?.map((c,u)=>`${u+1}. ${c.name} (Score: ${c.score}/100)`).join(`
`)||"None provided"}

WHAT THEY TOLD US:
Preferences: ${Object.entries(e.sliders||{}).map(([c,u])=>`${c}: ${u}/10`).join(", ")}

Features they wanted: ${(e.features||[]).map(c=>c.name||c.title||c.id||c).join(", ")}

Their story: "${e.freeText?.currentSituation||e.freeText?.userStory||"Not provided"}"

Clarifying answers: ${Object.entries(e.clarifyingResponses||{}).map(([c,u])=>`Q: ${c} A: ${u}`).join(`
`)||"None"}

PUMP DATABASE WITH ALL FEATURES:
${n}

THEIR QUESTION:
"${s}"

HOW TO ANSWER:
• Start with a friendly response like "Great question!" or "I'm happy to explain that!"
• Use bullet points to make it easy to read
• Explain things simply - avoid medical jargon
• Use "you" and "your" (not "patient")
• Compare specific features when relevant
• Be honest about trade-offs
• End with encouragement

RESPONSE FORMAT:
Great question! Here's why [explanation]:

• [Key point 1]
• [Key point 2]
• [Key point 3]

Key differences:
• [Pump A]: [specific feature]
• [Pump B]: [specific feature]

Bottom line: [Simple summary of why this choice makes sense for them]

Keep it friendly, clear, and helpful!`,o=await D.processText(d,{model:"gpt-4",temperature:.7,maxTokens:2e3});return R("pumpDriveAI",`Successfully processed follow-up question on attempt ${a}`,{}),o}catch(n){if(a===2)return x("pumpDriveAI","Failed to process follow-up question after 2 attempts",{error:n,question:s}),this.generateFallbackResponse(s,e);_("pumpDriveAI",`Follow-up question failed on attempt ${a}, retrying...`,{error:n,question:s}),await new Promise(o=>setTimeout(o,1500))}throw new Error("Unable to process your question right now. Please try again.")}generateFallbackResponse(s,e){const i=e.currentRecommendation?.topRecommendation?.name||"the recommended pump",r=s.toLowerCase();return r.includes("why not")||r.includes("wasn't")||r.includes("why didn't")?`Great question! I'd love to help explain the reasoning behind your recommendation, but I'm having some technical difficulties right now.

Based on your preferences, ${i} was recommended because it best matches what you told us about your lifestyle and priorities. Each pump has different strengths, and the recommendation considers factors like:

• Your technology comfort level
• Activity and lifestyle preferences
• Specific features you selected
• Your personal story and needs

Please try asking your question again in a moment, or feel free to discuss these insights with your healthcare provider for more detailed guidance.`:r.includes("happy")||r.includes("satisfied")||r.includes("right choice")?`Great question! Based on what you shared with us, ${i} seems like it could be a great fit for your lifestyle and preferences.

The recommendation takes into account:
• Your specific feature preferences
• Your comfort with technology
• Your activity level and daily routine
• The priorities you mentioned

Of course, the best way to know if you'll be happy with any pump is to discuss it thoroughly with your healthcare provider, who knows your medical history and can provide personalized guidance.

Please try asking again in a moment for more detailed insights, or feel free to explore the recommendation details above!`:`I'd be happy to help answer your question about pump recommendations, but I'm experiencing some technical difficulties right now.

Your recommendation for ${i} was based on carefully analyzing your preferences, lifestyle, and the features that matter most to you.

Please try asking your question again in a moment, and I'll do my best to provide you with a detailed, helpful response. You can also discuss these recommendations with your healthcare provider for additional guidance.`}}const B=new te;class ie{async generateRecommendations(s){w("pumpDriveFeatureBased","Debug message",{});try{const o=await this.tryAIRecommendation(s);if(o)return R("pumpDriveFeatureBased","Info message",{}),o}catch{_("pumpDriveFeatureBased","Warning message",{})}w("pumpDriveFeatureBased","Debug message",{});const e=z.getRecommendations(s),i=Object.values(s).join(" ").toLowerCase();if(i.includes("light")||i.includes("weight")||i.includes("2 oz")||i.includes("smallest")){w("pumpDriveFeatureBased","Debug message",{}),w("pumpDriveFeatureBased","Debug message",{});const o=F.find(c=>c.name==="Twiist");o&&(e.topChoice={pump:o,score:95,explanation:"Selected for ultra-lightweight 2 oz design based on your weight preference"})}const a=e.topChoice.pump,n=e.topChoice.explanation,d=await this.generateDetailedAnalysis(a,e.topChoice.score,s,e.decisionFactors);return{topRecommendation:{name:a.name,score:e.topChoice.score,explanation:n,keyFeatures:this.extractKeyFeatures(a),pros:this.extractPros(a,s),cons:this.extractCons(a,s)},alternatives:e.alternatives.map(o=>({name:o.pump.name,score:o.score,explanation:o.explanation,keyFeatures:this.extractKeyFeatures(o.pump)})),decisionSummary:{userPriorities:e.decisionFactors,keyFactors:this.extractKeyDecisionFactors(a,s),confidence:this.calculateConfidence(e.topChoice.score,e.alternatives)},detailedAnalysis:d}}async tryAIRecommendation(s){const e={},i=s.userStory||"",r=s.selectedFeatures||[];let a=i;a||(a=Object.entries(s).map(([u,v])=>Array.isArray(v)?v.join(" "):String(v)).join(" "));const n=(a+" "+r.join(" ")).toLowerCase(),d=n.includes("light")||n.includes("weight")||n.includes("2 oz")||n.includes("ounce")||n.includes("smallest")||n.includes("small")||n.includes("tiny")||n.includes("compact")||n.includes("minimal")||n.includes("discrete")||n.includes("discreet");d&&(w("pumpDriveFeatureBased","Debug message",{}),w("pumpDriveFeatureBased","Debug message",{})),e.lifestyle={category:"lifestyle",mainTranscript:a+" "+r.join(", "),followUpTranscript:d?"IMPORTANT: User specifically mentioned weight/size as priority - prioritize Twiist if mentioned":"",checkedQuestions:Object.keys(s),timestamp:Date.now()},Object.entries(s).forEach(([u,v])=>{if(u!=="userStory"&&u!=="selectedFeatures"){const P=Array.isArray(v)?v.join(", "):String(v);e[u]={category:u,mainTranscript:P,followUpTranscript:P.toLowerCase().includes("weight")||P.toLowerCase().includes("light")?"Contains weight preference":"",checkedQuestions:[u],timestamp:Date.now()}}}),w("pumpDriveFeatureBased","Debug message",{});const o=await B.processUserResponses(e),c=F.find(u=>u.name===o.topChoice.name);return c?(R("pumpDriveFeatureBased","Info message",{}),{topRecommendation:{name:o.topChoice.name,score:o.topChoice.score,explanation:o.topChoice.reasons.join(", "),keyFeatures:this.extractKeyFeatures(c),pros:c.pros||[],cons:c.cons||[]},alternatives:o.alternatives.map(u=>{const v=F.find(P=>P.name===u.name);return{name:u.name,score:u.score,explanation:u.reasons.join(", "),keyFeatures:v?this.extractKeyFeatures(v):[]}}),decisionSummary:{userPriorities:o.keyFactors,keyFactors:o.keyFactors,confidence:o.topChoice.score},detailedAnalysis:o.personalizedInsights}):null}extractKeyFeatures(s){const e=[];return s.tubeless&&e.push("Tubeless pod design"),s.algorithm?.includes("hybrid")&&e.push("Automated insulin delivery"),s.waterproof&&e.push("Waterproof"),s.phoneControl&&e.push("Smartphone control"),s.cgmIntegration&&e.push("Built-in CGM integration"),s.bolusCalculator&&e.push("Bolus calculator"),s.size==="Very small"&&e.push("Compact size"),e.slice(0,5)}extractPros(s,e){const i=[];return e.primary_priority==="simplicity"&&(s.setupTime==="< 1 hour"&&i.push("Quick and easy setup"),s.userInterface==="Simple touchscreen"&&i.push("Intuitive interface")),e.primary_priority==="technology"&&(s.phoneControl&&i.push("Advanced smartphone integration"),s.dataSharing&&i.push("Comprehensive data sharing"),s.customAlerts&&i.push("Customizable alerts")),e.activity_level==="very_active"&&(s.waterproof&&i.push("Safe for swimming and sports"),s.tubeless&&i.push("No tubing to get in the way"),s.tempBasal&&i.push("Temporary basal for exercise")),e.form_factor==="tubeless"&&s.tubeless&&(i.push("Discreet pod design"),i.push("Freedom of movement")),e.control_philosophy==="full_auto"&&s.algorithm?.includes("hybrid")&&(i.push("Handles glucose management automatically"),i.push("Reduces manual dosing decisions")),i.slice(0,4)}extractCons(s,e){const i=[];return e.tech_comfort==="low"&&s.phoneControl&&i.push("May have more features than needed"),e.form_factor==="tubeless"&&!s.tubeless&&i.push("Has tubing which may be less discreet"),e.control_philosophy==="wake_me"&&s.algorithm?.includes("hybrid")&&i.push("More automated than you might prefer"),e.budget_reality==="upfront"&&s.name.includes("t:slim")&&i.push("Higher upfront cost"),i.length===0&&(s.battery==="AAA battery"&&i.push("Requires regular battery replacement"),s.insulinCapacity<300&&i.push(`${s.insulinCapacity}U capacity may require frequent refills`)),i.slice(0,3)}extractKeyDecisionFactors(s,e){const i=[];return s.tubeless&&e.form_factor==="tubeless"&&i.push("Tubeless design matches your preference"),s.algorithm?.includes("hybrid")&&e.control_philosophy==="full_auto"&&i.push("Automation level aligns with your needs"),s.waterproof&&e.activity_level==="very_active"&&i.push("Waterproof rating suits active lifestyle"),s.userInterface==="Simple touchscreen"&&e.tech_comfort==="low"&&i.push("Simple interface matches comfort level"),i}calculateConfidence(s,e){if(e.length===0)return 85;const i=e[0]?.score||0,r=s-i;return r>20?95:r>15?90:r>10?85:r>5?75:65}async generateDetailedAnalysis(s,e,i,r){const a=`
You are analyzing an insulin pump recommendation based on actual technical specifications and user preferences.

PUMP RECOMMENDED: ${s.name}
MATCH SCORE: ${e}% based on technical feature analysis

PUMP SPECIFICATIONS:
- Form: ${s.tubeless?"Tubeless pod":"Traditional with tubing"}
- Algorithm: ${s.algorithm}
- CGM Integration: ${s.cgmIntegration?"Yes":"No"}
- Waterproof: ${s.waterproof?"Yes":"No"}
- Phone Control: ${s.phoneControl?"Yes":"No"}
- Insulin Capacity: ${s.insulinCapacity}U
- Battery: ${s.battery}
- Setup Time: ${s.setupTime}
- User Interface: ${s.userInterface}
- Warranty: ${s.warranty} years

USER PRIORITIES: ${r.join(", ")}

Write a detailed 2-3 paragraph analysis explaining why this pump is the best technical match for this user's specific needs. Focus on how the pump's actual specifications align with their stated preferences. Be specific about technical features and practical benefits.

Keep it professional but approachable, like a knowledgeable diabetes educator explaining the technical rationale.
`;try{return await D.processText(a,{model:"gpt-4",temperature:.7,maxTokens:2e3})||"Detailed analysis temporarily unavailable."}catch{return x("pumpDriveFeatureBased","Error message",{}),`The ${s.name} is technically well-matched to your needs with a ${e}% compatibility score based on your preferences for ${r.join(", ")}.`}}async comparePumps(s){const e=z.getRecommendations(s),i=e.alternatives.slice(0,3);i.unshift(e.topChoice);const r=i.map(n=>({pump:n.pump.name,score:n.score,strengths:this.extractPros(n.pump,s),weaknesses:this.extractCons(n.pump,s)})),a=`Based on your preferences, the ${e.topChoice.pump.name} scores highest at ${e.topChoice.score}% compatibility. ${e.topChoice.explanation}`;return{comparison:r,recommendation:a}}}const Y=new ie;class ae{baseUrl="https://api.tshla.ai";collectAssessmentData(s){w("PumpAssessment","Collecting assessment data from sessionStorage",{});const e=JSON.parse(sessionStorage.getItem("pumpDriveSliders")||"{}"),i=JSON.parse(sessionStorage.getItem("selectedPumpFeatures")||"[]"),r=JSON.parse(sessionStorage.getItem("pumpDriveFreeText")||"{}"),a=r.currentSituation||r.userStory||"",n=r.challenges||"",d=r.priorities||"",o=JSON.parse(sessionStorage.getItem("pumpDriveClarifyingResponses")||"{}"),c=JSON.parse(sessionStorage.getItem("pumpdrive_recommendation")||sessionStorage.getItem("pumpDriveRecommendation")||"null"),u=JSON.parse(sessionStorage.getItem("pumpDriveConversation")||"[]");let v="hybrid";return Object.keys(e).length>0&&(v="sliders"),sessionStorage.getItem("pumpdrive_responses")&&(v="conversation"),{patientName:s,sliderValues:e,selectedFeatures:i,personalStory:a,challenges:n,priorities:d,clarifyingResponses:o,aiRecommendation:c||{topChoice:{name:"Not generated",score:0,reasons:[]},alternatives:[],keyFactors:[],personalizedInsights:"AI recommendation not available"},conversationHistory:u,assessmentFlow:v,timestamp:new Date().toISOString()}}async saveAssessment(s){try{R("PumpAssessment","Saving assessment to database",{patientName:s.patientName,flow:s.assessmentFlow});const e=W.getAuthHeaders(),i=await fetch(`${this.baseUrl}/api/pump-assessments/save-complete`,{method:"POST",headers:{"Content-Type":"application/json",...e},body:JSON.stringify(s)});if(!i.ok){const a=await i.json();throw new Error(a.message||`HTTP ${i.status}`)}const r=await i.json();return R("PumpAssessment","Assessment saved successfully",{assessmentId:r.assessmentId}),r}catch(e){throw x("PumpAssessment","Failed to save assessment",{error:e}),new Error(`Failed to save assessment: ${e instanceof Error?e.message:"Unknown error"}`)}}async saveCurrentAssessment(s){const e=s||`User_${Date.now()}`,i=this.collectAssessmentData(e);return await this.saveAssessment(i)}async getAssessment(s){try{const e=await fetch(`${this.baseUrl}/api/pump-assessments/${s}/complete`);if(!e.ok){if(e.status===404)return null;throw new Error(`HTTP ${e.status}`)}return await e.json()}catch(e){throw x("PumpAssessment","Failed to retrieve assessment",{error:e,assessmentId:s}),new Error(`Failed to retrieve assessment: ${e instanceof Error?e.message:"Unknown error"}`)}}async generatePDF(s){try{const e=await fetch(`${this.baseUrl}/api/pump-assessments/${s}/generate-pdf`,{method:"POST"});if(!e.ok)throw new Error(`HTTP ${e.status}`);return(await e.json()).pdfUrl}catch(e){throw x("PumpAssessment","Failed to generate PDF",{error:e,assessmentId:s}),new Error(`Failed to generate PDF: ${e instanceof Error?e.message:"Unknown error"}`)}}clearSessionData(){["pumpDriveSliders","selectedPumpFeatures","pumpDriveFreeText","pumpDriveClarifyingResponses","pumpDriveClarifyingQuestions","pumpdrive_recommendation","pumpDriveRecommendation","pumpDriveConversation","pumpdrive_responses","pumpDriveCompletedCategories","pumpdrive_category_order","pumpdrive_completed_categories","pumpdrive_priority_order"].forEach(e=>{sessionStorage.removeItem(e)}),w("PumpAssessment","Session storage cleared after successful save",{})}}const re=new ae,G=b=>{if(!b)return"Insulin Pump";const s=["Beta Bionics iLet","Omnipod 5 (Insulet)","Omnipod 5","Tandem t:slim X2","Tandem Mobi","Medtronic MiniMed 780G","Medtronic 780G","Twiist (Zealand Pharma)","Twiist","Sigi Patch Pump","Sigi"];for(const i of s)if(b.includes(i))return i;const e=[/The ([A-Za-z0-9\s:]+?) (?:is|offers|provides|pump)/,/([A-Za-z0-9\s:]+?) (?:is particularly|offers|provides)/,/([A-Za-z0-9\s:]+?) pump is/];for(const i of e){const r=b.match(i);if(r&&r[1]){const a=r[1].trim();if(a.length>3&&a.length<50&&/[A-Za-z]/.test(a))return a}}return"Insulin Pump"};function de(){const b=Z(),[s,e]=T.useState(null),[i,r]=T.useState(!0),[a,n]=T.useState(null),[d,o]=T.useState(!1),[c,u]=T.useState(!1),[v,P]=T.useState(null),[q]=T.useState(()=>sessionStorage.getItem("pumpDrivePatientName")||""),j=async l=>{try{w("PumpDriveResults","Saving assessment to database",{});const m=W.getUser();if(!m){_("PumpDriveResults","No authenticated user found, skipping database save",{});return}const g=JSON.parse(sessionStorage.getItem("pumpDriveConversation")||"[]"),S={patientName:q||m.username||`User_${m.id}`,userId:m.id,sliderValues:JSON.parse(sessionStorage.getItem("pumpDriveSliders")||"{}"),selectedFeatures:JSON.parse(sessionStorage.getItem("selectedPumpFeatures")||"[]"),personalStory:JSON.parse(sessionStorage.getItem("pumpDriveFreeText")||"{}").currentSituation||"",challenges:JSON.parse(sessionStorage.getItem("pumpDriveFreeText")||"{}").challenges||"",priorities:JSON.parse(sessionStorage.getItem("pumpDriveFreeText")||"{}").priorities||"",clarifyingResponses:JSON.parse(sessionStorage.getItem("pumpDriveClarifyingResponses")||"{}"),aiRecommendation:{topChoice:{name:l.topRecommendation.name,score:l.topRecommendation.score,reasons:l.topRecommendation.pros||[]},alternatives:l.alternatives.map(C=>({name:C.name,score:C.score,reasons:[C.explanation]})),keyFactors:l.decisionSummary.userPriorities,personalizedInsights:l.detailedAnalysis},conversationHistory:g,assessmentFlow:"unified",timestamp:new Date().toISOString()},N=await re.saveAssessment(S);N.success&&(u(!0),P(N.assessmentId),R("PumpDriveResults","Assessment saved successfully",{assessmentId:N.assessmentId}),sessionStorage.setItem("pumpdrive_assessment_id",N.assessmentId.toString()))}catch(m){x("PumpDriveResults","Failed to save assessment to database",{error:m})}};T.useEffect(()=>{H()},[]);const H=async()=>{try{if(d){console.log("PumpDriveResults: Already attempted, skipping to prevent infinite loop");return}o(!0),r(!0),n(null);const l=sessionStorage.getItem("pumpDriveSliders"),m=sessionStorage.getItem("selectedPumpFeatures"),g=sessionStorage.getItem("pumpDriveFreeText"),S=sessionStorage.getItem("pumpDriveClarifyingResponses");if(l||m||g){S||R("PumpDriveResults","No clarifying responses - continuing with available data",{}),w("PumpDriveResults","Using simplified AI service for final recommendation",{});try{console.log("PumpDriveResults: Calling new API endpoint...");const p={sliders:JSON.parse(l||"{}"),features:JSON.parse(m||"[]"),freeText:JSON.parse(g||"{}"),clarifying:JSON.parse(S||"{}")},h=await fetch("https://tshla-pump-api-container.redpebble-e4551b7a.eastus.azurecontainerapps.io/api/pumpdrive/recommend",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(p)});if(!h.ok)throw new Error(`API error: ${h.status} ${h.statusText}`);const f=await h.json();console.log("PumpDriveResults: Received API result:",f),console.log("PumpDriveResults: API result overallTop:",f.overallTop),console.log("PumpDriveResults: API result structure:",{hasOverallTop:!!f.overallTop,overallTopLength:f.overallTop?.length,firstItem:f.overallTop?.[0]});const y={topChoice:f.overallTop[0],alternatives:f.alternatives||[],keyFactors:f.keyFactors||[],personalizedInsights:f.personalizedInsights||""};console.log("PumpDriveResults: Converted simplifiedResult:",y),console.log("PumpDriveResults: API alternatives:",f.alternatives),console.log("PumpDriveResults: Top choice from API:",f.overallTop[0]),console.log("PumpDriveResults: TopChoice structure:",{pumpName:y.topChoice.pumpName,name:y.topChoice.name,score:y.topChoice.score,fullObject:y.topChoice});const V=G(y.personalizedInsights);console.log("PumpDriveResults: Extracted pump name:",V,"from text:",y.personalizedInsights.substring(0,100));const O={topRecommendation:{name:y.topChoice.pumpName||y.topChoice.name||V,score:y.topChoice.score||85,explanation:y.personalizedInsights,keyFeatures:y.topChoice.reasons?.slice(0,3)||["Advanced features","User-friendly","Reliable"],pros:y.topChoice.reasons||["Great choice for your needs"],cons:["Discuss with your healthcare provider for personalized guidance"]},alternatives:y.alternatives?.map((A,k)=>{const M=A.reasons?.join(" ")||"",U=G(M);return console.log(`PumpDriveResults: Alt ${k}:`,{originalPumpName:A.pumpName,originalName:A.name,extractedName:U,reasonsText:M.substring(0,100)}),{name:A.pumpName||A.name||U||`Alternative ${k+1}`,score:A.score||80-k*5,explanation:A.reasons?.join(". ")||"Alternative insulin pump option",keyFeatures:A.reasons?.slice(0,2)||["Advanced features","Reliable performance"]}})||[],decisionSummary:{userPriorities:y.keyFactors,keyFactors:y.keyFactors,confidence:90},detailedAnalysis:y.personalizedInsights};console.log("PumpDriveResults: About to set recommendation:",O),console.log("PumpDriveResults: Top recommendation details:",{name:O.topRecommendation.name,explanation:O.topRecommendation.explanation,personalizedInsights:y.personalizedInsights}),e(O),console.log("PumpDriveResults: Recommendation set successfully"),r(!1),console.log("PumpDriveResults: Loading set to false"),j(O).catch(A=>{console.error("PumpDriveResults: Database save failed (non-blocking):",A)}),console.log("PumpDriveResults: Function completed successfully");return}catch(p){console.error("PumpDriveResults: API call failed:",p),x("PumpDriveResults","API service failed, trying Azure AI directly",{error:p});try{console.log("PumpDriveResults: Attempting Azure AI fallback via pumpDriveAIService");const h=await B.processSimplifiedFlow();console.log("PumpDriveResults: Azure AI fallback successful:",h),e(h),r(!1),j(h).catch(f=>{console.error("PumpDriveResults: Database save failed (non-blocking):",f)});return}catch(h){console.error("PumpDriveResults: Azure AI fallback also failed:",h),x("PumpDriveResults","Both API and Azure AI failed, using static fallback",{apiError:p,azureError:h})}e({topRecommendation:{name:"Omnipod 5",score:85,explanation:"Recommended based on general best practices. API service temporarily unavailable.",keyFeatures:["Tubeless design","Automated insulin delivery","Waterproof"],pros:["Freedom from tubing","Automated adjustments","Active lifestyle friendly"],cons:["Pod changes every 3 days","Higher supply costs"]},alternatives:[{name:"Tandem t:slim X2",score:80,explanation:"Advanced hybrid closed-loop system with Control-IQ technology.",keyFeatures:["Control-IQ","Touchscreen","Rechargeable"]}],decisionSummary:{userPriorities:["Active lifestyle","Convenience"],keyFactors:["API service unavailable - using fallback"],confidence:70},detailedAnalysis:"Recommendations generated from fallback system due to API unavailability. Please try again later for personalized AI recommendations."}),r(!1),console.log("PumpDriveResults: Fallback recommendation set, loading stopped");return}}if(l||m||g){w("PumpDriveResults","Using legacy feature-based service",{});const p={};if(l){const h=JSON.parse(l);Object.entries(h).forEach(([f,y])=>{p[f]=String(y)})}if(m){const h=JSON.parse(m);p.selectedFeatures=h.map(f=>f.name||f.id)}if(g){const h=JSON.parse(g);h.currentSituation&&(p.userStory=h.currentSituation)}const I=await Y.generateRecommendations(p);e(I),await j(I);return}const N=sessionStorage.getItem("pumpDriveAnswers")||sessionStorage.getItem("pumpdrive_responses");if(N){const p=JSON.parse(N);w("PumpDriveResults","Using stored answers with legacy service",{});const I=await Y.generateRecommendations(p);e(I),await j(I);return}const C=sessionStorage.getItem("pumpdrive_recommendation");if(C){const p=JSON.parse(C);w("PumpDriveResults","Using saved legacy recommendation",{});const I={topRecommendation:{name:p.topChoice.name||"Omnipod 5",score:p.topChoice.score||85,explanation:p.personalizedInsights||`${p.topChoice.name||"This pump"} is recommended for you.`,keyFeatures:p.topChoice.reasons?.slice(0,3)||["Advanced features","User-friendly","Reliable"],pros:p.topChoice.reasons||["Great choice for your needs"],cons:["Consider discussing with your healthcare provider"]},alternatives:p.alternatives?.map((h,f)=>({name:h.name||["Tandem t:slim X2","Medtronic 780G"][f]||"Insulin Pump",score:h.score||75-f*5,explanation:h.reasons?.join(". ")||"Alternative option to consider",keyFeatures:h.reasons?.slice(0,2)||["Quality features","Proven technology"]}))||[],decisionSummary:{userPriorities:p.keyFactors,keyFactors:p.keyFactors,confidence:85},detailedAnalysis:p.personalizedInsights||"Analysis not available"};e(I),await j(I)}else n("No questionnaire data found. Please start the questionnaire."),setTimeout(()=>{b("/pumpdrive/assessment")},3e3)}catch(l){x("PumpDriveResults","All recommendation services failed",{error:l}),n("Failed to generate recommendations. Please try again.")}finally{r(!1)}},J=()=>{sessionStorage.removeItem("pumpdrive_responses"),sessionStorage.removeItem("pumpdrive_recommendation"),sessionStorage.removeItem("pumpDriveSliders"),sessionStorage.removeItem("pumpDriveSelectedFeatures"),sessionStorage.removeItem("pumpDriveFreeText"),sessionStorage.removeItem("pumpDriveAnswers"),sessionStorage.removeItem("pumpDriveClarifyingResponses"),sessionStorage.removeItem("pumpDriveConversation"),b("/pumpdrive/unified")},K=()=>{window.print()};if(i)return t.jsx("div",{className:"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6",children:t.jsx("div",{className:"max-w-4xl mx-auto",children:t.jsxs("div",{className:"bg-white rounded-xl shadow-lg p-8 text-center",children:[t.jsx("div",{className:"animate-spin h-12 w-12 border-4 border-blue-500 border-t-transparent rounded-full mx-auto mb-4"}),t.jsx("h2",{className:"text-xl font-semibold text-gray-800 mb-2",children:"Analyzing Your Needs"}),t.jsx("p",{className:"text-gray-600",children:"Using advanced feature matching to find your perfect pump..."})]})})});if(a)return t.jsx("div",{className:"min-h-screen bg-gradient-to-br from-red-50 to-pink-100 p-6",children:t.jsx("div",{className:"max-w-4xl mx-auto",children:t.jsxs("div",{className:"bg-white rounded-xl shadow-lg p-8 text-center",children:[t.jsx("div",{className:"text-red-500 text-5xl mb-4",children:"⚠️"}),t.jsx("h2",{className:"text-xl font-semibold text-gray-800 mb-2",children:"Error"}),t.jsx("p",{className:"text-gray-600 mb-6",children:a}),t.jsx("button",{onClick:()=>b("/pumpdrive"),className:"bg-red-500 hover:bg-red-600 text-white px-6 py-2 rounded-lg font-medium transition-colors",children:"Start Over"})]})})});if(!s)return t.jsx("div",{className:"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-6",children:t.jsx("div",{className:"max-w-4xl mx-auto",children:t.jsx("div",{className:"bg-white rounded-xl shadow-lg p-8 text-center",children:t.jsx("h2",{className:"text-xl font-semibold text-gray-800",children:"No recommendations available"})})})});const{topRecommendation:E,alternatives:Q,decisionSummary:$,detailedAnalysis:X}=s;return t.jsx("div",{className:"min-h-screen bg-gradient-to-br from-green-50 to-blue-100 p-6",children:t.jsxs("div",{className:"max-w-6xl mx-auto",children:[t.jsxs("div",{className:"text-center mb-8",children:[t.jsx("h1",{className:"text-3xl font-bold text-gray-800 mb-2",children:"Your Personalized Pump Recommendation"}),t.jsx("p",{className:"text-gray-600",children:"Based on your specific preferences and AI analysis"}),c&&t.jsxs("div",{className:"mt-3 p-2 bg-green-100 border border-green-400 rounded-lg text-green-700 text-sm",children:["✅ Assessment saved to database (ID: ",v,")"]})]}),t.jsxs("div",{className:"bg-gradient-to-r from-blue-50 to-purple-50 border-2 border-blue-200 rounded-xl shadow-lg p-8 mb-8",children:[t.jsxs("h2",{className:"text-2xl font-bold text-gray-800 mb-6 flex items-center",children:[t.jsx("span",{className:"mr-3",children:"📋"})," Your Input Summary"]}),t.jsxs("div",{className:"grid md:grid-cols-3 gap-6",children:[t.jsxs("div",{className:"bg-white rounded-lg p-6 shadow-md",children:[t.jsxs("h3",{className:"text-lg font-semibold text-gray-800 mb-4 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"🎚️"})," Your Lifestyle Preferences"]}),(()=>{const l=sessionStorage.getItem("pumpDriveSliders");if(l){const m=JSON.parse(l);return t.jsx("div",{className:"space-y-3",children:Object.entries(m).map(([g,S])=>t.jsxs("div",{className:"flex items-center justify-between",children:[t.jsxs("span",{className:"text-sm font-medium text-gray-700 capitalize",children:[g.replace(/([A-Z])/g," $1").trim(),":"]}),t.jsxs("div",{className:"flex items-center",children:[t.jsxs("span",{className:"text-sm font-bold text-blue-600 mr-2",children:[S,"/10"]}),t.jsx("div",{className:"w-16 bg-gray-200 rounded-full h-2",children:t.jsx("div",{className:"bg-blue-500 h-2 rounded-full",style:{width:`${S/10*100}%`}})})]})]},g))})}return t.jsx("p",{className:"text-gray-500 text-sm",children:"No slider data available"})})()]}),t.jsxs("div",{className:"bg-white rounded-lg p-6 shadow-md",children:[t.jsxs("h3",{className:"text-lg font-semibold text-gray-800 mb-4 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"⭐"})," Selected Features"]}),(()=>{const l=sessionStorage.getItem("selectedPumpFeatures");if(l){const m=JSON.parse(l);return t.jsx("div",{className:"space-y-2",children:m.map((g,S)=>t.jsxs("div",{className:"flex items-center",children:[t.jsx("span",{className:"w-2 h-2 bg-green-500 rounded-full mr-2"}),t.jsx("span",{className:"text-sm text-gray-700",children:g.name||g.title||g.id||g})]},S))})}return t.jsx("p",{className:"text-gray-500 text-sm",children:"No features selected"})})()]}),t.jsxs("div",{className:"bg-white rounded-lg p-6 shadow-md",children:[t.jsxs("h3",{className:"text-lg font-semibold text-gray-800 mb-4 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"💭"})," Your Story & Priorities"]}),(()=>{const l=sessionStorage.getItem("pumpDriveFreeText");if(l){const m=JSON.parse(l),g=m.currentSituation||m.userStory||"";if(g)return t.jsx("div",{className:"text-sm text-gray-700 leading-relaxed",children:t.jsxs("p",{className:"italic",children:['"',g,'"']})})}return t.jsx("p",{className:"text-gray-500 text-sm",children:"No personal story provided"})})()]})]}),(()=>{const l=sessionStorage.getItem("pumpDriveClarifyingResponses");if(l){const m=JSON.parse(l);return t.jsxs("div",{className:"mt-6 bg-white rounded-lg p-6 shadow-md",children:[t.jsxs("h3",{className:"text-lg font-semibold text-gray-800 mb-4 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"❓"})," Your Clarifying Responses"]}),t.jsx("div",{className:"space-y-3",children:Object.entries(m).map(([g,S],N)=>t.jsxs("div",{className:"border-l-4 border-purple-400 pl-4",children:[t.jsxs("p",{className:"text-sm font-medium text-gray-800 mb-1",children:["Q: ",g]}),t.jsxs("p",{className:"text-sm text-gray-600 italic",children:["A: ",S]})]},N))})]})}return null})(),t.jsx("div",{className:"mt-6 text-center",children:t.jsx("p",{className:"text-sm text-gray-600",children:"✅ All of this information was considered by our AI in making your recommendation below"})})]}),t.jsxs("div",{className:"bg-white rounded-xl shadow-lg p-8 mb-8 border-l-4 border-green-500",children:[t.jsx("div",{className:"flex items-center justify-between mb-6",children:t.jsxs("div",{children:[t.jsxs("h2",{className:"text-2xl font-bold text-gray-800 mb-2",children:["🏆 Best Match: ",E.name]}),t.jsxs("div",{className:"flex items-center space-x-4",children:[t.jsx("div",{className:"bg-green-100 px-3 py-1 rounded-full",children:t.jsxs("span",{className:"text-green-800 font-semibold",children:[E.score,"% Match"]})}),t.jsx("div",{className:"bg-blue-100 px-3 py-1 rounded-full",children:t.jsxs("span",{className:"text-blue-800 font-semibold",children:[$.confidence,"% Confidence"]})})]})]})}),t.jsx("p",{className:"text-gray-700 mb-6 text-lg leading-relaxed",children:E.explanation}),t.jsxs("div",{className:"grid md:grid-cols-3 gap-6",children:[t.jsxs("div",{children:[t.jsxs("h3",{className:"font-semibold text-gray-800 mb-3 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"⭐"})," Key Features"]}),t.jsx("ul",{className:"space-y-2",children:E.keyFeatures.map((l,m)=>t.jsxs("li",{className:"text-gray-600 text-sm flex items-center",children:[t.jsx("span",{className:"mr-2",children:"•"}),l]},m))})]}),t.jsxs("div",{children:[t.jsxs("h3",{className:"font-semibold text-gray-800 mb-3 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"✅"})," Perfect For You"]}),t.jsx("ul",{className:"space-y-2",children:E.pros.map((l,m)=>t.jsxs("li",{className:"text-green-600 text-sm flex items-center",children:[t.jsx("span",{className:"mr-2",children:"•"}),l]},m))})]}),t.jsxs("div",{children:[t.jsxs("h3",{className:"font-semibold text-gray-800 mb-3 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"💭"})," Consider"]}),t.jsx("ul",{className:"space-y-2",children:E.cons.map((l,m)=>t.jsxs("li",{className:"text-amber-600 text-sm flex items-center",children:[t.jsx("span",{className:"mr-2",children:"•"}),l]},m))})]})]})]}),t.jsxs("div",{className:"bg-white rounded-xl shadow-lg p-8 mb-8",children:[t.jsxs("h3",{className:"text-xl font-semibold text-gray-800 mb-4 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"🔍"})," Expert Analysis"]}),t.jsx("div",{className:"prose text-gray-700 leading-relaxed",children:X})]}),t.jsxs("div",{className:"bg-white rounded-xl shadow-lg p-8 mb-8",children:[t.jsxs("h3",{className:"text-xl font-semibold text-gray-800 mb-4 flex items-center",children:[t.jsx("span",{className:"mr-2",children:"📋"})," Your Decision Factors"]}),t.jsxs("div",{className:"grid md:grid-cols-2 gap-6",children:[t.jsxs("div",{children:[t.jsx("h4",{className:"font-medium text-gray-700 mb-3",children:"Your Priorities:"}),t.jsx("ul",{className:"space-y-2",children:$.userPriorities.map((l,m)=>t.jsxs("li",{className:"text-gray-600 text-sm flex items-center",children:[t.jsx("span",{className:"mr-2",children:"🎯"}),l]},m))})]}),t.jsxs("div",{children:[t.jsx("h4",{className:"font-medium text-gray-700 mb-3",children:"Key Matching Factors:"}),t.jsx("ul",{className:"space-y-2",children:$.keyFactors.map((l,m)=>t.jsxs("li",{className:"text-gray-600 text-sm flex items-center",children:[t.jsx("span",{className:"mr-2",children:"🔗"}),l]},m))})]})]})]}),t.jsxs("div",{className:"bg-white rounded-xl shadow-lg p-8 mb-8",children:[t.jsxs("h3",{className:"text-xl font-semibold text-gray-800 flex items-center mb-6",children:[t.jsx("span",{className:"mr-2",children:"🔄"})," Other Strong Options"]}),t.jsx("div",{className:"grid md:grid-cols-2 lg:grid-cols-3 gap-4",children:Q.map((l,m)=>t.jsxs("div",{className:"border rounded-lg p-4 hover:border-blue-300 transition-colors",children:[t.jsxs("div",{className:"flex justify-between items-start mb-3",children:[t.jsx("h4",{className:"font-semibold text-gray-800",children:l.name}),t.jsxs("span",{className:"bg-gray-100 px-2 py-1 rounded text-sm text-gray-600",children:[l.score,"% Match"]})]}),t.jsx("p",{className:"text-gray-600 text-sm mb-3",children:l.explanation}),t.jsxs("div",{children:[t.jsx("h5",{className:"text-xs font-medium text-gray-700 mb-2",children:"Key Features:"}),t.jsx("ul",{className:"space-y-1",children:l.keyFeatures.slice(0,3).map((g,S)=>t.jsxs("li",{className:"text-xs text-gray-600",children:["• ",g]},S))})]})]},m))})]}),t.jsxs("div",{className:"flex justify-center gap-4 mb-8 flex-wrap",children:[t.jsx("button",{onClick:K,className:"px-8 py-3 bg-gradient-to-r from-green-600 to-emerald-600 text-white font-bold text-lg rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all",children:"🖨️ Print Results"}),t.jsx("button",{onClick:J,className:"px-8 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-bold text-lg rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all",children:"🚀 Start New Assessment"})]})]})})}export{de as default};
//# sourceMappingURL=PumpDriveResults-wv9MF454.js.map
