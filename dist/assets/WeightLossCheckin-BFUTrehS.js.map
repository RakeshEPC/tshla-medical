{"version":3,"file":"WeightLossCheckin-BFUTrehS.js","sources":["../../src/pages/WeightLossCheckin.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { weightLossProfileService } from '../weightloss/weightLossProfile.service';\nimport type { DailyCheckin, WeightLossProfile } from '../weightloss/types';\n\nconst MOOD_OPTIONS = [\n  { value: 'terrible', emoji: 'üòî', color: 'text-red-500' },\n  { value: 'low', emoji: 'üòï', color: 'text-orange-500' },\n  { value: 'okay', emoji: 'üòê', color: 'text-yellow-500' },\n  { value: 'good', emoji: 'üôÇ', color: 'text-blue-500' },\n  { value: 'great', emoji: 'üòÑ', color: 'text-green-500' },\n];\n\nexport default function WeightLossCheckin() {\n  const navigate = useNavigate();\n  const [profile, setProfile] = useState<WeightLossProfile | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [todayComplete, setTodayComplete] = useState(false);\n\n  const today = new Date().toISOString().split('T')[0];\n\n  // Check-in form state\n  const [checkin, setCheckin] = useState<DailyCheckin>({\n    date: today,\n    patientId: '',\n    weight: undefined,\n    steps: undefined,\n    protein: undefined,\n    sleep: undefined,\n    hydration: undefined,\n    hungerScore: 5,\n    nausea: 0,\n    constipation: 0,\n    mood: 'okay' as any,\n    notes: '',\n  });\n\n  const [quickEntry, setQuickEntry] = useState({\n    showWeightEntry: false,\n    showProteinEntry: false,\n    showStepsEntry: false,\n  });\n\n  useEffect(() => {\n    loadProfile();\n  }, []);\n\n  const loadProfile = () => {\n    // For now, use the same patient ID pattern\n    const patientId = `patient_${Date.now()}`;\n    const existingProfile = weightLossProfileService.loadProfile(patientId);\n\n    if (!existingProfile) {\n      // Redirect to onboarding if no profile\n      navigate('/weightloss/onboarding');\n      return;\n    }\n\n    setProfile(existingProfile);\n    setCheckin({ ...checkin, patientId: existingProfile.patientId });\n\n    // Check if today's check-in is already done\n    const isComplete = weightLossProfileService.isTodayCheckinComplete(existingProfile.patientId);\n    setTodayComplete(isComplete);\n\n    // Load today's check-in if it exists\n    if (isComplete) {\n      const todayCheckins = weightLossProfileService.getDailyCheckins(\n        existingProfile.patientId,\n        today,\n        today\n      );\n      if (todayCheckins.length > 0) {\n        setCheckin(todayCheckins[0]);\n      }\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleSave = async () => {\n    if (!profile) return;\n\n    setIsSaving(true);\n\n    // Save the check-in\n    weightLossProfileService.saveDailyCheckin(checkin);\n\n    // Update engagement stats\n    weightLossProfileService.updateEngagementStats(profile.patientId, {\n      checkinStreak: todayComplete ? undefined : 1, // Will be calculated properly in service\n    });\n\n    setTodayComplete(true);\n    setIsSaving(false);\n\n    // Show success message\n    setTimeout(() => {\n      navigate('/weightloss/dashboard');\n    }, 1000);\n  };\n\n  const handleQuickWeight = () => {\n    setQuickEntry({ ...quickEntry, showWeightEntry: !quickEntry.showWeightEntry });\n  };\n\n  const getScoreColor = (score: number, type: 'hunger' | 'symptom') => {\n    if (type === 'hunger') {\n      if (score <= 3) return 'bg-green-500';\n      if (score <= 6) return 'bg-yellow-500';\n      return 'bg-red-500';\n    } else {\n      if (score === 0) return 'bg-green-500';\n      if (score <= 3) return 'bg-yellow-500';\n      if (score <= 6) return 'bg-orange-500';\n      return 'bg-red-500';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-green-600 mx-auto mb-4\"></div>\n          <p className=\"text-lg text-gray-600\">Loading check-in...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Daily Check-in</h1>\n              <p className=\"text-gray-600 mt-1\">\n                {new Date().toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                })}\n              </p>\n            </div>\n            {todayComplete && (\n              <div className=\"bg-green-100 text-green-700 px-4 py-2 rounded-full font-medium\">\n                ‚úì Today Complete\n              </div>\n            )}\n          </div>\n\n          {/* Streak indicator */}\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"text-sm text-gray-600\">Current Streak:</div>\n            <div className=\"flex space-x-1\">\n              {[...Array(7)].map((_, i) => (\n                <div\n                  key={i}\n                  className={`w-8 h-8 rounded-full ${\n                    i < 3 ? 'bg-green-500' : 'bg-gray-200'\n                  } flex items-center justify-center text-white text-xs`}\n                >\n                  {i < 3 ? '‚úì' : ''}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Metrics Entry */}\n        <div className=\"grid md:grid-cols-3 gap-4 mb-6\">\n          {/* Weight */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-3xl\">‚öñÔ∏è</div>\n                <div>\n                  <div className=\"text-sm text-gray-500\">Weight</div>\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    {checkin.weight || '--'} {profile.demographics.preferredUnits.weight}\n                  </div>\n                </div>\n              </div>\n              <button onClick={handleQuickWeight} className=\"text-blue-600 hover:text-blue-700\">\n                {checkin.weight ? 'Edit' : 'Add'}\n              </button>\n            </div>\n            {quickEntry.showWeightEntry && (\n              <div className=\"mt-4 flex space-x-2\">\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={checkin.weight || ''}\n                  onChange={e => setCheckin({ ...checkin, weight: parseFloat(e.target.value) })}\n                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  placeholder={profile.demographics.preferredUnits.weight === 'kg' ? '75.5' : '166'}\n                />\n                <button\n                  onClick={() => setQuickEntry({ ...quickEntry, showWeightEntry: false })}\n                  className=\"px-3 py-2 bg-green-500 text-white rounded-lg\"\n                >\n                  ‚úì\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* Steps */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-3xl\">üëü</div>\n                <div>\n                  <div className=\"text-sm text-gray-500\">Steps</div>\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    {checkin.steps?.toLocaleString() || '--'}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() =>\n                  setQuickEntry({ ...quickEntry, showStepsEntry: !quickEntry.showStepsEntry })\n                }\n                className=\"text-blue-600 hover:text-blue-700\"\n              >\n                {checkin.steps ? 'Edit' : 'Add'}\n              </button>\n            </div>\n            {quickEntry.showStepsEntry && (\n              <div className=\"mt-4 flex space-x-2\">\n                <input\n                  type=\"number\"\n                  value={checkin.steps || ''}\n                  onChange={e => setCheckin({ ...checkin, steps: parseInt(e.target.value) })}\n                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"8000\"\n                />\n                <button\n                  onClick={() => setQuickEntry({ ...quickEntry, showStepsEntry: false })}\n                  className=\"px-3 py-2 bg-green-500 text-white rounded-lg\"\n                >\n                  ‚úì\n                </button>\n              </div>\n            )}\n            {/* Progress bar */}\n            {profile.targets.steps && (\n              <div className=\"mt-2\">\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div\n                    className=\"bg-blue-500 h-2 rounded-full transition-all\"\n                    style={{\n                      width: `${Math.min(100, ((checkin.steps || 0) / profile.targets.steps.target) * 100)}%`,\n                    }}\n                  />\n                </div>\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  Goal: {profile.targets.steps.target.toLocaleString()}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Protein */}\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-3xl\">ü•©</div>\n                <div>\n                  <div className=\"text-sm text-gray-500\">Protein</div>\n                  <div className=\"text-2xl font-bold text-gray-900\">{checkin.protein || '--'}g</div>\n                </div>\n              </div>\n              <button\n                onClick={() =>\n                  setQuickEntry({ ...quickEntry, showProteinEntry: !quickEntry.showProteinEntry })\n                }\n                className=\"text-blue-600 hover:text-blue-700\"\n              >\n                {checkin.protein ? 'Edit' : 'Add'}\n              </button>\n            </div>\n            {quickEntry.showProteinEntry && (\n              <div className=\"mt-4 flex space-x-2\">\n                <input\n                  type=\"number\"\n                  value={checkin.protein || ''}\n                  onChange={e => setCheckin({ ...checkin, protein: parseInt(e.target.value) })}\n                  className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"80\"\n                />\n                <button\n                  onClick={() => setQuickEntry({ ...quickEntry, showProteinEntry: false })}\n                  className=\"px-3 py-2 bg-green-500 text-white rounded-lg\"\n                >\n                  ‚úì\n                </button>\n              </div>\n            )}\n            {/* Progress bar */}\n            {profile.targets.protein && (\n              <div className=\"mt-2\">\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div\n                    className=\"bg-green-500 h-2 rounded-full transition-all\"\n                    style={{\n                      width: `${Math.min(100, ((checkin.protein || 0) / profile.targets.protein.target) * 100)}%`,\n                    }}\n                  />\n                </div>\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  Goal: {profile.targets.protein.target}g\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Wellness Scores */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">How are you feeling?</h2>\n\n          <div className=\"space-y-6\">\n            {/* Mood */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">Overall Mood</label>\n              <div className=\"flex justify-between\">\n                {MOOD_OPTIONS.map(mood => (\n                  <button\n                    key={mood.value}\n                    onClick={() => setCheckin({ ...checkin, mood: mood.value as any })}\n                    className={`\n                      p-3 rounded-lg transition-all\n                      ${\n                        checkin.mood === mood.value\n                          ? 'bg-blue-100 ring-2 ring-blue-500'\n                          : 'bg-gray-50 hover:bg-gray-100'\n                      }\n                    `}\n                  >\n                    <div className={`text-3xl ${mood.color}`}>{mood.emoji}</div>\n                    <div className=\"text-xs text-gray-600 mt-1 capitalize\">{mood.value}</div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Hunger */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Hunger Level: {checkin.hungerScore}/10\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                value={checkin.hungerScore}\n                onChange={e => setCheckin({ ...checkin, hungerScore: parseInt(e.target.value) })}\n                className=\"w-full\"\n              />\n              <div className=\"flex justify-between text-xs text-gray-500\">\n                <span>No hunger</span>\n                <span>Moderate</span>\n                <span>Extreme hunger</span>\n              </div>\n              <div\n                className={`h-2 ${getScoreColor(checkin.hungerScore, 'hunger')} rounded-full mt-2`}\n              />\n            </div>\n\n            {/* Nausea */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Nausea: {checkin.nausea}/10\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                value={checkin.nausea}\n                onChange={e => setCheckin({ ...checkin, nausea: parseInt(e.target.value) })}\n                className=\"w-full\"\n              />\n              <div className=\"flex justify-between text-xs text-gray-500\">\n                <span>None</span>\n                <span>Mild</span>\n                <span>Severe</span>\n              </div>\n              <div\n                className={`h-2 ${getScoreColor(checkin.nausea, 'symptom')} rounded-full mt-2`}\n              />\n            </div>\n\n            {/* Constipation */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Constipation: {checkin.constipation}/10\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                value={checkin.constipation}\n                onChange={e => setCheckin({ ...checkin, constipation: parseInt(e.target.value) })}\n                className=\"w-full\"\n              />\n              <div className=\"flex justify-between text-xs text-gray-500\">\n                <span>None</span>\n                <span>Mild</span>\n                <span>Severe</span>\n              </div>\n              <div\n                className={`h-2 ${getScoreColor(checkin.constipation, 'symptom')} rounded-full mt-2`}\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Additional Metrics */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Additional Tracking</h2>\n\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sleep (hours)</label>\n              <input\n                type=\"number\"\n                step=\"0.5\"\n                value={checkin.sleep || ''}\n                onChange={e => setCheckin({ ...checkin, sleep: parseFloat(e.target.value) })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"7.5\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Water (ml)</label>\n              <input\n                type=\"number\"\n                step=\"250\"\n                value={checkin.hydration || ''}\n                onChange={e => setCheckin({ ...checkin, hydration: parseInt(e.target.value) })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"2000\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Notes */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Notes & Observations</h2>\n\n          <textarea\n            value={checkin.notes}\n            onChange={e => setCheckin({ ...checkin, notes: e.target.value })}\n            placeholder=\"Any additional notes about your day, challenges, wins, or symptoms...\"\n            className=\"w-full h-32 px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        {/* Red Flags Alert */}\n        {(checkin.nausea >= 8 || checkin.constipation >= 8) && (\n          <div className=\"bg-red-50 border-2 border-red-200 rounded-xl p-4 mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-3xl\">‚ö†Ô∏è</div>\n              <div>\n                <div className=\"font-semibold text-red-700\">Health Alert</div>\n                <div className=\"text-sm text-red-600\">\n                  You're experiencing severe symptoms. Consider contacting your healthcare provider\n                  if symptoms persist.\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Save Button */}\n        <div className=\"flex justify-center space-x-4\">\n          <button\n            onClick={() => navigate('/weightloss/dashboard')}\n            className=\"px-8 py-3 bg-white text-gray-700 font-semibold rounded-lg border-2 border-gray-300 hover:bg-gray-50\"\n          >\n            Skip Today\n          </button>\n\n          <button\n            onClick={handleSave}\n            disabled={isSaving}\n            className={`\n              px-8 py-3 font-semibold rounded-lg shadow-lg transition-all\n              ${\n                isSaving\n                  ? 'bg-gray-400 text-gray-200 cursor-not-allowed'\n                  : 'bg-gradient-to-r from-green-600 to-blue-600 text-white hover:from-green-700 hover:to-blue-700'\n              }\n            `}\n          >\n            {isSaving ? 'Saving...' : todayComplete ? 'Update Check-in' : 'Complete Check-in'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["MOOD_OPTIONS","WeightLossCheckin","navigate","useNavigate","profile","setProfile","useState","isLoading","setIsLoading","isSaving","setIsSaving","todayComplete","setTodayComplete","today","checkin","setCheckin","quickEntry","setQuickEntry","useEffect","loadProfile","patientId","existingProfile","weightLossProfileService","isComplete","todayCheckins","handleSave","handleQuickWeight","getScoreColor","score","type","jsxs","jsx","_","i","e","mood"],"mappings":"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"}