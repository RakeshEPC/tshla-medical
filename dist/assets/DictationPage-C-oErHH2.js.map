{"version":3,"file":"DictationPage-C-oErHH2.js","sources":["../../src/pages/DictationPage.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getPatientData, type PatientData } from '../services/patientData.service';\nimport { templateStorage } from '../lib/templateStorage';\nimport type { Template } from '../types/template.types';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\nexport default function DictationPage() {\n  const { patientId } = useParams();\n  const navigate = useNavigate();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [interimText, setInterimText] = useState('');\n  const [recognition, setRecognition] = useState<any>(null);\n  const [selectedVoice, setSelectedVoice] = useState(elevenLabsService.getVoice());\n  const [showVoiceSettings, setShowVoiceSettings] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [templates, setTemplates] = useState<Template[]>([]);\n  const [currentTemplate, setCurrentTemplate] = useState<Template | null>(null);\n  const [processedNote, setProcessedNote] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [showProcessed, setShowProcessed] = useState(false);\n  const [patientData, setPatientData] = useState<PatientData | undefined>();\n  const [combinedNoteContent, setCombinedNoteContent] = useState('');\n\n  // Load patient data\n  useEffect(() => {\n    if (patientId) {\n      const data = getPatientData(patientId);\n      setPatientData(data);\n\n      // Initialize combined note content with patient summary\n      if (data) {\n        const patientSummary = `PATIENT SUMMARY\n====================\nName: ${data.name}\nMRN: ${data.mrn}\nDOB: ${data.dob}\n\nACTIVE DIAGNOSES:\n${data.diagnosis.map(d => `• ${d}`).join('\\n')}\n\nCURRENT MEDICATIONS:\n${data.medications.map(m => `• ${m.name} ${m.dosage} - ${m.frequency} (${m.indication})`).join('\\n')}\n\nRECENT LAB RESULTS:\n${data.labResults\n  .slice(0, 3)\n  .map(l => `• ${l.test}: ${l.value} (Normal: ${l.normal}) - ${l.date}`)\n  .join('\\n')}\n\nVITALS (Last Visit):\n• BP: ${data.vitalSigns.bp}\n• HR: ${data.vitalSigns.hr} bpm\n• Temp: ${data.vitalSigns.temp}\n• Weight: ${data.vitalSigns.weight}\n• BMI: ${data.vitalSigns.bmi}\n${data.vitalSigns.glucose ? `• Glucose: ${data.vitalSigns.glucose}` : ''}\n\n${\n  data.mentalHealth\n    ? `MENTAL HEALTH SCREENING:\n• PHQ-9 Score: ${data.mentalHealth.phq9Score}\n• GAD-7 Score: ${data.mentalHealth.gad7Score}\n• Last Screening: ${data.mentalHealth.lastScreening}`\n    : ''\n}\n\n====================\nTODAY'S VISIT - ${new Date().toLocaleDateString()}\n====================\n\n`;\n        setCombinedNoteContent(patientSummary);\n      }\n    }\n  }, [patientId]);\n\n  // Load templates\n  useEffect(() => {\n    const allTemplates = templateStorage.getTemplates();\n    setTemplates(allTemplates);\n    // Set first template as default if available\n    if (allTemplates.length > 0 && !selectedTemplate) {\n      setSelectedTemplate(allTemplates[0].id);\n      setCurrentTemplate(allTemplates[0]);\n    }\n  }, []);\n\n  // Update current template when selection changes\n  useEffect(() => {\n    if (selectedTemplate) {\n      const template = templates.find(t => t.id === selectedTemplate);\n      setCurrentTemplate(template || null);\n    }\n  }, [selectedTemplate, templates]);\n\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition =\n        (window as any).webkitSpeechRecognition || (window as any).SpeechRecognition;\n      const recognitionInstance = new SpeechRecognition();\n\n      recognitionInstance.continuous = true;\n      recognitionInstance.interimResults = true;\n      recognitionInstance.lang = 'en-US';\n\n      recognitionInstance.onresult = (event: any) => {\n        let interim = '';\n        let final = '';\n\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            final += transcript + ' ';\n          } else {\n            interim += transcript;\n          }\n        }\n\n        if (final) {\n          setTranscript(prev => prev + final);\n          // Add to combined note content\n          setCombinedNoteContent(prev => prev + final);\n          setInterimText('');\n        } else {\n          setInterimText(interim);\n        }\n      };\n\n      recognitionInstance.onerror = (event: any) => {\n        logError('DictationPage', 'Error message', {});\n        setIsRecording(false);\n        elevenLabsService.speak('Speech recognition error. Please try again.');\n      };\n\n      recognitionInstance.onend = () => {\n        setIsRecording(false);\n      };\n\n      setRecognition(recognitionInstance);\n    }\n\n    return () => {\n      if (recognition) {\n        recognition.stop();\n      }\n    };\n  }, []);\n\n  const toggleRecording = () => {\n    if (!recognition) {\n      elevenLabsService.speak('Speech recognition not supported in this browser');\n      alert('Speech recognition not supported in this browser');\n      return;\n    }\n\n    if (isRecording) {\n      recognition.stop();\n      setIsRecording(false);\n      setInterimText('');\n      elevenLabsService.speak('Recording stopped');\n    } else {\n      recognition.start();\n      setIsRecording(true);\n      elevenLabsService.speak('Recording started. Please speak clearly.');\n    }\n  };\n\n  const handleVoiceChange = (voiceId: string) => {\n    setSelectedVoice(voiceId);\n    elevenLabsService.setVoice(voiceId);\n    elevenLabsService.testVoice(voiceId);\n  };\n\n  const handleTemplateChange = (templateId: string) => {\n    setSelectedTemplate(templateId);\n    const template = templates.find(t => t.id === templateId);\n    setCurrentTemplate(template || null);\n    // Track template usage\n    templateStorage.trackUsage(templateId);\n  };\n\n  const processWithAI = async () => {\n    setIsProcessing(true);\n    elevenLabsService.speak('Processing with AI using selected template. Please wait.');\n\n    // Get the current template\n    const template = currentTemplate;\n\n    setTimeout(() => {\n      let processed = '';\n\n      if (template && template.sections) {\n        // Build note based on template sections\n        processed = `**${template.name} - ${new Date().toLocaleDateString()}**\n**Patient:** ${patientData?.name || 'Unknown'}\n**MRN:** ${patientData?.mrn || 'Unknown'}\n**Provider:** Dr. ${localStorage.getItem('doctor_name') || 'Provider'}\n\n`;\n\n        // Add each template section with content\n        if (template.sections.chief_complaint) {\n          processed += `**CHIEF COMPLAINT:**\n${template.sections.chief_complaint}${transcript.slice(0, 100)}\n\n`;\n        }\n\n        if (template.sections.history_present_illness) {\n          processed += `**HISTORY OF PRESENT ILLNESS:**\n${template.sections.history_present_illness}${transcript.slice(100, 300) || 'Patient reports symptoms as documented in chief complaint.'}\n\n`;\n        }\n\n        if (template.sections.review_of_systems) {\n          processed += `**REVIEW OF SYSTEMS:**\n${template.sections.review_of_systems}\n\n`;\n        }\n\n        if (template.sections.past_medical_history) {\n          processed += `**PAST MEDICAL HISTORY:**\n${patientData?.diagnosis.join(', ') || template.sections.past_medical_history}\n\n`;\n        }\n\n        if (template.sections.medications) {\n          processed += `**MEDICATIONS:**\n${patientData?.medications.map(m => `• ${m.name} ${m.dosage} - ${m.frequency}`).join('\\n') || template.sections.medications}\n\n`;\n        }\n\n        if (template.sections.allergies) {\n          processed += `**ALLERGIES:**\n${template.sections.allergies}\n\n`;\n        }\n\n        if (template.sections.physical_exam) {\n          processed += `**PHYSICAL EXAMINATION:**\n${template.sections.physical_exam}\n${patientData ? `Current Vitals: BP ${patientData.vitalSigns.bp}, HR ${patientData.vitalSigns.hr}, Temp ${patientData.vitalSigns.temp}` : ''}\n\n`;\n        }\n\n        if (template.sections.assessment) {\n          processed += `**ASSESSMENT:**\n${template.sections.assessment || patientData?.diagnosis.join('\\n') || 'Clinical assessment based on examination'}\n\n`;\n        }\n\n        if (template.sections.plan) {\n          processed += `**PLAN:**\n${template.sections.plan}\n${patientData?.medications.length ? '• Continue current medications' : ''}\n• Follow up as scheduled\n\n`;\n        }\n\n        processed += `**Dictation Notes:**\n${transcript}\n\n**Time:** ${new Date().toLocaleTimeString()}\n**Template Used:** ${template.name} (${template.specialty})`;\n      } else {\n        // Fallback to basic SOAP note if no template\n        processed = `\n**SOAP Note - ${new Date().toLocaleDateString()}**\n**Patient:** ${patientData?.name || patientId}\n**MRN:** ${patientData?.mrn || 'Unknown'}\n\n**SUBJECTIVE:**\n${transcript.slice(0, 200) || 'Patient presents with chief complaint...'}\n\n**OBJECTIVE:**\n- Vital Signs: ${patientData ? `BP ${patientData.vitalSigns.bp}, HR ${patientData.vitalSigns.hr}, Temp ${patientData.vitalSigns.temp}` : 'See vitals'}\n- Current Medications: ${patientData?.medications.map(m => m.name).join(', ') || 'See medication list'}\n- Active Diagnoses: ${patientData?.diagnosis.join(', ') || 'See problem list'}\n\n**ASSESSMENT:**\n${patientData?.diagnosis[0] || 'Primary diagnosis'} - stable on current regimen\n\n**PLAN:**\n- Continue current medications\n- Follow up in 3 months\n- Labs: ${patientData?.labResults[0]?.test || 'Routine labs'} at next visit\n\n**Provider:** Dr. ${localStorage.getItem('doctor_name') || 'Provider'}\n**Time:** ${new Date().toLocaleTimeString()}\n      `.trim();\n      }\n\n      setProcessedNote(processed);\n      setShowProcessed(true);\n      setIsProcessing(false);\n      elevenLabsService.speak('AI processing complete. Note is ready for review.');\n    }, 2000);\n  };\n\n  const saveNote = async () => {\n    const noteToSave = showProcessed ? processedNote : combinedNoteContent + transcript;\n    // Save to localStorage for now\n    const visitId = `visit-${Date.now()}`;\n    localStorage.setItem(\n      visitId,\n      JSON.stringify({\n        patientId,\n        note: noteToSave,\n        template: selectedTemplate,\n        templateName: currentTemplate?.name,\n        timestamp: new Date().toISOString(),\n      })\n    );\n    localStorage.setItem('last-visit', visitId);\n    elevenLabsService.speak('Note saved successfully.');\n    navigate('/doctor');\n  };\n\n  const printNote = () => {\n    const visitId = localStorage.getItem('last-visit') || '1';\n    navigate(`/print/${visitId}`);\n  };\n\n  const createSummary = () => {\n    const visitId = localStorage.getItem('last-visit') || '1';\n    navigate(`/visit-summary/${visitId}`);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => navigate('/doctor')}\n                className=\"text-gray-600 hover:text-gray-900\"\n              >\n                ← Back\n              </button>\n              <h1 className=\"text-lg font-semibold\">Medical Dictation</h1>\n              <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded\">\n                {patientData\n                  ? `${patientData.name} (${patientData.mrn})`\n                  : `Patient ID: ${patientId}`}\n              </span>\n            </div>\n            <button\n              onClick={() => setShowVoiceSettings(!showVoiceSettings)}\n              className=\"px-4 py-2 text-sm bg-purple-600 text-white rounded-lg hover:bg-purple-700\"\n            >\n              ⚙️ Voice Settings\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Voice Settings Panel */}\n      {showVoiceSettings && (\n        <div className=\"bg-white shadow-lg border-b\">\n          <div className=\"max-w-4xl mx-auto px-4 py-4\">\n            <div className=\"flex items-center space-x-4\">\n              <label className=\"text-sm font-medium text-gray-700\">Voice:</label>\n              <select\n                value={selectedVoice}\n                onChange={e => handleVoiceChange(e.target.value)}\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500\"\n              >\n                {ELEVENLABS_VOICES.map(voice => (\n                  <option key={voice.id} value={voice.id}>\n                    {voice.name} - {voice.description}\n                  </option>\n                ))}\n              </select>\n              <button\n                onClick={() => elevenLabsService.testVoice(selectedVoice)}\n                className=\"px-4 py-2 text-sm bg-purple-100 text-purple-700 rounded-lg hover:bg-purple-200\"\n              >\n                🔊 Test\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Main Content */}\n      <div className=\"max-w-6xl mx-auto px-4 py-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Column - Patient Summary */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-lg shadow-sm p-4 sticky top-4\">\n              <h3 className=\"text-sm font-semibold mb-3 text-gray-800\">Patient Summary</h3>\n              {patientData ? (\n                <div className=\"space-y-3 text-xs\">\n                  <div>\n                    <p className=\"font-medium text-gray-600\">Demographics</p>\n                    <p>{patientData.name}</p>\n                    <p>DOB: {patientData.dob}</p>\n                    <p>MRN: {patientData.mrn}</p>\n                  </div>\n\n                  <div>\n                    <p className=\"font-medium text-gray-600\">Active Diagnoses</p>\n                    {patientData.diagnosis.map((dx, i) => (\n                      <p key={i} className=\"text-gray-700\">\n                        • {dx}\n                      </p>\n                    ))}\n                  </div>\n\n                  <div>\n                    <p className=\"font-medium text-gray-600\">Current Medications</p>\n                    {patientData.medications.slice(0, 5).map((med, i) => (\n                      <p key={i} className=\"text-gray-700\">\n                        • {med.name} {med.dosage}\n                      </p>\n                    ))}\n                  </div>\n\n                  <div>\n                    <p className=\"font-medium text-gray-600\">Recent Labs</p>\n                    {patientData.labResults.slice(0, 3).map((lab, i) => (\n                      <p key={i} className=\"text-gray-700\">\n                        • {lab.test}: {lab.value}\n                      </p>\n                    ))}\n                  </div>\n\n                  <div>\n                    <p className=\"font-medium text-gray-600\">Last Vitals</p>\n                    <p>BP: {patientData.vitalSigns.bp}</p>\n                    <p>HR: {patientData.vitalSigns.hr}</p>\n                    {patientData.vitalSigns.glucose && (\n                      <p>Glucose: {patientData.vitalSigns.glucose}</p>\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <p className=\"text-gray-500 text-sm\">Loading patient data...</p>\n              )}\n            </div>\n          </div>\n\n          {/* Right Column - Dictation Area */}\n          <div className=\"lg:col-span-2 space-y-4\">\n            {/* Template Selection */}\n            <div className=\"bg-white rounded-lg shadow-sm p-4\">\n              <div className=\"flex items-center space-x-4\">\n                <label className=\"text-sm font-medium text-gray-700\">Template:</label>\n                <select\n                  value={selectedTemplate}\n                  onChange={e => handleTemplateChange(e.target.value)}\n                  className=\"flex-1 px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                >\n                  {templates.map(template => (\n                    <option key={template.id} value={template.id}>\n                      {template.name} - {template.specialty}\n                      {template.is_system_template ? ' (System)' : ' (Custom)'}\n                    </option>\n                  ))}\n                </select>\n                <button\n                  onClick={() => navigate('/template-builder')}\n                  className=\"px-3 py-2 text-xs bg-purple-100 text-purple-700 rounded-lg hover:bg-purple-200\"\n                >\n                  Create Template\n                </button>\n              </div>\n              {currentTemplate && (\n                <p className=\"text-xs text-gray-500 mt-2\">\n                  Type: {currentTemplate.template_type} | Used: {currentTemplate.usage_count || 0}{' '}\n                  times\n                </p>\n              )}\n            </div>\n\n            {/* Recording Controls */}\n            <div className=\"bg-white rounded-lg shadow-sm p-4\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h2 className=\"text-sm font-semibold\">Voice Dictation</h2>\n                {isRecording && (\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-3 h-3 bg-red-500 rounded-full animate-pulse\"></div>\n                    <span className=\"text-sm text-red-600\">Recording...</span>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex space-x-4\">\n                <button\n                  onClick={toggleRecording}\n                  className={`px-6 py-3 rounded-lg font-medium transition ${\n                    isRecording\n                      ? 'bg-red-600 text-white hover:bg-red-700'\n                      : 'bg-green-600 text-white hover:bg-green-700'\n                  }`}\n                >\n                  {isRecording ? '⏹ Stop Recording' : '🎤 Start Recording'}\n                </button>\n\n                <button\n                  onClick={processWithAI}\n                  disabled={!transcript || isProcessing}\n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isProcessing ? '⏳ Processing...' : '🤖 Process with AI'}\n                </button>\n              </div>\n\n              {interimText && (\n                <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n                  <p className=\"text-sm text-blue-700 italic\">{interimText}</p>\n                </div>\n              )}\n            </div>\n\n            {/* Combined Note Area */}\n            <div className=\"bg-white rounded-lg shadow-sm p-4\">\n              <div className=\"flex justify-between items-center mb-3\">\n                <h3 className=\"text-sm font-semibold\">\n                  {showProcessed\n                    ? 'AI Processed Note'\n                    : \"Note Content (Patient Summary + Today's Dictation)\"}\n                </h3>\n                <div className=\"space-x-2\">\n                  {showProcessed && (\n                    <button\n                      onClick={() => setShowProcessed(false)}\n                      className=\"text-xs text-blue-600 hover:text-blue-700\"\n                    >\n                      View Original\n                    </button>\n                  )}\n                  {!showProcessed && transcript && (\n                    <button\n                      onClick={() =>\n                        setCombinedNoteContent(prev =>\n                          prev.replace(\n                            /TODAY'S VISIT.*$/s,\n                            `TODAY'S VISIT - ${new Date().toLocaleDateString()}\\n====================\\n\\n`\n                          )\n                        )\n                      }\n                      className=\"text-xs text-red-600 hover:text-red-700\"\n                    >\n                      Clear Today's Dictation\n                    </button>\n                  )}\n                </div>\n              </div>\n              <textarea\n                value={showProcessed ? processedNote : combinedNoteContent}\n                onChange={e =>\n                  showProcessed\n                    ? setProcessedNote(e.target.value)\n                    : setCombinedNoteContent(e.target.value)\n                }\n                className=\"w-full h-96 p-3 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono\"\n                placeholder=\"Patient summary will appear here, followed by today's dictation...\"\n              />\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex justify-between\">\n              <div className=\"space-x-3\">\n                <button\n                  onClick={() => {\n                    setTranscript('');\n                    setProcessedNote('');\n                    setShowProcessed(false);\n                    // Reset to just patient summary\n                    if (patientData) {\n                      const patientSummary = `PATIENT SUMMARY\n====================\nName: ${patientData.name}\nMRN: ${patientData.mrn}\nDOB: ${patientData.dob}\n\nACTIVE DIAGNOSES:\n${patientData.diagnosis.map(d => `• ${d}`).join('\\n')}\n\nCURRENT MEDICATIONS:\n${patientData.medications.map(m => `• ${m.name} ${m.dosage} - ${m.frequency} (${m.indication})`).join('\\n')}\n\n====================\nTODAY'S VISIT - ${new Date().toLocaleDateString()}\n====================\n\n`;\n                      setCombinedNoteContent(patientSummary);\n                    }\n                  }}\n                  className=\"px-4 py-2 text-sm border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n                >\n                  Clear All\n                </button>\n              </div>\n\n              <div className=\"space-x-3\">\n                {showProcessed && (\n                  <>\n                    <button\n                      onClick={printNote}\n                      className=\"px-4 py-2 text-sm bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\n                    >\n                      🖨️ Print Note\n                    </button>\n                    <button\n                      onClick={createSummary}\n                      className=\"px-4 py-2 text-sm bg-teal-600 text-white rounded-lg hover:bg-teal-700\"\n                    >\n                      📊 Create Summary\n                    </button>\n                  </>\n                )}\n                <button\n                  onClick={saveNote}\n                  disabled={!transcript && !processedNote}\n                  className=\"px-4 py-2 text-sm bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  💾 Save & Complete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["DictationPage","patientId","useParams","navigate","useNavigate","isRecording","setIsRecording","useState","transcript","setTranscript","interimText","setInterimText","recognition","setRecognition","selectedVoice","setSelectedVoice","showVoiceSettings","setShowVoiceSettings","selectedTemplate","setSelectedTemplate","templates","setTemplates","currentTemplate","setCurrentTemplate","processedNote","setProcessedNote","isProcessing","setIsProcessing","showProcessed","setShowProcessed","patientData","setPatientData","combinedNoteContent","setCombinedNoteContent","useEffect","data","getPatientData","patientSummary","d","m","l","allTemplates","templateStorage","template","SpeechRecognition","recognitionInstance","event","interim","final","i","prev","logError","toggleRecording","handleVoiceChange","voiceId","handleTemplateChange","templateId","t","processWithAI","processed","saveNote","noteToSave","visitId","printNote","createSummary","jsxs","jsx","voice","dx","med","lab","Fragment"],"mappings":"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"}