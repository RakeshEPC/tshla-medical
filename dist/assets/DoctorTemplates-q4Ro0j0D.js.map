{"version":3,"file":"DoctorTemplates-q4Ro0j0D.js","sources":["../../node_modules/lucide-react/dist/esm/icons/ellipsis-vertical.js","../../node_modules/lucide-react/dist/esm/icons/star-off.js","../../src/pages/DoctorTemplates.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n];\nconst EllipsisVertical = createLucideIcon(\"ellipsis-vertical\", __iconNode);\n\nexport { __iconNode, EllipsisVertical as default };\n//# sourceMappingURL=ellipsis-vertical.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43\", key: \"16m0ql\" }],\n  [\"path\", { d: \"M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91\", key: \"1vt8nq\" }],\n  [\"line\", { x1: \"2\", x2: \"22\", y1: \"2\", y2: \"22\", key: \"a6p6uj\" }]\n];\nconst StarOff = createLucideIcon(\"star-off\", __iconNode);\n\nexport { __iconNode, StarOff as default };\n//# sourceMappingURL=star-off.js.map\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  ArrowLeft,\n  Plus,\n  Trash2,\n  Edit2,\n  Save,\n  Copy,\n  Star,\n  StarOff,\n  ChevronUp,\n  ChevronDown,\n  FileText,\n  Settings,\n  Download,\n  Upload,\n  MoreVertical,\n  Check,\n} from 'lucide-react';\nimport { doctorProfileService, type DoctorTemplate } from '../services/doctorProfile.service';\nimport { unifiedAuthService } from '../services/unifiedAuth.service';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\ninterface EditingTemplate {\n  id?: string;\n  name: string;\n  description: string;\n  visitType: DoctorTemplate['visitType'];\n  sections: {\n    [key: string]: {\n      title: string;\n      aiInstructions: string;\n      required: boolean;\n      order: number;\n      keywords: string[];\n      format: 'paragraph' | 'bullets' | 'numbered';\n      exampleText: string;\n    };\n  };\n  generalInstructions: string;\n}\n\nconst DEFAULT_SECTIONS = [\n  { key: 'chiefComplaint', title: 'Chief Complaint', order: 1 },\n  { key: 'historyOfPresentIllness', title: 'History of Present Illness', order: 2 },\n  { key: 'reviewOfSystems', title: 'Review of Systems', order: 3 },\n  { key: 'pastMedicalHistory', title: 'Past Medical History', order: 4 },\n  { key: 'medications', title: 'Medications', order: 5 },\n  { key: 'allergies', title: 'Allergies', order: 6 },\n  { key: 'socialHistory', title: 'Social History', order: 7 },\n  { key: 'familyHistory', title: 'Family History', order: 8 },\n  { key: 'physicalExam', title: 'Physical Examination', order: 9 },\n  { key: 'assessment', title: 'Assessment', order: 10 },\n  { key: 'plan', title: 'Plan', order: 11 },\n];\n\nexport default function DoctorTemplates() {\n  const navigate = useNavigate();\n  const currentUser = unifiedAuthService.getCurrentUser();\n  const currentDoctor = currentUser\n    ? {\n        id: currentUser.email || currentUser.id || 'default-doctor',\n        name: currentUser.name || 'Dr. Smith',\n        email: currentUser.email || 'doctor@tshla.ai',\n      }\n    : null;\n  const [templates, setTemplates] = useState<DoctorTemplate[]>([]);\n  const [editingTemplate, setEditingTemplate] = useState<EditingTemplate | null>(null);\n  const [showEditor, setShowEditor] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [profile, setProfile] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    const loadData = async () => {\n      if (currentDoctor) {\n        // Clear cache to ensure fresh templates including Tess and Nikki\n        doctorProfileService.clearCache(currentDoctor.id);\n\n        doctorProfileService.initialize(currentDoctor.id);\n        await loadTemplates();\n        try {\n          const doctorProfile = await doctorProfileService.getProfile(currentDoctor.id);\n          setProfile(doctorProfile);\n        } catch (error) {\n          logError('DoctorTemplates', 'Error message', {});\n        }\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, [currentDoctor]);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (openDropdown && !(event.target as Element).closest('.relative')) {\n        setOpenDropdown(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [openDropdown]);\n\n  const loadTemplates = async () => {\n    if (!currentDoctor) return;\n\n    logDebug('DoctorTemplates', 'Debug message', {});\n\n    try {\n      const doctorId =\n        currentDoctor.id || currentDoctor.email || currentDoctor.name || 'default-doctor';\n      logDebug('DoctorTemplates', 'Debug message', {});\n\n      // Load templates directly from MySQL\n      const doctorTemplates = await doctorProfileService.getTemplates(doctorId);\n      logInfo('DoctorTemplates', 'Info message', {});\n\n      setTemplates(doctorTemplates);\n    } catch (error) {\n      logError('DoctorTemplates', 'Error message', {});\n\n      // Show user-friendly error message\n      alert(\n        `❌ Failed to load templates: ${error instanceof Error ? error.message : 'Database connection failed'}. Please ensure the Template API server is running.`\n      );\n      setTemplates([]);\n    }\n  };\n\n  const startNewTemplate = () => {\n    const newTemplate: EditingTemplate = {\n      name: '',\n      description: '',\n      visitType: 'general',\n      sections: DEFAULT_SECTIONS.reduce(\n        (acc, section) => ({\n          ...acc,\n          [section.key]: {\n            title: section.title,\n            aiInstructions: '',\n            required: true,\n            order: section.order,\n            keywords: [],\n            format: 'paragraph',\n            exampleText: '',\n          },\n        }),\n        {}\n      ),\n      generalInstructions: '',\n    };\n    setEditingTemplate(newTemplate);\n    setShowEditor(true);\n  };\n\n  const editTemplate = (template: DoctorTemplate) => {\n    setEditingTemplate({\n      id: template.id,\n      name: template.name,\n      description: template.description || '',\n      visitType: template.visitType || 'general',\n      sections: template.sections,\n      generalInstructions: template.generalInstructions || '',\n    });\n    setShowEditor(true);\n  };\n\n  const saveTemplate = async () => {\n    if (!editingTemplate || !currentDoctor) return;\n\n    setSaving(true);\n    try {\n      if (editingTemplate.id) {\n        // Update existing\n        await doctorProfileService.updateTemplate(\n          editingTemplate.id,\n          {\n            name: editingTemplate.name,\n            description: editingTemplate.description,\n            visitType: editingTemplate.visitType,\n            sections: editingTemplate.sections,\n            generalInstructions: editingTemplate.generalInstructions,\n          },\n          currentDoctor.id\n        );\n        alert(`✅ Template \"${editingTemplate.name}\" updated successfully!`);\n      } else {\n        // Create new\n        await doctorProfileService.createTemplate(\n          {\n            name: editingTemplate.name,\n            description: editingTemplate.description,\n            visitType: editingTemplate.visitType,\n            sections: editingTemplate.sections,\n            generalInstructions: editingTemplate.generalInstructions,\n          },\n          currentDoctor.id\n        );\n        alert(`✅ Template \"${editingTemplate.name}\" created successfully!`);\n      }\n\n      await loadTemplates();\n      setShowEditor(false);\n      setEditingTemplate(null);\n    } catch (error) {\n      logError('DoctorTemplates', 'Error message', {});\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      alert(`❌ Failed to save template: ${errorMessage}`);\n    }\n    setSaving(false);\n  };\n\n  const deleteTemplate = async (templateId: string) => {\n    if (!currentDoctor) return;\n\n    const template = templates.find(t => t.id === templateId);\n    const templateName = template?.name || 'this template';\n\n    if (\n      confirm(`Are you sure you want to delete \"${templateName}\"? This action cannot be undone.`)\n    ) {\n      logDebug('DoctorTemplates', 'Debug message', {});\n\n      try {\n        setIsUpdating(true);\n\n        await doctorProfileService.deleteTemplate(templateId, currentDoctor.id);\n        logInfo('DoctorTemplates', 'Info message', {});\n\n        alert(`✅ \"${templateName}\" deleted successfully!`);\n\n        // Reload templates from MySQL\n        await loadTemplates();\n      } catch (error) {\n        logError('DoctorTemplates', 'Error message', {});\n        alert(\n          `❌ Failed to delete template: ${error instanceof Error ? error.message : 'Database connection failed'}`\n        );\n      } finally {\n        setIsUpdating(false);\n      }\n    }\n  };\n\n  const duplicateTemplate = async (template: DoctorTemplate) => {\n    if (!currentDoctor) return;\n\n    const newName = prompt('Enter name for the duplicate template:', `${template.name} (Copy)`);\n    if (newName && newName.trim()) {\n      logDebug('DoctorTemplates', 'Debug message', {});\n\n      try {\n        setIsUpdating(true);\n\n        await doctorProfileService.duplicateTemplate(template.id, newName.trim(), currentDoctor.id);\n        logInfo('DoctorTemplates', 'Info message', {});\n\n        alert(`✅ Template \"${newName}\" created successfully!`);\n\n        // Reload templates from MySQL\n        await loadTemplates();\n      } catch (error) {\n        logError('DoctorTemplates', 'Error message', {});\n        alert(\n          `❌ Failed to duplicate template: ${error instanceof Error ? error.message : 'Database connection failed'}`\n        );\n      } finally {\n        setIsUpdating(false);\n      }\n    }\n  };\n\n  const toggleFavorite = async (templateId: string) => {\n    if (isUpdating) {\n      logDebug('DoctorTemplates', 'Debug message', {});\n      return;\n    }\n\n    logDebug('DoctorTemplates', 'Debug message', {});\n\n    try {\n      setIsUpdating(true);\n\n      if (!currentDoctor) {\n        logError('DoctorTemplates', 'Error message', {});\n        alert('❌ Please log in to manage favorites');\n        return;\n      }\n\n      logDebug('DoctorTemplates', 'Debug message', {});\n      const isFavorite = await doctorProfileService.toggleFavorite(templateId, currentDoctor.id);\n      logInfo('DoctorTemplates', 'Info message', {});\n\n      logDebug('DoctorTemplates', 'Debug message', {});\n      await loadTemplates();\n      logInfo('DoctorTemplates', 'Info message', {});\n\n      // Show success message\n      const message = isFavorite ? '⭐ Added to favorites!' : '⭐ Removed from favorites!';\n      logDebug('DoctorTemplates', 'Template favorited', { message });\n    } catch (error) {\n      logError('DoctorTemplates', 'Error message', {});\n      alert(\n        `❌ Failed to update favorites: ${error instanceof Error ? error.message : 'Database connection failed'}`\n      );\n    } finally {\n      setIsUpdating(false);\n      logDebug('DoctorTemplates', 'Debug message', {});\n    }\n  };\n\n  const setAsDefault = async (templateId: string, visitType?: DoctorTemplate['visitType']) => {\n    if (!currentDoctor || isUpdating) return;\n\n    logDebug('DoctorTemplates', 'Debug message', {});\n\n    try {\n      setIsUpdating(true);\n\n      await doctorProfileService.setDefaultTemplate(templateId, visitType, currentDoctor.id);\n\n      const template = templates.find(t => t.id === templateId);\n      const templateName = template?.name || 'Template';\n      const successMessage = `✅ \"${templateName}\" set as default${visitType ? ` for ${visitType} visits` : ''}!`;\n\n      logInfo('DoctorTemplates', 'Info message', {});\n      alert(successMessage);\n\n      // Reload templates from MySQL\n      await loadTemplates();\n    } catch (error) {\n      logError('DoctorTemplates', 'Error message', {});\n      alert(\n        `❌ Failed to set default template: ${error instanceof Error ? error.message : 'Database connection failed'}`\n      );\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const updateSection = (key: string, field: string, value: any) => {\n    if (!editingTemplate) return;\n    setEditingTemplate({\n      ...editingTemplate,\n      sections: {\n        ...editingTemplate.sections,\n        [key]: {\n          ...editingTemplate.sections[key],\n          [field]: value,\n        },\n      },\n    });\n  };\n\n  const addSection = () => {\n    if (!editingTemplate) return;\n    const key = `custom_${Date.now()}`;\n    const maxOrder = Math.max(...Object.values(editingTemplate.sections).map(s => s.order));\n    setEditingTemplate({\n      ...editingTemplate,\n      sections: {\n        ...editingTemplate.sections,\n        [key]: {\n          title: 'New Section',\n          aiInstructions: '',\n          required: false,\n          order: maxOrder + 1,\n          keywords: [],\n          format: 'paragraph',\n          exampleText: '',\n        },\n      },\n    });\n  };\n\n  const removeSection = (key: string) => {\n    if (!editingTemplate) return;\n    const { [key]: removed, ...rest } = editingTemplate.sections;\n    setEditingTemplate({\n      ...editingTemplate,\n      sections: rest,\n    });\n  };\n\n  const favoriteIds = profile?.favoriteTemplates || [];\n  const defaultTemplateId = profile?.settings?.defaultTemplateId;\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600\">Loading templates...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentDoctor) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600\">Please log in to manage templates</p>\n          <button\n            onClick={() => navigate('/login')}\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            Go to Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (showEditor && editingTemplate) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Editor Header */}\n        <div className=\"bg-white shadow-sm border-b sticky top-0 z-10\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center justify-between h-16\">\n              <div className=\"flex items-center\">\n                <button\n                  onClick={() => {\n                    setShowEditor(false);\n                    setEditingTemplate(null);\n                  }}\n                  className=\"mr-4 p-2 hover:bg-gray-100 rounded-lg transition\"\n                >\n                  <ArrowLeft className=\"w-5 h-5\" />\n                </button>\n                <h1 className=\"text-xl font-semibold\">\n                  {editingTemplate.id ? 'Edit Template' : 'New Template'}\n                </h1>\n              </div>\n              <button\n                onClick={saveTemplate}\n                disabled={saving || !editingTemplate.name}\n                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 transition\"\n              >\n                <Save className=\"w-4 h-4\" />\n                {saving ? 'Saving...' : 'Save Template'}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"max-w-5xl mx-auto p-6\">\n          {/* Template Info */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n            <h2 className=\"text-lg font-semibold mb-4\">Template Information</h2>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Template Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={editingTemplate.name}\n                  onChange={e => setEditingTemplate({ ...editingTemplate, name: e.target.value })}\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"e.g., Diabetes Follow-up\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Visit Type</label>\n                <select\n                  value={editingTemplate.visitType}\n                  onChange={e =>\n                    setEditingTemplate({\n                      ...editingTemplate,\n                      visitType: e.target.value as DoctorTemplate['visitType'],\n                    })\n                  }\n                  className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"general\">General</option>\n                  <option value=\"new-patient\">New Patient</option>\n                  <option value=\"follow-up\">Follow-up</option>\n                  <option value=\"consultation\">Consultation</option>\n                  <option value=\"emergency\">Emergency</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"mt-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\n              <textarea\n                value={editingTemplate.description}\n                onChange={e =>\n                  setEditingTemplate({ ...editingTemplate, description: e.target.value })\n                }\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={2}\n                placeholder=\"Brief description of when to use this template\"\n              />\n            </div>\n            <div className=\"mt-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                General AI Instructions\n              </label>\n              <textarea\n                value={editingTemplate.generalInstructions}\n                onChange={e =>\n                  setEditingTemplate({ ...editingTemplate, generalInstructions: e.target.value })\n                }\n                className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                rows={3}\n                placeholder=\"Overall instructions for the AI (e.g., 'Focus on medication compliance and glucose control')\"\n              />\n            </div>\n          </div>\n\n          {/* Sections */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-lg font-semibold\">Note Sections</h2>\n              <button\n                onClick={addSection}\n                className=\"flex items-center gap-2 px-3 py-1 bg-blue-50 text-blue-600 rounded-lg hover:bg-blue-100 transition\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                Add Section\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              {Object.entries(editingTemplate.sections)\n                .sort(([, a], [, b]) => a.order - b.order)\n                .map(([key, section], index) => (\n                  <div key={key} className=\"border rounded-lg p-4\">\n                    <div className=\"flex items-start justify-between mb-3\">\n                      <div className=\"flex-1\">\n                        <input\n                          type=\"text\"\n                          value={section.title}\n                          onChange={e => updateSection(key, 'title', e.target.value)}\n                          className=\"text-lg font-medium border-b border-transparent hover:border-gray-300 focus:border-blue-500 focus:outline-none px-1 py-0.5\"\n                        />\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <label className=\"flex items-center gap-1 text-sm\">\n                          <input\n                            type=\"checkbox\"\n                            checked={section.required}\n                            onChange={e => updateSection(key, 'required', e.target.checked)}\n                            className=\"rounded text-blue-600\"\n                          />\n                          Required\n                        </label>\n                        <button\n                          onClick={() => removeSection(key)}\n                          className=\"p-1 text-red-500 hover:bg-red-50 rounded\"\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600 mb-1\">\n                          AI Instructions\n                        </label>\n                        <textarea\n                          value={section.aiInstructions}\n                          onChange={e => updateSection(key, 'aiInstructions', e.target.value)}\n                          className=\"w-full px-2 py-1 text-sm border rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                          rows={3}\n                          placeholder=\"Tell the AI what to extract for this section\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600 mb-1\">\n                          Example Text (Optional)\n                        </label>\n                        <textarea\n                          value={section.exampleText}\n                          onChange={e => updateSection(key, 'exampleText', e.target.value)}\n                          className=\"w-full px-2 py-1 text-sm border rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                          rows={3}\n                          placeholder=\"Provide an example of what this section should look like\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4 mt-3\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600 mb-1\">\n                          Keywords (comma-separated)\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={section.keywords.join(', ')}\n                          onChange={e =>\n                            updateSection(\n                              key,\n                              'keywords',\n                              e.target.value\n                                .split(',')\n                                .map(k => k.trim())\n                                .filter(k => k)\n                            )\n                          }\n                          className=\"w-full px-2 py-1 text-sm border rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                          placeholder=\"glucose, insulin, blood sugar\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600 mb-1\">\n                          Format\n                        </label>\n                        <select\n                          value={section.format}\n                          onChange={e => updateSection(key, 'format', e.target.value)}\n                          className=\"w-full px-2 py-1 text-sm border rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                        >\n                          <option value=\"paragraph\">Paragraph</option>\n                          <option value=\"bullets\">Bullet Points</option>\n                          <option value=\"numbered\">Numbered List</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <button\n                onClick={() => navigate('/doctor')}\n                className=\"mr-4 p-2 hover:bg-gray-100 rounded-lg transition\"\n              >\n                <ArrowLeft className=\"w-5 h-5\" />\n              </button>\n              <h1 className=\"text-xl font-semibold\">My Templates</h1>\n            </div>\n            <button\n              onClick={startNewTemplate}\n              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              New Template\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto p-6\">\n        {templates.length === 0 ? (\n          <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\n            <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Loading Templates...</h3>\n            <p className=\"text-gray-600\">Setting up your medical templates</p>\n          </div>\n        ) : (\n          <>\n            {/* Favorites Section */}\n            {templates.filter(t => favoriteIds.includes(t.id)).length > 0 && (\n              <div className=\"mb-8\">\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n                  <Star className=\"w-5 h-5 text-yellow-500 fill-current\" />\n                  Favorite Templates\n                </h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {templates\n                    .filter(t => favoriteIds.includes(t.id))\n                    .map(template => {\n                      const isFavorite = favoriteIds.includes(template.id);\n                      const isDefault = defaultTemplateId === template.id;\n\n                      return (\n                        <div\n                          key={template.id}\n                          className=\"bg-gradient-to-br from-yellow-50 to-white border border-yellow-200 rounded-lg shadow-sm hover:shadow-md transition p-4 relative\"\n                        >\n                          {/* Template Card Content */}\n                          <div className=\"flex items-start justify-between mb-2\">\n                            <div className=\"flex-1\">\n                              <h3 className=\"font-medium text-gray-900 flex items-center gap-2\">\n                                {template.name}\n                                {isDefault && (\n                                  <span className=\"inline-flex items-center px-2 py-0.5 text-xs bg-green-100 text-green-700 rounded\">\n                                    DEFAULT\n                                  </span>\n                                )}\n                              </h3>\n                              {template.visitType && template.visitType !== 'general' && (\n                                <span className=\"inline-block px-2 py-0.5 text-xs bg-blue-100 text-blue-700 rounded mt-1\">\n                                  {template.visitType}\n                                </span>\n                              )}\n                            </div>\n                            <div className=\"flex items-center gap-1\">\n                              <button\n                                onClick={() => toggleFavorite(template.id)}\n                                disabled={isUpdating}\n                                className={`p-1 hover:bg-yellow-100 rounded cursor-pointer ${isUpdating ? 'opacity-50 cursor-not-allowed' : ''}`}\n                                title=\"Remove from favorites\"\n                              >\n                                <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />\n                              </button>\n                              <div className=\"relative\">\n                                <button\n                                  onClick={() => {\n                                    const newState =\n                                      openDropdown === template.id ? null : template.id;\n                                    setOpenDropdown(newState);\n                                  }}\n                                  className=\"p-1 hover:bg-gray-100 rounded cursor-pointer\"\n                                >\n                                  <MoreVertical className=\"w-4 h-4 text-gray-600\" />\n                                </button>\n                                {openDropdown === template.id && (\n                                  <div className=\"absolute right-0 mt-1 w-48 bg-white rounded-lg shadow-lg border z-50\">\n                                    <button\n                                      onClick={e => {\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                        setAsDefault(template.id, template.visitType);\n                                        setOpenDropdown(null);\n                                      }}\n                                      className=\"w-full text-left px-4 py-2 hover:bg-gray-50 flex items-center gap-2 cursor-pointer\"\n                                    >\n                                      {isDefault ? (\n                                        <>\n                                          <Check className=\"w-4 h-4 text-green-600\" />\n                                          <span className=\"text-green-600\">Default Template</span>\n                                        </>\n                                      ) : (\n                                        <>\n                                          <Settings className=\"w-4 h-4\" />\n                                          <span>Set as Default</span>\n                                        </>\n                                      )}\n                                    </button>\n                                    <button\n                                      onClick={() => {\n                                        editTemplate(template);\n                                        setOpenDropdown(null);\n                                      }}\n                                      className=\"w-full text-left px-4 py-2 hover:bg-gray-50 flex items-center gap-2\"\n                                    >\n                                      <Edit2 className=\"w-4 h-4\" />\n                                      Edit Template\n                                    </button>\n                                    <button\n                                      onClick={() => {\n                                        duplicateTemplate(template);\n                                        setOpenDropdown(null);\n                                      }}\n                                      className=\"w-full text-left px-4 py-2 hover:bg-gray-50 flex items-center gap-2\"\n                                    >\n                                      <Copy className=\"w-4 h-4\" />\n                                      Duplicate\n                                    </button>\n                                    <div className=\"border-t\"></div>\n                                    <button\n                                      onClick={() => {\n                                        deleteTemplate(template.id);\n                                        setOpenDropdown(null);\n                                      }}\n                                      className=\"w-full text-left px-4 py-2 hover:bg-red-50 text-red-600 flex items-center gap-2\"\n                                    >\n                                      <Trash2 className=\"w-4 h-4\" />\n                                      Delete Template\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n\n                          {template.description && (\n                            <p className=\"text-sm text-gray-600 mb-3\">{template.description}</p>\n                          )}\n\n                          <div className=\"text-xs text-gray-500\">\n                            {Object.keys(template.sections).length} sections • Used{' '}\n                            {template.usageCount} times\n                          </div>\n                        </div>\n                      );\n                    })}\n                </div>\n              </div>\n            )}\n\n            {/* All Templates Section */}\n            <div>\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n                <FileText className=\"w-5 h-5 text-gray-600\" />\n                All Templates\n              </h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {templates.map(template => {\n                  const isFavorite = favoriteIds.includes(template.id);\n                  const isDefault = defaultTemplateId === template.id;\n\n                  return (\n                    <div\n                      key={template.id}\n                      className={`bg-white rounded-lg shadow-sm hover:shadow-md transition p-4 relative ${\n                        isDefault ? 'ring-2 ring-green-200 bg-green-50' : ''\n                      }`}\n                      style={{ pointerEvents: 'auto' }}\n                    >\n                      <div className=\"flex items-start justify-between mb-2\">\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-medium text-gray-900 flex items-center gap-2\">\n                            {template.name}\n                            {isDefault && (\n                              <span className=\"inline-flex items-center px-2 py-0.5 text-xs bg-green-100 text-green-700 rounded\">\n                                DEFAULT\n                              </span>\n                            )}\n                          </h3>\n                          {template.visitType && template.visitType !== 'general' && (\n                            <span className=\"inline-block px-2 py-0.5 text-xs bg-blue-100 text-blue-700 rounded mt-1\">\n                              {template.visitType}\n                            </span>\n                          )}\n                        </div>\n                        <div className=\"flex items-center gap-1\">\n                          <button\n                            onClick={() => toggleFavorite(template.id)}\n                            disabled={isUpdating}\n                            className={`p-1 hover:bg-gray-100 rounded cursor-pointer ${isUpdating ? 'opacity-50 cursor-not-allowed' : ''}`}\n                            title={isFavorite ? 'Remove from favorites' : 'Add to favorites'}\n                          >\n                            {isFavorite ? (\n                              <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />\n                            ) : (\n                              <StarOff className=\"w-4 h-4 text-gray-400\" />\n                            )}\n                          </button>\n                          <div className=\"relative\">\n                            <button\n                              onClick={() => {\n                                const newState = openDropdown === template.id ? null : template.id;\n                                setOpenDropdown(newState);\n                              }}\n                              className=\"p-1 hover:bg-gray-100 rounded cursor-pointer\"\n                            >\n                              <MoreVertical className=\"w-4 h-4 text-gray-600\" />\n                            </button>\n                            {openDropdown === template.id && (\n                              <div className=\"absolute right-0 mt-1 w-48 bg-white rounded-lg shadow-lg border z-50\">\n                                <button\n                                  onClick={() => {\n                                    setAsDefault(template.id, template.visitType);\n                                    setOpenDropdown(null);\n                                  }}\n                                  className=\"w-full text-left px-4 py-2 hover:bg-gray-50 flex items-center gap-2\"\n                                >\n                                  {isDefault ? (\n                                    <>\n                                      <Check className=\"w-4 h-4 text-green-600\" />\n                                      <span className=\"text-green-600\">Default Template</span>\n                                    </>\n                                  ) : (\n                                    <>\n                                      <Settings className=\"w-4 h-4\" />\n                                      <span>Set as Default</span>\n                                    </>\n                                  )}\n                                </button>\n                                <button\n                                  onClick={() => {\n                                    editTemplate(template);\n                                    setOpenDropdown(null);\n                                  }}\n                                  className=\"w-full text-left px-4 py-2 hover:bg-gray-50 flex items-center gap-2\"\n                                >\n                                  <Edit2 className=\"w-4 h-4\" />\n                                  Edit Template\n                                </button>\n                                <button\n                                  onClick={() => {\n                                    duplicateTemplate(template);\n                                    setOpenDropdown(null);\n                                  }}\n                                  className=\"w-full text-left px-4 py-2 hover:bg-gray-50 flex items-center gap-2\"\n                                >\n                                  <Copy className=\"w-4 h-4\" />\n                                  Duplicate\n                                </button>\n                                <div className=\"border-t\"></div>\n                                <button\n                                  onClick={() => {\n                                    deleteTemplate(template.id);\n                                    setOpenDropdown(null);\n                                  }}\n                                  className=\"w-full text-left px-4 py-2 hover:bg-red-50 text-red-600 flex items-center gap-2\"\n                                >\n                                  <Trash2 className=\"w-4 h-4\" />\n                                  Delete Template\n                                </button>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n\n                      {template.description && (\n                        <p className=\"text-sm text-gray-600 mb-3\">{template.description}</p>\n                      )}\n\n                      <div className=\"text-xs text-gray-500\">\n                        {Object.keys(template.sections).length} sections • Used{' '}\n                        {template.usageCount} times\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["__iconNode","EllipsisVertical","createLucideIcon","StarOff","DEFAULT_SECTIONS","DoctorTemplates","navigate","useNavigate","currentUser","unifiedAuthService","currentDoctor","templates","setTemplates","useState","editingTemplate","setEditingTemplate","showEditor","setShowEditor","saving","setSaving","profile","setProfile","loading","setLoading","openDropdown","setOpenDropdown","isUpdating","setIsUpdating","useEffect","doctorProfileService","loadTemplates","doctorProfile","logError","handleClickOutside","event","logDebug","doctorId","doctorTemplates","logInfo","error","startNewTemplate","newTemplate","acc","section","editTemplate","template","saveTemplate","errorMessage","deleteTemplate","templateId","templateName","t","duplicateTemplate","newName","toggleFavorite","isFavorite","setAsDefault","visitType","successMessage","updateSection","key","field","value","addSection","maxOrder","s","removeSection","removed","rest","favoriteIds","defaultTemplateId","jsx","jsxs","ArrowLeft","Save","e","Plus","a","b","index","Trash2","k","FileText","Fragment","Star","isDefault","newState","MoreVertical","Check","Settings","Edit2","Copy"],"mappings":"uiBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,KAAM,EAAG,IAAK,IAAK,SAAU,EACxD,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,IAAK,EAAG,IAAK,IAAK,SAAU,EACvD,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,KAAM,EAAG,IAAK,IAAK,QAAQ,CAAE,CAC1D,EACMC,EAAmBC,EAAiB,oBAAqBF,EAAU,ECdzE;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,+DAAgE,IAAK,QAAQ,CAAE,EAC7F,CAAC,OAAQ,CAAE,EAAG,+CAAgD,IAAK,QAAQ,CAAE,EAC7E,CAAC,OAAQ,CAAE,GAAI,IAAK,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,IAAK,QAAQ,CAAE,CAClE,EACMG,GAAUD,EAAiB,WAAYF,EAAU,EC6BjDI,GAAmB,CACvB,CAAE,IAAK,iBAAkB,MAAO,kBAAmB,MAAO,CAAA,EAC1D,CAAE,IAAK,0BAA2B,MAAO,6BAA8B,MAAO,CAAA,EAC9E,CAAE,IAAK,kBAAmB,MAAO,oBAAqB,MAAO,CAAA,EAC7D,CAAE,IAAK,qBAAsB,MAAO,uBAAwB,MAAO,CAAA,EACnE,CAAE,IAAK,cAAe,MAAO,cAAe,MAAO,CAAA,EACnD,CAAE,IAAK,YAAa,MAAO,YAAa,MAAO,CAAA,EAC/C,CAAE,IAAK,gBAAiB,MAAO,iBAAkB,MAAO,CAAA,EACxD,CAAE,IAAK,gBAAiB,MAAO,iBAAkB,MAAO,CAAA,EACxD,CAAE,IAAK,eAAgB,MAAO,uBAAwB,MAAO,CAAA,EAC7D,CAAE,IAAK,aAAc,MAAO,aAAc,MAAO,EAAA,EACjD,CAAE,IAAK,OAAQ,MAAO,OAAQ,MAAO,EAAA,CACvC,EAEA,SAAwBC,IAAkB,CACxC,MAAMC,EAAWC,GAAA,EACXC,EAAcC,GAAmB,eAAA,EACjCC,EAAgBF,EAClB,CACE,GAAIA,EAAY,OAASA,EAAY,IAAM,iBAC3C,KAAMA,EAAY,MAAQ,YAC1B,MAAOA,EAAY,OAAS,iBAAA,EAE9B,KACE,CAACG,EAAWC,CAAY,EAAIC,EAAAA,SAA2B,CAAA,CAAE,EACzD,CAACC,EAAiBC,CAAkB,EAAIF,EAAAA,SAAiC,IAAI,EAC7E,CAACG,EAAYC,CAAa,EAAIJ,EAAAA,SAAS,EAAK,EAC5C,CAACK,EAAQC,CAAS,EAAIN,EAAAA,SAAS,EAAK,EACpC,CAACO,EAASC,CAAU,EAAIR,EAAAA,SAAc,IAAI,EAC1C,CAACS,EAASC,CAAU,EAAIV,EAAAA,SAAS,EAAI,EACrC,CAACW,EAAcC,CAAe,EAAIZ,EAAAA,SAAwB,IAAI,EAC9D,CAACa,EAAYC,CAAa,EAAId,EAAAA,SAAS,EAAK,EAElDe,EAAAA,UAAU,IAAM,EACG,SAAY,CAC3B,GAAIlB,EAAe,CAEjBmB,EAAqB,WAAWnB,EAAc,EAAE,EAEhDmB,EAAqB,WAAWnB,EAAc,EAAE,EAChD,MAAMoB,EAAA,EACN,GAAI,CACF,MAAMC,EAAgB,MAAMF,EAAqB,WAAWnB,EAAc,EAAE,EAC5EW,EAAWU,CAAa,CAC1B,MAAgB,CACdC,EAAS,kBAAmB,gBAAiB,EAAE,CACjD,CACAT,EAAW,EAAK,CAClB,CACF,GACA,CACF,EAAG,CAACb,CAAa,CAAC,EAGlBkB,EAAAA,UAAU,IAAM,CACd,MAAMK,EAAsBC,GAAsB,CAC5CV,GAAgB,CAAEU,EAAM,OAAmB,QAAQ,WAAW,GAChET,EAAgB,IAAI,CAExB,EAEA,gBAAS,iBAAiB,YAAaQ,CAAkB,EAClD,IAAM,SAAS,oBAAoB,YAAaA,CAAkB,CAC3E,EAAG,CAACT,CAAY,CAAC,EAEjB,MAAMM,EAAgB,SAAY,CAChC,GAAKpB,EAEL,CAAAyB,EAAS,kBAAmB,gBAAiB,EAAE,EAE/C,GAAI,CACF,MAAMC,EACJ1B,EAAc,IAAMA,EAAc,OAASA,EAAc,MAAQ,iBACnEyB,EAAS,kBAAmB,gBAAiB,EAAE,EAG/C,MAAME,EAAkB,MAAMR,EAAqB,aAAaO,CAAQ,EACxEE,EAAQ,kBAAmB,eAAgB,EAAE,EAE7C1B,EAAayB,CAAe,CAC9B,OAASE,EAAO,CACdP,EAAS,kBAAmB,gBAAiB,EAAE,EAG/C,MACE,+BAA+BO,aAAiB,MAAQA,EAAM,QAAU,4BAA4B,qDAAA,EAEtG3B,EAAa,CAAA,CAAE,CACjB,EACF,EAEM4B,EAAmB,IAAM,CAC7B,MAAMC,EAA+B,CACnC,KAAM,GACN,YAAa,GACb,UAAW,UACX,SAAUrC,GAAiB,OACzB,CAACsC,EAAKC,KAAa,CACjB,GAAGD,EACH,CAACC,EAAQ,GAAG,EAAG,CACb,MAAOA,EAAQ,MACf,eAAgB,GAChB,SAAU,GACV,MAAOA,EAAQ,MACf,SAAU,CAAA,EACV,OAAQ,YACR,YAAa,EAAA,CACf,GAEF,CAAA,CAAC,EAEH,oBAAqB,EAAA,EAEvB5B,EAAmB0B,CAAW,EAC9BxB,EAAc,EAAI,CACpB,EAEM2B,EAAgBC,GAA6B,CACjD9B,EAAmB,CACjB,GAAI8B,EAAS,GACb,KAAMA,EAAS,KACf,YAAaA,EAAS,aAAe,GACrC,UAAWA,EAAS,WAAa,UACjC,SAAUA,EAAS,SACnB,oBAAqBA,EAAS,qBAAuB,EAAA,CACtD,EACD5B,EAAc,EAAI,CACpB,EAEM6B,EAAe,SAAY,CAC/B,GAAI,GAAChC,GAAmB,CAACJ,GAEzB,CAAAS,EAAU,EAAI,EACd,GAAI,CACEL,EAAgB,IAElB,MAAMe,EAAqB,eACzBf,EAAgB,GAChB,CACE,KAAMA,EAAgB,KACtB,YAAaA,EAAgB,YAC7B,UAAWA,EAAgB,UAC3B,SAAUA,EAAgB,SAC1B,oBAAqBA,EAAgB,mBAAA,EAEvCJ,EAAc,EAAA,EAEhB,MAAM,eAAeI,EAAgB,IAAI,yBAAyB,IAGlE,MAAMe,EAAqB,eACzB,CACE,KAAMf,EAAgB,KACtB,YAAaA,EAAgB,YAC7B,UAAWA,EAAgB,UAC3B,SAAUA,EAAgB,SAC1B,oBAAqBA,EAAgB,mBAAA,EAEvCJ,EAAc,EAAA,EAEhB,MAAM,eAAeI,EAAgB,IAAI,yBAAyB,GAGpE,MAAMgB,EAAA,EACNb,EAAc,EAAK,EACnBF,EAAmB,IAAI,CACzB,OAASwB,EAAO,CACdP,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MAAMe,EAAeR,aAAiB,MAAQA,EAAM,QAAU,yBAC9D,MAAM,8BAA8BQ,CAAY,EAAE,CACpD,CACA5B,EAAU,EAAK,EACjB,EAEM6B,EAAiB,MAAOC,GAAuB,CACnD,GAAI,CAACvC,EAAe,OAGpB,MAAMwC,EADWvC,EAAU,KAAKwC,GAAKA,EAAE,KAAOF,CAAU,GACzB,MAAQ,gBAEvC,GACE,QAAQ,oCAAoCC,CAAY,kCAAkC,EAC1F,CACAf,EAAS,kBAAmB,gBAAiB,EAAE,EAE/C,GAAI,CACFR,EAAc,EAAI,EAElB,MAAME,EAAqB,eAAeoB,EAAYvC,EAAc,EAAE,EACtE4B,EAAQ,kBAAmB,eAAgB,EAAE,EAE7C,MAAM,MAAMY,CAAY,yBAAyB,EAGjD,MAAMpB,EAAA,CACR,OAASS,EAAO,CACdP,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MACE,gCAAgCO,aAAiB,MAAQA,EAAM,QAAU,4BAA4B,EAAA,CAEzG,QAAA,CACEZ,EAAc,EAAK,CACrB,CACF,CACF,EAEMyB,EAAoB,MAAOP,GAA6B,CAC5D,GAAI,CAACnC,EAAe,OAEpB,MAAM2C,EAAU,OAAO,yCAA0C,GAAGR,EAAS,IAAI,SAAS,EAC1F,GAAIQ,GAAWA,EAAQ,OAAQ,CAC7BlB,EAAS,kBAAmB,gBAAiB,EAAE,EAE/C,GAAI,CACFR,EAAc,EAAI,EAElB,MAAME,EAAqB,kBAAkBgB,EAAS,GAAIQ,EAAQ,KAAA,EAAQ3C,EAAc,EAAE,EAC1F4B,EAAQ,kBAAmB,eAAgB,EAAE,EAE7C,MAAM,eAAee,CAAO,yBAAyB,EAGrD,MAAMvB,EAAA,CACR,OAASS,EAAO,CACdP,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MACE,mCAAmCO,aAAiB,MAAQA,EAAM,QAAU,4BAA4B,EAAA,CAE5G,QAAA,CACEZ,EAAc,EAAK,CACrB,CACF,CACF,EAEM2B,EAAiB,MAAOL,GAAuB,CACnD,GAAIvB,EAAY,CACdS,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MACF,CAEAA,EAAS,kBAAmB,gBAAiB,EAAE,EAE/C,GAAI,CAGF,GAFAR,EAAc,EAAI,EAEd,CAACjB,EAAe,CAClBsB,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MAAM,qCAAqC,EAC3C,MACF,CAEAG,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MAAMoB,EAAa,MAAM1B,EAAqB,eAAeoB,EAAYvC,EAAc,EAAE,EACzF4B,EAAQ,kBAAmB,eAAgB,EAAE,EAE7CH,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MAAML,EAAA,EACNQ,EAAQ,kBAAmB,eAAgB,EAAE,EAI7CH,EAAS,kBAAmB,qBAAsB,CAAE,QADpCoB,EAAa,wBAA0B,2BACH,CAAS,CAC/D,OAAShB,EAAO,CACdP,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MACE,iCAAiCO,aAAiB,MAAQA,EAAM,QAAU,4BAA4B,EAAA,CAE1G,QAAA,CACEZ,EAAc,EAAK,EACnBQ,EAAS,kBAAmB,gBAAiB,EAAE,CACjD,CACF,EAEMqB,EAAe,MAAOP,EAAoBQ,IAA4C,CAC1F,GAAI,GAAC/C,GAAiBgB,GAEtB,CAAAS,EAAS,kBAAmB,gBAAiB,EAAE,EAE/C,GAAI,CACFR,EAAc,EAAI,EAElB,MAAME,EAAqB,mBAAmBoB,EAAYQ,EAAW/C,EAAc,EAAE,EAIrF,MAAMgD,EAAiB,MAFN/C,EAAU,KAAKwC,IAAKA,GAAE,KAAOF,CAAU,GACzB,MAAQ,UACE,mBAAmBQ,EAAY,QAAQA,CAAS,UAAY,EAAE,IAEvGnB,EAAQ,kBAAmB,eAAgB,EAAE,EAC7C,MAAMoB,CAAc,EAGpB,MAAM5B,EAAA,CACR,OAASS,EAAO,CACdP,EAAS,kBAAmB,gBAAiB,EAAE,EAC/C,MACE,qCAAqCO,aAAiB,MAAQA,EAAM,QAAU,4BAA4B,EAAA,CAE9G,QAAA,CACEZ,EAAc,EAAK,CACrB,EACF,EAEMgC,EAAgB,CAACC,EAAaC,EAAeC,IAAe,CAC3DhD,GACLC,EAAmB,CACjB,GAAGD,EACH,SAAU,CACR,GAAGA,EAAgB,SACnB,CAAC8C,CAAG,EAAG,CACL,GAAG9C,EAAgB,SAAS8C,CAAG,EAC/B,CAACC,CAAK,EAAGC,CAAA,CACX,CACF,CACD,CACH,EAEMC,EAAa,IAAM,CACvB,GAAI,CAACjD,EAAiB,OACtB,MAAM8C,EAAM,UAAU,KAAK,IAAA,CAAK,GAC1BI,EAAW,KAAK,IAAI,GAAG,OAAO,OAAOlD,EAAgB,QAAQ,EAAE,IAAImD,GAAKA,EAAE,KAAK,CAAC,EACtFlD,EAAmB,CACjB,GAAGD,EACH,SAAU,CACR,GAAGA,EAAgB,SACnB,CAAC8C,CAAG,EAAG,CACL,MAAO,cACP,eAAgB,GAChB,SAAU,GACV,MAAOI,EAAW,EAClB,SAAU,CAAA,EACV,OAAQ,YACR,YAAa,EAAA,CACf,CACF,CACD,CACH,EAEME,EAAiBN,GAAgB,CACrC,GAAI,CAAC9C,EAAiB,OACtB,KAAM,CAAE,CAAC8C,CAAG,EAAGO,EAAS,GAAGC,CAAA,EAAStD,EAAgB,SACpDC,EAAmB,CACjB,GAAGD,EACH,SAAUsD,CAAA,CACX,CACH,EAEMC,EAAcjD,GAAS,mBAAqB,CAAA,EAC5CkD,EAAoBlD,GAAS,UAAU,kBAE7C,OAAIE,EAEAiD,EAAAA,IAAC,MAAA,CAAI,UAAU,2DACb,eAAC,MAAA,CAAI,UAAU,cACb,SAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,sBAAA,CAAoB,EACnD,EACF,EAIC7D,EAgBDM,GAAcF,EAEd0D,EAAAA,KAAC,MAAA,CAAI,UAAU,0BAEb,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,gDACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,yCACb,SAAAC,OAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbtD,EAAc,EAAK,EACnBF,EAAmB,IAAI,CACzB,EACA,UAAU,mDAEV,SAAAwD,EAAAA,IAACE,EAAA,CAAU,UAAU,SAAA,CAAU,CAAA,CAAA,QAEhC,KAAA,CAAG,UAAU,wBACX,SAAA3D,EAAgB,GAAK,gBAAkB,cAAA,CAC1C,CAAA,EACF,EACA0D,EAAAA,KAAC,SAAA,CACC,QAAS1B,EACT,SAAU5B,GAAU,CAACJ,EAAgB,KACrC,UAAU,wHAEV,SAAA,CAAAyD,EAAAA,IAACG,GAAA,CAAK,UAAU,SAAA,CAAU,EACzBxD,EAAS,YAAc,eAAA,CAAA,CAAA,CAC1B,CAAA,CACF,EACF,EACF,EAEAsD,EAAAA,KAAC,MAAA,CAAI,UAAU,wBAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,uBAAoB,EAC/DC,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,kBAEhE,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOzD,EAAgB,KACvB,SAAU6D,GAAK5D,EAAmB,CAAE,GAAGD,EAAiB,KAAM6D,EAAE,OAAO,MAAO,EAC9E,UAAU,yFACV,YAAY,0BAAA,CAAA,CACd,EACF,SACC,MAAA,CACC,SAAA,CAAAJ,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,aAAU,EAC1EC,EAAAA,KAAC,SAAA,CACC,MAAO1D,EAAgB,UACvB,YACEC,EAAmB,CACjB,GAAGD,EACH,UAAW6D,EAAE,OAAO,KAAA,CACrB,EAEH,UAAU,yFAEV,SAAA,CAAAJ,EAAAA,IAAC,SAAA,CAAO,MAAM,UAAU,SAAA,UAAO,EAC/BA,EAAAA,IAAC,SAAA,CAAO,MAAM,cAAc,SAAA,cAAW,EACvCA,EAAAA,IAAC,SAAA,CAAO,MAAM,YAAY,SAAA,YAAS,EACnCA,EAAAA,IAAC,SAAA,CAAO,MAAM,eAAe,SAAA,eAAY,EACzCA,EAAAA,IAAC,SAAA,CAAO,MAAM,YAAY,SAAA,WAAA,CAAS,CAAA,CAAA,CAAA,CACrC,CAAA,CACF,CAAA,EACF,EACAC,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAD,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,cAAW,EAC3EA,EAAAA,IAAC,WAAA,CACC,MAAOzD,EAAgB,YACvB,SAAU6D,GACR5D,EAAmB,CAAE,GAAGD,EAAiB,YAAa6D,EAAE,OAAO,MAAO,EAExE,UAAU,yFACV,KAAM,EACN,YAAY,gDAAA,CAAA,CACd,EACF,EACAH,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAD,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,0BAEhE,EACAA,EAAAA,IAAC,WAAA,CACC,MAAOzD,EAAgB,oBACvB,SAAU6D,GACR5D,EAAmB,CAAE,GAAGD,EAAiB,oBAAqB6D,EAAE,OAAO,MAAO,EAEhF,UAAU,yFACV,KAAM,EACN,YAAY,8FAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,EAGAH,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,wBAAwB,SAAA,gBAAa,EACnDC,EAAAA,KAAC,SAAA,CACC,QAAST,EACT,UAAU,qGAEV,SAAA,CAAAQ,EAAAA,IAACK,EAAA,CAAK,UAAU,SAAA,CAAU,EAAE,aAAA,CAAA,CAAA,CAE9B,EACF,EAEAL,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,gBAAO,QAAQzD,EAAgB,QAAQ,EACrC,KAAK,CAAC,CAAA,CAAG+D,CAAC,EAAG,CAAA,CAAGC,CAAC,IAAMD,EAAE,MAAQC,EAAE,KAAK,EACxC,IAAI,CAAC,CAAClB,EAAKjB,CAAO,EAAGoC,IACpBP,EAAAA,KAAC,MAAA,CAAc,UAAU,wBACvB,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,SACb,SAAAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO5B,EAAQ,MACf,SAAUgC,GAAKhB,EAAcC,EAAK,QAASe,EAAE,OAAO,KAAK,EACzD,UAAU,4HAAA,CAAA,EAEd,EACAH,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAA,EAAAA,KAAC,QAAA,CAAM,UAAU,kCACf,SAAA,CAAAD,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS5B,EAAQ,SACjB,SAAUgC,GAAKhB,EAAcC,EAAK,WAAYe,EAAE,OAAO,OAAO,EAC9D,UAAU,uBAAA,CAAA,EACV,UAAA,EAEJ,EACAJ,EAAAA,IAAC,SAAA,CACC,QAAS,IAAML,EAAcN,CAAG,EAChC,UAAU,2CAEV,SAAAW,EAAAA,IAACS,EAAA,CAAO,UAAU,SAAA,CAAU,CAAA,CAAA,CAC9B,CAAA,CACF,CAAA,EACF,EAEAR,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,kBAEhE,EACAA,EAAAA,IAAC,WAAA,CACC,MAAO5B,EAAQ,eACf,SAAUgC,GAAKhB,EAAcC,EAAK,iBAAkBe,EAAE,OAAO,KAAK,EAClE,UAAU,8FACV,KAAM,EACN,YAAY,8CAAA,CAAA,CACd,EACF,SACC,MAAA,CACC,SAAA,CAAAJ,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,0BAEhE,EACAA,EAAAA,IAAC,WAAA,CACC,MAAO5B,EAAQ,YACf,SAAUgC,GAAKhB,EAAcC,EAAK,cAAee,EAAE,OAAO,KAAK,EAC/D,UAAU,8FACV,KAAM,EACN,YAAY,0DAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,EAEAH,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,6BAEhE,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO5B,EAAQ,SAAS,KAAK,IAAI,EACjC,SAAUgC,GACRhB,EACEC,EACA,WACAe,EAAE,OAAO,MACN,MAAM,GAAG,EACT,IAAIM,GAAKA,EAAE,KAAA,CAAM,EACjB,UAAYA,CAAC,CAAA,EAGpB,UAAU,8FACV,YAAY,+BAAA,CAAA,CACd,EACF,SACC,MAAA,CACC,SAAA,CAAAV,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,SAEhE,EACAC,EAAAA,KAAC,SAAA,CACC,MAAO7B,EAAQ,OACf,SAAUgC,GAAKhB,EAAcC,EAAK,SAAUe,EAAE,OAAO,KAAK,EAC1D,UAAU,8FAEV,SAAA,CAAAJ,EAAAA,IAAC,SAAA,CAAO,MAAM,YAAY,SAAA,YAAS,EACnCA,EAAAA,IAAC,SAAA,CAAO,MAAM,UAAU,SAAA,gBAAa,EACrCA,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,eAAA,CAAa,CAAA,CAAA,CAAA,CACxC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EA5FQX,CA6FV,CACD,CAAA,CACL,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAKFY,EAAAA,KAAC,MAAA,CAAI,UAAU,0BAEb,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,8BACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,yCACb,SAAAC,OAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMjE,EAAS,SAAS,EACjC,UAAU,mDAEV,SAAAiE,EAAAA,IAACE,EAAA,CAAU,UAAU,SAAA,CAAU,CAAA,CAAA,EAEjCF,EAAAA,IAAC,KAAA,CAAG,UAAU,wBAAwB,SAAA,cAAA,CAAY,CAAA,EACpD,EACAC,EAAAA,KAAC,SAAA,CACC,QAAShC,EACT,UAAU,mGAEV,SAAA,CAAA+B,EAAAA,IAACK,EAAA,CAAK,UAAU,SAAA,CAAU,EAAE,cAAA,CAAA,CAAA,CAE9B,CAAA,CACF,EACF,EACF,EAEAL,EAAAA,IAAC,MAAA,CAAI,UAAU,wBACZ,SAAA5D,EAAU,SAAW,EACpB6D,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAD,EAAAA,IAACW,EAAA,CAAS,UAAU,sCAAA,CAAuC,EAC3DX,EAAAA,IAAC,KAAA,CAAG,UAAU,yCAAyC,SAAA,uBAAoB,EAC3EA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,mCAAA,CAAiC,CAAA,CAAA,CAChE,EAEAC,EAAAA,KAAAW,EAAAA,SAAA,CAEG,SAAA,CAAAxE,EAAU,OAAOwC,GAAKkB,EAAY,SAASlB,EAAE,EAAE,CAAC,EAAE,OAAS,GAC1DqB,OAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,mEACZ,SAAA,CAAAD,EAAAA,IAACa,EAAA,CAAK,UAAU,sCAAA,CAAuC,EAAE,oBAAA,EAE3D,EACAb,EAAAA,IAAC,MAAA,CAAI,UAAU,uDACZ,WACE,OAAOpB,GAAKkB,EAAY,SAASlB,EAAE,EAAE,CAAC,EACtC,IAAIN,GAAY,CACIwB,EAAY,SAASxB,EAAS,EAAE,EACnD,MAAMwC,EAAYf,IAAsBzB,EAAS,GAEjD,OACE2B,EAAAA,KAAC,MAAA,CAEC,UAAU,kIAGV,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oDACX,SAAA,CAAA3B,EAAS,KACTwC,GACCd,EAAAA,IAAC,OAAA,CAAK,UAAU,mFAAmF,SAAA,SAAA,CAEnG,CAAA,EAEJ,EACC1B,EAAS,WAAaA,EAAS,YAAc,iBAC3C,OAAA,CAAK,UAAU,0EACb,SAAAA,EAAS,SAAA,CACZ,CAAA,EAEJ,EACA2B,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMjB,EAAeT,EAAS,EAAE,EACzC,SAAUnB,EACV,UAAW,kDAAkDA,EAAa,gCAAkC,EAAE,GAC9G,MAAM,wBAEN,SAAA6C,EAAAA,IAACa,EAAA,CAAK,UAAU,sCAAA,CAAuC,CAAA,CAAA,EAEzDZ,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb,MAAMe,EACJ9D,IAAiBqB,EAAS,GAAK,KAAOA,EAAS,GACjDpB,EAAgB6D,CAAQ,CAC1B,EACA,UAAU,+CAEV,SAAAf,EAAAA,IAACgB,EAAA,CAAa,UAAU,uBAAA,CAAwB,CAAA,CAAA,EAEjD/D,IAAiBqB,EAAS,IACzB2B,EAAAA,KAAC,MAAA,CAAI,UAAU,uEACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,QAASI,GAAK,CACZA,EAAE,eAAA,EACFA,EAAE,gBAAA,EACFnB,EAAaX,EAAS,GAAIA,EAAS,SAAS,EAC5CpB,EAAgB,IAAI,CACtB,EACA,UAAU,qFAET,WACC+C,EAAAA,KAAAW,EAAAA,SAAA,CACE,SAAA,CAAAZ,EAAAA,IAACiB,EAAA,CAAM,UAAU,wBAAA,CAAyB,EAC1CjB,EAAAA,IAAC,OAAA,CAAK,UAAU,iBAAiB,SAAA,kBAAA,CAAgB,CAAA,CAAA,CACnD,EAEAC,EAAAA,KAAAW,EAAAA,SAAA,CACE,SAAA,CAAAZ,EAAAA,IAACkB,EAAA,CAAS,UAAU,SAAA,CAAU,EAC9BlB,EAAAA,IAAC,QAAK,SAAA,gBAAA,CAAc,CAAA,CAAA,CACtB,CAAA,CAAA,EAGJC,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACb5B,EAAaC,CAAQ,EACrBpB,EAAgB,IAAI,CACtB,EACA,UAAU,sEAEV,SAAA,CAAA8C,EAAAA,IAACmB,EAAA,CAAM,UAAU,SAAA,CAAU,EAAE,eAAA,CAAA,CAAA,EAG/BlB,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbpB,EAAkBP,CAAQ,EAC1BpB,EAAgB,IAAI,CACtB,EACA,UAAU,sEAEV,SAAA,CAAA8C,EAAAA,IAACoB,EAAA,CAAK,UAAU,SAAA,CAAU,EAAE,WAAA,CAAA,CAAA,EAG9BpB,EAAAA,IAAC,MAAA,CAAI,UAAU,UAAA,CAAW,EAC1BC,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbxB,EAAeH,EAAS,EAAE,EAC1BpB,EAAgB,IAAI,CACtB,EACA,UAAU,kFAEV,SAAA,CAAA8C,EAAAA,IAACS,EAAA,CAAO,UAAU,SAAA,CAAU,EAAE,iBAAA,CAAA,CAAA,CAEhC,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,EACF,EAECnC,EAAS,aACR0B,EAAAA,IAAC,KAAE,UAAU,6BAA8B,WAAS,YAAY,EAGlEC,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACZ,SAAA,CAAA,OAAO,KAAK3B,EAAS,QAAQ,EAAE,OAAO,mBAAiB,IACvDA,EAAS,WAAW,QAAA,CAAA,CACvB,CAAA,CAAA,EA3GKA,EAAS,EAAA,CA8GpB,CAAC,CAAA,CACL,CAAA,EACF,SAID,MAAA,CACC,SAAA,CAAA2B,EAAAA,KAAC,KAAA,CAAG,UAAU,mEACZ,SAAA,CAAAD,EAAAA,IAACW,EAAA,CAAS,UAAU,uBAAA,CAAwB,EAAE,eAAA,EAEhD,QACC,MAAA,CAAI,UAAU,uDACZ,SAAAvE,EAAU,IAAIkC,GAAY,CACzB,MAAMU,EAAac,EAAY,SAASxB,EAAS,EAAE,EAC7CwC,EAAYf,IAAsBzB,EAAS,GAEjD,OACE2B,EAAAA,KAAC,MAAA,CAEC,UAAW,yEACTa,EAAY,oCAAsC,EACpD,GACA,MAAO,CAAE,cAAe,MAAA,EAExB,SAAA,CAAAb,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oDACX,SAAA,CAAA3B,EAAS,KACTwC,GACCd,EAAAA,IAAC,OAAA,CAAK,UAAU,mFAAmF,SAAA,SAAA,CAEnG,CAAA,EAEJ,EACC1B,EAAS,WAAaA,EAAS,YAAc,iBAC3C,OAAA,CAAK,UAAU,0EACb,SAAAA,EAAS,SAAA,CACZ,CAAA,EAEJ,EACA2B,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMjB,EAAeT,EAAS,EAAE,EACzC,SAAUnB,EACV,UAAW,gDAAgDA,EAAa,gCAAkC,EAAE,GAC5G,MAAO6B,EAAa,wBAA0B,mBAE7C,SAAAA,QACE6B,EAAA,CAAK,UAAU,uCAAuC,EAEvDb,EAAAA,IAACpE,GAAA,CAAQ,UAAU,uBAAA,CAAwB,CAAA,CAAA,EAG/CqE,EAAAA,KAAC,MAAA,CAAI,UAAU,WACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACb,MAAMe,EAAW9D,IAAiBqB,EAAS,GAAK,KAAOA,EAAS,GAChEpB,EAAgB6D,CAAQ,CAC1B,EACA,UAAU,+CAEV,SAAAf,EAAAA,IAACgB,EAAA,CAAa,UAAU,uBAAA,CAAwB,CAAA,CAAA,EAEjD/D,IAAiBqB,EAAS,IACzB2B,EAAAA,KAAC,MAAA,CAAI,UAAU,uEACb,SAAA,CAAAD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbf,EAAaX,EAAS,GAAIA,EAAS,SAAS,EAC5CpB,EAAgB,IAAI,CACtB,EACA,UAAU,sEAET,WACC+C,EAAAA,KAAAW,EAAAA,SAAA,CACE,SAAA,CAAAZ,EAAAA,IAACiB,EAAA,CAAM,UAAU,wBAAA,CAAyB,EAC1CjB,EAAAA,IAAC,OAAA,CAAK,UAAU,iBAAiB,SAAA,kBAAA,CAAgB,CAAA,CAAA,CACnD,EAEAC,EAAAA,KAAAW,EAAAA,SAAA,CACE,SAAA,CAAAZ,EAAAA,IAACkB,EAAA,CAAS,UAAU,SAAA,CAAU,EAC9BlB,EAAAA,IAAC,QAAK,SAAA,gBAAA,CAAc,CAAA,CAAA,CACtB,CAAA,CAAA,EAGJC,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACb5B,EAAaC,CAAQ,EACrBpB,EAAgB,IAAI,CACtB,EACA,UAAU,sEAEV,SAAA,CAAA8C,EAAAA,IAACmB,EAAA,CAAM,UAAU,SAAA,CAAU,EAAE,eAAA,CAAA,CAAA,EAG/BlB,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbpB,EAAkBP,CAAQ,EAC1BpB,EAAgB,IAAI,CACtB,EACA,UAAU,sEAEV,SAAA,CAAA8C,EAAAA,IAACoB,EAAA,CAAK,UAAU,SAAA,CAAU,EAAE,WAAA,CAAA,CAAA,EAG9BpB,EAAAA,IAAC,MAAA,CAAI,UAAU,UAAA,CAAW,EAC1BC,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACbxB,EAAeH,EAAS,EAAE,EAC1BpB,EAAgB,IAAI,CACtB,EACA,UAAU,kFAEV,SAAA,CAAA8C,EAAAA,IAACS,EAAA,CAAO,UAAU,SAAA,CAAU,EAAE,iBAAA,CAAA,CAAA,CAEhC,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,EACF,EAECnC,EAAS,aACR0B,EAAAA,IAAC,KAAE,UAAU,6BAA8B,WAAS,YAAY,EAGlEC,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACZ,SAAA,CAAA,OAAO,KAAK3B,EAAS,QAAQ,EAAE,OAAO,mBAAiB,IACvDA,EAAS,WAAW,QAAA,CAAA,CACvB,CAAA,CAAA,EA9GKA,EAAS,EAAA,CAiHpB,CAAC,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA,EACF,QAjhBG,MAAA,CAAI,UAAU,2DACb,SAAA2B,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAD,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,oCAAiC,EAC9DA,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMjE,EAAS,QAAQ,EAChC,UAAU,qEACX,SAAA,aAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,CAygBN","x_google_ignoreList":[0,1]}