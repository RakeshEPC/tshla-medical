{"version":3,"file":"DoctorDashboardModern-CSqLz2vn.js","sources":["../../src/pages/DoctorDashboardModern.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { unifiedAuthService } from '../services/unifiedAuth.service';\nimport styles from '../styles/DoctorDashboard.module.css';\nimport {\n  Calendar,\n  Clock,\n  Users,\n  Activity,\n  Plus,\n  LogOut,\n  FileText,\n  Settings,\n  ChevronRight,\n  Search,\n  Filter,\n} from 'lucide-react';\n\ninterface Patient {\n  id: string;\n  name: string;\n  mrn: string;\n  appointmentTime: string;\n  status: 'pending' | 'in-progress' | 'completed';\n  phone?: string;\n  dob?: string;\n  email?: string;\n}\n\n// Generate time slots for the day\nconst generateTimeSlots = () => {\n  const slots = [];\n  for (let hour = 9; hour < 12; hour++) {\n    slots.push(`${hour}:00 AM`);\n    slots.push(`${hour}:30 AM`);\n  }\n  slots.push('12:00 PM', '12:30 PM');\n  for (let hour = 1; hour <= 5; hour++) {\n    slots.push(`${hour}:00 PM`);\n    slots.push(`${hour}:30 PM`);\n  }\n  return slots;\n};\n\nexport default function DoctorDashboardModern() {\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n  const currentUser = unifiedAuthService.getCurrentUser();\n  const doctorName = currentUser?.name || user?.name || 'Dr. Smith';\n\n  const [patients, setPatients] = useState<Patient[]>(() => {\n    const saved = localStorage.getItem('scheduled_patients');\n    if (saved) {\n      return JSON.parse(saved);\n    }\n    return [\n      {\n        id: '444-444',\n        name: 'John Smith',\n        mrn: 'MRN444444',\n        appointmentTime: '9:00 AM',\n        status: 'completed',\n      },\n      {\n        id: '111-111',\n        name: 'Sarah Johnson',\n        mrn: 'MRN111111',\n        appointmentTime: '9:30 AM',\n        status: 'completed',\n      },\n      {\n        id: '222-222',\n        name: 'Michael Chen',\n        mrn: 'MRN222222',\n        appointmentTime: '10:00 AM',\n        status: 'in-progress',\n      },\n      {\n        id: '333-333',\n        name: 'Emily Rodriguez',\n        mrn: 'MRN333333',\n        appointmentTime: '10:30 AM',\n        status: 'pending',\n      },\n      {\n        id: '555-555',\n        name: 'David Wilson',\n        mrn: 'MRN555555',\n        appointmentTime: '11:00 AM',\n        status: 'pending',\n      },\n      {\n        id: '666-666',\n        name: 'Lisa Anderson',\n        mrn: 'MRN666666',\n        appointmentTime: '2:00 PM',\n        status: 'pending',\n      },\n    ];\n  });\n\n  const [showAddPatient, setShowAddPatient] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState<'all' | 'pending' | 'in-progress' | 'completed'>(\n    'all'\n  );\n\n  const timeSlots = generateTimeSlots();\n\n  useEffect(() => {\n    localStorage.setItem('scheduled_patients', JSON.stringify(patients));\n  }, [patients]);\n\n  const startDictation = (patientId: string) => {\n    navigate(`/dictation/${patientId}`);\n  };\n\n  const getPatientInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase();\n  };\n\n  const getStatusBadgeClass = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return `${styles.statusBadge} ${styles.pending}`;\n      case 'in-progress':\n        return `${styles.statusBadge} ${styles.inProgress}`;\n      case 'completed':\n        return `${styles.statusBadge} ${styles.completed}`;\n      default:\n        return styles.statusBadge;\n    }\n  };\n\n  const filteredPatients = patients.filter(patient => {\n    const matchesSearch =\n      patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      patient.mrn.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesFilter = filterStatus === 'all' || patient.status === filterStatus;\n    return matchesSearch && matchesFilter;\n  });\n\n  // Calculate stats\n  const stats = {\n    total: patients.length,\n    completed: patients.filter(p => p.status === 'completed').length,\n    inProgress: patients.filter(p => p.status === 'in-progress').length,\n    pending: patients.filter(p => p.status === 'pending').length,\n  };\n\n  // Group patients by time\n  const patientsByTime = timeSlots.map(slot => ({\n    time: slot,\n    patients: filteredPatients.filter(p => p.appointmentTime === slot),\n  }));\n\n  return (\n    <div className={styles.dashboard}>\n      {/* Header */}\n      <header className={styles.header}>\n        <div className={styles.headerContent}>\n          <div className={styles.headerLeft}>\n            <div className={styles.logo}>\n              <Activity size={28} />\n              <span>TSHLA Medical</span>\n            </div>\n            <div className={styles.doctorInfo}>\n              <span className={styles.welcomeText}>Welcome back,</span>\n              <span className={styles.doctorName}>{doctorName}</span>\n            </div>\n          </div>\n\n          <div className={styles.headerActions}>\n            <button\n              onClick={() => navigate('/quick-note')}\n              className={`${styles.btn} ${styles.btnPrimary}`}\n            >\n              <Plus size={16} />\n              Quick Note\n            </button>\n\n            <button\n              onClick={() => navigate('/doctor/templates')}\n              className={`${styles.btn} ${styles.btnSecondary}`}\n            >\n              <FileText size={16} />\n              Templates\n            </button>\n\n            <button\n              onClick={() => navigate('/doctor/profile')}\n              className={`${styles.btn} ${styles.btnIcon}`}\n            >\n              <Settings size={16} />\n            </button>\n\n            <button onClick={logout} className={`${styles.btn} ${styles.btnIcon}`}>\n              <LogOut size={16} />\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className={styles.mainContent}>\n        {/* Stats Cards */}\n        <div className={styles.statsGrid}>\n          <div className={styles.statCard}>\n            <div className={`${styles.statIcon} ${styles.blue}`}>\n              <Users />\n            </div>\n            <div className={styles.statValue}>{stats.total}</div>\n            <div className={styles.statLabel}>Total Patients</div>\n          </div>\n\n          <div className={styles.statCard}>\n            <div className={`${styles.statIcon} ${styles.green}`}>âœ“</div>\n            <div className={styles.statValue}>{stats.completed}</div>\n            <div className={styles.statLabel}>Completed</div>\n          </div>\n\n          <div className={styles.statCard}>\n            <div className={`${styles.statIcon} ${styles.purple}`}>\n              <Clock />\n            </div>\n            <div className={styles.statValue}>{stats.inProgress}</div>\n            <div className={styles.statLabel}>In Progress</div>\n          </div>\n\n          <div className={styles.statCard}>\n            <div className={`${styles.statIcon} ${styles.orange}`}>\n              <Calendar />\n            </div>\n            <div className={styles.statValue}>{stats.pending}</div>\n            <div className={styles.statLabel}>Pending</div>\n          </div>\n        </div>\n\n        {/* Schedule Section */}\n        <div className={styles.scheduleSection}>\n          <div className={styles.scheduleHeader}>\n            <div className={styles.scheduleTitle}>\n              <Calendar size={20} />\n              Today's Schedule\n              <span className={styles.todayBadge}>\n                {new Date().toLocaleDateString('en-US', {\n                  weekday: 'short',\n                  month: 'short',\n                  day: 'numeric',\n                })}\n              </span>\n            </div>\n\n            <div className={styles.headerActions}>\n              {/* Search */}\n              <div style={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\n                <Search\n                  size={16}\n                  style={{ position: 'absolute', left: '12px', color: '#94a3b8' }}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search patients...\"\n                  value={searchTerm}\n                  onChange={e => setSearchTerm(e.target.value)}\n                  style={{\n                    padding: '0.5rem 0.75rem 0.5rem 2.5rem',\n                    border: '1px solid #e2e8f0',\n                    borderRadius: '0.5rem',\n                    fontSize: '0.875rem',\n                    width: '200px',\n                  }}\n                />\n              </div>\n\n              {/* Filter */}\n              <select\n                value={filterStatus}\n                onChange={e => setFilterStatus(e.target.value as any)}\n                style={{\n                  padding: '0.5rem 0.75rem',\n                  border: '1px solid #e2e8f0',\n                  borderRadius: '0.5rem',\n                  fontSize: '0.875rem',\n                  cursor: 'pointer',\n                }}\n              >\n                <option value=\"all\">All Status</option>\n                <option value=\"pending\">Pending</option>\n                <option value=\"in-progress\">In Progress</option>\n                <option value=\"completed\">Completed</option>\n              </select>\n\n              <button\n                onClick={() => setShowAddPatient(true)}\n                className={`${styles.btn} ${styles.btnPrimary}`}\n              >\n                <Plus size={16} />\n                Add Patient\n              </button>\n            </div>\n          </div>\n\n          {/* Patient List */}\n          <div className={styles.patientList}>\n            {patientsByTime.map(({ time, patients: timePatients }) => {\n              if (timePatients.length === 0 && filterStatus !== 'all') return null;\n\n              return (\n                <div key={time} className={styles.timeSlot}>\n                  <div className={styles.timeLabel}>{time}</div>\n\n                  {timePatients.length > 0 ? (\n                    timePatients.map(patient => (\n                      <div\n                        key={patient.id}\n                        className={`${styles.patientCard} ${patient.status === 'completed' ? styles.completed : ''}`}\n                      >\n                        <div className={styles.patientCardContent}>\n                          <div className={styles.patientInfo}>\n                            <div className={styles.patientAvatar}>\n                              {getPatientInitials(patient.name)}\n                            </div>\n                            <div className={styles.patientDetails}>\n                              <div className={styles.patientName}>{patient.name}</div>\n                              <div className={styles.patientMeta}>\n                                <span className={styles.metaItem}>MRN: {patient.mrn}</span>\n                                {patient.phone && (\n                                  <span className={styles.metaItem}>ðŸ“ž {patient.phone}</span>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className={styles.patientActions}>\n                            <span className={getStatusBadgeClass(patient.status)}>\n                              {patient.status.replace('-', ' ')}\n                            </span>\n\n                            {patient.status !== 'completed' && (\n                              <button\n                                onClick={() => startDictation(patient.id)}\n                                className={`${styles.actionButton} ${styles.primary}`}\n                              >\n                                Start Dictation\n                                <ChevronRight\n                                  size={14}\n                                  style={{ marginLeft: '4px', display: 'inline' }}\n                                />\n                              </button>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <div className={styles.emptySlot}>\n                      <Plus size={16} style={{ display: 'inline', marginRight: '4px' }} />\n                      No patients scheduled\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </main>\n\n      {/* Add Patient Modal */}\n      {showAddPatient && (\n        <div className={styles.modal} onClick={() => setShowAddPatient(false)}>\n          <div className={styles.modalContent} onClick={e => e.stopPropagation()}>\n            <div className={styles.modalHeader}>\n              <h3 className={styles.modalTitle}>Add New Patient</h3>\n            </div>\n            <div className={styles.modalBody}>\n              <div className={styles.formGroup}>\n                <label className={styles.formLabel}>Patient Name</label>\n                <input type=\"text\" className={styles.formInput} placeholder=\"Enter patient name\" />\n              </div>\n              <div className={styles.formGroup}>\n                <label className={styles.formLabel}>MRN</label>\n                <input type=\"text\" className={styles.formInput} placeholder=\"Enter MRN\" />\n              </div>\n              <div className={styles.formGroup}>\n                <label className={styles.formLabel}>Appointment Time</label>\n                <select className={styles.formInput}>\n                  {timeSlots.map(slot => (\n                    <option key={slot} value={slot}>\n                      {slot}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className={styles.formGroup}>\n                <label className={styles.formLabel}>Phone (Optional)</label>\n                <input type=\"tel\" className={styles.formInput} placeholder=\"Enter phone number\" />\n              </div>\n              <div className={styles.formGroup}>\n                <label className={styles.formLabel}>Email (Optional)</label>\n                <input\n                  type=\"email\"\n                  className={styles.formInput}\n                  placeholder=\"Enter email address\"\n                />\n              </div>\n            </div>\n            <div className={styles.modalFooter}>\n              <button\n                onClick={() => setShowAddPatient(false)}\n                className={`${styles.btn} ${styles.btnSecondary}`}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => {\n                  // Add patient logic here\n                  setShowAddPatient(false);\n                }}\n                className={`${styles.btn} ${styles.btnPrimary}`}\n              >\n                Add Patient\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["generateTimeSlots","slots","hour","DoctorDashboardModern","user","logout","useAuth","navigate","useNavigate","doctorName","unifiedAuthService","patients","setPatients","useState","saved","showAddPatient","setShowAddPatient","searchTerm","setSearchTerm","filterStatus","setFilterStatus","timeSlots","useEffect","startDictation","patientId","getPatientInitials","name","n","getStatusBadgeClass","status","styles","filteredPatients","patient","matchesSearch","matchesFilter","stats","p","patientsByTime","slot","jsxs","jsx","Activity","Plus","FileText","Settings","LogOut","Users","Clock","Calendar","Search","e","time","timePatients","ChevronRight"],"mappings":"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"}