{"version":3,"file":"AdminAccountManagement-B7LMX0tQ.js","sources":["../../src/pages/AdminAccountManagement.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  accountCreationService,\n  type MedicalProfessional,\n} from '../services/accountCreation.service';\n\nexport default function AdminAccountManagement() {\n  const [accounts, setAccounts] = useState<MedicalProfessional[]>([]);\n  const [selectedAccount, setSelectedAccount] = useState<MedicalProfessional | null>(null);\n  const [resetPassword, setResetPassword] = useState<string>('');\n  const [showResetModal, setShowResetModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [copySuccess, setCopySuccess] = useState<string>('');\n\n  useEffect(() => {\n    loadAccounts();\n  }, []);\n\n  const loadAccounts = () => {\n    const allAccounts = accountCreationService.getAllAccounts();\n    setAccounts(allAccounts);\n  };\n\n  const handleResetPassword = async (account: MedicalProfessional) => {\n    const newPassword = await accountCreationService.resetPassword(account.email);\n    if (newPassword) {\n      setResetPassword(newPassword);\n      setSelectedAccount(account);\n      setShowResetModal(true);\n      loadAccounts(); // Reload to show updated requiresPasswordChange status\n    }\n  };\n\n  const copyToClipboard = (text: string, type: string) => {\n    navigator.clipboard.writeText(text);\n    setCopySuccess(type);\n    setTimeout(() => setCopySuccess(''), 2000);\n  };\n\n  const filteredAccounts = accounts.filter(\n    account =>\n      account.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      account.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      account.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      account.practice.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const getStatusBadge = (account: MedicalProfessional) => {\n    if (!account.isActive) {\n      return (\n        <span className=\"px-2 py-1 text-xs rounded-full bg-red-100 text-red-700\">Inactive</span>\n      );\n    }\n    if (account.requiresPasswordChange) {\n      return (\n        <span className=\"px-2 py-1 text-xs rounded-full bg-yellow-100 text-yellow-700\">\n          Password Reset Required\n        </span>\n      );\n    }\n    if (!account.lastLogin) {\n      return (\n        <span className=\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-700\">\n          Never Logged In\n        </span>\n      );\n    }\n    return (\n      <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-700\">Active</span>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Account Management</h1>\n              <p className=\"text-gray-600 mt-2\">Manage doctor accounts and reset passwords</p>\n            </div>\n            <button\n              onClick={() => (window.location.href = '/admin/create-accounts')}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n            >\n              + Create New Accounts\n            </button>\n          </div>\n\n          {/* Search */}\n          <div className=\"relative\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by name, email, or practice...\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n            <span className=\"absolute right-3 top-2.5 text-gray-400\">üîç</span>\n          </div>\n        </div>\n\n        {/* Stats */}\n        <div className=\"grid grid-cols-4 gap-4 mb-6\">\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <div className=\"text-3xl font-bold text-gray-900\">{accounts.length}</div>\n            <div className=\"text-sm text-gray-600\">Total Accounts</div>\n          </div>\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <div className=\"text-3xl font-bold text-green-600\">\n              {accounts.filter(a => a.isActive && !a.requiresPasswordChange).length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Active Users</div>\n          </div>\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <div className=\"text-3xl font-bold text-yellow-600\">\n              {accounts.filter(a => a.requiresPasswordChange).length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Need Password Reset</div>\n          </div>\n          <div className=\"bg-white rounded-lg shadow p-4\">\n            <div className=\"text-3xl font-bold text-gray-600\">\n              {accounts.filter(a => !a.lastLogin).length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Never Logged In</div>\n          </div>\n        </div>\n\n        {/* Accounts Table */}\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n          <table className=\"min-w-full\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Doctor\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Practice\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Contact\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Last Login\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredAccounts.map(account => (\n                <tr key={account.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {account.firstName} {account.lastName}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">ID: {account.id}</div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{account.practice}</div>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-gray-900\">{account.email}</div>\n                    <div className=\"text-xs text-gray-500\">Username: {account.username}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{getStatusBadge(account)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">\n                      {account.lastLogin\n                        ? new Date(account.lastLogin).toLocaleDateString()\n                        : 'Never'}\n                    </div>\n                    {account.passwordChangedAt && (\n                      <div className=\"text-xs text-gray-500\">\n                        Password changed: {new Date(account.passwordChangedAt).toLocaleDateString()}\n                      </div>\n                    )}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex space-x-2\">\n                      <button\n                        onClick={() => handleResetPassword(account)}\n                        className=\"text-blue-600 hover:text-blue-900 text-sm font-medium\"\n                      >\n                        Reset Password\n                      </button>\n                      <button\n                        onClick={() => {\n                          account.isActive = !account.isActive;\n                          loadAccounts();\n                        }}\n                        className={`text-sm font-medium ${\n                          account.isActive\n                            ? 'text-red-600 hover:text-red-900'\n                            : 'text-green-600 hover:text-green-900'\n                        }`}\n                      >\n                        {account.isActive ? 'Deactivate' : 'Activate'}\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Password Reset Modal */}\n        {showResetModal && selectedAccount && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\">\n              <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Password Reset Successful</h2>\n\n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-4\">\n                <p className=\"text-sm text-gray-700 mb-2\">Password has been reset for:</p>\n                <p className=\"font-semibold text-gray-900\">\n                  {selectedAccount.firstName} {selectedAccount.lastName}\n                </p>\n                <p className=\"text-sm text-gray-600\">{selectedAccount.email}</p>\n              </div>\n\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\n                <p className=\"text-sm font-semibold text-gray-700 mb-2\">New Temporary Password:</p>\n                <div className=\"flex items-center justify-between bg-white rounded px-3 py-2 border\">\n                  <code className=\"text-lg font-mono text-blue-600\">{resetPassword}</code>\n                  <button\n                    onClick={() => copyToClipboard(resetPassword, 'reset-password')}\n                    className=\"text-gray-500 hover:text-gray-700\"\n                  >\n                    {copySuccess === 'reset-password' ? '‚úì' : 'üìã'}\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-600 mt-2\">\n                  User will be required to change this on next login\n                </p>\n              </div>\n\n              <div className=\"text-sm text-gray-600 mb-4\">\n                <p className=\"mb-2\">üìß Send this information to the user:</p>\n                <div className=\"bg-gray-50 rounded p-3 text-xs\">\n                  <button\n                    onClick={() => {\n                      const message = `Your TSHLA Medical account password has been reset.\\n\\nTemporary Password: ${resetPassword}\\n\\nPlease login at https://www.tshla.ai/login and you will be prompted to create a new password.\\n\\nIf you did not request this reset, please contact support immediately.`;\n                      copyToClipboard(message, 'email-template');\n                    }}\n                    className=\"text-blue-600 hover:text-blue-700 font-medium\"\n                  >\n                    {copySuccess === 'email-template' ? 'Copied!' : 'Copy Email Template'}\n                  </button>\n                </div>\n              </div>\n\n              <button\n                onClick={() => {\n                  setShowResetModal(false);\n                  setSelectedAccount(null);\n                  setResetPassword('');\n                }}\n                className=\"w-full py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Info Box */}\n        <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-6\">\n          <h3 className=\"font-semibold text-blue-900 mb-3\">üìå Account Management Information</h3>\n          <ul className=\"space-y-2 text-sm text-blue-800\">\n            <li>‚Ä¢ All passwords are stored as secure bcrypt hashes in the database</li>\n            <li>‚Ä¢ Temporary passwords use format: [4-letter word][4 digits] (e.g., Care1234)</li>\n            <li>‚Ä¢ Users are required to change temporary passwords on first login</li>\n            <li>‚Ä¢ Password history is maintained to prevent reuse of last 5 passwords</li>\n            <li>‚Ä¢ New passwords must be at least 8 characters with mixed case and numbers</li>\n            <li>\n              ‚Ä¢ All account data persists in browser localStorage (production would use real\n              database)\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["AdminAccountManagement","accounts","setAccounts","useState","selectedAccount","setSelectedAccount","resetPassword","setResetPassword","showResetModal","setShowResetModal","searchTerm","setSearchTerm","copySuccess","setCopySuccess","useEffect","loadAccounts","allAccounts","accountCreationService","handleResetPassword","account","newPassword","copyToClipboard","text","type","filteredAccounts","getStatusBadge","jsx","jsxs","e","a","message"],"mappings":"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"}