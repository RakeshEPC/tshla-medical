{"version":3,"file":"microsoft.cognitiveservices.speech.sdk-dKKEa4Bl.js","sources":["../../../../node_modules/uuid/dist/commonjs-browser/rng.js","../../../../node_modules/uuid/dist/commonjs-browser/regex.js","../../../../node_modules/uuid/dist/commonjs-browser/validate.js","../../../../node_modules/uuid/dist/commonjs-browser/stringify.js","../../../../node_modules/uuid/dist/commonjs-browser/v1.js","../../../../node_modules/uuid/dist/commonjs-browser/parse.js","../../../../node_modules/uuid/dist/commonjs-browser/v35.js","../../../../node_modules/uuid/dist/commonjs-browser/md5.js","../../../../node_modules/uuid/dist/commonjs-browser/v3.js","../../../../node_modules/uuid/dist/commonjs-browser/native.js","../../../../node_modules/uuid/dist/commonjs-browser/v4.js","../../../../node_modules/uuid/dist/commonjs-browser/sha1.js","../../../../node_modules/uuid/dist/commonjs-browser/v5.js","../../../../node_modules/uuid/dist/commonjs-browser/nil.js","../../../../node_modules/uuid/dist/commonjs-browser/version.js","../../../../node_modules/uuid/dist/commonjs-browser/index.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/AudioSourceEvents.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionEvents.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionOpenResponse.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DeferralMap.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DialogEvents.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/EventSource.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Events.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioSource.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IConnection.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDetachable.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDictionary.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDisposable.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventListener.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventSource.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IErrorMessages.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ITimer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IWebsocketMessageFormatter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/List.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Promise.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Queue.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RiffPcmEncoder.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Stream.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ChunkedArrayBufferStream.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioDestination.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Timeout.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/OCSPEvents.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/BackgroundError.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveSubscriptionKeyAuthentication.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveTokenAuthentication.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ISynthesisConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LogLevel.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ConsoleLoggingListener.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/IRecorder.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/MicAudioSource.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/FileAudioSource.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/PCMRecorder.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketMessageAdapter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketConnection.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ReplayableAudioNode.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioFileWriter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioInputStream.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisOutputFormat.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationReason.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PullAudioInputStreamCallback.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PushAudioOutputStreamCallback.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/KeywordRecognitionModel.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SessionEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/OutputFormat.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageUnderstandingModel.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionCanceledEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ResultReason.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechTranslationConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyCollection.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Recognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileType.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessage.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Connection.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Translations.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchReason.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchDetails.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionCanceledEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionCanceledEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetailsBase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetails.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationErrorCodes.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServiceEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PhraseListGrammar.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/BotFrameworkConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CustomCommandsConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogConnectorFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConnector.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ActivityReceivedEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TurnStatusPayload.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TurnStatusReceivedEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServicePropertyChannel.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ProfanityOption.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/BaseAudioPlayer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessageEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfile.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileEnrollmentResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfilePhraseResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileClient.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerIdentificationModel.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerVerificationModel.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageIdMode.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SourceLanguageConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognitionResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Conversation.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationCommon.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationExpirationEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/StringUtils.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslator.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriber.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/IParticipant.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ParticipantChangedReason.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Meeting.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriptionCanceledEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriber.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriptionResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Exports.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Synthesizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisWordBoundaryEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBookmarkEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisVisemeEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBoundaryType.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisVoicesResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceInfo.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/SpeakerAudioDestination.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConversationTranscriptionCanceledEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/MeetingTranscriptionCanceledEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGradingSystem.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGranularity.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarSynthesizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarVideoFormat.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarWebRTCConnectionResult.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Diagnostics.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ProxyInfo.js","../../../../node_modules/bent/src/core.js","../../../../node_modules/bent/src/browser.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestMessageAdapter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestConfigBase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseDetection/Segmentation.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Translation/OnSuccess.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Translation/InterimResults.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/LanguageId/LanguageIdContext.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/LanguageId/OnSuccess.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/LanguageId/OnUnknown.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseOutput/InterimResults.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseOutput/PhraseResults.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseDetection/OnSuccess.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceRecognizerBase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationServiceRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognizerConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceInterfaces.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/WebsocketMessageFormatter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriberConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriberConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/EnumTranslation.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Enums.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationSynthesisEnd.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationHypothesis.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationPhrase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationServiceRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechDetected.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechHypothesis.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechKeyword.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseDetection/SpeakerDiarization.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriptionServiceRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriptionServiceRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/DetailedSpeechPhrase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SimpleSpeechPhrase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AddedLmIntent.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentServiceRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/IntentResponse.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeakerResponse.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceTelemetryListener.Internal.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RequestSession.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/PhraseOutput/PhraseOutput.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechContext.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Dgi/Group.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarBuilder.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/ActivityResponsePayload.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnState.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnStateManager.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/InvocationSource.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/KeywordDetection/KeywordDetection.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceAdapter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AgentConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationManager.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionMessage.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionFactory.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorEventArgs.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorInterfaces.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/Exports.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationServiceAdapter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/Exports.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SynthesisAudioMetadata.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisEvents.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisTurn.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisAdapterBase.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AvatarSynthesisAdapter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisAdapter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisRestAdapter.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesizerConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisContext.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerServiceRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/VoiceServiceRecognizer.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceConfig.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js","../../../../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/microsoft.cognitiveservices.speech.sdk.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\n\nvar _stringify = require(\"./stringify.js\");\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _native = _interopRequireDefault(require(\"./native.js\"));\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function get() {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function get() {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function get() {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function get() {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function get() {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function get() {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function get() {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function get() {\n    return _version.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNoDashGuid = exports.createGuid = void 0;\nconst uuid_1 = require(\"uuid\");\nconst createGuid = () => (0, uuid_1.v4)();\nexports.createGuid = createGuid;\nconst createNoDashGuid = () => createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\nexports.createNoDashGuid = createNoDashGuid;\n\n//# sourceMappingURL=Guid.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlatformEvent = exports.EventType = void 0;\nconst Guid_js_1 = require(\"./Guid.js\");\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"Debug\"] = 0] = \"Debug\";\n    EventType[EventType[\"Info\"] = 1] = \"Info\";\n    EventType[EventType[\"Warning\"] = 2] = \"Warning\";\n    EventType[EventType[\"Error\"] = 3] = \"Error\";\n    EventType[EventType[\"None\"] = 4] = \"None\";\n})(EventType = exports.EventType || (exports.EventType = {}));\nclass PlatformEvent {\n    constructor(eventName, eventType) {\n        this.privName = eventName;\n        this.privEventId = (0, Guid_js_1.createNoDashGuid)();\n        this.privEventTime = new Date().toISOString();\n        this.privEventType = eventType;\n        this.privMetadata = {};\n    }\n    get name() {\n        return this.privName;\n    }\n    get eventId() {\n        return this.privEventId;\n    }\n    get eventTime() {\n        return this.privEventTime;\n    }\n    get eventType() {\n        return this.privEventType;\n    }\n    get metadata() {\n        return this.privMetadata;\n    }\n}\nexports.PlatformEvent = PlatformEvent;\n\n//# sourceMappingURL=PlatformEvent.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioStreamNodeErrorEvent = exports.AudioStreamNodeDetachedEvent = exports.AudioStreamNodeAttachedEvent = exports.AudioStreamNodeAttachingEvent = exports.AudioStreamNodeEvent = exports.AudioSourceErrorEvent = exports.AudioSourceOffEvent = exports.AudioSourceReadyEvent = exports.AudioSourceInitializingEvent = exports.AudioSourceEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass AudioSourceEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, audioSourceId, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privAudioSourceId = audioSourceId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n}\nexports.AudioSourceEvent = AudioSourceEvent;\nclass AudioSourceInitializingEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceInitializingEvent = AudioSourceInitializingEvent;\nclass AudioSourceReadyEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceReadyEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceReadyEvent = AudioSourceReadyEvent;\nclass AudioSourceOffEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceOffEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceOffEvent = AudioSourceOffEvent;\nclass AudioSourceErrorEvent extends AudioSourceEvent {\n    constructor(audioSourceId, error) {\n        super(\"AudioSourceErrorEvent\", audioSourceId, PlatformEvent_js_1.EventType.Error);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.AudioSourceErrorEvent = AudioSourceErrorEvent;\nclass AudioStreamNodeEvent extends AudioSourceEvent {\n    constructor(eventName, audioSourceId, audioNodeId) {\n        super(eventName, audioSourceId);\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.AudioStreamNodeEvent = AudioStreamNodeEvent;\nclass AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeAttachingEvent = AudioStreamNodeAttachingEvent;\nclass AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeAttachedEvent = AudioStreamNodeAttachedEvent;\nclass AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeDetachedEvent = AudioStreamNodeDetachedEvent;\nclass AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId, error) {\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.AudioStreamNodeErrorEvent = AudioStreamNodeErrorEvent;\n\n//# sourceMappingURL=AudioSourceEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionRedirectEvent = exports.ConnectionMessageSentEvent = exports.ConnectionMessageReceivedEvent = exports.ConnectionEstablishErrorEvent = exports.ConnectionErrorEvent = exports.ConnectionClosedEvent = exports.ConnectionEstablishedEvent = exports.ConnectionStartEvent = exports.ConnectionEvent = exports.ServiceEvent = void 0;\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass ServiceEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, jsonstring, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privJsonResult = jsonstring;\n    }\n    get jsonString() {\n        return this.privJsonResult;\n    }\n}\nexports.ServiceEvent = ServiceEvent;\nclass ConnectionEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, connectionId, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privConnectionId = connectionId;\n    }\n    get connectionId() {\n        return this.privConnectionId;\n    }\n}\nexports.ConnectionEvent = ConnectionEvent;\nclass ConnectionStartEvent extends ConnectionEvent {\n    constructor(connectionId, uri, headers) {\n        super(\"ConnectionStartEvent\", connectionId);\n        this.privUri = uri;\n        this.privHeaders = headers;\n    }\n    get uri() {\n        return this.privUri;\n    }\n    get headers() {\n        return this.privHeaders;\n    }\n}\nexports.ConnectionStartEvent = ConnectionStartEvent;\nclass ConnectionEstablishedEvent extends ConnectionEvent {\n    constructor(connectionId) {\n        super(\"ConnectionEstablishedEvent\", connectionId);\n    }\n}\nexports.ConnectionEstablishedEvent = ConnectionEstablishedEvent;\nclass ConnectionClosedEvent extends ConnectionEvent {\n    constructor(connectionId, statusCode, reason) {\n        super(\"ConnectionClosedEvent\", connectionId, PlatformEvent_js_1.EventType.Debug);\n        this.privReason = reason;\n        this.privStatusCode = statusCode;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n}\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\nclass ConnectionErrorEvent extends ConnectionEvent {\n    constructor(connectionId, message, type) {\n        super(\"ConnectionErrorEvent\", connectionId, PlatformEvent_js_1.EventType.Debug);\n        this.privMessage = message;\n        this.privType = type;\n    }\n    get message() {\n        return this.privMessage;\n    }\n    get type() {\n        return this.privType;\n    }\n}\nexports.ConnectionErrorEvent = ConnectionErrorEvent;\nclass ConnectionEstablishErrorEvent extends ConnectionEvent {\n    constructor(connectionId, statuscode, reason) {\n        super(\"ConnectionEstablishErrorEvent\", connectionId, PlatformEvent_js_1.EventType.Error);\n        this.privStatusCode = statuscode;\n        this.privReason = reason;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n}\nexports.ConnectionEstablishErrorEvent = ConnectionEstablishErrorEvent;\nclass ConnectionMessageReceivedEvent extends ConnectionEvent {\n    constructor(connectionId, networkReceivedTimeISO, message) {\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\n        this.privMessage = message;\n    }\n    get networkReceivedTime() {\n        return this.privNetworkReceivedTime;\n    }\n    get message() {\n        return this.privMessage;\n    }\n}\nexports.ConnectionMessageReceivedEvent = ConnectionMessageReceivedEvent;\nclass ConnectionMessageSentEvent extends ConnectionEvent {\n    constructor(connectionId, networkSentTimeISO, message) {\n        super(\"ConnectionMessageSentEvent\", connectionId);\n        this.privNetworkSentTime = networkSentTimeISO;\n        this.privMessage = message;\n    }\n    get networkSentTime() {\n        return this.privNetworkSentTime;\n    }\n    get message() {\n        return this.privMessage;\n    }\n}\nexports.ConnectionMessageSentEvent = ConnectionMessageSentEvent;\nclass ConnectionRedirectEvent extends ConnectionEvent {\n    constructor(connectionId, redirectUrl, originalUrl, context) {\n        super(\"ConnectionRedirectEvent\", connectionId, PlatformEvent_js_1.EventType.Info);\n        this.privRedirectUrl = redirectUrl;\n        this.privOriginalUrl = originalUrl;\n        this.privContext = context;\n    }\n    get redirectUrl() {\n        return this.privRedirectUrl;\n    }\n    get originalUrl() {\n        return this.privOriginalUrl;\n    }\n    get context() {\n        return this.privContext;\n    }\n}\nexports.ConnectionRedirectEvent = ConnectionRedirectEvent;\n\n//# sourceMappingURL=ConnectionEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectDisposedError = exports.InvalidOperationError = exports.ArgumentNullError = void 0;\n/* eslint-disable max-classes-per-file */\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class ArgumentNullError\n * @extends {Error}\n */\nclass ArgumentNullError extends Error {\n    /**\n     * Creates an instance of ArgumentNullError.\n     *\n     * @param {string} argumentName - Name of the argument that is null\n     *\n     * @memberOf ArgumentNullError\n     */\n    constructor(argumentName) {\n        super(argumentName);\n        this.name = \"ArgumentNull\";\n        this.message = argumentName;\n    }\n}\nexports.ArgumentNullError = ArgumentNullError;\n/**\n * The error that is thrown when an invalid operation is performed in the code.\n *\n * @export\n * @class InvalidOperationError\n * @extends {Error}\n */\nclass InvalidOperationError extends Error {\n    /**\n     * Creates an instance of InvalidOperationError.\n     *\n     * @param {string} error - The error\n     *\n     * @memberOf InvalidOperationError\n     */\n    constructor(error) {\n        super(error);\n        this.name = \"InvalidOperation\";\n        this.message = error;\n    }\n}\nexports.InvalidOperationError = InvalidOperationError;\n/**\n * The error that is thrown when an object is disposed.\n *\n * @export\n * @class ObjectDisposedError\n * @extends {Error}\n */\nclass ObjectDisposedError extends Error {\n    /**\n     * Creates an instance of ObjectDisposedError.\n     *\n     * @param {string} objectName - The object that is disposed\n     * @param {string} error - The error\n     *\n     * @memberOf ObjectDisposedError\n     */\n    constructor(objectName, error) {\n        super(error);\n        this.name = objectName + \"ObjectDisposed\";\n        this.message = error;\n    }\n}\nexports.ObjectDisposedError = ObjectDisposedError;\n\n//# sourceMappingURL=Error.js.map\n","\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionMessage = exports.MessageType = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nvar MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"Text\"] = 0] = \"Text\";\n    MessageType[MessageType[\"Binary\"] = 1] = \"Binary\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\nclass ConnectionMessage {\n    constructor(messageType, body, headers, id) {\n        this.privBody = null;\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        this.privMessageType = messageType;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.privBody = body;\n        this.privHeaders = headers ? headers : {};\n        this.privId = id ? id : (0, Guid_js_1.createNoDashGuid)();\n        switch (this.messageType) {\n            case MessageType.Binary:\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\n                break;\n            case MessageType.Text:\n                this.privSize = this.textBody.length;\n        }\n    }\n    get messageType() {\n        return this.privMessageType;\n    }\n    get headers() {\n        return this.privHeaders;\n    }\n    get body() {\n        return this.privBody;\n    }\n    get textBody() {\n        if (this.privMessageType === MessageType.Binary) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for binary message\");\n        }\n        return this.privBody;\n    }\n    get binaryBody() {\n        if (this.privMessageType === MessageType.Text) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for text message\");\n        }\n        return this.privBody;\n    }\n    get id() {\n        return this.privId;\n    }\n}\nexports.ConnectionMessage = ConnectionMessage;\n\n//# sourceMappingURL=ConnectionMessage.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionOpenResponse = void 0;\nclass ConnectionOpenResponse {\n    constructor(statusCode, reason) {\n        this.privStatusCode = statusCode;\n        this.privReason = reason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.ConnectionOpenResponse = ConnectionOpenResponse;\n\n//# sourceMappingURL=ConnectionOpenResponse.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeferralMap = void 0;\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class DefferalMap\n */\nclass DeferralMap {\n    constructor() {\n        this.privMap = {};\n    }\n    add(id, deferral) {\n        this.privMap[id] = deferral;\n    }\n    getId(id) {\n        return this.privMap[id];\n    }\n    complete(id, result) {\n        try {\n            this.privMap[id].resolve(result);\n        }\n        catch (error) {\n            this.privMap[id].reject(error);\n        }\n        finally {\n            this.privMap[id] = undefined;\n        }\n    }\n}\nexports.DeferralMap = DeferralMap;\n\n//# sourceMappingURL=DeferralMap.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendingAgentContextMessageEvent = exports.DialogEvent = void 0;\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass DialogEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n    }\n}\nexports.DialogEvent = DialogEvent;\nclass SendingAgentContextMessageEvent extends DialogEvent {\n    constructor(agentConfig) {\n        super(\"SendingAgentContextMessageEvent\");\n        this.privAgentConfig = agentConfig;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n}\nexports.SendingAgentContextMessageEvent = SendingAgentContextMessageEvent;\n\n//# sourceMappingURL=DialogEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventSource = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nclass EventSource {\n    constructor(metadata) {\n        this.privEventListeners = {};\n        this.privIsDisposed = false;\n        this.privConsoleListener = undefined;\n        this.privMetadata = metadata;\n    }\n    onEvent(event) {\n        if (this.isDisposed()) {\n            throw (new Error_js_1.ObjectDisposedError(\"EventSource\"));\n        }\n        if (this.metadata) {\n            for (const paramName in this.metadata) {\n                if (paramName) {\n                    if (event.metadata) {\n                        if (!event.metadata[paramName]) {\n                            event.metadata[paramName] = this.metadata[paramName];\n                        }\n                    }\n                }\n            }\n        }\n        for (const eventId in this.privEventListeners) {\n            if (eventId && this.privEventListeners[eventId]) {\n                this.privEventListeners[eventId](event);\n            }\n        }\n    }\n    attach(onEventCallback) {\n        const id = (0, Guid_js_1.createNoDashGuid)();\n        this.privEventListeners[id] = onEventCallback;\n        return {\n            detach: () => {\n                delete this.privEventListeners[id];\n                return Promise.resolve();\n            },\n        };\n    }\n    attachListener(listener) {\n        return this.attach((e) => listener.onEvent(e));\n    }\n    attachConsoleListener(listener) {\n        if (!!this.privConsoleListener) {\n            void this.privConsoleListener.detach(); // Detach implementation for eventListeners is synchronous\n        }\n        this.privConsoleListener = this.attach((e) => listener.onEvent(e));\n        return this.privConsoleListener;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        this.privEventListeners = null;\n        this.privIsDisposed = true;\n    }\n    get metadata() {\n        return this.privMetadata;\n    }\n}\nexports.EventSource = EventSource;\n\n//# sourceMappingURL=EventSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Events = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst EventSource_js_1 = require(\"./EventSource.js\");\nclass Events {\n    static setEventSource(eventSource) {\n        if (!eventSource) {\n            throw new Error_js_1.ArgumentNullError(\"eventSource\");\n        }\n        Events.privInstance = eventSource;\n    }\n    static get instance() {\n        return Events.privInstance;\n    }\n}\nexports.Events = Events;\nEvents.privInstance = new EventSource_js_1.EventSource();\n\n//# sourceMappingURL=Events.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IAudioSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionState = void 0;\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"None\"] = 0] = \"None\";\n    ConnectionState[ConnectionState[\"Connected\"] = 1] = \"Connected\";\n    ConnectionState[ConnectionState[\"Connecting\"] = 2] = \"Connecting\";\n    ConnectionState[ConnectionState[\"Disconnected\"] = 3] = \"Disconnected\";\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n\n//# sourceMappingURL=IConnection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IDetachable.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IDictionary.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IDisposable.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IEventListener.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IEventSource.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IErrorMessages.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=ITimer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IWebsocketMessageFormatter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.List = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nclass List {\n    constructor(list) {\n        this.privSubscriptionIdCounter = 0;\n        this.privAddSubscriptions = {};\n        this.privRemoveSubscriptions = {};\n        this.privDisposedSubscriptions = {};\n        this.privDisposeReason = null;\n        this.privList = [];\n        // copy the list rather than taking as is.\n        if (list) {\n            for (const item of list) {\n                this.privList.push(item);\n            }\n        }\n    }\n    get(itemIndex) {\n        this.throwIfDisposed();\n        return this.privList[itemIndex];\n    }\n    first() {\n        return this.get(0);\n    }\n    last() {\n        return this.get(this.length() - 1);\n    }\n    add(item) {\n        this.throwIfDisposed();\n        this.insertAt(this.privList.length, item);\n    }\n    insertAt(index, item) {\n        this.throwIfDisposed();\n        if (index === 0) {\n            this.privList.unshift(item);\n        }\n        else if (index === this.privList.length) {\n            this.privList.push(item);\n        }\n        else {\n            this.privList.splice(index, 0, item);\n        }\n        this.triggerSubscriptions(this.privAddSubscriptions);\n    }\n    removeFirst() {\n        this.throwIfDisposed();\n        return this.removeAt(0);\n    }\n    removeLast() {\n        this.throwIfDisposed();\n        return this.removeAt(this.length() - 1);\n    }\n    removeAt(index) {\n        this.throwIfDisposed();\n        return this.remove(index, 1)[0];\n    }\n    remove(index, count) {\n        this.throwIfDisposed();\n        const removedElements = this.privList.splice(index, count);\n        this.triggerSubscriptions(this.privRemoveSubscriptions);\n        return removedElements;\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.remove(0, this.length());\n    }\n    length() {\n        this.throwIfDisposed();\n        return this.privList.length;\n    }\n    onAdded(addedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privAddSubscriptions[subscriptionId] = addedCallback;\n        return {\n            detach: () => {\n                delete this.privAddSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    onRemoved(removedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privRemoveSubscriptions[subscriptionId] = removedCallback;\n        return {\n            detach: () => {\n                delete this.privRemoveSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    onDisposed(disposedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\n        return {\n            detach: () => {\n                delete this.privDisposedSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    join(seperator) {\n        this.throwIfDisposed();\n        return this.privList.join(seperator);\n    }\n    toArray() {\n        const cloneCopy = Array();\n        this.privList.forEach((val) => {\n            cloneCopy.push(val);\n        });\n        return cloneCopy;\n    }\n    any(callback) {\n        this.throwIfDisposed();\n        if (callback) {\n            return this.where(callback).length() > 0;\n        }\n        else {\n            return this.length() > 0;\n        }\n    }\n    all(callback) {\n        this.throwIfDisposed();\n        return this.where(callback).length() === this.length();\n    }\n    forEach(callback) {\n        this.throwIfDisposed();\n        for (let i = 0; i < this.length(); i++) {\n            callback(this.privList[i], i);\n        }\n    }\n    select(callback) {\n        this.throwIfDisposed();\n        const selectList = [];\n        for (let i = 0; i < this.privList.length; i++) {\n            selectList.push(callback(this.privList[i], i));\n        }\n        return new List(selectList);\n    }\n    where(callback) {\n        this.throwIfDisposed();\n        const filteredList = new List();\n        for (let i = 0; i < this.privList.length; i++) {\n            if (callback(this.privList[i], i)) {\n                filteredList.add(this.privList[i]);\n            }\n        }\n        return filteredList;\n    }\n    orderBy(compareFn) {\n        this.throwIfDisposed();\n        const clonedArray = this.toArray();\n        const orderedArray = clonedArray.sort(compareFn);\n        return new List(orderedArray);\n    }\n    orderByDesc(compareFn) {\n        this.throwIfDisposed();\n        return this.orderBy((a, b) => compareFn(b, a));\n    }\n    clone() {\n        this.throwIfDisposed();\n        return new List(this.toArray());\n    }\n    concat(list) {\n        this.throwIfDisposed();\n        return new List(this.privList.concat(list.toArray()));\n    }\n    concatArray(array) {\n        this.throwIfDisposed();\n        return new List(this.privList.concat(array));\n    }\n    isDisposed() {\n        return this.privList == null;\n    }\n    dispose(reason) {\n        if (!this.isDisposed()) {\n            this.privDisposeReason = reason;\n            this.privList = null;\n            this.privAddSubscriptions = null;\n            this.privRemoveSubscriptions = null;\n            this.triggerSubscriptions(this.privDisposedSubscriptions);\n        }\n    }\n    throwIfDisposed() {\n        if (this.isDisposed()) {\n            throw new Error_js_1.ObjectDisposedError(\"List\", this.privDisposeReason);\n        }\n    }\n    triggerSubscriptions(subscriptions) {\n        if (subscriptions) {\n            for (const subscriptionId in subscriptions) {\n                if (subscriptionId) {\n                    subscriptions[subscriptionId]();\n                }\n            }\n        }\n    }\n}\nexports.List = List;\n\n//# sourceMappingURL=List.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.marshalPromiseToCallbacks = exports.Sink = exports.Deferred = exports.PromiseResultEventSource = exports.PromiseResult = exports.PromiseState = void 0;\n/* eslint-disable max-classes-per-file, @typescript-eslint/typedef */\nvar PromiseState;\n(function (PromiseState) {\n    PromiseState[PromiseState[\"None\"] = 0] = \"None\";\n    PromiseState[PromiseState[\"Resolved\"] = 1] = \"Resolved\";\n    PromiseState[PromiseState[\"Rejected\"] = 2] = \"Rejected\";\n})(PromiseState = exports.PromiseState || (exports.PromiseState = {}));\nclass PromiseResult {\n    constructor(promiseResultEventSource) {\n        this.throwIfError = () => {\n            if (this.isError) {\n                throw this.error;\n            }\n        };\n        promiseResultEventSource.on((result) => {\n            if (!this.privIsCompleted) {\n                this.privIsCompleted = true;\n                this.privIsError = false;\n                this.privResult = result;\n            }\n        }, (error) => {\n            if (!this.privIsCompleted) {\n                this.privIsCompleted = true;\n                this.privIsError = true;\n                this.privError = error;\n            }\n        });\n    }\n    get isCompleted() {\n        return this.privIsCompleted;\n    }\n    get isError() {\n        return this.privIsError;\n    }\n    get error() {\n        return this.privError;\n    }\n    get result() {\n        return this.privResult;\n    }\n}\nexports.PromiseResult = PromiseResult;\nclass PromiseResultEventSource {\n    constructor() {\n        this.setResult = (result) => {\n            this.privOnSetResult(result);\n        };\n        this.setError = (error) => {\n            this.privOnSetError(error);\n        };\n        this.on = (onSetResult, onSetError) => {\n            this.privOnSetResult = onSetResult;\n            this.privOnSetError = onSetError;\n        };\n    }\n}\nexports.PromiseResultEventSource = PromiseResultEventSource;\nclass Deferred {\n    constructor() {\n        this.resolve = (result) => {\n            this.privResolve(result);\n            return this;\n        };\n        this.reject = (error) => {\n            this.privReject(error);\n            return this;\n        };\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        this.privPromise = new Promise((resolve, reject) => {\n            this.privResolve = resolve;\n            this.privReject = reject;\n        });\n    }\n    get promise() {\n        return this.privPromise;\n    }\n}\nexports.Deferred = Deferred;\nclass Sink {\n    constructor() {\n        this.privState = PromiseState.None;\n        this.privPromiseResult = null;\n        this.privPromiseResultEvents = null;\n        this.privSuccessHandlers = [];\n        this.privErrorHandlers = [];\n        this.privPromiseResultEvents = new PromiseResultEventSource();\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\n    }\n    get state() {\n        return this.privState;\n    }\n    get result() {\n        return this.privPromiseResult;\n    }\n    resolve(result) {\n        if (this.privState !== PromiseState.None) {\n            throw new Error(\"'Cannot resolve a completed promise'\");\n        }\n        this.privState = PromiseState.Resolved;\n        this.privPromiseResultEvents.setResult(result);\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\n        }\n        this.detachHandlers();\n    }\n    reject(error) {\n        if (this.privState !== PromiseState.None) {\n            throw new Error(\"'Cannot reject a completed promise'\");\n        }\n        this.privState = PromiseState.Rejected;\n        this.privPromiseResultEvents.setError(error);\n        for (const errorHandler of this.privErrorHandlers) {\n            this.executeErrorCallback(error, errorHandler);\n        }\n        this.detachHandlers();\n    }\n    on(successCallback, errorCallback) {\n        if (successCallback == null) {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            successCallback = () => { };\n        }\n        if (this.privState === PromiseState.None) {\n            this.privSuccessHandlers.push(successCallback);\n            this.privErrorHandlers.push(errorCallback);\n        }\n        else {\n            if (this.privState === PromiseState.Resolved) {\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\n            }\n            else if (this.privState === PromiseState.Rejected) {\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\n            }\n            this.detachHandlers();\n        }\n    }\n    executeSuccessCallback(result, successCallback, errorCallback) {\n        try {\n            successCallback(result);\n        }\n        catch (e) {\n            this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\n        }\n    }\n    executeErrorCallback(error, errorCallback) {\n        if (errorCallback) {\n            try {\n                errorCallback(error);\n            }\n            catch (e) {\n                throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\n            }\n        }\n        else {\n            throw new Error(`'Unhandled error: ${error}'`);\n        }\n    }\n    detachHandlers() {\n        this.privErrorHandlers = [];\n        this.privSuccessHandlers = [];\n    }\n}\nexports.Sink = Sink;\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\nfunction marshalPromiseToCallbacks(promise, cb, err) {\n    promise.then((val) => {\n        try {\n            if (!!cb) {\n                cb(val);\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                try {\n                    if (error instanceof Error) {\n                        const typedError = error;\n                        err(typedError.name + \": \" + typedError.message);\n                    }\n                    else {\n                        err(error);\n                    }\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n            }\n        }\n    }, (error) => {\n        if (!!err) {\n            try {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n                // eslint-disable-next-line no-empty\n            }\n            catch (error) { }\n        }\n    });\n}\nexports.marshalPromiseToCallbacks = marshalPromiseToCallbacks;\n\n//# sourceMappingURL=Promise.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Queue = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst List_js_1 = require(\"./List.js\");\nconst Promise_js_1 = require(\"./Promise.js\");\nvar SubscriberType;\n(function (SubscriberType) {\n    SubscriberType[SubscriberType[\"Dequeue\"] = 0] = \"Dequeue\";\n    SubscriberType[SubscriberType[\"Peek\"] = 1] = \"Peek\";\n})(SubscriberType || (SubscriberType = {}));\nclass Queue {\n    constructor(list) {\n        this.privPromiseStore = new List_js_1.List();\n        this.privIsDrainInProgress = false;\n        this.privIsDisposing = false;\n        this.privDisposeReason = null;\n        this.privList = list ? list : new List_js_1.List();\n        this.privDetachables = [];\n        this.privSubscribers = new List_js_1.List();\n        this.privDetachables.push(this.privList.onAdded(() => this.drain()));\n    }\n    enqueue(item) {\n        this.throwIfDispose();\n        this.enqueueFromPromise(new Promise((resolve) => resolve(item)));\n    }\n    enqueueFromPromise(promise) {\n        this.throwIfDispose();\n        promise.then((val) => {\n            this.privList.add(val);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n        }, () => { });\n    }\n    dequeue() {\n        this.throwIfDispose();\n        const deferredSubscriber = new Promise_js_1.Deferred();\n        if (this.privSubscribers) {\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\n            this.drain();\n        }\n        return deferredSubscriber.promise;\n    }\n    peek() {\n        this.throwIfDispose();\n        const deferredSubscriber = new Promise_js_1.Deferred();\n        const subs = this.privSubscribers;\n        if (subs) {\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\n            this.drain();\n        }\n        return deferredSubscriber.promise;\n    }\n    length() {\n        this.throwIfDispose();\n        return this.privList.length();\n    }\n    isDisposed() {\n        return this.privSubscribers == null;\n    }\n    async drainAndDispose(pendingItemProcessor, reason) {\n        if (!this.isDisposed() && !this.privIsDisposing) {\n            this.privDisposeReason = reason;\n            this.privIsDisposing = true;\n            const subs = this.privSubscribers;\n            if (subs) {\n                while (subs.length() > 0) {\n                    const subscriber = subs.removeFirst();\n                    // TODO: this needs work (Resolve(null) instead?).\n                    subscriber.deferral.resolve(undefined);\n                    // subscriber.deferral.reject(\"Disposed\");\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privSubscribers === subs) {\n                    this.privSubscribers = subs;\n                }\n            }\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n            if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\n                const promiseArray = [];\n                this.privPromiseStore.toArray().forEach((wrapper) => {\n                    promiseArray.push(wrapper);\n                });\n                return Promise.all(promiseArray).finally(() => {\n                    this.privSubscribers = null;\n                    this.privList.forEach((item) => {\n                        pendingItemProcessor(item);\n                    });\n                    this.privList = null;\n                    return;\n                }).then();\n            }\n            else {\n                this.privSubscribers = null;\n                this.privList = null;\n            }\n        }\n    }\n    async dispose(reason) {\n        await this.drainAndDispose(null, reason);\n    }\n    drain() {\n        if (!this.privIsDrainInProgress && !this.privIsDisposing) {\n            this.privIsDrainInProgress = true;\n            const subs = this.privSubscribers;\n            const lists = this.privList;\n            if (subs && lists) {\n                while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\n                    const subscriber = subs.removeFirst();\n                    if (subscriber.type === SubscriberType.Peek) {\n                        subscriber.deferral.resolve(lists.first());\n                    }\n                    else {\n                        const dequeuedItem = lists.removeFirst();\n                        subscriber.deferral.resolve(dequeuedItem);\n                    }\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privSubscribers === subs) {\n                    this.privSubscribers = subs;\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privList === lists) {\n                    this.privList = lists;\n                }\n            }\n            this.privIsDrainInProgress = false;\n        }\n    }\n    throwIfDispose() {\n        if (this.isDisposed()) {\n            if (this.privDisposeReason) {\n                throw new Error_js_1.InvalidOperationError(this.privDisposeReason);\n            }\n            throw new Error_js_1.ObjectDisposedError(\"Queue\");\n        }\n        else if (this.privIsDisposing) {\n            throw new Error_js_1.InvalidOperationError(\"Queue disposing\");\n        }\n    }\n}\nexports.Queue = Queue;\n\n//# sourceMappingURL=Queue.js.map\n","\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RawWebsocketMessage = void 0;\nconst ConnectionMessage_js_1 = require(\"./ConnectionMessage.js\");\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nclass RawWebsocketMessage {\n    constructor(messageType, payload, id) {\n        this.privPayload = null;\n        if (!payload) {\n            throw new Error_js_1.ArgumentNullError(\"payload\");\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (messageType === ConnectionMessage_js_1.MessageType.Binary && Object.getPrototypeOf(payload).constructor.name !== \"ArrayBuffer\") {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        if (messageType === ConnectionMessage_js_1.MessageType.Text && !(typeof (payload) === \"string\")) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        this.privMessageType = messageType;\n        this.privPayload = payload;\n        this.privId = id ? id : (0, Guid_js_1.createNoDashGuid)();\n    }\n    get messageType() {\n        return this.privMessageType;\n    }\n    get payload() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.privPayload;\n    }\n    get textContent() {\n        if (this.privMessageType === ConnectionMessage_js_1.MessageType.Binary) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for binary message\");\n        }\n        return this.privPayload;\n    }\n    get binaryContent() {\n        if (this.privMessageType === ConnectionMessage_js_1.MessageType.Text) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for text message\");\n        }\n        return this.privPayload;\n    }\n    get id() {\n        return this.privId;\n    }\n}\nexports.RawWebsocketMessage = RawWebsocketMessage;\n\n//# sourceMappingURL=RawWebsocketMessage.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RiffPcmEncoder = void 0;\nclass RiffPcmEncoder {\n    constructor(actualSampleRate, desiredSampleRate) {\n        this.privActualSampleRate = actualSampleRate;\n        this.privDesiredSampleRate = desiredSampleRate;\n    }\n    encode(actualAudioFrame) {\n        const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\n        if (!audioFrame) {\n            return null;\n        }\n        const audioLength = audioFrame.length * 2;\n        const buffer = new ArrayBuffer(audioLength);\n        const view = new DataView(buffer);\n        this.floatTo16BitPCM(view, 0, audioFrame);\n        return buffer;\n    }\n    setString(view, offset, str) {\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(offset + i, str.charCodeAt(i));\n        }\n    }\n    floatTo16BitPCM(view, offset, input) {\n        for (let i = 0; i < input.length; i++, offset += 2) {\n            const s = Math.max(-1, Math.min(1, input[i]));\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n    downSampleAudioFrame(srcFrame, srcRate, dstRate) {\n        if (!srcFrame) {\n            return null;\n        }\n        if (dstRate === srcRate || dstRate > srcRate) {\n            return srcFrame;\n        }\n        const ratio = srcRate / dstRate;\n        const dstLength = Math.round(srcFrame.length / ratio);\n        const dstFrame = new Float32Array(dstLength);\n        let srcOffset = 0;\n        let dstOffset = 0;\n        while (dstOffset < dstLength) {\n            const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\n            let accum = 0;\n            let count = 0;\n            while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\n                accum += srcFrame[srcOffset++];\n                count++;\n            }\n            dstFrame[dstOffset++] = accum / count;\n        }\n        return dstFrame;\n    }\n}\nexports.RiffPcmEncoder = RiffPcmEncoder;\n\n//# sourceMappingURL=RiffPcmEncoder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stream = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nconst Queue_js_1 = require(\"./Queue.js\");\nclass Stream {\n    constructor(streamId) {\n        this.privIsWriteEnded = false;\n        this.privIsReadEnded = false;\n        this.privId = streamId ? streamId : (0, Guid_js_1.createNoDashGuid)();\n        this.privReaderQueue = new Queue_js_1.Queue();\n    }\n    get isClosed() {\n        return this.privIsWriteEnded;\n    }\n    get isReadEnded() {\n        return this.privIsReadEnded;\n    }\n    get id() {\n        return this.privId;\n    }\n    close() {\n        if (!this.privIsWriteEnded) {\n            this.writeStreamChunk({\n                buffer: null,\n                isEnd: true,\n                timeReceived: Date.now(),\n            });\n            this.privIsWriteEnded = true;\n        }\n    }\n    writeStreamChunk(streamChunk) {\n        this.throwIfClosed();\n        if (!this.privReaderQueue.isDisposed()) {\n            try {\n                this.privReaderQueue.enqueue(streamChunk);\n            }\n            catch (e) {\n                // Do nothing\n            }\n        }\n    }\n    read() {\n        if (this.privIsReadEnded) {\n            throw new Error_js_1.InvalidOperationError(\"Stream read has already finished\");\n        }\n        return this.privReaderQueue\n            .dequeue()\n            .then(async (streamChunk) => {\n            if (streamChunk === undefined || streamChunk.isEnd) {\n                await this.privReaderQueue.dispose(\"End of stream reached\");\n            }\n            return streamChunk;\n        });\n    }\n    readEnded() {\n        if (!this.privIsReadEnded) {\n            this.privIsReadEnded = true;\n            this.privReaderQueue = new Queue_js_1.Queue();\n        }\n    }\n    throwIfClosed() {\n        if (this.privIsWriteEnded) {\n            throw new Error_js_1.InvalidOperationError(\"Stream closed\");\n        }\n    }\n}\nexports.Stream = Stream;\n\n//# sourceMappingURL=Stream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationStatus = void 0;\n/**\n * Defines translation status.\n * @class TranslationStatus\n */\nvar TranslationStatus;\n(function (TranslationStatus) {\n    /**\n     * @member TranslationStatus.Success\n     */\n    TranslationStatus[TranslationStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * @member TranslationStatus.Error\n     */\n    TranslationStatus[TranslationStatus[\"Error\"] = 1] = \"Error\";\n})(TranslationStatus = exports.TranslationStatus || (exports.TranslationStatus = {}));\n\n//# sourceMappingURL=TranslationStatus.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChunkedArrayBufferStream = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\nclass ChunkedArrayBufferStream extends Exports_js_1.Stream {\n    constructor(targetChunkSize, streamId) {\n        super(streamId);\n        this.privTargetChunkSize = Math.round(targetChunkSize);\n        this.privNextBufferReadyBytes = 0;\n    }\n    writeStreamChunk(chunk) {\n        // No pending write, and the buffer is the right size so write it.\n        if (chunk.isEnd ||\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\n            super.writeStreamChunk(chunk);\n            return;\n        }\n        let bytesCopiedFromBuffer = 0;\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\n            // Fill the next buffer.\n            if (undefined === this.privNextBufferToWrite) {\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\n                this.privNextBufferStartTime = chunk.timeReceived;\n            }\n            // Find out how many bytes we can copy into the read buffer.\n            const bytesToCopy = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\n            const targetView = new Uint8Array(this.privNextBufferToWrite);\n            const sourceView = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\n            this.privNextBufferReadyBytes += bytesToCopy;\n            bytesCopiedFromBuffer += bytesToCopy;\n            // Are we ready to write?\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\n                super.writeStreamChunk({\n                    buffer: this.privNextBufferToWrite,\n                    isEnd: false,\n                    timeReceived: this.privNextBufferStartTime,\n                });\n                this.privNextBufferReadyBytes = 0;\n                this.privNextBufferToWrite = undefined;\n            }\n        }\n    }\n    close() {\n        // Send whatever is pending, then close the base class.\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\n            super.writeStreamChunk({\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\n                isEnd: false,\n                timeReceived: this.privNextBufferStartTime,\n            });\n        }\n        super.close();\n    }\n}\nexports.ChunkedArrayBufferStream = ChunkedArrayBufferStream;\n\n//# sourceMappingURL=ChunkedArrayBufferStream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IAudioDestination.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Timeout = void 0;\nclass Timeout {\n    static load() {\n        // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\n        const scheduledTimeoutFunctions = new Map([[0, () => { }]]); // eslint-disable-line @typescript-eslint/no-empty-function\n        const unhandledRequests = new Map();\n        // eslint-disable-next-line\n        const workerScript = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`;\n        const workerUrl = \"data:text/javascript;base64,\" + btoa(workerScript);\n        const worker = new Worker(workerUrl);\n        worker.addEventListener(\"message\", ({ data }) => {\n            if (Timeout.isCallNotification(data)) {\n                const { params: { timerId } } = data;\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\n                if (typeof idOrFunc === \"number\") {\n                    const unhandledTimerId = unhandledRequests.get(idOrFunc);\n                    if (unhandledTimerId === undefined ||\n                        unhandledTimerId !== timerId) {\n                        throw new Error(\"The timer is in an undefined state.\");\n                    }\n                }\n                else if (typeof idOrFunc !== \"undefined\") {\n                    idOrFunc();\n                    // A timeout can be safely deleted because it is only called once.\n                    scheduledTimeoutFunctions.delete(timerId);\n                }\n                else {\n                    throw new Error(\"The timer is in an undefined state.\");\n                }\n            }\n            else if (Timeout.isClearResponse(data)) {\n                const { id } = data;\n                const unhandledTimerId = unhandledRequests.get(id);\n                if (unhandledTimerId === undefined) {\n                    throw new Error(\"The timer is in an undefined state.\");\n                }\n                unhandledRequests.delete(id);\n                scheduledTimeoutFunctions.delete(unhandledTimerId);\n            }\n            else {\n                const { error: { message } } = data;\n                throw new Error(message);\n            }\n        });\n        const clearTimeout = (timerId) => {\n            const id = Math.random();\n            unhandledRequests.set(id, timerId);\n            scheduledTimeoutFunctions.set(timerId, id);\n            worker.postMessage({\n                id,\n                method: \"clear\",\n                params: { timerId }\n            });\n        };\n        const setTimeout = (func, delay) => {\n            const timerId = Math.random();\n            scheduledTimeoutFunctions.set(timerId, func);\n            worker.postMessage({\n                id: null,\n                method: \"set\",\n                params: {\n                    delay,\n                    now: performance.now(),\n                    timerId\n                }\n            });\n            return timerId;\n        };\n        return {\n            clearTimeout,\n            setTimeout\n        };\n    }\n    static loadWorkerTimers() {\n        return () => {\n            if (Timeout.workerTimers !== null) {\n                return Timeout.workerTimers;\n            }\n            Timeout.workerTimers = Timeout.load();\n            return Timeout.workerTimers;\n        };\n    }\n    static isCallNotification(message) {\n        return message.method !== undefined && message.method === \"call\";\n    }\n    static isClearResponse(message) {\n        return message.error === null && typeof message.id === \"number\";\n    }\n}\nexports.Timeout = Timeout;\nTimeout.workerTimers = null;\nTimeout.clearTimeout = (timerId) => Timeout.timers().clearTimeout(timerId);\nTimeout.setTimeout = (func, delay) => Timeout.timers().setTimeout(func, delay);\nTimeout.timers = Timeout.loadWorkerTimers();\n\n//# sourceMappingURL=Timeout.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OCSPCacheUpdateErrorEvent = exports.OCSPResponseRetrievedEvent = exports.OCSPCacheFetchErrorEvent = exports.OCSPVerificationFailedEvent = exports.OCSPCacheHitEvent = exports.OCSPCacheEntryNeedsRefreshEvent = exports.OCSPCacheEntryExpiredEvent = exports.OCSPWSUpgradeStartedEvent = exports.OCSPStapleReceivedEvent = exports.OCSPCacheUpdateCompleteEvent = exports.OCSPDiskCacheStoreEvent = exports.OCSPMemoryCacheStoreEvent = exports.OCSPCacheUpdateNeededEvent = exports.OCSPDiskCacheHitEvent = exports.OCSPCacheMissEvent = exports.OCSPMemoryCacheHitEvent = exports.OCSPEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass OCSPEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, eventType, signature) {\n        super(eventName, eventType);\n        this.privSignature = signature;\n    }\n}\nexports.OCSPEvent = OCSPEvent;\nclass OCSPMemoryCacheHitEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPMemoryCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPMemoryCacheHitEvent = OCSPMemoryCacheHitEvent;\nclass OCSPCacheMissEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheMissEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheMissEvent = OCSPCacheMissEvent;\nclass OCSPDiskCacheHitEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPDiskCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPDiskCacheHitEvent = OCSPDiskCacheHitEvent;\nclass OCSPCacheUpdateNeededEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheUpdateNeededEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheUpdateNeededEvent = OCSPCacheUpdateNeededEvent;\nclass OCSPMemoryCacheStoreEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPMemoryCacheStoreEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPMemoryCacheStoreEvent = OCSPMemoryCacheStoreEvent;\nclass OCSPDiskCacheStoreEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPDiskCacheStoreEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPDiskCacheStoreEvent = OCSPDiskCacheStoreEvent;\nclass OCSPCacheUpdateCompleteEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheUpdateCompleteEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheUpdateCompleteEvent = OCSPCacheUpdateCompleteEvent;\nclass OCSPStapleReceivedEvent extends OCSPEvent {\n    constructor() {\n        super(\"OCSPStapleReceivedEvent\", PlatformEvent_js_1.EventType.Debug, \"\");\n    }\n}\nexports.OCSPStapleReceivedEvent = OCSPStapleReceivedEvent;\nclass OCSPWSUpgradeStartedEvent extends OCSPEvent {\n    constructor(serialNumber) {\n        super(\"OCSPWSUpgradeStartedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n    }\n}\nexports.OCSPWSUpgradeStartedEvent = OCSPWSUpgradeStartedEvent;\nclass OCSPCacheEntryExpiredEvent extends OCSPEvent {\n    constructor(serialNumber, expireTime) {\n        super(\"OCSPCacheEntryExpiredEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n    }\n}\nexports.OCSPCacheEntryExpiredEvent = OCSPCacheEntryExpiredEvent;\nclass OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\n    constructor(serialNumber, startTime, expireTime) {\n        super(\"OCSPCacheEntryNeedsRefreshEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n        this.privStartTime = startTime;\n    }\n}\nexports.OCSPCacheEntryNeedsRefreshEvent = OCSPCacheEntryNeedsRefreshEvent;\nclass OCSPCacheHitEvent extends OCSPEvent {\n    constructor(serialNumber, startTime, expireTime) {\n        super(\"OCSPCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n        this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\n        this.privStartTime = startTime;\n        this.privStartTimeString = new Date(startTime).toLocaleTimeString();\n    }\n}\nexports.OCSPCacheHitEvent = OCSPCacheHitEvent;\nclass OCSPVerificationFailedEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPVerificationFailedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPVerificationFailedEvent = OCSPVerificationFailedEvent;\nclass OCSPCacheFetchErrorEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPCacheFetchErrorEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPCacheFetchErrorEvent = OCSPCacheFetchErrorEvent;\nclass OCSPResponseRetrievedEvent extends OCSPEvent {\n    constructor(serialNumber) {\n        super(\"OCSPResponseRetrievedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n    }\n}\nexports.OCSPResponseRetrievedEvent = OCSPResponseRetrievedEvent;\nclass OCSPCacheUpdateErrorEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPCacheUpdateErrorEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPCacheUpdateErrorEvent = OCSPCacheUpdateErrorEvent;\n\n//# sourceMappingURL=OCSPEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackgroundEvent = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\nclass BackgroundEvent extends Exports_js_1.PlatformEvent {\n    constructor(error) {\n        super(\"BackgroundEvent\", Exports_js_1.EventType.Error);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.BackgroundEvent = BackgroundEvent;\n\n//# sourceMappingURL=BackgroundError.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationStatus = void 0;\n__exportStar(require(\"./AudioSourceEvents.js\"), exports);\n__exportStar(require(\"./ConnectionEvents.js\"), exports);\n__exportStar(require(\"./ConnectionMessage.js\"), exports);\n__exportStar(require(\"./ConnectionOpenResponse.js\"), exports);\n__exportStar(require(\"./DeferralMap.js\"), exports);\n__exportStar(require(\"./DialogEvents.js\"), exports);\n__exportStar(require(\"./Error.js\"), exports);\n__exportStar(require(\"./Events.js\"), exports);\n__exportStar(require(\"./EventSource.js\"), exports);\n__exportStar(require(\"./Guid.js\"), exports);\n__exportStar(require(\"./IAudioSource.js\"), exports);\n__exportStar(require(\"./IConnection.js\"), exports);\n__exportStar(require(\"./IDetachable.js\"), exports);\n__exportStar(require(\"./IDictionary.js\"), exports);\n__exportStar(require(\"./IDisposable.js\"), exports);\n__exportStar(require(\"./IEventListener.js\"), exports);\n__exportStar(require(\"./IEventSource.js\"), exports);\n__exportStar(require(\"./IErrorMessages.js\"), exports);\n__exportStar(require(\"./ITimer.js\"), exports);\n__exportStar(require(\"./IWebsocketMessageFormatter.js\"), exports);\n__exportStar(require(\"./List.js\"), exports);\n__exportStar(require(\"./PlatformEvent.js\"), exports);\n__exportStar(require(\"./Promise.js\"), exports);\n__exportStar(require(\"./Queue.js\"), exports);\n__exportStar(require(\"./RawWebsocketMessage.js\"), exports);\n__exportStar(require(\"./RiffPcmEncoder.js\"), exports);\n__exportStar(require(\"./Stream.js\"), exports);\nvar TranslationStatus_js_1 = require(\"../common.speech/TranslationStatus.js\");\nObject.defineProperty(exports, \"TranslationStatus\", { enumerable: true, get: function () { return TranslationStatus_js_1.TranslationStatus; } });\n__exportStar(require(\"./ChunkedArrayBufferStream.js\"), exports);\n__exportStar(require(\"./IAudioDestination.js\"), exports);\n__exportStar(require(\"./Timeout.js\"), exports);\n__exportStar(require(\"./OCSPEvents.js\"), exports);\n__exportStar(require(\"./BackgroundError.js\"), exports);\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HeaderNames = void 0;\nclass HeaderNames {\n}\nexports.HeaderNames = HeaderNames;\nHeaderNames.AuthKey = \"Ocp-Apim-Subscription-Key\";\nHeaderNames.Authorization = \"Authorization\";\nHeaderNames.SpIDAuthKey = \"Apim-Subscription-Id\";\nHeaderNames.ConnectionId = \"X-ConnectionId\";\nHeaderNames.ContentType = \"Content-Type\";\nHeaderNames.CustomCommandsAppId = \"X-CommandsAppId\";\nHeaderNames.Path = \"Path\";\nHeaderNames.RequestId = \"X-RequestId\";\nHeaderNames.RequestStreamId = \"X-StreamId\";\nHeaderNames.RequestTimestamp = \"X-Timestamp\";\n\n//# sourceMappingURL=HeaderNames.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthInfo = void 0;\nclass AuthInfo {\n    constructor(headerName, token) {\n        this.privHeaderName = headerName;\n        this.privToken = token;\n    }\n    get headerName() {\n        return this.privHeaderName;\n    }\n    get token() {\n        return this.privToken;\n    }\n}\nexports.AuthInfo = AuthInfo;\n\n//# sourceMappingURL=IAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CognitiveSubscriptionKeyAuthentication = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst IAuthentication_js_1 = require(\"./IAuthentication.js\");\n/**\n * @class\n */\nclass CognitiveSubscriptionKeyAuthentication {\n    /**\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\n     * @constructor\n     * @param {string} subscriptionKey - The subscription key\n     */\n    constructor(subscriptionKey) {\n        if (!subscriptionKey) {\n            throw new Exports_js_1.ArgumentNullError(\"subscriptionKey\");\n        }\n        this.privAuthInfo = new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.AuthKey, subscriptionKey);\n    }\n    /**\n     * Fetches the subscription key.\n     * @member\n     * @function\n     * @public\n     * @param {string} authFetchEventId - The id to fetch.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fetch(authFetchEventId) {\n        return Promise.resolve(this.privAuthInfo);\n    }\n    /**\n     * Fetches the subscription key.\n     * @member\n     * @function\n     * @public\n     * @param {string} authFetchEventId - The id to fetch.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fetchOnExpiry(authFetchEventId) {\n        return Promise.resolve(this.privAuthInfo);\n    }\n}\nexports.CognitiveSubscriptionKeyAuthentication = CognitiveSubscriptionKeyAuthentication;\n\n//# sourceMappingURL=CognitiveSubscriptionKeyAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CognitiveTokenAuthentication = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst IAuthentication_js_1 = require(\"./IAuthentication.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nclass CognitiveTokenAuthentication {\n    constructor(fetchCallback, fetchOnExpiryCallback) {\n        if (!fetchCallback) {\n            throw new Exports_js_1.ArgumentNullError(\"fetchCallback\");\n        }\n        if (!fetchOnExpiryCallback) {\n            throw new Exports_js_1.ArgumentNullError(\"fetchOnExpiryCallback\");\n        }\n        this.privFetchCallback = fetchCallback;\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\n    }\n    fetch(authFetchEventId) {\n        return this.privFetchCallback(authFetchEventId).then((token) => new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\n    }\n    fetchOnExpiry(authFetchEventId) {\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token) => new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\n    }\n}\nexports.CognitiveTokenAuthentication = CognitiveTokenAuthentication;\nCognitiveTokenAuthentication.privTokenPrefix = \"Bearer \";\n\n//# sourceMappingURL=CognitiveTokenAuthentication.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=ISynthesisConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogLevel = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return Exports_js_1.EventType; } });\n\n//# sourceMappingURL=LogLevel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contracts = void 0;\n/**\n * @class Contracts\n * @private\n */\nclass Contracts {\n    static throwIfNullOrUndefined(param, name) {\n        if (param === undefined || param === null) {\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\n        }\n    }\n    static throwIfNull(param, name) {\n        if (param === null) {\n            throw new Error(\"throwIfNull:\" + name);\n        }\n    }\n    static throwIfNullOrWhitespace(param, name) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).trim().length < 1) {\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\n        }\n    }\n    static throwIfNullOrTooLong(param, name, maxLength) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).length > maxLength) {\n            throw new Error(\"throwIfNullOrTooLong:\" + name + \" (more than \" + maxLength.toString() + \" characters)\");\n        }\n    }\n    static throwIfNullOrTooShort(param, name, minLength) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).length < minLength) {\n            throw new Error(\"throwIfNullOrTooShort:\" + name + \" (less than \" + minLength.toString() + \" characters)\");\n        }\n    }\n    static throwIfDisposed(isDisposed) {\n        if (isDisposed) {\n            throw new Error(\"the object is already disposed\");\n        }\n    }\n    static throwIfArrayEmptyOrWhitespace(array, name) {\n        Contracts.throwIfNullOrUndefined(array, name);\n        if (array.length === 0) {\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\n        }\n        for (const item of array) {\n            Contracts.throwIfNullOrWhitespace(item, name);\n        }\n    }\n    static throwIfFileDoesNotExist(param, name) {\n        Contracts.throwIfNullOrWhitespace(param, name);\n        // TODO check for file existence.\n    }\n    static throwIfNotUndefined(param, name) {\n        if (param !== undefined) {\n            throw new Error(\"throwIfNotUndefined:\" + name);\n        }\n    }\n    static throwIfNumberOutOfRange(value, name, rangeStart, rangeEnd) {\n        Contracts.throwIfNullOrUndefined(value, name);\n        if (value < rangeStart || value > rangeEnd) {\n            throw new Error(\"throwIfNumberOutOfRange:\" + name + \" (must be between \" + rangeStart.toString() + \" and \" + rangeEnd.toString() + \")\");\n        }\n    }\n}\nexports.Contracts = Contracts;\n\n//# sourceMappingURL=Contracts.js.map\n","\"use strict\";\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleLoggingListener = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst LogLevel_js_1 = require(\"../sdk/LogLevel.js\");\nconst Contracts_js_1 = require(\"../sdk/Contracts.js\");\nclass ConsoleLoggingListener {\n    constructor(logLevelFilter = LogLevel_js_1.LogLevel.None) {\n        this.privLogPath = undefined;\n        this.privEnableConsoleOutput = true;\n        this.privLogLevelFilter = logLevelFilter;\n    }\n    set logPath(path) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available\");\n        this.privLogPath = path;\n    }\n    set enableConsoleOutput(enableOutput) {\n        this.privEnableConsoleOutput = enableOutput;\n    }\n    onEvent(event) {\n        if (event.eventType >= this.privLogLevelFilter) {\n            const log = this.toString(event);\n            if (!!this.logCallback) {\n                this.logCallback(log);\n            }\n            if (!!this.privLogPath) {\n                fs.writeFileSync(this.privLogPath, log + \"\\n\", { flag: \"a+\" });\n            }\n            if (this.privEnableConsoleOutput) {\n                switch (event.eventType) {\n                    case LogLevel_js_1.LogLevel.Debug:\n                        // eslint-disable-next-line no-console\n                        console.debug(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Info:\n                        // eslint-disable-next-line no-console\n                        console.info(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Warning:\n                        // eslint-disable-next-line no-console\n                        console.warn(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Error:\n                        // eslint-disable-next-line no-console\n                        console.error(log);\n                        break;\n                    default:\n                        // eslint-disable-next-line no-console\n                        console.log(log);\n                        break;\n                }\n            }\n        }\n    }\n    toString(event) {\n        const logFragments = [\n            `${event.eventTime}`,\n            `${event.name}`,\n        ];\n        const e = event;\n        for (const prop in e) {\n            if (prop && event.hasOwnProperty(prop) &&\n                prop !== \"eventTime\" && prop !== \"eventType\" &&\n                prop !== \"eventId\" && prop !== \"name\" &&\n                prop !== \"constructor\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                const value = e[prop];\n                let valueToLog = \"<NULL>\";\n                if (value !== undefined && value !== null) {\n                    if (typeof (value) === \"number\" || typeof (value) === \"string\") {\n                        valueToLog = value.toString();\n                    }\n                    else {\n                        valueToLog = JSON.stringify(value);\n                    }\n                }\n                logFragments.push(`${prop}: ${valueToLog}`);\n            }\n        }\n        return logFragments.join(\" | \");\n    }\n}\nexports.ConsoleLoggingListener = ConsoleLoggingListener;\n\n//# sourceMappingURL=ConsoleLoggingListener.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=IRecorder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioStreamFormatImpl = exports.AudioStreamFormat = exports.AudioFormatTag = void 0;\n// eslint-disable-next-line max-classes-per-file\nvar AudioFormatTag;\n(function (AudioFormatTag) {\n    AudioFormatTag[AudioFormatTag[\"PCM\"] = 1] = \"PCM\";\n    AudioFormatTag[AudioFormatTag[\"MuLaw\"] = 2] = \"MuLaw\";\n    AudioFormatTag[AudioFormatTag[\"Siren\"] = 3] = \"Siren\";\n    AudioFormatTag[AudioFormatTag[\"MP3\"] = 4] = \"MP3\";\n    AudioFormatTag[AudioFormatTag[\"SILKSkype\"] = 5] = \"SILKSkype\";\n    AudioFormatTag[AudioFormatTag[\"OGG_OPUS\"] = 6] = \"OGG_OPUS\";\n    AudioFormatTag[AudioFormatTag[\"WEBM_OPUS\"] = 7] = \"WEBM_OPUS\";\n    AudioFormatTag[AudioFormatTag[\"ALaw\"] = 8] = \"ALaw\";\n    AudioFormatTag[AudioFormatTag[\"FLAC\"] = 9] = \"FLAC\";\n    AudioFormatTag[AudioFormatTag[\"OPUS\"] = 10] = \"OPUS\";\n    AudioFormatTag[AudioFormatTag[\"AMR_WB\"] = 11] = \"AMR_WB\";\n    AudioFormatTag[AudioFormatTag[\"G722\"] = 12] = \"G722\";\n})(AudioFormatTag = exports.AudioFormatTag || (exports.AudioFormatTag = {}));\n/**\n * Represents audio stream format used for custom audio input configurations.\n * @class AudioStreamFormat\n */\nclass AudioStreamFormat {\n    /**\n     * Creates an audio stream format object representing the default audio stream\n     * format (16KHz 16bit mono PCM).\n     * @member AudioStreamFormat.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getDefaultInputFormat() {\n        return AudioStreamFormatImpl.getDefaultInputFormat();\n    }\n    /**\n     * Creates an audio stream format object with the specified format characteristics.\n     * @member AudioStreamFormat.getWaveFormat\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\n     * uses one channel and stereo data uses two channels.\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getWaveFormat(samplesPerSecond, bitsPerSample, channels, format) {\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels, format);\n    }\n    /**\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\n     * @member AudioStreamFormat.getWaveFormatPCM\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\n     * uses one channel and stereo data uses two channels.\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getWaveFormatPCM(samplesPerSecond, bitsPerSample, channels) {\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\n    }\n}\nexports.AudioStreamFormat = AudioStreamFormat;\n/**\n * @private\n * @class AudioStreamFormatImpl\n */\nclass AudioStreamFormatImpl extends AudioStreamFormat {\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {number} channels - Number of channels.\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\n     */\n    constructor(samplesPerSec = 16000, bitsPerSample = 16, channels = 1, format = AudioFormatTag.PCM) {\n        super();\n        let isWavFormat = true;\n        /* 1 for PCM; 6 for alaw; 7 for mulaw */\n        switch (format) {\n            case AudioFormatTag.PCM:\n                this.formatTag = 1;\n                break;\n            case AudioFormatTag.ALaw:\n                this.formatTag = 6;\n                break;\n            case AudioFormatTag.MuLaw:\n                this.formatTag = 7;\n                break;\n            default:\n                isWavFormat = false;\n        }\n        this.bitsPerSample = bitsPerSample;\n        this.samplesPerSec = samplesPerSec;\n        this.channels = channels;\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\n        if (isWavFormat) {\n            this.privHeader = new ArrayBuffer(44);\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n            const view = new DataView(this.privHeader);\n            /* RIFF identifier */\n            this.setString(view, 0, \"RIFF\");\n            /* file length */\n            view.setUint32(4, 0, true);\n            /* RIFF type & Format */\n            this.setString(view, 8, \"WAVEfmt \");\n            /* format chunk length */\n            view.setUint32(16, 16, true);\n            /* audio format */\n            view.setUint16(20, this.formatTag, true);\n            /* channel count */\n            view.setUint16(22, this.channels, true);\n            /* sample rate */\n            view.setUint32(24, this.samplesPerSec, true);\n            /* byte rate (sample rate * block align) */\n            view.setUint32(28, this.avgBytesPerSec, true);\n            /* block align (channel count * bytes per sample) */\n            view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\n            /* bits per sample */\n            view.setUint16(34, this.bitsPerSample, true);\n            /* data chunk identifier */\n            this.setString(view, 36, \"data\");\n            /* data chunk length */\n            view.setUint32(40, 0, true);\n        }\n    }\n    /**\n     * Retrieves the default input format.\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormatImpl} The default input format.\n     */\n    static getDefaultInputFormat() {\n        return new AudioStreamFormatImpl();\n    }\n    /**\n     * Creates an audio context appropriate to current browser\n     * @member AudioStreamFormatImpl.getAudioContext\n     * @function\n     * @public\n     * @returns {AudioContext} An audio context instance\n     */\n    /* eslint-disable */\n    static getAudioContext(sampleRate) {\n        // Workaround for Speech SDK bug in Safari.\n        const AudioContext = window.AudioContext // our preferred impl\n            || window.webkitAudioContext // fallback, mostly when on Safari\n            || false; // could not find.\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n        if (!!AudioContext) {\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\n                return new AudioContext({ sampleRate });\n            }\n            else {\n                return new AudioContext();\n            }\n        }\n        else {\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\n        }\n    }\n    /* eslint-enable */\n    /**\n     * Closes the configuration object.\n     * @member AudioStreamFormatImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    get header() {\n        return this.privHeader;\n    }\n    setString(view, offset, str) {\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(offset + i, str.charCodeAt(i));\n        }\n    }\n}\nexports.AudioStreamFormatImpl = AudioStreamFormatImpl;\n\n//# sourceMappingURL=AudioStreamFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MicAudioSource = exports.AudioWorkletSourceURLPropertyName = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioStreamFormat_js_1 = require(\"../sdk/Audio/AudioStreamFormat.js\");\nexports.AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\nclass MicAudioSource {\n    constructor(privRecorder, deviceId, audioSourceId, mediaStream) {\n        this.privRecorder = privRecorder;\n        this.deviceId = deviceId;\n        this.privStreams = {};\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\n        this.privId = audioSourceId ? audioSourceId : (0, Exports_js_2.createNoDashGuid)();\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privMediaStream = mediaStream || null;\n        this.privIsClosing = false;\n    }\n    get format() {\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\n    }\n    turnOn() {\n        if (this.privInitializeDeferral) {\n            return this.privInitializeDeferral.promise;\n        }\n        this.privInitializeDeferral = new Exports_js_2.Deferred();\n        try {\n            this.createAudioContext();\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                const typedError = error;\n                this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                this.privInitializeDeferral.reject(error);\n            }\n            return this.privInitializeDeferral.promise;\n        }\n        const nav = window.navigator;\n        let getUserMedia = (\n        // eslint-disable-next-line\n        nav.getUserMedia ||\n            nav.webkitGetUserMedia ||\n            nav.mozGetUserMedia ||\n            nav.msGetUserMedia);\n        if (!!nav.mediaDevices) {\n            getUserMedia = (constraints, successCallback, errorCallback) => {\n                nav.mediaDevices\n                    .getUserMedia(constraints)\n                    .then(successCallback)\n                    .catch(errorCallback);\n            };\n        }\n        if (!getUserMedia) {\n            const errorMsg = \"Browser does not support getUserMedia.\";\n            this.privInitializeDeferral.reject(errorMsg);\n            this.onEvent(new Exports_js_2.AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\n        }\n        else {\n            const next = () => {\n                this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n                if (this.privMediaStream && this.privMediaStream.active) {\n                    this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n                    this.privInitializeDeferral.resolve();\n                }\n                else {\n                    getUserMedia({ audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false }, (mediaStream) => {\n                        this.privMediaStream = mediaStream;\n                        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n                        this.privInitializeDeferral.resolve();\n                    }, (error) => {\n                        const errorMsg = `Error occurred during microphone initialization: ${error}`;\n                        this.privInitializeDeferral.reject(errorMsg);\n                        this.onEvent(new Exports_js_2.AudioSourceErrorEvent(this.privId, errorMsg));\n                    });\n                }\n            };\n            if (this.privContext.state === \"suspended\") {\n                // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\n                // https://github.com/WebAudio/web-audio-api/issues/790\n                this.privContext.resume()\n                    .then(next)\n                    .catch((reason) => {\n                    this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason}`);\n                });\n            }\n            else {\n                next();\n            }\n        }\n        return this.privInitializeDeferral.promise;\n    }\n    id() {\n        return this.privId;\n    }\n    attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        return this.listen(audioNodeId).then((stream) => {\n            this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n            return {\n                detach: async () => {\n                    stream.readEnded();\n                    delete this.privStreams[audioNodeId];\n                    this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                    return this.turnOff();\n                },\n                id: () => audioNodeId,\n                read: () => stream.read(),\n            };\n        });\n    }\n    detach(audioNodeId) {\n        if (audioNodeId && this.privStreams[audioNodeId]) {\n            this.privStreams[audioNodeId].close();\n            delete this.privStreams[audioNodeId];\n            this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n        }\n    }\n    async turnOff() {\n        for (const streamId in this.privStreams) {\n            if (streamId) {\n                const stream = this.privStreams[streamId];\n                if (stream) {\n                    stream.close();\n                }\n            }\n        }\n        this.onEvent(new Exports_js_2.AudioSourceOffEvent(this.privId)); // no stream now\n        if (this.privInitializeDeferral) {\n            // Correctly handle when browser forces mic off before turnOn() completes\n            // eslint-disable-next-line @typescript-eslint/await-thenable\n            await this.privInitializeDeferral;\n            this.privInitializeDeferral = null;\n        }\n        await this.destroyAudioContext();\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return this.getMicrophoneLabel().then((label) => ({\n            bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\n            channelcount: MicAudioSource.AUDIOFORMAT.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: label,\n            samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\n            type: Exports_js_1.type.Microphones,\n        }));\n    }\n    setProperty(name, value) {\n        if (name === exports.AudioWorkletSourceURLPropertyName) {\n            this.privRecorder.setWorkletUrl(value);\n        }\n        else {\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\n        }\n    }\n    getMicrophoneLabel() {\n        const defaultMicrophoneName = \"microphone\";\n        // If we did this already, return the value.\n        if (this.privMicrophoneLabel !== undefined) {\n            return Promise.resolve(this.privMicrophoneLabel);\n        }\n        // If the stream isn't currently running, we can't query devices because security.\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\n            return Promise.resolve(defaultMicrophoneName);\n        }\n        // Setup a default\n        this.privMicrophoneLabel = defaultMicrophoneName;\n        // Get the id of the device running the audio track.\n        const microphoneDeviceId = this.privMediaStream.getTracks()[0].getSettings().deviceId;\n        // If the browser doesn't support getting the device ID, set a default and return.\n        if (undefined === microphoneDeviceId) {\n            return Promise.resolve(this.privMicrophoneLabel);\n        }\n        const deferred = new Exports_js_2.Deferred();\n        // Enumerate the media devices.\n        navigator.mediaDevices.enumerateDevices().then((devices) => {\n            for (const device of devices) {\n                if (device.deviceId === microphoneDeviceId) {\n                    // Found the device\n                    this.privMicrophoneLabel = device.label;\n                    break;\n                }\n            }\n            deferred.resolve(this.privMicrophoneLabel);\n        }, () => deferred.resolve(this.privMicrophoneLabel));\n        return deferred.promise;\n    }\n    async listen(audioNodeId) {\n        await this.turnOn();\n        const stream = new Exports_js_2.ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\n        this.privStreams[audioNodeId] = stream;\n        try {\n            this.privRecorder.record(this.privContext, this.privMediaStream, stream);\n        }\n        catch (error) {\n            this.onEvent(new Exports_js_2.AudioStreamNodeErrorEvent(this.privId, audioNodeId, error));\n            throw error;\n        }\n        const result = stream;\n        return result;\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    createAudioContext() {\n        if (!!this.privContext) {\n            return;\n        }\n        this.privContext = AudioStreamFormat_js_1.AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\n    }\n    async destroyAudioContext() {\n        if (!this.privContext) {\n            return;\n        }\n        this.privRecorder.releaseMediaResources(this.privContext);\n        // This pattern brought to you by a bug in the TypeScript compiler where it\n        // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\n        // https://github.com/Microsoft/TypeScript/issues/11498\n        let hasClose = false;\n        if (\"close\" in this.privContext) {\n            hasClose = true;\n        }\n        if (hasClose) {\n            if (!this.privIsClosing) {\n                // The audio context close may take enough time that the close is called twice\n                this.privIsClosing = true;\n                await this.privContext.close();\n                this.privContext = null;\n                this.privIsClosing = false;\n            }\n        }\n        else if (null !== this.privContext && this.privContext.state === \"running\") {\n            // Suspend actually takes a callback, but analogous to the\n            // resume method, it'll be only fired if suspend is called\n            // in a direct response to a user action. The later is not always\n            // the case, as TurnOff is also called, when we receive an\n            // end-of-speech message from the service. So, doing a best effort\n            // fire-and-forget here.\n            await this.privContext.suspend();\n        }\n    }\n}\nexports.MicAudioSource = MicAudioSource;\nMicAudioSource.AUDIOFORMAT = AudioStreamFormat_js_1.AudioStreamFormat.getDefaultInputFormat();\n\n//# sourceMappingURL=MicAudioSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileAudioSource = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioStreamFormat_js_1 = require(\"../sdk/Audio/AudioStreamFormat.js\");\nclass FileAudioSource {\n    constructor(file, filename, audioSourceId) {\n        this.privStreams = {};\n        this.privHeaderEnd = 44;\n        this.privId = audioSourceId ? audioSourceId : (0, Exports_js_2.createNoDashGuid)();\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privSource = file;\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && this.privSource instanceof Blob) {\n            this.privFilename = file.name;\n        }\n        else {\n            this.privFilename = filename || \"unknown.wav\";\n        }\n        // Read the header.\n        this.privAudioFormatPromise = this.readHeader();\n    }\n    get format() {\n        return this.privAudioFormatPromise;\n    }\n    turnOn() {\n        if (this.privFilename.lastIndexOf(\".wav\") !== this.privFilename.length - 4) {\n            const errorMsg = this.privFilename + \" is not supported. Only WAVE files are allowed at the moment.\";\n            this.onEvent(new Exports_js_2.AudioSourceErrorEvent(errorMsg, \"\"));\n            return Promise.reject(errorMsg);\n        }\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    id() {\n        return this.privId;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        const stream = await this.upload(audioNodeId);\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return Promise.resolve({\n            detach: async () => {\n                stream.readEnded();\n                delete this.privStreams[audioNodeId];\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                await this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => stream.read(),\n        });\n    }\n    detach(audioNodeId) {\n        if (audioNodeId && this.privStreams[audioNodeId]) {\n            this.privStreams[audioNodeId].close();\n            delete this.privStreams[audioNodeId];\n            this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n        }\n    }\n    turnOff() {\n        for (const streamId in this.privStreams) {\n            if (streamId) {\n                const stream = this.privStreams[streamId];\n                if (stream && !stream.isClosed) {\n                    stream.close();\n                }\n            }\n        }\n        this.onEvent(new Exports_js_2.AudioSourceOffEvent(this.privId)); // no stream now\n        return Promise.resolve();\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return this.privAudioFormatPromise.then((result) => (Promise.resolve({\n            bitspersample: result.bitsPerSample,\n            channelcount: result.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"File\",\n            samplerate: result.samplesPerSec,\n            type: Exports_js_1.type.File,\n        })));\n    }\n    readHeader() {\n        // Read the wave header.\n        const maxHeaderSize = 4296;\n        const header = this.privSource.slice(0, maxHeaderSize);\n        const headerResult = new Exports_js_2.Deferred();\n        const processHeader = (header) => {\n            const view = new DataView(header);\n            const getWord = (index) => String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\n            // RIFF 4 bytes.\n            if (\"RIFF\" !== getWord(0)) {\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\n                return;\n            }\n            // length, 4 bytes\n            // RIFF Type & fmt 8 bytes\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\n                return;\n            }\n            const formatSize = view.getInt32(16, true);\n            const channelCount = view.getUint16(22, true);\n            const sampleRate = view.getUint32(24, true);\n            const bitsPerSample = view.getUint16(34, true);\n            // Confirm if header is 44 bytes long.\n            let pos = 36 + Math.max(formatSize - 16, 0);\n            for (; getWord(pos) !== \"data\"; pos += 2) {\n                if (pos > maxHeaderSize - 8) {\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\n                    return;\n                }\n            }\n            this.privHeaderEnd = pos + 8;\n            headerResult.resolve(AudioStreamFormat_js_1.AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount));\n        };\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && header instanceof Blob) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const header = event.target.result;\n                processHeader(header);\n            };\n            reader.readAsArrayBuffer(header);\n        }\n        else {\n            const h = header;\n            processHeader(h.buffer.slice(h.byteOffset, h.byteOffset + h.byteLength));\n        }\n        return headerResult.promise;\n    }\n    async upload(audioNodeId) {\n        const onerror = (error) => {\n            const errorMsg = `Error occurred while processing '${this.privFilename}'. ${error}`;\n            this.onEvent(new Exports_js_2.AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\n            throw new Error(errorMsg);\n        };\n        try {\n            await this.turnOn();\n            const format = await this.privAudioFormatPromise;\n            const stream = new Exports_js_2.ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\n            this.privStreams[audioNodeId] = stream;\n            const chunk = this.privSource.slice(this.privHeaderEnd);\n            const processFile = (buff) => {\n                if (stream.isClosed) {\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\n                }\n                stream.writeStreamChunk({\n                    buffer: buff,\n                    isEnd: false,\n                    timeReceived: Date.now(),\n                });\n                stream.close();\n            };\n            if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && chunk instanceof Blob) {\n                const reader = new FileReader();\n                reader.onerror = (ev) => onerror(ev.toString());\n                reader.onload = (event) => {\n                    const fileBuffer = event.target.result;\n                    processFile(fileBuffer);\n                };\n                reader.readAsArrayBuffer(chunk);\n            }\n            else {\n                const c = chunk;\n                processFile(c.buffer.slice(c.byteOffset, c.byteOffset + c.byteLength));\n            }\n            return stream;\n        }\n        catch (e) {\n            onerror(e);\n        }\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n}\nexports.FileAudioSource = FileAudioSource;\n\n//# sourceMappingURL=FileAudioSource.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PcmRecorder = void 0;\nconst Exports_1 = require(\"../common/Exports\");\nclass PcmRecorder {\n    constructor(stopInputOnRelease) {\n        this.privStopInputOnRelease = stopInputOnRelease;\n    }\n    record(context, mediaStream, outputStream) {\n        const desiredSampleRate = 16000;\n        const waveStreamEncoder = new Exports_1.RiffPcmEncoder(context.sampleRate, desiredSampleRate);\n        const micInput = context.createMediaStreamSource(mediaStream);\n        const attachScriptProcessor = () => {\n            // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n            const scriptNode = (() => {\n                let bufferSize = 0;\n                try {\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n                catch (error) {\n                    // Webkit (<= version 31) requires a valid bufferSize.\n                    bufferSize = 2048;\n                    let audioSampleRate = context.sampleRate;\n                    while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\n                        bufferSize <<= 1;\n                        audioSampleRate >>= 1;\n                    }\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n            })();\n            scriptNode.onaudioprocess = (event) => {\n                const inputFrame = event.inputBuffer.getChannelData(0);\n                if (outputStream && !outputStream.isClosed) {\n                    const waveFrame = waveStreamEncoder.encode(inputFrame);\n                    if (!!waveFrame) {\n                        outputStream.writeStreamChunk({\n                            buffer: waveFrame,\n                            isEnd: false,\n                            timeReceived: Date.now(),\n                        });\n                    }\n                }\n            };\n            micInput.connect(scriptNode);\n            scriptNode.connect(context.destination);\n            this.privMediaResources = {\n                scriptProcessorNode: scriptNode,\n                source: micInput,\n                stream: mediaStream,\n            };\n        };\n        // https://webaudio.github.io/web-audio-api/#audioworklet\n        // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\n        const skipAudioWorklet = !!this.privSpeechProcessorScript && this.privSpeechProcessorScript.toLowerCase() === \"ignore\";\n        if (!!context.audioWorklet && !skipAudioWorklet) {\n            if (!this.privSpeechProcessorScript) {\n                const workletScript = `class SP extends AudioWorkletProcessor {\r\n                    constructor(options) {\r\n                      super(options);\r\n                    }\r\n                    process(inputs, outputs) {\r\n                      const input = inputs[0];\r\n                      const output = [];\r\n                      for (let channel = 0; channel < input.length; channel += 1) {\r\n                        output[channel] = input[channel];\r\n                      }\r\n                      this.port.postMessage(output[0]);\r\n                      return true;\r\n                    }\r\n                  }\r\n                  registerProcessor('speech-processor', SP);`;\n                const blob = new Blob([workletScript], { type: \"application/javascript; charset=utf-8\" });\n                this.privSpeechProcessorScript = URL.createObjectURL(blob);\n            }\n            context.audioWorklet\n                .addModule(this.privSpeechProcessorScript)\n                .then(() => {\n                const workletNode = new AudioWorkletNode(context, \"speech-processor\");\n                workletNode.port.onmessage = (ev) => {\n                    const inputFrame = ev.data;\n                    if (outputStream && !outputStream.isClosed) {\n                        const waveFrame = waveStreamEncoder.encode(inputFrame);\n                        if (!!waveFrame) {\n                            outputStream.writeStreamChunk({\n                                buffer: waveFrame,\n                                isEnd: false,\n                                timeReceived: Date.now(),\n                            });\n                        }\n                    }\n                };\n                micInput.connect(workletNode);\n                workletNode.connect(context.destination);\n                this.privMediaResources = {\n                    scriptProcessorNode: workletNode,\n                    source: micInput,\n                    stream: mediaStream,\n                };\n            })\n                .catch(() => {\n                attachScriptProcessor();\n            });\n        }\n        else {\n            try {\n                attachScriptProcessor();\n            }\n            catch (err) {\n                throw new Error(`Unable to start audio worklet node for PCMRecorder: ${err}`);\n            }\n        }\n    }\n    releaseMediaResources(context) {\n        if (this.privMediaResources) {\n            if (this.privMediaResources.scriptProcessorNode) {\n                this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\n                this.privMediaResources.scriptProcessorNode = null;\n            }\n            if (this.privMediaResources.source) {\n                this.privMediaResources.source.disconnect();\n                if (this.privStopInputOnRelease) {\n                    this.privMediaResources.stream.getTracks().forEach((track) => track.stop());\n                }\n                this.privMediaResources.source = null;\n            }\n        }\n    }\n    setWorkletUrl(url) {\n        this.privSpeechProcessorScript = url;\n    }\n}\nexports.PcmRecorder = PcmRecorder;\n\n//# sourceMappingURL=PCMRecorder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebsocketMessageAdapter = void 0;\nconst net = __importStar(require(\"net\"));\nconst tls = __importStar(require(\"tls\"));\nconst agent_base_1 = __importDefault(require(\"agent-base\"));\nconst https_proxy_agent_1 = __importDefault(require(\"https-proxy-agent\"));\nconst ws_1 = __importDefault(require(\"ws\"));\nconst HeaderNames_js_1 = require(\"../common.speech/HeaderNames.js\");\nconst Exports_js_1 = require(\"../common/Exports.js\");\nclass WebsocketMessageAdapter {\n    constructor(uri, connectionId, messageFormatter, proxyInfo, headers, enableCompression) {\n        if (!uri) {\n            throw new Exports_js_1.ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new Exports_js_1.ArgumentNullError(\"messageFormatter\");\n        }\n        this.proxyInfo = proxyInfo;\n        this.privConnectionEvents = new Exports_js_1.EventSource();\n        this.privConnectionId = connectionId;\n        this.privMessageFormatter = messageFormatter;\n        this.privConnectionState = Exports_js_1.ConnectionState.None;\n        this.privUri = uri;\n        this.privHeaders = headers;\n        this.privEnableCompression = enableCompression;\n        // Add the connection ID to the headers\n        this.privHeaders[HeaderNames_js_1.HeaderNames.ConnectionId] = this.privConnectionId;\n        this.privHeaders.connectionId = this.privConnectionId;\n        this.privLastErrorReceived = \"\";\n    }\n    get state() {\n        return this.privConnectionState;\n    }\n    open() {\n        if (this.privConnectionState === Exports_js_1.ConnectionState.Disconnected) {\n            return Promise.reject(`Cannot open a connection that is in ${this.privConnectionState} state`);\n        }\n        if (this.privConnectionEstablishDeferral) {\n            return this.privConnectionEstablishDeferral.promise;\n        }\n        this.privConnectionEstablishDeferral = new Exports_js_1.Deferred();\n        this.privCertificateValidatedDeferral = new Exports_js_1.Deferred();\n        this.privConnectionState = Exports_js_1.ConnectionState.Connecting;\n        try {\n            if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\n                // Browser handles cert checks.\n                this.privCertificateValidatedDeferral.resolve();\n                this.privWebsocketClient = new WebSocket(this.privUri);\n            }\n            else {\n                // Workaround for https://github.com/microsoft/cognitive-services-speech-sdk-js/issues/465\n                // Which is root caused by https://github.com/TooTallNate/node-agent-base/issues/61\n                const uri = new URL(this.privUri);\n                let protocol = uri.protocol;\n                if (protocol?.toLocaleLowerCase() === \"wss:\") {\n                    protocol = \"https:\";\n                }\n                else if (protocol?.toLocaleLowerCase() === \"ws:\") {\n                    protocol = \"http:\";\n                }\n                const options = { headers: this.privHeaders, perMessageDeflate: this.privEnableCompression, followRedirects: protocol.toLocaleLowerCase() === \"https:\" };\n                // The ocsp library will handle validation for us and fail the connection if needed.\n                this.privCertificateValidatedDeferral.resolve();\n                options.agent = this.getAgent();\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                options.agent.protocol = protocol;\n                this.privWebsocketClient = new ws_1.default(this.privUri, options);\n                this.privWebsocketClient.on(\"redirect\", (redirectUrl) => {\n                    const event = new Exports_js_1.ConnectionRedirectEvent(this.privConnectionId, redirectUrl, this.privUri, `Getting redirect URL from endpoint ${this.privUri} with redirect URL '${redirectUrl}'`);\n                    Exports_js_1.Events.instance.onEvent(event);\n                });\n            }\n            this.privWebsocketClient.binaryType = \"arraybuffer\";\n            this.privReceivingMessageQueue = new Exports_js_1.Queue();\n            this.privDisconnectDeferral = new Exports_js_1.Deferred();\n            this.privSendMessageQueue = new Exports_js_1.Queue();\n            this.processSendQueue().catch((reason) => {\n                Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n            });\n        }\n        catch (error) {\n            this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(500, error));\n            return this.privConnectionEstablishDeferral.promise;\n        }\n        this.onEvent(new Exports_js_1.ConnectionStartEvent(this.privConnectionId, this.privUri));\n        this.privWebsocketClient.onopen = () => {\n            this.privCertificateValidatedDeferral.promise.then(() => {\n                this.privConnectionState = Exports_js_1.ConnectionState.Connected;\n                this.onEvent(new Exports_js_1.ConnectionEstablishedEvent(this.privConnectionId));\n                this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(200, \"\"));\n            }, (error) => {\n                this.privConnectionEstablishDeferral.reject(error);\n            });\n        };\n        this.privWebsocketClient.onerror = (e) => {\n            this.onEvent(new Exports_js_1.ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\n            this.privLastErrorReceived = e.message;\n        };\n        this.privWebsocketClient.onclose = (e) => {\n            if (this.privConnectionState === Exports_js_1.ConnectionState.Connecting) {\n                this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n                // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\n                this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\n            }\n            else {\n                this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n                this.privWebsocketClient = null;\n                this.onEvent(new Exports_js_1.ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\n            }\n            this.onClose(e.code, e.reason).catch((reason) => {\n                Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n            });\n        };\n        this.privWebsocketClient.onmessage = (e) => {\n            const networkReceivedTime = new Date().toISOString();\n            if (this.privConnectionState === Exports_js_1.ConnectionState.Connected) {\n                const deferred = new Exports_js_1.Deferred();\n                // let id = ++this.idCounter;\n                this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\n                if (e.data instanceof ArrayBuffer) {\n                    const rawMessage = new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Binary, e.data);\n                    this.privMessageFormatter\n                        .toConnectionMessage(rawMessage)\n                        .then((connectionMessage) => {\n                        this.onEvent(new Exports_js_1.ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\n                        deferred.resolve(connectionMessage);\n                    }, (error) => {\n                        // TODO: Events for these ?\n                        deferred.reject(`Invalid binary message format. Error: ${error}`);\n                    });\n                }\n                else {\n                    const rawMessage = new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, e.data);\n                    this.privMessageFormatter\n                        .toConnectionMessage(rawMessage)\n                        .then((connectionMessage) => {\n                        this.onEvent(new Exports_js_1.ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\n                        deferred.resolve(connectionMessage);\n                    }, (error) => {\n                        // TODO: Events for these ?\n                        deferred.reject(`Invalid text message format. Error: ${error}`);\n                    });\n                }\n            }\n        };\n        return this.privConnectionEstablishDeferral.promise;\n    }\n    send(message) {\n        if (this.privConnectionState !== Exports_js_1.ConnectionState.Connected) {\n            return Promise.reject(`Cannot send on connection that is in ${Exports_js_1.ConnectionState[this.privConnectionState]} state`);\n        }\n        const messageSendStatusDeferral = new Exports_js_1.Deferred();\n        const messageSendDeferral = new Exports_js_1.Deferred();\n        this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\n        this.privMessageFormatter\n            .fromConnectionMessage(message)\n            .then((rawMessage) => {\n            messageSendDeferral.resolve({\n                Message: message,\n                RawWebsocketMessage: rawMessage,\n                sendStatusDeferral: messageSendStatusDeferral,\n            });\n        }, (error) => {\n            messageSendDeferral.reject(`Error formatting the message. ${error}`);\n        });\n        return messageSendStatusDeferral.promise;\n    }\n    read() {\n        if (this.privConnectionState !== Exports_js_1.ConnectionState.Connected) {\n            return Promise.reject(`Cannot read on connection that is in ${this.privConnectionState} state`);\n        }\n        return this.privReceivingMessageQueue.dequeue();\n    }\n    close(reason) {\n        if (this.privWebsocketClient) {\n            if (this.privConnectionState !== Exports_js_1.ConnectionState.Disconnected) {\n                this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\n            }\n        }\n        else {\n            return Promise.resolve();\n        }\n        return this.privDisconnectDeferral.promise;\n    }\n    get events() {\n        return this.privConnectionEvents;\n    }\n    sendRawMessage(sendItem) {\n        try {\n            // indicates we are draining the queue and it came with no message;\n            if (!sendItem) {\n                return Promise.resolve();\n            }\n            this.onEvent(new Exports_js_1.ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\n            // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\n            if (this.isWebsocketOpen) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\n            }\n            else {\n                return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\n            }\n            return Promise.resolve();\n        }\n        catch (e) {\n            return Promise.reject(`websocket send error: ${e}`);\n        }\n    }\n    async onClose(code, reason) {\n        const closeReason = `Connection closed. ${code}: ${reason}`;\n        this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n        this.privDisconnectDeferral.resolve();\n        await this.privReceivingMessageQueue.drainAndDispose(() => {\n            // TODO: Events for these ?\n            // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\n        }, closeReason);\n        await this.privSendMessageQueue.drainAndDispose((pendingSendItem) => {\n            pendingSendItem.sendStatusDeferral.reject(closeReason);\n        }, closeReason);\n    }\n    async processSendQueue() {\n        while (true) {\n            const itemToSend = this.privSendMessageQueue.dequeue();\n            const sendItem = await itemToSend;\n            // indicates we are draining the queue and it came with no message;\n            if (!sendItem) {\n                return;\n            }\n            try {\n                await this.sendRawMessage(sendItem);\n                sendItem.sendStatusDeferral.resolve();\n            }\n            catch (sendError) {\n                sendItem.sendStatusDeferral.reject(sendError);\n            }\n        }\n    }\n    onEvent(event) {\n        this.privConnectionEvents.onEvent(event);\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAgent() {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        const agent = new agent_base_1.default.Agent(this.createConnection);\n        if (this.proxyInfo !== undefined &&\n            this.proxyInfo.HostName !== undefined &&\n            this.proxyInfo.Port > 0) {\n            agent.proxyInfo = this.proxyInfo;\n        }\n        return agent;\n    }\n    static GetProxyAgent(proxyInfo) {\n        const httpProxyOptions = {\n            host: proxyInfo.HostName,\n            port: proxyInfo.Port,\n        };\n        if (!!proxyInfo.UserName) {\n            httpProxyOptions.headers = {\n                \"Proxy-Authentication\": \"Basic \" + Buffer.from(`${proxyInfo.UserName}:${(proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password}`).toString(\"base64\"),\n            };\n        }\n        else {\n            httpProxyOptions.headers = {};\n        }\n        httpProxyOptions.headers.requestOCSP = \"true\";\n        const httpProxyAgent = new https_proxy_agent_1.default(httpProxyOptions);\n        return httpProxyAgent;\n    }\n    createConnection(request, options) {\n        let socketPromise;\n        options = {\n            ...options,\n            ...{\n                requestOCSP: true,\n                servername: options.host\n            }\n        };\n        if (!!this.proxyInfo) {\n            const httpProxyAgent = WebsocketMessageAdapter.GetProxyAgent(this.proxyInfo);\n            const baseAgent = httpProxyAgent;\n            socketPromise = new Promise((resolve, reject) => {\n                baseAgent.callback(request, options, (error, socket) => {\n                    if (!!error) {\n                        reject(error);\n                    }\n                    else {\n                        resolve(socket);\n                    }\n                });\n            });\n        }\n        else {\n            if (!!options.secureEndpoint) {\n                socketPromise = Promise.resolve(tls.connect(options));\n            }\n            else {\n                socketPromise = Promise.resolve(net.connect(options));\n            }\n        }\n        return socketPromise;\n    }\n    get isWebsocketOpen() {\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\n    }\n}\nexports.WebsocketMessageAdapter = WebsocketMessageAdapter;\nWebsocketMessageAdapter.forceNpmWebSocket = false;\n\n//# sourceMappingURL=WebsocketMessageAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebsocketConnection = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst WebsocketMessageAdapter_js_1 = require(\"./WebsocketMessageAdapter.js\");\nclass WebsocketConnection {\n    constructor(uri, queryParameters, headers, messageFormatter, proxyInfo, enableCompression = false, connectionId) {\n        this.privIsDisposed = false;\n        if (!uri) {\n            throw new Exports_js_1.ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new Exports_js_1.ArgumentNullError(\"messageFormatter\");\n        }\n        this.privMessageFormatter = messageFormatter;\n        let queryParams = \"\";\n        let i = 0;\n        if (queryParameters) {\n            for (const paramName in queryParameters) {\n                if (paramName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    const key = encodeURIComponent(paramName);\n                    queryParams += key;\n                    let val = queryParameters[paramName];\n                    if (val) {\n                        val = encodeURIComponent(val);\n                        queryParams += `=${val}`;\n                    }\n                    i++;\n                }\n            }\n        }\n        if (headers) {\n            for (const headerName in headers) {\n                if (headerName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    const val = encodeURIComponent(headers[headerName]);\n                    queryParams += `${headerName}=${val}`;\n                    i++;\n                }\n            }\n        }\n        this.privUri = uri + queryParams;\n        this.privId = connectionId ? connectionId : (0, Exports_js_1.createNoDashGuid)();\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter_js_1.WebsocketMessageAdapter(this.privUri, this.id, this.privMessageFormatter, proxyInfo, headers, enableCompression);\n    }\n    async dispose() {\n        this.privIsDisposed = true;\n        if (this.privConnectionMessageAdapter) {\n            await this.privConnectionMessageAdapter.close();\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    get id() {\n        return this.privId;\n    }\n    get uri() {\n        return this.privUri;\n    }\n    state() {\n        return this.privConnectionMessageAdapter.state;\n    }\n    open() {\n        return this.privConnectionMessageAdapter.open();\n    }\n    send(message) {\n        return this.privConnectionMessageAdapter.send(message);\n    }\n    read() {\n        return this.privConnectionMessageAdapter.read();\n    }\n    get events() {\n        return this.privConnectionMessageAdapter.events;\n    }\n}\nexports.WebsocketConnection = WebsocketConnection;\n\n//# sourceMappingURL=WebsocketConnection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReplayableAudioNode = void 0;\nclass ReplayableAudioNode {\n    constructor(audioSource, bytesPerSecond) {\n        this.privBuffers = [];\n        this.privReplayOffset = 0;\n        this.privLastShrinkOffset = 0;\n        this.privBufferStartOffset = 0;\n        this.privBufferSerial = 0;\n        this.privBufferedBytes = 0;\n        this.privReplay = false;\n        this.privLastChunkAcquiredTime = 0;\n        this.privAudioNode = audioSource;\n        this.privBytesPerSecond = bytesPerSecond;\n    }\n    id() {\n        return this.privAudioNode.id();\n    }\n    // Reads and returns the next chunk of audio buffer.\n    // If replay of existing buffers are needed, read() will first seek and replay\n    // existing content, and upoin completion it will read new content from the underlying\n    // audio node, saving that content into the replayable buffers.\n    read() {\n        // if there is a replay request to honor.\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\n            // Find the start point in the buffers.\n            // Offsets are in 100ns increments.\n            // So how many bytes do we need to seek to get the right offset?\n            const offsetToSeek = this.privReplayOffset - this.privBufferStartOffset;\n            let bytesToSeek = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\n            if (0 !== (bytesToSeek % 2)) {\n                bytesToSeek++;\n            }\n            let i = 0;\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\n            }\n            if (i < this.privBuffers.length) {\n                const retVal = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\n                this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\n                // If we've reached the end of the buffers, stop replaying.\n                if (i === this.privBuffers.length - 1) {\n                    this.privReplay = false;\n                }\n                return Promise.resolve({\n                    buffer: retVal,\n                    isEnd: false,\n                    timeReceived: this.privBuffers[i].chunk.timeReceived,\n                });\n            }\n        }\n        return this.privAudioNode.read()\n            .then((result) => {\n            if (result && result.buffer && this.privBuffers) {\n                this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\n                this.privBufferedBytes += result.buffer.byteLength;\n            }\n            return result;\n        });\n    }\n    detach() {\n        this.privBuffers = undefined;\n        return this.privAudioNode.detach();\n    }\n    replay() {\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\n            this.privReplay = true;\n            this.privReplayOffset = this.privLastShrinkOffset;\n        }\n    }\n    // Shrinks the existing audio buffers to start at the new offset, or at the\n    // beginning of the buffer closest to the requested offset.\n    // A replay request will start from the last shrink point.\n    shrinkBuffers(offset) {\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\n            return;\n        }\n        this.privLastShrinkOffset = offset;\n        // Find the start point in the buffers.\n        // Offsets are in 100ns increments.\n        // So how many bytes do we need to seek to get the right offset?\n        const offsetToSeek = offset - this.privBufferStartOffset;\n        let bytesToSeek = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\n        let i = 0;\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\n        }\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\n        this.privBuffers = this.privBuffers.slice(i);\n    }\n    // Finds the time a buffer of audio was first seen by offset.\n    findTimeAtOffset(offset) {\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\n            return 0;\n        }\n        for (const value of this.privBuffers) {\n            const startOffset = (value.byteOffset / this.privBytesPerSecond) * 1e7;\n            const endOffset = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\n            if (offset >= startOffset && offset <= endOffset) {\n                return value.chunk.timeReceived;\n            }\n        }\n        return 0;\n    }\n}\nexports.ReplayableAudioNode = ReplayableAudioNode;\n// Primary use of this class is to help debugging problems with the replay\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\n// the ArrayBuffer directly.\nclass BufferEntry {\n    constructor(chunk, serial, byteOffset) {\n        this.chunk = chunk;\n        this.serial = serial;\n        this.byteOffset = byteOffset;\n    }\n}\n\n//# sourceMappingURL=ReplayableAudioNode.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioFileWriter = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst Contracts_js_1 = require(\"../Contracts.js\");\nclass AudioFileWriter {\n    constructor(filename) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\n        this.privFd = fs.openSync(filename, \"w\");\n    }\n    set format(format) {\n        Contracts_js_1.Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\n        this.privAudioFormat = format;\n        let headerOffset = 0;\n        if (this.privAudioFormat.hasHeader) {\n            headerOffset = this.privAudioFormat.header.byteLength;\n        }\n        if (this.privFd !== undefined) {\n            this.privWriteStream = fs.createWriteStream(\"\", { fd: this.privFd, start: headerOffset, autoClose: false });\n        }\n    }\n    write(buffer) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\n        if (this.privWriteStream !== undefined) {\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\n        }\n    }\n    close() {\n        if (this.privFd !== undefined) {\n            this.privWriteStream.on(\"finish\", () => {\n                if (this.privAudioFormat.hasHeader) {\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\n                    fs.writeSync(this.privFd, new Int8Array(this.privAudioFormat.header), 0, this.privAudioFormat.header.byteLength, 0);\n                }\n                fs.closeSync(this.privFd);\n                this.privFd = undefined;\n            });\n            this.privWriteStream.end();\n        }\n    }\n    id() {\n        return this.privId;\n    }\n}\nexports.AudioFileWriter = AudioFileWriter;\n\n//# sourceMappingURL=AudioFileWriter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PullAudioInputStreamImpl = exports.PullAudioInputStream = exports.PushAudioInputStreamImpl = exports.PushAudioInputStream = exports.AudioInputStream = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Guid_js_1 = require(\"../../common/Guid.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst AudioStreamFormat_js_1 = require(\"./AudioStreamFormat.js\");\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @class AudioInputStream\n */\nclass AudioInputStream {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member AudioInputStream.createPushStream\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The audio input stream being created.\n     */\n    static createPushStream(format) {\n        return PushAudioInputStream.create(format);\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\n     * and close() methods.\n     * @member AudioInputStream.createPullStream\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\n     * PullAudioInputStreamCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\n     * the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The audio input stream being created.\n     */\n    static createPullStream(callback, format) {\n        return PullAudioInputStream.create(callback, format);\n        // throw new Error(\"Oops\");\n    }\n}\nexports.AudioInputStream = AudioInputStream;\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @class PushAudioInputStream\n */\nclass PushAudioInputStream extends AudioInputStream {\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member PushAudioInputStream.create\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\n     * push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The push audio input stream being created.\n     */\n    static create(format) {\n        return new PushAudioInputStreamImpl(format);\n    }\n}\nexports.PushAudioInputStream = PushAudioInputStream;\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @private\n * @class PushAudioInputStreamImpl\n */\nclass PushAudioInputStreamImpl extends PushAudioInputStream {\n    /**\n     * Creates and initalizes an instance with the given values.\n     * @constructor\n     * @param {AudioStreamFormat} format - The audio stream format.\n     */\n    constructor(format) {\n        super();\n        if (format === undefined) {\n            this.privFormat = AudioStreamFormat_js_1.AudioStreamFormatImpl.getDefaultInputFormat();\n        }\n        else {\n            this.privFormat = format;\n        }\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privId = (0, Guid_js_1.createNoDashGuid)();\n        this.privStream = new Exports_js_2.ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return Promise.resolve(this.privFormat);\n    }\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PushAudioInputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    write(dataBuffer) {\n        this.privStream.writeStreamChunk({\n            buffer: dataBuffer,\n            isEnd: false,\n            timeReceived: Date.now()\n        });\n    }\n    /**\n     * Closes the stream.\n     * @member PushAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privStream.close();\n    }\n    id() {\n        return this.privId;\n    }\n    turnOn() {\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        await this.turnOn();\n        const stream = this.privStream;\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return {\n            detach: async () => {\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                return this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => stream.read(),\n        };\n    }\n    detach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    }\n    turnOff() {\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return Promise.resolve({\n            bitspersample: this.privFormat.bitsPerSample,\n            channelcount: this.privFormat.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"PushStream\",\n            samplerate: this.privFormat.samplesPerSec,\n            type: Exports_js_1.type.Stream,\n        });\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    toBuffer(arrayBuffer) {\n        const buf = Buffer.alloc(arrayBuffer.byteLength);\n        const view = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < buf.length; ++i) {\n            buf[i] = view[i];\n        }\n        return buf;\n    }\n}\nexports.PushAudioInputStreamImpl = PushAudioInputStreamImpl;\n/*\n * Represents audio input stream used for custom audio input configurations.\n * @class PullAudioInputStream\n */\nclass PullAudioInputStream extends AudioInputStream {\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @member PullAudioInputStream.create\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     * derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The push audio input stream being created.\n     */\n    static create(callback, format) {\n        return new PullAudioInputStreamImpl(callback, format);\n    }\n}\nexports.PullAudioInputStream = PullAudioInputStream;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class PullAudioInputStreamImpl\n */\nclass PullAudioInputStreamImpl extends PullAudioInputStream {\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @constructor\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     * derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     */\n    constructor(callback, format) {\n        super();\n        if (undefined === format) {\n            this.privFormat = Exports_js_3.AudioStreamFormat.getDefaultInputFormat();\n        }\n        else {\n            this.privFormat = format;\n        }\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privId = (0, Guid_js_1.createNoDashGuid)();\n        this.privCallback = callback;\n        this.privIsClosed = false;\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return Promise.resolve(this.privFormat);\n    }\n    /**\n     * Closes the stream.\n     * @member PullAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privIsClosed = true;\n        this.privCallback.close();\n    }\n    id() {\n        return this.privId;\n    }\n    turnOn() {\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        await this.turnOn();\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return {\n            detach: () => {\n                this.privCallback.close();\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                return this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => {\n                let totalBytes = 0;\n                let transmitBuff;\n                // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\n                while (totalBytes < this.privBufferSize) {\n                    // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\n                    // data back.\n                    const readBuff = new ArrayBuffer(this.privBufferSize - totalBytes);\n                    const pulledBytes = this.privCallback.read(readBuff);\n                    // If there is no return buffer yet defined, set the return buffer to the that was just populated.\n                    // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\n                    // preferred size allocated.\n                    if (undefined === transmitBuff) {\n                        transmitBuff = readBuff;\n                    }\n                    else {\n                        // Not the first bite at the apple, so fill the return buffer with the data we got back.\n                        const intView = new Int8Array(transmitBuff);\n                        intView.set(new Int8Array(readBuff), totalBytes);\n                    }\n                    // If there are no bytes to read, just break out and be done.\n                    if (0 === pulledBytes) {\n                        break;\n                    }\n                    totalBytes += pulledBytes;\n                }\n                return Promise.resolve({\n                    buffer: transmitBuff.slice(0, totalBytes),\n                    isEnd: this.privIsClosed || totalBytes === 0,\n                    timeReceived: Date.now(),\n                });\n            },\n        };\n    }\n    detach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    }\n    turnOff() {\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return Promise.resolve({\n            bitspersample: this.privFormat.bitsPerSample,\n            channelcount: this.privFormat.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"PullStream\",\n            samplerate: this.privFormat.samplesPerSec,\n            type: Exports_js_1.type.Stream,\n        });\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n}\nexports.PullAudioInputStreamImpl = PullAudioInputStreamImpl;\n\n//# sourceMappingURL=AudioInputStream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisOutputFormat = void 0;\n/**\n * Define speech synthesis audio output formats.\n * @enum SpeechSynthesisOutputFormat\n * Updated in version 1.17.0\n */\nvar SpeechSynthesisOutputFormat;\n(function (SpeechSynthesisOutputFormat) {\n    /**\n     * raw-8khz-8bit-mono-mulaw\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz8BitMonoMULaw\"] = 0] = \"Raw8Khz8BitMonoMULaw\";\n    /**\n     * riff-16khz-16kbps-mono-siren\n     * @note Unsupported by the service. Do not use this value.\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff16Khz16KbpsMonoSiren\"] = 1] = \"Riff16Khz16KbpsMonoSiren\";\n    /**\n     * audio-16khz-16kbps-mono-siren\n     * @note Unsupported by the service. Do not use this value.\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz16KbpsMonoSiren\"] = 2] = \"Audio16Khz16KbpsMonoSiren\";\n    /**\n     * audio-16khz-32kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz32KBitRateMonoMp3\"] = 3] = \"Audio16Khz32KBitRateMonoMp3\";\n    /**\n     * audio-16khz-128kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz128KBitRateMonoMp3\"] = 4] = \"Audio16Khz128KBitRateMonoMp3\";\n    /**\n     * audio-16khz-64kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz64KBitRateMonoMp3\"] = 5] = \"Audio16Khz64KBitRateMonoMp3\";\n    /**\n     * audio-24khz-48kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz48KBitRateMonoMp3\"] = 6] = \"Audio24Khz48KBitRateMonoMp3\";\n    /**\n     * audio-24khz-96kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz96KBitRateMonoMp3\"] = 7] = \"Audio24Khz96KBitRateMonoMp3\";\n    /**\n     * audio-24khz-160kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz160KBitRateMonoMp3\"] = 8] = \"Audio24Khz160KBitRateMonoMp3\";\n    /**\n     * raw-16khz-16bit-mono-truesilk\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw16Khz16BitMonoTrueSilk\"] = 9] = \"Raw16Khz16BitMonoTrueSilk\";\n    /**\n     * riff-16khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff16Khz16BitMonoPcm\"] = 10] = \"Riff16Khz16BitMonoPcm\";\n    /**\n     * riff-8khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz16BitMonoPcm\"] = 11] = \"Riff8Khz16BitMonoPcm\";\n    /**\n     * riff-24khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff24Khz16BitMonoPcm\"] = 12] = \"Riff24Khz16BitMonoPcm\";\n    /**\n     * riff-8khz-8bit-mono-mulaw\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz8BitMonoMULaw\"] = 13] = \"Riff8Khz8BitMonoMULaw\";\n    /**\n     * raw-16khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw16Khz16BitMonoPcm\"] = 14] = \"Raw16Khz16BitMonoPcm\";\n    /**\n     * raw-24khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw24Khz16BitMonoPcm\"] = 15] = \"Raw24Khz16BitMonoPcm\";\n    /**\n     * raw-8khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz16BitMonoPcm\"] = 16] = \"Raw8Khz16BitMonoPcm\";\n    /**\n     * ogg-16khz-16bit-mono-opus\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg16Khz16BitMonoOpus\"] = 17] = \"Ogg16Khz16BitMonoOpus\";\n    /**\n     * ogg-24khz-16bit-mono-opus\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg24Khz16BitMonoOpus\"] = 18] = \"Ogg24Khz16BitMonoOpus\";\n    /**\n     * raw-48khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw48Khz16BitMonoPcm\"] = 19] = \"Raw48Khz16BitMonoPcm\";\n    /**\n     * riff-48khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff48Khz16BitMonoPcm\"] = 20] = \"Riff48Khz16BitMonoPcm\";\n    /**\n     * audio-48khz-96kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio48Khz96KBitRateMonoMp3\"] = 21] = \"Audio48Khz96KBitRateMonoMp3\";\n    /**\n     * audio-48khz-192kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio48Khz192KBitRateMonoMp3\"] = 22] = \"Audio48Khz192KBitRateMonoMp3\";\n    /**\n     * ogg-48khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg48Khz16BitMonoOpus\"] = 23] = \"Ogg48Khz16BitMonoOpus\";\n    /**\n     * webm-16khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm16Khz16BitMonoOpus\"] = 24] = \"Webm16Khz16BitMonoOpus\";\n    /**\n     * webm-24khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm24Khz16BitMonoOpus\"] = 25] = \"Webm24Khz16BitMonoOpus\";\n    /**\n     * raw-24khz-16bit-mono-truesilk\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw24Khz16BitMonoTrueSilk\"] = 26] = \"Raw24Khz16BitMonoTrueSilk\";\n    /**\n     * raw-8khz-8bit-mono-alaw\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz8BitMonoALaw\"] = 27] = \"Raw8Khz8BitMonoALaw\";\n    /**\n     * riff-8khz-8bit-mono-alaw\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz8BitMonoALaw\"] = 28] = \"Riff8Khz8BitMonoALaw\";\n    /**\n     * webm-24khz-16bit-24kbps-mono-opus\n     * Audio compressed by OPUS codec in a webm container, with bitrate of 24kbps, optimized for IoT scenario.\n     * Added in version 1.19.0\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm24Khz16Bit24KbpsMonoOpus\"] = 29] = \"Webm24Khz16Bit24KbpsMonoOpus\";\n    /**\n     * audio-16khz-16bit-32kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 32kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz16Bit32KbpsMonoOpus\"] = 30] = \"Audio16Khz16Bit32KbpsMonoOpus\";\n    /**\n     * audio-24khz-16bit-48kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 48kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz16Bit48KbpsMonoOpus\"] = 31] = \"Audio24Khz16Bit48KbpsMonoOpus\";\n    /**\n     * audio-24khz-16bit-24kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 24kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz16Bit24KbpsMonoOpus\"] = 32] = \"Audio24Khz16Bit24KbpsMonoOpus\";\n    /**\n     * raw-22050hz-16bit-mono-pcm\n     * Raw PCM audio at 22050Hz sampling rate and 16-bit depth.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw22050Hz16BitMonoPcm\"] = 33] = \"Raw22050Hz16BitMonoPcm\";\n    /**\n     * riff-22050hz-16bit-mono-pcm\n     * PCM audio at 22050Hz sampling rate and 16-bit depth, with RIFF header.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff22050Hz16BitMonoPcm\"] = 34] = \"Riff22050Hz16BitMonoPcm\";\n    /**\n     * raw-44100hz-16bit-mono-pcm\n     * Raw PCM audio at 44100Hz sampling rate and 16-bit depth.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw44100Hz16BitMonoPcm\"] = 35] = \"Raw44100Hz16BitMonoPcm\";\n    /**\n     * riff-44100hz-16bit-mono-pcm\n     * PCM audio at 44100Hz sampling rate and 16-bit depth, with RIFF header.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff44100Hz16BitMonoPcm\"] = 36] = \"Riff44100Hz16BitMonoPcm\";\n    /**\n     * amr-wb-16000hz\n     * AMR-WB audio at 16kHz sampling rate.\n     * Added in version 1.38.0\n     * @member SpeechSynthesisOutputFormat.AmrWb16000Hz\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"AmrWb16000Hz\"] = 37] = \"AmrWb16000Hz\";\n    /**\n     * g722-16khz-64kbps\n     * G.722 audio at 16kHz sampling rate and 64kbps bitrate.\n     * Added in version 1.38.0\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"G72216Khz64Kbps\"] = 38] = \"G72216Khz64Kbps\";\n})(SpeechSynthesisOutputFormat = exports.SpeechSynthesisOutputFormat || (exports.SpeechSynthesisOutputFormat = {}));\n\n//# sourceMappingURL=SpeechSynthesisOutputFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioOutputFormatImpl = void 0;\nconst SpeechSynthesisOutputFormat_js_1 = require(\"../SpeechSynthesisOutputFormat.js\");\nconst AudioStreamFormat_js_1 = require(\"./AudioStreamFormat.js\");\n/**\n * @private\n * @class AudioOutputFormatImpl\n * Updated in version 1.17.0\n */\n// eslint-disable-next-line max-classes-per-file\nclass AudioOutputFormatImpl extends AudioStreamFormat_js_1.AudioStreamFormatImpl {\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param formatTag\n     * @param {number} channels - Number of channels.\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} avgBytesPerSec - Average bytes per second.\n     * @param {number} blockAlign - Block alignment.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {string} audioFormatString - Audio format string\n     * @param {string} requestAudioFormatString - Audio format string sent to service.\n     * @param {boolean} hasHeader - If the format has header or not.\n     */\n    constructor(formatTag, channels, samplesPerSec, avgBytesPerSec, blockAlign, bitsPerSample, audioFormatString, requestAudioFormatString, hasHeader) {\n        super(samplesPerSec, bitsPerSample, channels, formatTag);\n        this.formatTag = formatTag;\n        this.avgBytesPerSec = avgBytesPerSec;\n        this.blockAlign = blockAlign;\n        this.priAudioFormatString = audioFormatString;\n        this.priRequestAudioFormatString = requestAudioFormatString;\n        this.priHasHeader = hasHeader;\n    }\n    static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat) {\n        if (speechSynthesisOutputFormat === undefined) {\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\n    }\n    static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString) {\n        switch (speechSynthesisOutputFormatString) {\n            case \"raw-8khz-8bit-mono-mulaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MuLaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-16khz-16kbps-mono-siren\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.Siren, 1, 16000, 2000, 40, 0, speechSynthesisOutputFormatString, \"audio-16khz-16kbps-mono-siren\", true);\n            case \"audio-16khz-16kbps-mono-siren\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.Siren, 1, 16000, 2000, 40, 0, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-32kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 32 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-128kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 128 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-64kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 64 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-48kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 48 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-96kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 96 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-160kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 160 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-16khz-16bit-mono-truesilk\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.SILKSkype, 1, 16000, 32000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-8khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 8000, 16000, 2, 16, speechSynthesisOutputFormatString, \"raw-8khz-16bit-mono-pcm\", true);\n            case \"riff-24khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, \"raw-24khz-16bit-mono-pcm\", true);\n            case \"riff-8khz-8bit-mono-mulaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MuLaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, \"raw-8khz-8bit-mono-mulaw\", true);\n            case \"raw-16khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 16000, 32000, 2, 16, speechSynthesisOutputFormatString, \"raw-16khz-16bit-mono-pcm\", false);\n            case \"raw-24khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, \"raw-24khz-16bit-mono-pcm\", false);\n            case \"raw-8khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 8000, 16000, 2, 16, speechSynthesisOutputFormatString, \"raw-8khz-16bit-mono-pcm\", false);\n            case \"ogg-16khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 16000, 8192, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"ogg-24khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 24000, 8192, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-48khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 48000, 96000, 2, 16, speechSynthesisOutputFormatString, \"raw-48khz-16bit-mono-pcm\", false);\n            case \"riff-48khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 48000, 96000, 2, 16, speechSynthesisOutputFormatString, \"raw-48khz-16bit-mono-pcm\", true);\n            case \"audio-48khz-96kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 48000, 96 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-48khz-192kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 48000, 192 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"ogg-48khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 48000, 12000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-16khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 16000, 4000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-24khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 24000, 6000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-24khz-16bit-24kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 24000, 3000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-16bit-32kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 16000, 4000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-48kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 24000, 6000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-24kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 24000, 3000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-mono-flac\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.FLAC, 1, 24000, 24000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-48khz-16bit-mono-flac\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.FLAC, 1, 48000, 30000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-24khz-16bit-mono-truesilk\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.SILKSkype, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-8khz-8bit-mono-alaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.ALaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-8khz-8bit-mono-alaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.ALaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, \"raw-8khz-8bit-mono-alaw\", true);\n            case \"raw-22050hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 22050, 44100, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-22050hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 22050, 44100, 2, 16, speechSynthesisOutputFormatString, \"raw-22050hz-16bit-mono-pcm\", true);\n            case \"raw-44100hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 44100, 88200, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-44100hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 44100, 88200, 2, 16, speechSynthesisOutputFormatString, \"raw-44100hz-16bit-mono-pcm\", true);\n            case \"amr-wb-16000h\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.AMR_WB, 1, 16000, 3052, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"g722-16khz-64kbps\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.G722, 1, 16000, 8000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-16khz-16bit-mono-pcm\":\n            default:\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 16000, 32000, 2, 16, \"riff-16khz-16bit-mono-pcm\", \"raw-16khz-16bit-mono-pcm\", true);\n        }\n    }\n    static getDefaultOutputFormat() {\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString((typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\n    }\n    /**\n     * Specifies if this audio output format has a header\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\n     * @function\n     * @public\n     */\n    get hasHeader() {\n        return this.priHasHeader;\n    }\n    /**\n     * Specifies the header of this format\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\n     * @function\n     * @public\n     */\n    get header() {\n        if (this.hasHeader) {\n            return this.privHeader;\n        }\n        return undefined;\n    }\n    /**\n     * Updates the header based on the audio length\n     * @member AudioOutputFormatImpl.updateHeader\n     * @function\n     * @public\n     * @param {number} audioLength - the audio length\n     */\n    updateHeader(audioLength) {\n        if (this.priHasHeader) {\n            const view = new DataView(this.privHeader);\n            view.setUint32(4, audioLength + this.privHeader.byteLength - 8, true);\n            view.setUint32(40, audioLength, true);\n        }\n    }\n    /**\n     * Specifies the audio format string to be sent to the service\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\n     * @function\n     * @public\n     */\n    get requestAudioFormatString() {\n        return this.priRequestAudioFormatString;\n    }\n    /**\n     * Adds audio header\n     * @param audio the raw audio without header\n     * @returns the audio with header if applicable\n     */\n    addHeader(audio) {\n        if (!this.hasHeader) {\n            return audio;\n        }\n        this.updateHeader(audio.byteLength);\n        const tmp = new Uint8Array(audio.byteLength + this.header.byteLength);\n        tmp.set(new Uint8Array(this.header), 0);\n        tmp.set(new Uint8Array(audio), this.header.byteLength);\n        return tmp.buffer;\n    }\n}\nexports.AudioOutputFormatImpl = AudioOutputFormatImpl;\nAudioOutputFormatImpl.SpeechSynthesisOutputFormatToString = {\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm]: \"raw-48khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm]: \"riff-48khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3]: \"audio-48khz-96kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3]: \"audio-48khz-192kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus]: \"ogg-48khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus]: \"webm-16khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus]: \"webm-24khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus]: \"webm-24khz-16bit-24kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk]: \"raw-24khz-16bit-mono-truesilk\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw]: \"raw-8khz-8bit-mono-alaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw]: \"riff-8khz-8bit-mono-alaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus]: \"audio-16khz-16bit-32kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus]: \"audio-24khz-16bit-48kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus]: \"audio-24khz-16bit-24kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm]: \"raw-22050hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm]: \"riff-22050hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm]: \"raw-44100hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm]: \"riff-44100hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.AmrWb16000Hz]: \"amr-wb-16000hz\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.G72216Khz64Kbps]: \"g722-16khz-64kbps\",\n};\n\n//# sourceMappingURL=AudioOutputFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushAudioOutputStreamImpl = exports.PushAudioOutputStream = exports.PullAudioOutputStreamImpl = exports.PullAudioOutputStream = exports.AudioOutputStream = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst AudioOutputFormat_js_1 = require(\"./AudioOutputFormat.js\");\n/**\n * Represents audio output stream used for custom audio output configurations.\n * @class AudioOutputStream\n */\nclass AudioOutputStream {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\n     * @member AudioOutputStream.createPullStream\n     * @function\n     * @public\n     * @returns {PullAudioOutputStream} The audio output stream being created.\n     */\n    static createPullStream() {\n        return PullAudioOutputStream.create();\n    }\n}\nexports.AudioOutputStream = AudioOutputStream;\n/**\n * Represents memory backed push audio output stream used for custom audio output configurations.\n * @class PullAudioOutputStream\n */\nclass PullAudioOutputStream extends AudioOutputStream {\n    /**\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\n     * @member PullAudioOutputStream.create\n     * @function\n     * @public\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\n     */\n    static create() {\n        return new PullAudioOutputStreamImpl();\n    }\n}\nexports.PullAudioOutputStream = PullAudioOutputStream;\n/**\n * Represents memory backed push audio output stream used for custom audio output configurations.\n * @private\n * @class PullAudioOutputStreamImpl\n */\nclass PullAudioOutputStreamImpl extends PullAudioOutputStream {\n    /**\n     * Creates and initializes an instance with the given values.\n     * @constructor\n     */\n    constructor() {\n        super();\n        this.privId = (0, Exports_js_1.createNoDashGuid)();\n        this.privStream = new Exports_js_1.Stream();\n    }\n    /**\n     * Sets the format information to the stream. For internal use only.\n     * @param {AudioStreamFormat} format - the format to be set.\n     */\n    set format(format) {\n        if (format === undefined || format === null) {\n            this.privFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        this.privFormat = format;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return this.privFormat;\n    }\n    /**\n     * Checks if the stream is closed\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\n     * @property\n     * @public\n     */\n    get isClosed() {\n        return this.privStream.isClosed;\n    }\n    /**\n     * Gets the id of the stream\n     * @member PullAudioOutputStreamImpl.prototype.id\n     * @property\n     * @public\n     */\n    id() {\n        return this.privId;\n    }\n    /**\n     * Reads audio data from the internal buffer.\n     * @member PullAudioOutputStreamImpl.prototype.read\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\n     * @returns {Promise<number>} - Audio buffer length has been read.\n     */\n    async read(dataBuffer) {\n        const intView = new Int8Array(dataBuffer);\n        let totalBytes = 0;\n        if (this.privLastChunkView !== undefined) {\n            if (this.privLastChunkView.length > dataBuffer.byteLength) {\n                intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\n                this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\n                return Promise.resolve(dataBuffer.byteLength);\n            }\n            intView.set(this.privLastChunkView);\n            totalBytes = this.privLastChunkView.length;\n            this.privLastChunkView = undefined;\n        }\n        // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\n        while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\n            const chunk = await this.privStream.read();\n            if (chunk !== undefined && !chunk.isEnd) {\n                let tmpBuffer;\n                if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\n                    tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\n                    this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\n                }\n                else {\n                    tmpBuffer = chunk.buffer;\n                }\n                intView.set(new Int8Array(tmpBuffer), totalBytes);\n                totalBytes += tmpBuffer.byteLength;\n            }\n            else {\n                this.privStream.readEnded();\n            }\n        }\n        return totalBytes;\n    }\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PullAudioOutputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    write(dataBuffer) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\n        this.privStream.writeStreamChunk({\n            buffer: dataBuffer,\n            isEnd: false,\n            timeReceived: Date.now()\n        });\n    }\n    /**\n     * Closes the stream.\n     * @member PullAudioOutputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privStream.close();\n    }\n}\nexports.PullAudioOutputStreamImpl = PullAudioOutputStreamImpl;\n/*\n * Represents audio output stream used for custom audio output configurations.\n * @class PushAudioOutputStream\n */\nclass PushAudioOutputStream extends AudioOutputStream {\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\n     * write() and close() methods.\n     * @member PushAudioOutputStream.create\n     * @function\n     * @public\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\n     * derived from PushAudioOutputStreamCallback\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\n     */\n    static create(callback) {\n        return new PushAudioOutputStreamImpl(callback);\n    }\n}\nexports.PushAudioOutputStream = PushAudioOutputStream;\n/**\n * Represents audio output stream used for custom audio output configurations.\n * @private\n * @class PushAudioOutputStreamImpl\n */\nclass PushAudioOutputStreamImpl extends PushAudioOutputStream {\n    /**\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\n     * read() and close() methods.\n     * @constructor\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\n     * derived from PushAudioOutputStreamCallback\n     */\n    constructor(callback) {\n        super();\n        this.privId = (0, Exports_js_1.createNoDashGuid)();\n        this.privCallback = callback;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    set format(format) { }\n    write(buffer) {\n        if (!!this.privCallback.write) {\n            this.privCallback.write(buffer);\n        }\n    }\n    close() {\n        if (!!this.privCallback.close) {\n            this.privCallback.close();\n        }\n    }\n    id() {\n        return this.privId;\n    }\n}\nexports.PushAudioOutputStreamImpl = PushAudioOutputStreamImpl;\n\n//# sourceMappingURL=AudioOutputStream.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioOutputConfigImpl = exports.AudioConfigImpl = exports.AudioConfig = void 0;\nconst Exports_js_1 = require(\"../../common.browser/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_2 = require(\"../Exports.js\");\nconst AudioFileWriter_js_1 = require(\"./AudioFileWriter.js\");\nconst AudioInputStream_js_1 = require(\"./AudioInputStream.js\");\nconst AudioOutputStream_js_1 = require(\"./AudioOutputStream.js\");\n/**\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\n * @class AudioConfig\n * Updated in version 1.11.0\n */\nclass AudioConfig {\n    /**\n     * Creates an AudioConfig object representing the default microphone on the system.\n     * @member AudioConfig.fromDefaultMicrophoneInput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromDefaultMicrophoneInput() {\n        const pcmRecorder = new Exports_js_1.PcmRecorder(true);\n        return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder));\n    }\n    /**\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\n     * @member AudioConfig.fromMicrophoneInput\n     * @function\n     * @public\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\n     * Default microphone is used the value is omitted.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromMicrophoneInput(deviceId) {\n        const pcmRecorder = new Exports_js_1.PcmRecorder(true);\n        return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder, deviceId));\n    }\n    /**\n     * Creates an AudioConfig object representing the specified file.\n     * @member AudioConfig.fromWavFileInput\n     * @function\n     * @public\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromWavFileInput(file, name = \"unnamedBuffer.wav\") {\n        return new AudioConfigImpl(new Exports_js_1.FileAudioSource(file, name));\n    }\n    /**\n     * Creates an AudioConfig object representing the specified stream.\n     * @member AudioConfig.fromStreamInput\n     * @function\n     * @public\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\n     * stream. Currently, only WAV / PCM is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromStreamInput(audioStream) {\n        if (audioStream instanceof Exports_js_2.PullAudioInputStreamCallback) {\n            return new AudioConfigImpl(new AudioInputStream_js_1.PullAudioInputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof Exports_js_2.AudioInputStream) {\n            return new AudioConfigImpl(audioStream);\n        }\n        if (typeof MediaStream !== \"undefined\" && audioStream instanceof MediaStream) {\n            const pcmRecorder = new Exports_js_1.PcmRecorder(false);\n            return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder, null, null, audioStream));\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n    /**\n     * Creates an AudioConfig object representing the default speaker.\n     * @member AudioConfig.fromDefaultSpeakerOutput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromDefaultSpeakerOutput() {\n        return new AudioOutputConfigImpl(new Exports_js_2.SpeakerAudioDestination());\n    }\n    /**\n     * Creates an AudioConfig object representing the custom IPlayer object.\n     * You can use the IPlayer object to control pause, resume, etc.\n     * @member AudioConfig.fromSpeakerOutput\n     * @function\n     * @public\n     * @param {IPlayer} player - the IPlayer object for playback.\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.12.0\n     */\n    static fromSpeakerOutput(player) {\n        if (player === undefined) {\n            return AudioConfig.fromDefaultSpeakerOutput();\n        }\n        if (player instanceof Exports_js_2.SpeakerAudioDestination) {\n            return new AudioOutputConfigImpl(player);\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n    /**\n     * Creates an AudioConfig object representing a specified output audio file\n     * @member AudioConfig.fromAudioFileOutput\n     * @function\n     * @public\n     * @param {PathLike} filename - the filename of the output audio file\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromAudioFileOutput(filename) {\n        return new AudioOutputConfigImpl(new AudioFileWriter_js_1.AudioFileWriter(filename));\n    }\n    /**\n     * Creates an AudioConfig object representing a specified audio output stream\n     * @member AudioConfig.fromStreamOutput\n     * @function\n     * @public\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\n     * stream.\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromStreamOutput(audioStream) {\n        if (audioStream instanceof Exports_js_2.PushAudioOutputStreamCallback) {\n            return new AudioOutputConfigImpl(new AudioOutputStream_js_1.PushAudioOutputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof Exports_js_2.PushAudioOutputStream) {\n            return new AudioOutputConfigImpl(audioStream);\n        }\n        if (audioStream instanceof Exports_js_2.PullAudioOutputStream) {\n            return new AudioOutputConfigImpl(audioStream);\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n}\nexports.AudioConfig = AudioConfig;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class AudioConfigImpl\n */\nclass AudioConfigImpl extends AudioConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioSource} source - An audio source.\n     */\n    constructor(source) {\n        super();\n        this.privSource = source;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return this.privSource.format;\n    }\n    /**\n     * @member AudioConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        this.privSource.turnOff().then(() => {\n            if (!!cb) {\n                cb();\n            }\n        }, (error) => {\n            if (!!err) {\n                err(error);\n            }\n        });\n    }\n    /**\n     * @member AudioConfigImpl.prototype.id\n     * @function\n     * @public\n     */\n    id() {\n        return this.privSource.id();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.turnOn\n     * @function\n     * @public\n     * @returns {Promise<void>} A promise.\n     */\n    turnOn() {\n        return this.privSource.turnOn();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.attach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     * @returns {Promise<IAudioStreamNode>} A promise.\n     */\n    attach(audioNodeId) {\n        return this.privSource.attach(audioNodeId);\n    }\n    /**\n     * @member AudioConfigImpl.prototype.detach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     */\n    detach(audioNodeId) {\n        return this.privSource.detach(audioNodeId);\n    }\n    /**\n     * @member AudioConfigImpl.prototype.turnOff\n     * @function\n     * @public\n     * @returns {Promise<void>} A promise.\n     */\n    turnOff() {\n        return this.privSource.turnOff();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.events\n     * @function\n     * @public\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\n     */\n    get events() {\n        return this.privSource.events;\n    }\n    setProperty(name, value) {\n        Contracts_js_1.Contracts.throwIfNull(value, \"value\");\n        if (undefined !== this.privSource.setProperty) {\n            this.privSource.setProperty(name, value);\n        }\n        else {\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\n        }\n    }\n    getProperty(name, def) {\n        if (undefined !== this.privSource.getProperty) {\n            return this.privSource.getProperty(name, def);\n        }\n        else {\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\n        }\n        return def;\n    }\n    get deviceInfo() {\n        return this.privSource.deviceInfo;\n    }\n}\nexports.AudioConfigImpl = AudioConfigImpl;\nclass AudioOutputConfigImpl extends AudioConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioDestination} destination - An audio destination.\n     */\n    constructor(destination) {\n        super();\n        this.privDestination = destination;\n    }\n    set format(format) {\n        this.privDestination.format = format;\n    }\n    write(buffer) {\n        this.privDestination.write(buffer);\n    }\n    close() {\n        this.privDestination.close();\n    }\n    id() {\n        return this.privDestination.id();\n    }\n    setProperty() {\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\n    }\n    getProperty() {\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\n    }\n}\nexports.AudioOutputConfigImpl = AudioOutputConfigImpl;\n\n//# sourceMappingURL=AudioConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationReason = void 0;\n/**\n * Defines the possible reasons a recognition result might be canceled.\n * @class CancellationReason\n */\nvar CancellationReason;\n(function (CancellationReason) {\n    /**\n     * Indicates that an error occurred during speech recognition.\n     * @member CancellationReason.Error\n     */\n    CancellationReason[CancellationReason[\"Error\"] = 0] = \"Error\";\n    /**\n     * Indicates that the end of the audio stream was reached.\n     * @member CancellationReason.EndOfStream\n     */\n    CancellationReason[CancellationReason[\"EndOfStream\"] = 1] = \"EndOfStream\";\n})(CancellationReason = exports.CancellationReason || (exports.CancellationReason = {}));\n\n//# sourceMappingURL=CancellationReason.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PullAudioInputStreamCallback = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (read() and close()) for\n * custom audio input streams).\n * @class PullAudioInputStreamCallback\n */\nclass PullAudioInputStreamCallback {\n}\nexports.PullAudioInputStreamCallback = PullAudioInputStreamCallback;\n\n//# sourceMappingURL=PullAudioInputStreamCallback.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushAudioOutputStreamCallback = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (write() and close()) for\n * custom audio output streams).\n * @class PushAudioOutputStreamCallback\n */\nclass PushAudioOutputStreamCallback {\n}\nexports.PushAudioOutputStreamCallback = PushAudioOutputStreamCallback;\n\n//# sourceMappingURL=PushAudioOutputStreamCallback.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeywordRecognitionModel = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\nclass KeywordRecognitionModel {\n    /**\n     * Create and initializes a new instance.\n     * @constructor\n     */\n    constructor() {\n        this.privDisposed = false;\n        return;\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromFile\n     * @function\n     * @public\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\n     * Note, the file can point to a zip file in which case the model\n     * will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    static fromFile(fileName) {\n        Contracts_js_1.Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n        throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromStream\n     * @function\n     * @public\n     * @param {string} file - A File that represents file for the keyword recognition model.\n     * Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    static fromStream(file) {\n        Contracts_js_1.Contracts.throwIfNull(file, \"file\");\n        throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Dispose of associated resources.\n     * @member KeywordRecognitionModel.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        if (this.privDisposed) {\n            return;\n        }\n        this.privDisposed = true;\n    }\n}\nexports.KeywordRecognitionModel = KeywordRecognitionModel;\n\n//# sourceMappingURL=KeywordRecognitionModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionEventArgs = void 0;\n/**\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\n * @class SessionEventArgs\n */\nclass SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionId - The session id.\n     */\n    constructor(sessionId) {\n        this.privSessionId = sessionId;\n    }\n    /**\n     * Represents the session identifier.\n     * @member SessionEventArgs.prototype.sessionId\n     * @function\n     * @public\n     * @returns {string} Represents the session identifier.\n     */\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.SessionEventArgs = SessionEventArgs;\n\n//# sourceMappingURL=SessionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines payload for session events like Speech Start/End Detected\n * @class\n */\nclass RecognitionEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(offset, sessionId) {\n        super(sessionId);\n        this.privOffset = offset;\n    }\n    /**\n     * Represents the message offset\n     * @member RecognitionEventArgs.prototype.offset\n     * @function\n     * @public\n     */\n    get offset() {\n        return this.privOffset;\n    }\n}\nexports.RecognitionEventArgs = RecognitionEventArgs;\n\n//# sourceMappingURL=RecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutputFormat = void 0;\n/**\n * Define Speech Recognizer output formats.\n * @class OutputFormat\n */\nvar OutputFormat;\n(function (OutputFormat) {\n    /**\n     * @member OutputFormat.Simple\n     */\n    OutputFormat[OutputFormat[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * @member OutputFormat.Detailed\n     */\n    OutputFormat[OutputFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(OutputFormat = exports.OutputFormat || (exports.OutputFormat = {}));\n\n//# sourceMappingURL=OutputFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentRecognitionEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Intent recognition result event arguments.\n * @class\n */\nclass IntentRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param result - The result of the intent recognition.\n     * @param offset - The offset.\n     * @param sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Represents the intent recognition result.\n     * @member IntentRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.IntentRecognitionEventArgs = IntentRecognitionEventArgs;\n\n//# sourceMappingURL=IntentRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionResult = void 0;\n/**\n * Defines result of speech recognition.\n * @class RecognitionResult\n */\nclass RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privText = text;\n        this.privDuration = duration;\n        this.privOffset = offset;\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n        this.privErrorDetails = errorDetails;\n        this.privJson = json;\n        this.privProperties = properties;\n    }\n    /**\n     * Specifies the result identifier.\n     * @member RecognitionResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get resultId() {\n        return this.privResultId;\n    }\n    /**\n     * Specifies status of the result.\n     * @member RecognitionResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * Presents the recognized text in the result.\n     * @member RecognitionResult.prototype.text\n     * @function\n     * @public\n     * @returns {string} Presents the recognized text in the result.\n     */\n    get text() {\n        return this.privText;\n    }\n    /**\n     * Duration of recognized speech in 100 nano second increments.\n     * @member RecognitionResult.prototype.duration\n     * @function\n     * @public\n     * @returns {number} Duration of recognized speech in 100 nano second increments.\n     */\n    get duration() {\n        return this.privDuration;\n    }\n    /**\n     * Offset of recognized speech in 100 nano second increments.\n     * @member RecognitionResult.prototype.offset\n     * @function\n     * @public\n     * @returns {number} Offset of recognized speech in 100 nano second increments.\n     */\n    get offset() {\n        return this.privOffset;\n    }\n    /**\n     * Primary Language detected.\n     * @member RecognitionResult.prototype.language\n     * @function\n     * @public\n     * @returns {string} language detected.\n     */\n    get language() {\n        return this.privLanguage;\n    }\n    /**\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\n     * @member RecognitionResult.prototype.languageDetectionConfidence\n     * @function\n     * @public\n     * @returns {string} detection confidence strength.\n     */\n    get languageDetectionConfidence() {\n        return this.privLanguageDetectionConfidence;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member RecognitionResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * A string containing Json serialized recognition result as it was received from the service.\n     * @member RecognitionResult.prototype.json\n     * @function\n     * @private\n     * @returns {string} Json serialized representation of the result.\n     */\n    get json() {\n        return this.privJson;\n    }\n    /**\n     * The set of properties exposed in the result.\n     * @member RecognitionResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\nexports.RecognitionResult = RecognitionResult;\n\n//# sourceMappingURL=RecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechRecognitionResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines result of speech recognition.\n * @class SpeechRecognitionResult\n */\nclass SpeechRecognitionResult extends Exports_js_1.RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, speakerId, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n    /**\n     * speaker id from conversation transcription/id scenarios\n     * @member SpeechRecognitionResult.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    get speakerId() {\n        return this.privSpeakerId;\n    }\n}\nexports.SpeechRecognitionResult = SpeechRecognitionResult;\n\n//# sourceMappingURL=SpeechRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentRecognitionResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Intent recognition result.\n * @class\n */\nclass IntentRecognitionResult extends Exports_js_1.SpeechRecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param intentId - The intent id.\n     * @param resultId - The result id.\n     * @param reason - The reason.\n     * @param text - The recognized text.\n     * @param duration - The duration.\n     * @param offset - The offset into the stream.\n     * @param language - Primary Language detected, if provided.\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param errorDetails - Error details, if provided.\n     * @param json - Additional Json, if provided.\n     * @param properties - Additional properties, if provided.\n     */\n    constructor(intentId, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\n        this.privIntentId = intentId;\n    }\n    /**\n     * A String that represents the intent identifier being recognized.\n     * @member IntentRecognitionResult.prototype.intentId\n     * @function\n     * @public\n     * @returns {string} A String that represents the intent identifier being recognized.\n     */\n    get intentId() {\n        return this.privIntentId;\n    }\n}\nexports.IntentRecognitionResult = IntentRecognitionResult;\n\n//# sourceMappingURL=IntentRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LanguageUnderstandingModelImpl = exports.LanguageUnderstandingModel = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Language understanding model\n * @class LanguageUnderstandingModel\n */\nclass LanguageUnderstandingModel {\n    /**\n     * Creates and initializes a new instance\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates an language understanding model using the specified endpoint.\n     * @member LanguageUnderstandingModel.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromEndpoint(uri) {\n        Contracts_js_1.Contracts.throwIfNull(uri, \"uri\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        // Need to extract the app ID from the URL.\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\n        // Start tearing the string apart.\n        // region can be extracted from the host name.\n        const firstDot = uri.host.indexOf(\".\");\n        if (-1 === firstDot) {\n            throw new Error(\"Could not determine region from endpoint\");\n        }\n        langModelImp.region = uri.host.substr(0, firstDot);\n        // Now the app ID.\n        const lastSegment = uri.pathname.lastIndexOf(\"/\") + 1;\n        if (-1 === lastSegment) {\n            throw new Error(\"Could not determine appId from endpoint\");\n        }\n        langModelImp.appId = uri.pathname.substr(lastSegment);\n        // And finally the key.\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\n        if (undefined === langModelImp.subscriptionKey) {\n            throw new Error(\"Could not determine subscription key from endpoint\");\n        }\n        return langModelImp;\n    }\n    /**\n     * Creates an language understanding model using the application id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromAppId\n     * @function\n     * @public\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromAppId(appId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        return langModelImp;\n    }\n    /**\n     * Creates a language understanding model using hostname, subscription key and application\n     * id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - A String that represents the subscription key of\n     * Language Understanding service.\n     * @param {string} appId - A String that represents the application id of Language\n     * Understanding service.\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\n     * of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromSubscription(subscriptionKey, appId, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        langModelImp.region = region;\n        langModelImp.subscriptionKey = subscriptionKey;\n        return langModelImp;\n    }\n}\nexports.LanguageUnderstandingModel = LanguageUnderstandingModel;\n/**\n * @private\n * @class LanguageUnderstandingModelImpl\n */\nclass LanguageUnderstandingModelImpl extends LanguageUnderstandingModel {\n}\nexports.LanguageUnderstandingModelImpl = LanguageUnderstandingModelImpl;\n\n//# sourceMappingURL=LanguageUnderstandingModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingTranscriptionEventArgs = exports.ConversationTranscriptionEventArgs = exports.SpeechRecognitionEventArgs = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nclass SpeechRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member SpeechRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.SpeechRecognitionEventArgs = SpeechRecognitionEventArgs;\n/**\n * Defines contents of conversation transcribed/transcribing event.\n * @class ConversationTranscriptionEventArgs\n */\nclass ConversationTranscriptionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ConversationTranscriptionResult} result - The conversation transcription result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the transcription result.\n     * @member ConversationTranscription1EventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {ConversationTranscriptionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.ConversationTranscriptionEventArgs = ConversationTranscriptionEventArgs;\n/**\n * Defines contents of meeting transcribed/transcribing event.\n * @class MeetingTranscriptionEventArgs\n */\nclass MeetingTranscriptionEventArgs extends SpeechRecognitionEventArgs {\n}\nexports.MeetingTranscriptionEventArgs = MeetingTranscriptionEventArgs;\n\n//# sourceMappingURL=SpeechRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationEventArgsBase = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines content of a CancellationEvent.\n * @class CancellationEventArgsBase\n */\nclass CancellationEventArgsBase extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(reason, errorDetails, errorCode, offset, sessionId) {\n        super(offset, sessionId);\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member CancellationEventArgsBase.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The error code in case of an unsuccessful operation.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful operation, provides details of the occurred error.\n     * @member CancellationEventArgsBase.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.CancellationEventArgsBase = CancellationEventArgsBase;\n\n//# sourceMappingURL=CancellationEventArgsBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechRecognitionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"./CancellationEventArgsBase.js\");\nclass SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.SpeechRecognitionCanceledEventArgs = SpeechRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=SpeechRecognitionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationRecognitionEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Translation text result event arguments.\n * @class TranslationRecognitionEventArgs\n */\nclass TranslationRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member TranslationRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.TranslationRecognitionEventArgs = TranslationRecognitionEventArgs;\n\n//# sourceMappingURL=TranslationRecognitionEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationSynthesisEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Translation Synthesis event arguments\n * @class TranslationSynthesisEventArgs\n */\nclass TranslationSynthesisEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, sessionId) {\n        super(sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the translation synthesis result.\n     * @member TranslationSynthesisEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.TranslationSynthesisEventArgs = TranslationSynthesisEventArgs;\n\n//# sourceMappingURL=TranslationSynthesisEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationRecognitionResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Translation text result.\n * @class TranslationRecognitionResult\n */\nclass TranslationRecognitionResult extends Exports_js_1.SpeechRecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {Translations} translations - The translations.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(translations, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\n        this.privTranslations = translations;\n    }\n    static fromSpeechRecognitionResult(result) {\n        return new TranslationRecognitionResult(undefined, result.resultId, result.reason, result.text, result.duration, result.offset, result.language, result.languageDetectionConfidence, result.errorDetails, result.json, result.properties);\n    }\n    /**\n     * Presents the translation results. Each item in the dictionary represents\n     * a translation result in one of target languages, where the key is the name\n     * of the target language, in BCP-47 format, and the value is the translation\n     * text in the specified language.\n     * @member TranslationRecognitionResult.prototype.translations\n     * @function\n     * @public\n     * @returns {Translations} the current translation map that holds all translations requested.\n     */\n    get translations() {\n        return this.privTranslations;\n    }\n}\nexports.TranslationRecognitionResult = TranslationRecognitionResult;\n\n//# sourceMappingURL=TranslationRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationSynthesisResult = void 0;\n/**\n * Defines translation synthesis result, i.e. the voice output of the translated\n * text in the target language.\n * @class TranslationSynthesisResult\n */\nclass TranslationSynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ResultReason} reason - The synthesis reason.\n     * @param {ArrayBuffer} audio - The audio data.\n     */\n    constructor(reason, audio) {\n        this.privReason = reason;\n        this.privAudio = audio;\n    }\n    /**\n     * Translated text in the target language.\n     * @member TranslationSynthesisResult.prototype.audio\n     * @function\n     * @public\n     * @returns {ArrayBuffer} Translated audio in the target language.\n     */\n    get audio() {\n        return this.privAudio;\n    }\n    /**\n     * The synthesis status.\n     * @member TranslationSynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} The synthesis status.\n     */\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.TranslationSynthesisResult = TranslationSynthesisResult;\n\n//# sourceMappingURL=TranslationSynthesisResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResultReason = void 0;\n/**\n * Defines the possible reasons a recognition result might be generated.\n * @class ResultReason\n */\nvar ResultReason;\n(function (ResultReason) {\n    /**\n     * Indicates speech could not be recognized. More details\n     * can be found in the NoMatchDetails object.\n     * @member ResultReason.NoMatch\n     */\n    ResultReason[ResultReason[\"NoMatch\"] = 0] = \"NoMatch\";\n    /**\n     * Indicates that the recognition was canceled. More details\n     * can be found using the CancellationDetails object.\n     * @member ResultReason.Canceled\n     */\n    ResultReason[ResultReason[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Indicates the speech result contains hypothesis text.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizingSpeech\"] = 2] = \"RecognizingSpeech\";\n    /**\n     * Indicates the speech result contains final text that has been recognized.\n     * Speech Recognition is now complete for this phrase.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizedSpeech\"] = 3] = \"RecognizedSpeech\";\n    /**\n     * Indicates the speech result contains a finalized acceptance of a provided keyword.\n     * Speech recognition will continue unless otherwise configured.\n     * @member ResultReason.RecognizedKeyword\n     */\n    ResultReason[ResultReason[\"RecognizedKeyword\"] = 4] = \"RecognizedKeyword\";\n    /**\n     * Indicates the intent result contains hypothesis text and intent.\n     * @member ResultReason.RecognizingIntent\n     */\n    ResultReason[ResultReason[\"RecognizingIntent\"] = 5] = \"RecognizingIntent\";\n    /**\n     * Indicates the intent result contains final text and intent.\n     * Speech Recognition and Intent determination are now complete for this phrase.\n     * @member ResultReason.RecognizedIntent\n     */\n    ResultReason[ResultReason[\"RecognizedIntent\"] = 6] = \"RecognizedIntent\";\n    /**\n     * Indicates the translation result contains hypothesis text and its translation(s).\n     * @member ResultReason.TranslatingSpeech\n     */\n    ResultReason[ResultReason[\"TranslatingSpeech\"] = 7] = \"TranslatingSpeech\";\n    /**\n     * Indicates the translation result contains final text and corresponding translation(s).\n     * Speech Recognition and Translation are now complete for this phrase.\n     * @member ResultReason.TranslatedSpeech\n     */\n    ResultReason[ResultReason[\"TranslatedSpeech\"] = 8] = \"TranslatedSpeech\";\n    /**\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\n     * @member ResultReason.SynthesizingAudio\n     */\n    ResultReason[ResultReason[\"SynthesizingAudio\"] = 9] = \"SynthesizingAudio\";\n    /**\n     * Indicates the synthesized audio is now complete for this phrase.\n     * @member ResultReason.SynthesizingAudioCompleted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioCompleted\"] = 10] = \"SynthesizingAudioCompleted\";\n    /**\n     * Indicates the speech synthesis is now started\n     * @member ResultReason.SynthesizingAudioStarted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioStarted\"] = 11] = \"SynthesizingAudioStarted\";\n    /**\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\n     * @member ResultReason.EnrollingVoiceProfile\n     */\n    ResultReason[ResultReason[\"EnrollingVoiceProfile\"] = 12] = \"EnrollingVoiceProfile\";\n    /**\n     * Indicates the voice profile has been enrolled.\n     * @member ResultReason.EnrolledVoiceProfile\n     */\n    ResultReason[ResultReason[\"EnrolledVoiceProfile\"] = 13] = \"EnrolledVoiceProfile\";\n    /**\n     * Indicates successful identification of some speakers.\n     * @member ResultReason.RecognizedSpeakers\n     */\n    ResultReason[ResultReason[\"RecognizedSpeakers\"] = 14] = \"RecognizedSpeakers\";\n    /**\n     * Indicates successfully verified one speaker.\n     * @member ResultReason.RecognizedSpeaker\n     */\n    ResultReason[ResultReason[\"RecognizedSpeaker\"] = 15] = \"RecognizedSpeaker\";\n    /**\n     * Indicates a voice profile has been reset successfully.\n     * @member ResultReason.ResetVoiceProfile\n     */\n    ResultReason[ResultReason[\"ResetVoiceProfile\"] = 16] = \"ResetVoiceProfile\";\n    /**\n     * Indicates a voice profile has been deleted successfully.\n     * @member ResultReason.DeletedVoiceProfile\n     */\n    ResultReason[ResultReason[\"DeletedVoiceProfile\"] = 17] = \"DeletedVoiceProfile\";\n    /**\n     * Indicates synthesis voices list has been successfully retrieved.\n     * @member ResultReason.VoicesListRetrieved\n     */\n    ResultReason[ResultReason[\"VoicesListRetrieved\"] = 18] = \"VoicesListRetrieved\";\n    /**\n     * Indicates the transcription result contains hypothesis text and its translation(s) for\n     * other participants in the conversation.\n     * @member ResultReason.TranslatingParticipantSpeech\n     */\n    ResultReason[ResultReason[\"TranslatingParticipantSpeech\"] = 19] = \"TranslatingParticipantSpeech\";\n    /**\n     * Indicates the transcription result contains final text and corresponding translation(s)\n     * for other participants in the conversation. Speech Recognition and Translation are now\n     * complete for this phrase.\n     * @member ResultReason.TranslatedParticipantSpeech\n     */\n    ResultReason[ResultReason[\"TranslatedParticipantSpeech\"] = 20] = \"TranslatedParticipantSpeech\";\n    /**\n     * <summary>\n     * Indicates the transcription result contains the instant message and corresponding\n     * translation(s).\n     * @member ResultReason.TranslatedInstantMessage\n     */\n    ResultReason[ResultReason[\"TranslatedInstantMessage\"] = 21] = \"TranslatedInstantMessage\";\n    /**\n     * Indicates the transcription result contains the instant message for other participants\n     * in the conversation and corresponding translation(s).\n     * @member ResultReason.TranslatedParticipantInstantMessage\n     */\n    ResultReason[ResultReason[\"TranslatedParticipantInstantMessage\"] = 22] = \"TranslatedParticipantInstantMessage\";\n})(ResultReason = exports.ResultReason || (exports.ResultReason = {}));\n\n//# sourceMappingURL=ResultReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechConfigImpl = exports.SpeechConfig = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Speech configuration.\n * @class SpeechConfig\n */\nclass SpeechConfig {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\n     * @member SpeechConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} The speech factory\n     */\n    static fromSubscription(subscriptionKey, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return speechImpl;\n    }\n    /**\n     * Internal implementation of fromEndpoint() overloads. Accepts either a subscription key or a TokenCredential.\n     * @private\n     */\n    static fromEndpoint(endpoint, auth) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        const isValidString = typeof auth === \"string\" && auth.trim().length > 0;\n        const isTokenCredential = typeof auth === \"object\" && auth !== null && typeof auth.getToken === \"function\";\n        const isKeyCredential = typeof auth === \"object\" && auth !== null && typeof auth.key === \"string\";\n        if (auth !== undefined && !isValidString && !isTokenCredential && !isKeyCredential) {\n            throw new Error(\"Invalid 'auth' parameter: expected a non-empty API key string, a TokenCredential, or a KeyCredential.\");\n        }\n        let speechImpl;\n        if (typeof auth === \"string\") {\n            speechImpl = new SpeechConfigImpl();\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, auth);\n        }\n        else if (typeof auth === \"object\" && typeof auth.getToken === \"function\") {\n            speechImpl = new SpeechConfigImpl(auth);\n        }\n        else if (typeof auth === \"object\" && typeof auth.key === \"string\") {\n            speechImpl = new SpeechConfigImpl();\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, auth.key);\n        }\n        else {\n            speechImpl = new SpeechConfigImpl();\n        }\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech config with specified host and subscription key.\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\n     * Note: Added in version 1.9.0.\n     * @member SpeechConfig.fromHost\n     * @function\n     * @public\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromHost(hostName, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(hostName, \"hostName\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\n        // Containers do not yet have /stt/speech/universal/v2 routes.\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"1\");\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech factory with specified initial authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\n     * to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\n     * the new token value will not apply to recognizers that have already been created. For recognizers\n     * that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The initial authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.authorizationToken = authorizationToken;\n        return speechImpl;\n    }\n    /**\n     * Closes the configuration.\n     * @member SpeechConfig.prototype.close\n     * @function\n     * @public\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    close() { }\n}\nexports.SpeechConfig = SpeechConfig;\n/**\n * @public\n * @class SpeechConfigImpl\n */\nclass SpeechConfigImpl extends SpeechConfig {\n    constructor(tokenCredential) {\n        super();\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\n        this.outputFormat = Exports_js_2.OutputFormat.Simple;\n        this.privTokenCredential = tokenCredential;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get endPoint() {\n        return new URL(this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint));\n    }\n    get subscriptionKey() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n    }\n    get region() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n    }\n    get authorizationToken() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    set authorizationToken(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    get speechRecognitionLanguage() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    set speechRecognitionLanguage(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n    }\n    get autoDetectSourceLanguages() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\n    }\n    set autoDetectSourceLanguages(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\n    }\n    get outputFormat() {\n        return Exports_js_2.OutputFormat[this.privProperties.getProperty(Exports_js_1.OutputFormatPropertyName, undefined)];\n    }\n    set outputFormat(value) {\n        this.privProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[value]);\n    }\n    get endpointId() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId);\n    }\n    set endpointId(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, value);\n    }\n    get tokenCredential() {\n        return this.privTokenCredential;\n    }\n    setProperty(name, value) {\n        Contracts_js_1.Contracts.throwIfNull(value, \"value\");\n        this.privProperties.setProperty(name, value);\n    }\n    getProperty(name, def) {\n        return this.privProperties.getProperty(name, def);\n    }\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    setProfanity(profanity) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, Exports_js_2.ProfanityOption[profanity]);\n    }\n    enableAudioLogging() {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\n    }\n    requestWordLevelTimestamps() {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\n        this.privProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Detailed]);\n    }\n    enableDictation() {\n        this.privProperties.setProperty(Exports_js_1.ForceDictationPropertyName, \"true\");\n    }\n    clone() {\n        const ret = new SpeechConfigImpl(this.tokenCredential);\n        ret.privProperties = this.privProperties.clone();\n        return ret;\n    }\n    get speechSynthesisLanguage() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage);\n    }\n    set speechSynthesisLanguage(language) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage, language);\n    }\n    get speechSynthesisVoiceName() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice);\n    }\n    set speechSynthesisVoiceName(voice) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice, voice);\n    }\n    get speechSynthesisOutputFormat() {\n        return Exports_js_2.SpeechSynthesisOutputFormat[this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\n    }\n    set speechSynthesisOutputFormat(format) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, Exports_js_2.SpeechSynthesisOutputFormat[format]);\n    }\n}\nexports.SpeechConfigImpl = SpeechConfigImpl;\n\n//# sourceMappingURL=SpeechConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechTranslationConfigImpl = exports.SpeechTranslationConfig = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Speech translation configuration.\n * @class SpeechTranslationConfig\n */\nclass SpeechTranslationConfig extends Exports_js_2.SpeechConfig {\n    /**\n     * Creates an instance of recognizer config.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\n     * @member SpeechTranslationConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    static fromSubscription(subscriptionKey, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by setting the property authorizationToken with a new\n     * valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\n     * will encounter errors during recognition.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\n     * to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechTranslationConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    }\n    /**\n     * Creates an instance of the speech config with specified host and subscription key.\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\n     * Note: Added in version 1.9.0.\n     * @member SpeechConfig.fromHost\n     * @function\n     * @public\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromHost(hostName, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(hostName, \"hostName\");\n        const speechImpl = new SpeechTranslationConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Internal implementation of fromEndpoint() overloads. Accepts either a subscription key or a TokenCredential.\n     * @private\n     */\n    static fromEndpoint(endpoint, auth) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        const isValidString = typeof auth === \"string\" && auth.trim().length > 0;\n        const isTokenCredential = typeof auth === \"object\" && auth !== null && typeof auth.getToken === \"function\";\n        const isKeyCredential = typeof auth === \"object\" && auth !== null && typeof auth.key === \"string\";\n        if (auth !== undefined && !isValidString && !isTokenCredential && !isKeyCredential) {\n            throw new Error(\"Invalid 'auth' parameter: expected a non-empty API key string, a TokenCredential, or a KeyCredential.\");\n        }\n        let speechImpl;\n        if (typeof auth === \"string\") {\n            speechImpl = new SpeechTranslationConfigImpl();\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, auth);\n        }\n        else if (typeof auth === \"object\" && typeof auth.getToken === \"function\") {\n            speechImpl = new SpeechTranslationConfigImpl(auth);\n        }\n        else if (typeof auth === \"object\" && typeof auth.key === \"string\") {\n            speechImpl = new SpeechTranslationConfigImpl();\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, auth.key);\n        }\n        else {\n            speechImpl = new SpeechTranslationConfigImpl();\n        }\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        return speechImpl;\n    }\n}\nexports.SpeechTranslationConfig = SpeechTranslationConfig;\n/**\n * @private\n * @class SpeechTranslationConfigImpl\n */\nclass SpeechTranslationConfigImpl extends SpeechTranslationConfig {\n    constructor(tokenCredential) {\n        super();\n        this.privSpeechProperties = new Exports_js_2.PropertyCollection();\n        this.outputFormat = Exports_js_2.OutputFormat.Simple;\n        this.privTokenCredential = tokenCredential;\n    }\n    /**\n     * Gets/Sets the authorization token.\n     * If this is set, subscription key is ignored.\n     * User needs to make sure the provided authorization token is valid and not expired.\n     * @member SpeechTranslationConfigImpl.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - The authorization token.\n     */\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * Sets the speech recognition language.\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @param {string} value - The authorization token.\n     */\n    set speechRecognitionLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n    }\n    /**\n     * Gets the speech recognition language.\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @return {string} The speechRecognitionLanguage.\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\n     * @function\n     * @public\n     */\n    get subscriptionKey() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_Key]);\n    }\n    /**\n     * Gets the output format\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\n     * @function\n     * @public\n     */\n    get outputFormat() {\n        // eslint-disable-next-line\n        return Exports_js_2.OutputFormat[this.privSpeechProperties.getProperty(Exports_js_1.OutputFormatPropertyName, undefined)];\n    }\n    /**\n     * Gets/Sets the output format\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\n     * @function\n     * @public\n     */\n    set outputFormat(value) {\n        this.privSpeechProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[value]);\n    }\n    /**\n     * Gets the endpoint id.\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\n     * @function\n     * @public\n     */\n    get endpointId() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId);\n    }\n    /**\n     * Gets/Sets the endpoint id.\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\n     * @function\n     * @public\n     */\n    set endpointId(value) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, value);\n    }\n    /**\n     * Add a (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    addTargetLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        const languages = this.targetLanguages;\n        if (!languages.includes(value)) {\n            languages.push(value);\n            this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n        }\n    }\n    /**\n     * Gets the (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.targetLanguages\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    get targetLanguages() {\n        if (this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n        }\n        else {\n            return [];\n        }\n    }\n    /**\n     * Gets the voice name.\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\n     * @function\n     * @public\n     */\n    get voiceName() {\n        return this.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice]);\n    }\n    /**\n     * Gets/Sets the voice of the translated language, enable voice synthesis output.\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\n     * @function\n     * @public\n     * @param {string} value - The name of the voice.\n     */\n    set voiceName(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice, value);\n    }\n    /**\n     * Provides the region.\n     * @member SpeechTranslationConfigImpl.prototype.region\n     * @function\n     * @public\n     * @returns {string} The region.\n     */\n    get region() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n    }\n    get tokenCredential() {\n        return this.privTokenCredential;\n    }\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\n    }\n    /**\n     * Gets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} def - The default value of the property in case it is not set.\n     * @returns {string} The value of the property.\n     */\n    getProperty(name, def) {\n        return this.privSpeechProperties.getProperty(name, def);\n    }\n    /**\n     * Gets/Sets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {string | PropertyId} name - The name of the property to set.\n     * @param {string} value - The value of the property.\n     */\n    setProperty(name, value) {\n        this.privSpeechProperties.setProperty(name, value);\n    }\n    /**\n     * Provides access to custom properties.\n     * @member SpeechTranslationConfigImpl.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The properties.\n     */\n    get properties() {\n        return this.privSpeechProperties;\n    }\n    /**\n     * Dispose of associated resources.\n     * @member SpeechTranslationConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privSpeechProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privSpeechProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    setProfanity(profanity) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, Exports_js_2.ProfanityOption[profanity]);\n    }\n    enableAudioLogging() {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\n    }\n    requestWordLevelTimestamps() {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\n    }\n    enableDictation() {\n        this.privSpeechProperties.setProperty(Exports_js_1.ForceDictationPropertyName, \"true\");\n    }\n    get speechSynthesisLanguage() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage);\n    }\n    set speechSynthesisLanguage(language) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage, language);\n    }\n    get speechSynthesisVoiceName() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice);\n    }\n    set speechSynthesisVoiceName(voice) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice, voice);\n    }\n    get speechSynthesisOutputFormat() {\n        // eslint-disable-next-line\n        return Exports_js_2.SpeechSynthesisOutputFormat[this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\n    }\n    set speechSynthesisOutputFormat(format) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, Exports_js_2.SpeechSynthesisOutputFormat[format]);\n    }\n}\nexports.SpeechTranslationConfigImpl = SpeechTranslationConfigImpl;\n\n//# sourceMappingURL=SpeechTranslationConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropertyCollection = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Represents collection of properties and their values.\n * @class PropertyCollection\n */\nclass PropertyCollection {\n    constructor() {\n        this.privKeys = [];\n        this.privValues = [];\n    }\n    /**\n     * Returns the property value in type String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member PropertyCollection.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string | number | boolean} def - The default value which is returned if the parameter\n     * is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    getProperty(key, def) {\n        let keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = Exports_js_1.PropertyId[key];\n        }\n        for (let n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                return this.privValues[n];\n            }\n        }\n        if (def === undefined) {\n            return undefined;\n        }\n        return String(def);\n    }\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member PropertyCollection.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    setProperty(key, value) {\n        let keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = Exports_js_1.PropertyId[key];\n        }\n        for (let n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                this.privValues[n] = value;\n                return;\n            }\n        }\n        this.privKeys.push(keyToUse);\n        this.privValues.push(value);\n    }\n    /**\n     * Clones the collection.\n     * @member PropertyCollection.prototype.clone\n     * @function\n     * @public\n     * @returns {PropertyCollection} A copy of the collection.\n     */\n    clone() {\n        const clonedMap = new PropertyCollection();\n        for (let n = 0; n < this.privKeys.length; n++) {\n            clonedMap.privKeys.push(this.privKeys[n]);\n            clonedMap.privValues.push(this.privValues[n]);\n        }\n        return clonedMap;\n    }\n    /**\n     * Merges this set of properties into another, no overwrites.\n     * @member PropertyCollection.prototype.mergeTo\n     * @function\n     * @public\n     * @param {PropertyCollection}  destinationCollection - The collection to merge into.\n     */\n    mergeTo(destinationCollection) {\n        this.privKeys.forEach((key) => {\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\n                const value = this.getProperty(key);\n                destinationCollection.setProperty(key, value);\n            }\n        });\n    }\n    /**\n     * Get the keys in Property Collection.\n     * @member PropertyCollection.prototype.keys\n     * @function\n     * @public\n     * @returns {string []} Keys in the collection.\n     */\n    get keys() {\n        return this.privKeys;\n    }\n}\nexports.PropertyCollection = PropertyCollection;\n\n//# sourceMappingURL=PropertyCollection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropertyId = void 0;\n/**\n * Defines speech property ids.\n * @class PropertyId\n */\nvar PropertyId;\n(function (PropertyId) {\n    /**\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to\n     * specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.fromSubscription]].\n     * @member PropertyId.SpeechServiceConnection_Key\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Key\"] = 0] = \"SpeechServiceConnection_Key\";\n    /**\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.fromEndpoint]].\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\n     * @member PropertyId.SpeechServiceConnection_Endpoint\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Endpoint\"] = 1] = \"SpeechServiceConnection_Endpoint\";\n    /**\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\n     * use this property directly.\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\n     * @member PropertyId.SpeechServiceConnection_Region\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Region\"] = 2] = \"SpeechServiceConnection_Region\";\n    /**\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\n     * @member PropertyId.SpeechServiceAuthorization_Token\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Token\"] = 3] = \"SpeechServiceAuthorization_Token\";\n    /**\n     * The Cognitive Services Speech Service authorization type. Currently unused.\n     * @member PropertyId.SpeechServiceAuthorization_Type\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Type\"] = 4] = \"SpeechServiceAuthorization_Type\";\n    /**\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.endpointId]].\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\n     * @member PropertyId.SpeechServiceConnection_EndpointId\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndpointId\"] = 5] = \"SpeechServiceConnection_EndpointId\";\n    /**\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationToLanguages\"] = 6] = \"SpeechServiceConnection_TranslationToLanguages\";\n    /**\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationVoice\"] = 7] = \"SpeechServiceConnection_TranslationVoice\";\n    /**\n     * Translation features.\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationFeatures\"] = 8] = \"SpeechServiceConnection_TranslationFeatures\";\n    /**\n     * The category ID for translation.\n     * @member PropertyId.SpeechServiceConnection_TranslationCategoryId\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationCategoryId\"] = 9] = \"SpeechServiceConnection_TranslationCategoryId\";\n    /**\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use [[LanguageUnderstandingModel]].\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_IntentRegion\"] = 10] = \"SpeechServiceConnection_IntentRegion\";\n    /**\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyHostName\"] = 11] = \"SpeechServiceConnection_ProxyHostName\";\n    /**\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyPort\"] = 12] = \"SpeechServiceConnection_ProxyPort\";\n    /**\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyUserName\"] = 13] = \"SpeechServiceConnection_ProxyUserName\";\n    /**\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyPassword\"] = 14] = \"SpeechServiceConnection_ProxyPassword\";\n    /**\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\n     * This property is intended to be read-only. The SDK is using it internally.\n     * @member PropertyId.SpeechServiceConnection_RecoMode\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoMode\"] = 15] = \"SpeechServiceConnection_RecoMode\";\n    /**\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\n     * directly.\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoLanguage\"] = 16] = \"SpeechServiceConnection_RecoLanguage\";\n    /**\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead use [[SessionEventArgs.sessionId]].\n     * @member PropertyId.Speech_SessionId\n     */\n    PropertyId[PropertyId[\"Speech_SessionId\"] = 17] = \"Speech_SessionId\";\n    /**\n     * The spoken language to be synthesized (e.g. en-US)\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthLanguage\"] = 18] = \"SpeechServiceConnection_SynthLanguage\";\n    /**\n     * The name of the TTS voice to be used for speech synthesis\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthVoice\"] = 19] = \"SpeechServiceConnection_SynthVoice\";\n    /**\n     * The string to specify TTS output audio format\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthOutputFormat\"] = 20] = \"SpeechServiceConnection_SynthOutputFormat\";\n    /**\n     * The list of comma separated languages used as possible source languages\n     * Added in version 1.13.0\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_AutoDetectSourceLanguages\"] = 21] = \"SpeechServiceConnection_AutoDetectSourceLanguages\";\n    /**\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\n     * to use this property directly.\n     * Instead use [[SpeechConfig.outputFormat]].\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestDetailedResultTrueFalse\"] = 22] = \"SpeechServiceResponse_RequestDetailedResultTrueFalse\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestProfanityFilterTrueFalse\"] = 23] = \"SpeechServiceResponse_RequestProfanityFilterTrueFalse\";\n    /**\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\n     * @member PropertyId.SpeechServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonResult\"] = 24] = \"SpeechServiceResponse_JsonResult\";\n    /**\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonErrorDetails\"] = 25] = \"SpeechServiceResponse_JsonErrorDetails\";\n    /**\n     * The cancellation reason. Currently unused.\n     * @member PropertyId.CancellationDetails_Reason\n     */\n    PropertyId[PropertyId[\"CancellationDetails_Reason\"] = 26] = \"CancellationDetails_Reason\";\n    /**\n     * The cancellation text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonText\"] = 27] = \"CancellationDetails_ReasonText\";\n    /**\n     * The Cancellation detailed text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonDetailedText\"] = 28] = \"CancellationDetails_ReasonDetailedText\";\n    /**\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"LanguageUnderstandingServiceResponse_JsonResult\"] = 29] = \"LanguageUnderstandingServiceResponse_JsonResult\";\n    /**\n     * The URL string built from speech configuration.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * NOTE: Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Url\"] = 30] = \"SpeechServiceConnection_Url\";\n    /**\n     * The initial silence timeout value (in milliseconds) used by the service.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_InitialSilenceTimeoutMs\"] = 31] = \"SpeechServiceConnection_InitialSilenceTimeoutMs\";\n    /**\n     * The end silence timeout value (in milliseconds) used by the service.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndSilenceTimeoutMs\"] = 32] = \"SpeechServiceConnection_EndSilenceTimeoutMs\";\n    /**\n     * A duration of detected silence, measured in milliseconds, after which speech-to-text will determine a spoken\n     * phrase has ended and generate a final Recognized result. Configuring this timeout may be helpful in situations\n     * where spoken input is significantly faster or slower than usual and default segmentation behavior consistently\n     * yields results that are too long or too short. Segmentation timeout values that are inappropriately high or low\n     * can negatively affect speech-to-text accuracy; this property should be carefully configured and the resulting\n     * behavior should be thoroughly validated as intended.\n     *\n     * Refer to the documentation for valid value ranges and additional details:\n     * https://learn.microsoft.com/azure/ai-services/speech-service/how-to-recognize-speech?pivots=programming-language-csharp#change-how-silence-is-handled\n     *\n     * Added in version 1.42.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationSilenceTimeoutMs\"] = 33] = \"Speech_SegmentationSilenceTimeoutMs\";\n    /**\n     * SegmentationMaximumTimeMs represents the maximum length of a spoken phrase when using the Time segmentation strategy.\n     * @member Speech_SegmentationSilenceTimeoutMs must be set in order to use this setting.\n     * As the length of a spoken phrase approaches this value, the @member Speech_SegmentationSilenceTimeoutMs will be reduced until either\n     * the phrase silence timeout is reached or the phrase reaches the maximum length.\n     *\n     * Valid range: **20,000 to 70,000** milliseconds.\n     *\n     * Added in version 1.42.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationMaximumTimeMs\"] = 34] = \"Speech_SegmentationMaximumTimeMs\";\n    /**\n     * Specifies the strategy used to determine when a spoken phrase has ended,\n     * triggering the generation of a final recognition result.\n     *\n     * Supported values:\n     * - \"Default\": Uses the Speech Service's default segmentation strategy. Recommended for most use cases.\n     * - \"Time\": Uses a silence-based timeout. A final result is generated after a defined period of silence.\n     * Requires @member Speech_SegmentationMaximumTimeMs to be configured appropriately.\n     * Optional: Adjust @member Speech_SegmentationSilenceTimeoutMs to control how much silence ends a phrase.\n     * - \"Semantic\": Uses an AI model to semantically infer phrase boundaries based on content.\n     * No adjustable parameters are available for this strategy.\n     *\n     * Introduced in version 1.42.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationStrategy\"] = 35] = \"Speech_SegmentationStrategy\";\n    /**\n     * A boolean value specifying whether audio logging is enabled in the service or not.\n     * Audio and content logs are stored either in Microsoft-owned storage, or in your own storage account linked\n     * to your Cognitive Services subscription (Bring Your Own Storage (BYOS) enabled Speech resource).\n     * The logs will be removed after 30 days.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EnableAudioLogging\"] = 36] = \"SpeechServiceConnection_EnableAudioLogging\";\n    /**\n     * The speech service connection language identifier mode.\n     * Can be \"AtStart\" (the default), or \"Continuous\". See Language\n     * Identification document https://aka.ms/speech/lid?pivots=programming-language-javascript\n     * for more details.\n     * Added in 1.25.0\n     **/\n    PropertyId[PropertyId[\"SpeechServiceConnection_LanguageIdMode\"] = 37] = \"SpeechServiceConnection_LanguageIdMode\";\n    /**\n     * A string value representing the desired endpoint version to target for Speech Recognition.\n     * Added in version 1.21.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecognitionEndpointVersion\"] = 38] = \"SpeechServiceConnection_RecognitionEndpointVersion\";\n    /**\n    /**\n     * A string value the current speaker recognition scenario/mode (TextIndependentIdentification, etc.).\n     * Added in version 1.23.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SpeakerIdMode\"] = 39] = \"SpeechServiceConnection_SpeakerIdMode\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity setting.\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_ProfanityOption\"] = 40] = \"SpeechServiceResponse_ProfanityOption\";\n    /**\n     * A string value specifying which post processing option should be used by service.\n     * Allowed values are \"TrueText\".\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_PostProcessingOption\"] = 41] = \"SpeechServiceResponse_PostProcessingOption\";\n    /**\n     * A boolean value specifying whether to include word-level timestamps in the response result.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestWordLevelTimestamps\"] = 42] = \"SpeechServiceResponse_RequestWordLevelTimestamps\";\n    /**\n     * The number of times a word has to be in partial results to be returned.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_StablePartialResultThreshold\"] = 43] = \"SpeechServiceResponse_StablePartialResultThreshold\";\n    /**\n     * A string value specifying the output format option in the response result. Internal use only.\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_OutputFormatOption\"] = 44] = \"SpeechServiceResponse_OutputFormatOption\";\n    /**\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_TranslationRequestStablePartialResult\"] = 45] = \"SpeechServiceResponse_TranslationRequestStablePartialResult\";\n    /**\n     * A boolean value specifying whether to request WordBoundary events.\n     * @member PropertyId.SpeechServiceResponse_RequestWordBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestWordBoundary\"] = 46] = \"SpeechServiceResponse_RequestWordBoundary\";\n    /**\n     * A boolean value specifying whether to request punctuation boundary in WordBoundary Events. Default is true.\n     * @member PropertyId.SpeechServiceResponse_RequestPunctuationBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestPunctuationBoundary\"] = 47] = \"SpeechServiceResponse_RequestPunctuationBoundary\";\n    /**\n     * A boolean value specifying whether to request sentence boundary in WordBoundary Events. Default is false.\n     * @member PropertyId.SpeechServiceResponse_RequestSentenceBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestSentenceBoundary\"] = 48] = \"SpeechServiceResponse_RequestSentenceBoundary\";\n    /**\n     * Determines if intermediate results contain speaker identification.\n     * Allowed values are \"true\" or \"false\". If set to \"true\", the intermediate results will contain speaker identification.\n     * The default value if unset or set to an invalid value is \"false\".\n     * This is currently only supported for scenarios using the ConversationTranscriber\".\n     * @member PropertyId.SpeechServiceResponse_DiarizeIntermediateResults\n     * Adding in version 1.41.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_DiarizeIntermediateResults\"] = 49] = \"SpeechServiceResponse_DiarizeIntermediateResults\";\n    /**\n     * Identifier used to connect to the backend service.\n     * @member PropertyId.Conversation_ApplicationId\n     */\n    PropertyId[PropertyId[\"Conversation_ApplicationId\"] = 50] = \"Conversation_ApplicationId\";\n    /**\n     * Type of dialog backend to connect to.\n     * @member PropertyId.Conversation_DialogType\n     */\n    PropertyId[PropertyId[\"Conversation_DialogType\"] = 51] = \"Conversation_DialogType\";\n    /**\n     * Silence timeout for listening\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\n     */\n    PropertyId[PropertyId[\"Conversation_Initial_Silence_Timeout\"] = 52] = \"Conversation_Initial_Silence_Timeout\";\n    /**\n     * From Id to add to speech recognition activities.\n     * @member PropertyId.Conversation_From_Id\n     */\n    PropertyId[PropertyId[\"Conversation_From_Id\"] = 53] = \"Conversation_From_Id\";\n    /**\n     * ConversationId for the session.\n     * @member PropertyId.Conversation_Conversation_Id\n     */\n    PropertyId[PropertyId[\"Conversation_Conversation_Id\"] = 54] = \"Conversation_Conversation_Id\";\n    /**\n     * Comma separated list of custom voice deployment ids.\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\n     */\n    PropertyId[PropertyId[\"Conversation_Custom_Voice_Deployment_Ids\"] = 55] = \"Conversation_Custom_Voice_Deployment_Ids\";\n    /**\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\n     * @member PropertyId.Conversation_Speech_Activity_Template\n     * Added in version 1.10.0.\n     */\n    PropertyId[PropertyId[\"Conversation_Speech_Activity_Template\"] = 56] = \"Conversation_Speech_Activity_Template\";\n    /**\n     * Enables or disables the receipt of turn status messages as obtained on the turnStatusReceived event.\n     * @member PropertyId.Conversation_Request_Bot_Status_Messages\n     * Added in version 1.15.0.\n     */\n    PropertyId[PropertyId[\"Conversation_Request_Bot_Status_Messages\"] = 57] = \"Conversation_Request_Bot_Status_Messages\";\n    /**\n     * Specifies the connection ID to be provided in the Agent configuration message, e.g. a Direct Line token for\n     * channel authentication.\n     * Added in version 1.15.1.\n     */\n    PropertyId[PropertyId[\"Conversation_Agent_Connection_Id\"] = 58] = \"Conversation_Agent_Connection_Id\";\n    /**\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use [[SpeechConfig.fromHost]].\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Host\"] = 59] = \"SpeechServiceConnection_Host\";\n    /**\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Host\"] = 60] = \"ConversationTranslator_Host\";\n    /**\n     * Optionally set the the host's display name.\n     * Used when joining a conversation.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Name\"] = 61] = \"ConversationTranslator_Name\";\n    /**\n     * Optionally set a value for the X-CorrelationId request header.\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_CorrelationId\"] = 62] = \"ConversationTranslator_CorrelationId\";\n    /**\n     * Set the conversation token to be sent to the speech service. This enables the\n     * service to service call from the speech service to the Conversation Translator service for relaying\n     * recognitions. For internal use.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Token\"] = 63] = \"ConversationTranslator_Token\";\n    /**\n     * The reference text of the audio for pronunciation evaluation.\n     * For this and the following pronunciation assessment parameters, see\n     * https://docs.microsoft.com/azure/cognitive-services/speech-service/rest-speech-to-text#pronunciation-assessment-parameters for details.\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_ReferenceText\"] = 64] = \"PronunciationAssessment_ReferenceText\";\n    /**\n     * The point system for pronunciation score calibration (FivePoint or HundredMark).\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_GradingSystem\"] = 65] = \"PronunciationAssessment_GradingSystem\";\n    /**\n     * The pronunciation evaluation granularity (Phoneme, Word, or FullText).\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Granularity\"] = 66] = \"PronunciationAssessment_Granularity\";\n    /**\n     * Defines if enable miscue calculation.\n     * With this enabled, the pronounced words will be compared to the reference text,\n     * and will be marked with omission/insertion based on the comparison. The default setting is False.\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_EnableMiscue\"] = 67] = \"PronunciationAssessment_EnableMiscue\";\n    /**\n     * The json string of pronunciation assessment parameters\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Json\"] = 68] = \"PronunciationAssessment_Json\";\n    /**\n     * Pronunciation assessment parameters.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Params\"] = 69] = \"PronunciationAssessment_Params\";\n    /**\n     * Version of Speaker Recognition API to use.\n     * Added in version 1.18.0\n     */\n    PropertyId[PropertyId[\"SpeakerRecognition_Api_Version\"] = 70] = \"SpeakerRecognition_Api_Version\";\n    /**\n     * Specifies whether to allow load of data URL for web worker\n     * Allowed values are \"off\" and \"on\". Default is \"on\".\n     * Added in version 1.32.0\n     */\n    PropertyId[PropertyId[\"WebWorkerLoadType\"] = 71] = \"WebWorkerLoadType\";\n    /**\n     * Talking avatar service WebRTC session description protocol.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * Added in version 1.33.0\n     */\n    PropertyId[PropertyId[\"TalkingAvatarService_WebRTC_SDP\"] = 72] = \"TalkingAvatarService_WebRTC_SDP\";\n})(PropertyId = exports.PropertyId || (exports.PropertyId = {}));\n\n//# sourceMappingURL=PropertyId.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Recognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Defines the base class Recognizer which mainly contains common event handlers.\n * @class Recognizer\n */\nclass Recognizer {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\n     * @param {PropertyCollection} properties - A set of properties to set on the recognizer\n     * @param {IConnectionFactory} connectionFactory - The factory class used to create a custom IConnection for the recognizer\n     */\n    constructor(audioConfig, properties, connectionFactory, tokenCredential) {\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : Exports_js_3.AudioConfig.fromDefaultMicrophoneInput();\n        this.privDisposed = false;\n        this.privProperties = properties.clone();\n        this.privConnectionFactory = connectionFactory;\n        this.tokenCredential = tokenCredential;\n        this.implCommonRecognizerSetup();\n    }\n    /**\n     * Dispose of associated resources.\n     * @member Recognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * @Internal\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privReco;\n    }\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Recognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    async dispose(disposing) {\n        if (this.privDisposed) {\n            return;\n        }\n        this.privDisposed = true;\n        if (disposing) {\n            if (this.privReco) {\n                await this.privReco.audioSource.turnOff();\n                await this.privReco.dispose();\n            }\n        }\n    }\n    /**\n     * This method returns the current state of the telemetry setting.\n     * @member Recognizer.prototype.telemetryEnabled\n     * @function\n     * @public\n     * @returns true if the telemetry is enabled, false otherwise.\n     */\n    static get telemetryEnabled() {\n        return Exports_js_1.ServiceRecognizerBase.telemetryDataEnabled;\n    }\n    /**\n     * This method globally enables or disables telemetry.\n     * @member Recognizer.prototype.enableTelemetry\n     * @function\n     * @public\n     * @param enabled - Global setting for telemetry collection.\n     * If set to true, telemetry information like microphone errors,\n     * recognition errors are collected and sent to Microsoft.\n     * If set to false, no telemetry is sent to Microsoft.\n     */\n    static enableTelemetry(enabled) {\n        Exports_js_1.ServiceRecognizerBase.telemetryDataEnabled = enabled;\n    }\n    // Does the generic recognizer setup that is common across all recognizer types.\n    implCommonRecognizerSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const recognizerConfig = this.createRecognizerConfig(new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(new Exports_js_1.OS(osPlatform, osName, osVersion))));\n        this.privReco = this.createServiceRecognizer(Recognizer.getAuth(this.privProperties, this.tokenCredential), this.privConnectionFactory, this.audioConfig, recognizerConfig);\n    }\n    async recognizeOnceAsyncImpl(recognitionMode) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        const ret = new Exports_js_2.Deferred();\n        await this.implRecognizerStop();\n        await this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\n        const result = await ret.promise;\n        await this.implRecognizerStop();\n        return result;\n    }\n    async startContinuousRecognitionAsyncImpl(recognitionMode) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        await this.implRecognizerStop();\n        await this.privReco.recognize(recognitionMode, undefined, undefined);\n    }\n    async stopContinuousRecognitionAsyncImpl() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        await this.implRecognizerStop();\n    }\n    async implRecognizerStop() {\n        if (this.privReco) {\n            await this.privReco.stopRecognizing();\n        }\n        return;\n    }\n    static getAuth(properties, tokenCredential) {\n        const subscriptionKey = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Key, undefined);\n        if (subscriptionKey && subscriptionKey !== \"\") {\n            return new Exports_js_1.CognitiveSubscriptionKeyAuthentication(subscriptionKey);\n        }\n        if (tokenCredential) {\n            return new Exports_js_1.CognitiveTokenAuthentication(async () => {\n                try {\n                    const tokenResponse = await tokenCredential.getToken(\"https://cognitiveservices.azure.com/.default\");\n                    return tokenResponse?.token ?? \"\";\n                }\n                catch (err) {\n                    throw err;\n                }\n            }, async () => {\n                try {\n                    const tokenResponse = await tokenCredential.getToken(\"https://cognitiveservices.azure.com/.default\");\n                    return tokenResponse?.token ?? \"\";\n                }\n                catch (err) {\n                    throw err;\n                }\n            });\n        }\n        return new Exports_js_1.CognitiveTokenAuthentication(() => {\n            const authorizationToken = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n            return Promise.resolve(authorizationToken);\n        }, () => {\n            const authorizationToken = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n            return Promise.resolve(authorizationToken);\n        });\n    }\n}\nexports.Recognizer = Recognizer;\n\n//# sourceMappingURL=Recognizer.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionMode = void 0;\n/**\n * The Recognition modes\n */\nvar RecognitionMode;\n(function (RecognitionMode) {\n    RecognitionMode[\"Interactive\"] = \"Interactive\";\n    RecognitionMode[\"Dictation\"] = \"Dictation\";\n    RecognitionMode[\"Conversation\"] = \"Conversation\";\n    RecognitionMode[\"None\"] = \"None\";\n})(RecognitionMode = exports.RecognitionMode || (exports.RecognitionMode = {}));\n\n//# sourceMappingURL=PhraseDetectionContext.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\n * @class SpeechRecognizer\n */\nclass SpeechRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechConfigImpl.properties, new Exports_js_1.SpeechConnectionFactory(), speechConfig.tokenCredential);\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\n        return recognizer;\n    }\n    /**\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\n     * @member SpeechRecognizer.prototype.endpointId\n     * @function\n     * @public\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n     */\n    get endpointId() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeechRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeechRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the output format of recognition.\n     * @member SpeechRecognizer.prototype.outputFormat\n     * @function\n     * @public\n     * @returns {OutputFormat} The output format of recognition.\n     */\n    get outputFormat() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        if (this.properties.getProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) {\n            return Exports_js_3.OutputFormat.Simple;\n        }\n        else {\n            return Exports_js_3.OutputFormat.Detailed;\n        }\n    }\n    /**\n     * The collection of properties and their values defined for this SpeechRecognizer.\n     * @member SpeechRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts speech recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     * so it is suitable only for single shot recognition\n     * like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the SpeechRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.recognizeOnceAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(this.properties.getProperty(Exports_js_1.ForceDictationPropertyName, undefined) === undefined ? PhraseDetectionContext_js_1.RecognitionMode.Conversation : PhraseDetectionContext_js_1.RecognitionMode.Dictation), cb, err);\n    }\n    /**\n     * Stops continuous speech recognition.\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * Starts speech recognition with keyword spotting, until\n     * stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\n     * specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startKeywordRecognitionAsync(model, cb, err) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    }\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopKeywordRecognitionAsync(cb) {\n        if (!!cb) {\n            cb();\n        }\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member SpeechRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_1.SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.SpeechRecognizer = SpeechRecognizer;\n\n//# sourceMappingURL=SpeechRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Intent recognizer.\n * @class\n */\nclass IntentRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the IntentRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, new Exports_js_1.IntentConnectionFactory());\n        this.privAddedIntents = [];\n        this.privAddedLmIntents = {};\n        this.privDisposedIntentRecognizer = false;\n        this.privProperties = configImpl.properties;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member IntentRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} the spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member IntentRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\n     * @member IntentRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - Authorization token.\n     */\n    set authorizationToken(value) {\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * The collection of properties and their values defined for this IntentRecognizer.\n     * @member IntentRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their\n     * values defined for this IntentRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts intent recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text and intent as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     * so it is suitable only for single shot recognition like command or query.\n     * For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n            const context = this.buildSpeechContext();\n            this.privReco.speechContext.getContext().intent = context.Intent;\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n            const intentReco = this.privReco;\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n        }\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.recognizeOnceAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n            const context = this.buildSpeechContext();\n            this.privReco.speechContext.getContext().intent = context.Intent;\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n            const intentReco = this.privReco;\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n        }\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous intent recognition.\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     * This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startKeywordRecognitionAsync(model, cb, err) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    }\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     * This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopKeywordRecognitionAsync(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n        }\n    }\n    /**\n     * Adds a phrase that should be recognized as intent.\n     * @member IntentRecognizer.prototype.addIntent\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\n     */\n    addIntent(simplePhrase, intentId) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\n        this.privAddedIntents.push([intentId, simplePhrase]);\n    }\n    /**\n     * Adds an intent from Language Understanding service for recognition.\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent\n     * to be recognized. Ignored if intentName is empty.\n     * @param {string} model - The intent model from Language Understanding service.\n     * @param {string} intentName - The intent name defined in the intent model. If it\n     * is empty, all intent names defined in the model will be added.\n     */\n    addIntentWithLanguageModel(intentId, model, intentName) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        const modelImpl = model;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privAddedLmIntents[intentId] = new Exports_js_1.AddedLmIntent(modelImpl, intentName);\n    }\n    /**\n     * @summary Adds all intents from the specified Language Understanding Model.\n     * @member IntentRecognizer.prototype.addAllIntents\n     * @function\n     * @public\n     * @function\n     * @public\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\n     */\n    addAllIntents(model, intentId) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        const modelImpl = model;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privUmbrellaIntent = new Exports_js_1.AddedLmIntent(modelImpl, intentId);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member IntentRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedIntentRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedIntentRecognizer = true;\n            await super.dispose(disposing);\n        }\n    }\n    buildSpeechContext() {\n        let appId;\n        let region;\n        let subscriptionKey;\n        const refGrammers = [];\n        if (undefined !== this.privUmbrellaIntent) {\n            appId = this.privUmbrellaIntent.modelImpl.appId;\n            region = this.privUmbrellaIntent.modelImpl.region;\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\n        }\n        // Build the reference grammer array.\n        for (const intentId of Object.keys(this.privAddedLmIntents)) {\n            const addedLmIntent = this.privAddedLmIntents[intentId];\n            // validate all the same model, region, and key...\n            if (appId === undefined) {\n                appId = addedLmIntent.modelImpl.appId;\n            }\n            else {\n                if (appId !== addedLmIntent.modelImpl.appId) {\n                    throw new Error(\"Intents must all be from the same LUIS model\");\n                }\n            }\n            if (region === undefined) {\n                region = addedLmIntent.modelImpl.region;\n            }\n            else {\n                if (region !== addedLmIntent.modelImpl.region) {\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\n                }\n            }\n            if (subscriptionKey === undefined) {\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\n            }\n            else {\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\n                    throw new Error(\"Intents must all use the same subscription key\");\n                }\n            }\n            const grammer = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\n            refGrammers.push(grammer);\n        }\n        return {\n            Intent: {\n                id: appId,\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\n                provider: \"LUIS\",\n            },\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\n        };\n    }\n}\nexports.IntentRecognizer = IntentRecognizer;\n\n//# sourceMappingURL=IntentRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileType = void 0;\n/**\n * Output format\n * @class VoiceProfileType\n */\nvar VoiceProfileType;\n(function (VoiceProfileType) {\n    /**\n     * Text independent speaker identification\n     * @member VoiceProfileType.TextIndependentIdentification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextIndependentIdentification\"] = 0] = \"TextIndependentIdentification\";\n    /**\n     * Text dependent speaker verification\n     * @member VoiceProfileType.TextDependentVerification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextDependentVerification\"] = 1] = \"TextDependentVerification\";\n    /**\n     * Text independent speaker verification\n     * @member VoiceProfileType.TextIndependentVerification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextIndependentVerification\"] = 2] = \"TextIndependentVerification\";\n})(VoiceProfileType = exports.VoiceProfileType || (exports.VoiceProfileType = {}));\n\n//# sourceMappingURL=VoiceProfileType.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionMessageImpl = exports.ConnectionMessage = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst HeaderNames_js_1 = require(\"../common.speech/HeaderNames.js\");\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst PropertyCollection_js_1 = require(\"./PropertyCollection.js\");\nconst PropertyId_js_1 = require(\"./PropertyId.js\");\n/**\n * ConnectionMessage represents implementation specific messages sent to and received from\n * the speech service. These messages are provided for debugging purposes and should not\n * be used for production use cases with the Azure Cognitive Services Speech Service.\n * Messages sent to and received from the Speech Service are subject to change without\n * notice. This includes message contents, headers, payloads, ordering, etc.\n * Added in version 1.11.0.\n */\nclass ConnectionMessage {\n}\nexports.ConnectionMessage = ConnectionMessage;\nclass ConnectionMessageImpl {\n    constructor(message) {\n        this.privConnectionMessage = message;\n        this.privProperties = new PropertyCollection_js_1.PropertyCollection();\n        if (!!this.privConnectionMessage.headers[HeaderNames_js_1.HeaderNames.ConnectionId]) {\n            this.privProperties.setProperty(PropertyId_js_1.PropertyId.Speech_SessionId, this.privConnectionMessage.headers[HeaderNames_js_1.HeaderNames.ConnectionId]);\n        }\n        Object.keys(this.privConnectionMessage.headers).forEach((header) => {\n            this.privProperties.setProperty(header, this.privConnectionMessage.headers[header]);\n        });\n    }\n    /**\n     * The message path.\n     */\n    get path() {\n        return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((key) => key.toLowerCase() === \"path\".toLowerCase())];\n    }\n    /**\n     * Checks to see if the ConnectionMessage is a text message.\n     * See also IsBinaryMessage().\n     */\n    get isTextMessage() {\n        return this.privConnectionMessage.messageType === Exports_js_1.MessageType.Text;\n    }\n    /**\n     * Checks to see if the ConnectionMessage is a binary message.\n     * See also GetBinaryMessage().\n     */\n    get isBinaryMessage() {\n        return this.privConnectionMessage.messageType === Exports_js_1.MessageType.Binary;\n    }\n    /**\n     * Gets the text message payload. Typically the text message content-type is\n     * application/json. To determine other content-types use\n     * Properties.GetProperty(\"Content-Type\").\n     */\n    get TextMessage() {\n        return this.privConnectionMessage.textBody;\n    }\n    /**\n     * Gets the binary message payload.\n     */\n    get binaryMessage() {\n        return this.privConnectionMessage.binaryBody;\n    }\n    /**\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Returns a string that represents the connection message.\n     */\n    toString() {\n        return \"\";\n    }\n}\nexports.ConnectionMessageImpl = ConnectionMessageImpl;\n\n//# sourceMappingURL=ConnectionMessage.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst ConnectionMessage_js_1 = require(\"./ConnectionMessage.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\n * By default, a Recognizer autonomously manages connection to service when needed.\n * The Connection class provides additional methods for users to explicitly open or close a connection and\n * to subscribe to connection status changes.\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\n * in advance before starting recognition on the Recognizer associated with this Connection.\n * If the Recognizer needs to connect or disconnect to service, it will\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\n * status via Connected/Disconnected events.\n * Added in version 1.2.1.\n */\nclass Connection {\n    /**\n     * Gets the Connection instance from the specified recognizer.\n     * @param recognizer The recognizer associated with the connection.\n     * @return The Connection instance of the recognizer.\n     */\n    static fromRecognizer(recognizer) {\n        const recoBase = recognizer.internalData;\n        const ret = new Connection();\n        ret.privInternalData = recoBase;\n        ret.setupEvents();\n        return ret;\n    }\n    /**\n     * Gets the Connection instance from the specified synthesizer.\n     * @param synthesizer The synthesizer associated with the connection.\n     * @return The Connection instance of the synthesizer.\n     */\n    static fromSynthesizer(synthesizer) {\n        const synthBase = synthesizer.internalData;\n        const ret = new Connection();\n        ret.privInternalData = synthBase;\n        ret.setupEvents();\n        return ret;\n    }\n    /**\n     * Starts to set up connection to the service.\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notified when the connection is established.\n     */\n    openConnection(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privInternalData.connect(), cb, err);\n    }\n    /**\n     * Closes the connection the service.\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\n     *\n     * If closeConnection() is called during recognition, recognition will fail and cancel with an error.\n     */\n    closeConnection(cb, err) {\n        if (this.privInternalData instanceof Exports_js_1.SynthesisAdapterBase) {\n            throw new Error(\"Disconnecting a synthesizer's connection is currently not supported\");\n        }\n        else {\n            (0, Exports_js_2.marshalPromiseToCallbacks)(this.privInternalData.disconnect(), cb, err);\n        }\n    }\n    /**\n     * Appends a parameter in a message to service.\n     * Added in version 1.12.1.\n     * @param path The path of the network message.\n     * @param propertyName Name of the property\n     * @param propertyValue Value of the property. This is a json string.\n     */\n    setMessageProperty(path, propertyName, propertyValue) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(propertyName, \"propertyName\");\n        if (this.privInternalData instanceof Exports_js_1.ServiceRecognizerBase) {\n            if (path.toLowerCase() !== \"speech.context\") {\n                throw new Error(\"Only speech.context message property sets are currently supported for recognizer\");\n            }\n            else {\n                const context = this.privInternalData.speechContext.getContext();\n                context[propertyName] = propertyValue;\n            }\n        }\n        else if (this.privInternalData instanceof Exports_js_1.SynthesisAdapterBase) {\n            if (path.toLowerCase() !== \"speech.config\" && path.toLowerCase() !== \"synthesis.context\") {\n                throw new Error(\"Only speech.config and synthesis.context message paths are currently supported for synthesizer\");\n            }\n            else if (path.toLowerCase() === \"speech.config\") {\n                if (propertyName.toLowerCase() !== \"context\") {\n                    throw new Error(\"Only context property is currently supported for speech.config message path for synthesizer\");\n                }\n                else {\n                    this.privInternalData.synthesizerConfig.setContextFromJson(propertyValue);\n                }\n            }\n            else {\n                this.privInternalData.synthesisContext.setSection(propertyName, propertyValue);\n            }\n        }\n    }\n    /**\n     * Sends a message to the speech service.\n     * Added in version 1.13.0.\n     * @param path The WebSocket path of the message\n     * @param payload The payload of the message. This is a json string or a ArrayBuffer.\n     * @param success A callback to indicate success.\n     * @param error A callback to indicate an error.\n     */\n    sendMessageAsync(path, payload, success, error) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privInternalData.sendNetworkMessage(path, payload), success, error);\n    }\n    /**\n     * Dispose of associated resources.\n     */\n    close() {\n        /* eslint-disable no-empty */\n    }\n    setupEvents() {\n        this.privEventListener = this.privInternalData.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\n                if (!!this.connected) {\n                    this.connected(new Exports_js_3.ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                if (!!this.disconnected) {\n                    this.disconnected(new Exports_js_3.ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionMessageSentEvent\") {\n                if (!!this.messageSent) {\n                    this.messageSent(new Exports_js_3.ConnectionMessageEventArgs(new ConnectionMessage_js_1.ConnectionMessageImpl(connectionEvent.message)));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionMessageReceivedEvent\") {\n                if (!!this.messageReceived) {\n                    this.messageReceived(new Exports_js_3.ConnectionMessageEventArgs(new ConnectionMessage_js_1.ConnectionMessageImpl(connectionEvent.message)));\n                }\n            }\n        });\n        this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e) => {\n            if (!!this.receivedServiceMessage) {\n                this.receivedServiceMessage(new Exports_js_3.ServiceEventArgs(e.jsonString, e.name));\n            }\n        });\n    }\n}\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n/**\n * Translation recognizer\n * @class TranslationRecognizer\n */\nclass TranslationRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the TranslationRecognizer.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     * @param {IConnectionFactory} connectionFactory - An optional connection factory to use to generate the endpoint URIs, headers to set, etc...\n     */\n    constructor(speechConfig, audioConfig, connectionFactory) {\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, connectionFactory || new Exports_js_1.TranslationConnectionFactory(), speechConfig.tokenCredential);\n        this.privDisposedTranslationRecognizer = false;\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice]);\n        }\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages]);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * TranslationRecognizer constructor.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechTranslationConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechTranslationConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechTranslationConfigImpl = speechTranslationConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechTranslationConfigImpl.properties);\n        if (autoDetectSourceLanguageConfig.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined) === Exports_js_1.AutoDetectSourceLanguagesOpenRangeOptionName) {\n            speechTranslationConfigImpl.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\n        }\n        return new TranslationRecognizer(speechTranslationConfig, audioConfig);\n    }\n    /**\n     * Gets the language name that was set when the recognizer was created.\n     * @member TranslationRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} Gets the language name that was set when the recognizer was created.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets target languages for translation that were set when the recognizer was created.\n     * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\n     * @member TranslationRecognizer.prototype.targetLanguages\n     * @function\n     * @public\n     * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\n     */\n    get targetLanguages() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n    }\n    /**\n     * Gets the name of output voice.\n     * @member TranslationRecognizer.prototype.voiceName\n     * @function\n     * @public\n     * @returns {string} the name of output voice.\n     */\n    get voiceName() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n    }\n    /**\n     * The collection of properties and their values defined for this TranslationRecognizer.\n     * @member TranslationRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member TranslationRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member TranslationRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - Authorization token.\n     */\n    set authorizationToken(value) {\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * Starts recognition and translation, and stops after the first utterance is recognized.\n     * The task returns the translation text as result.\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitable only\n     * for single shot recognition like command or query. For long-running recognition,\n     * use startContinuousRecognitionAsync() instead.\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the translation has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.recognizeOnceAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive translation results.\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous recognition and translation.\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * dynamically remove a language from list of target language\n     * (can be used while recognition is ongoing)\n     * @member TranslationRecognizer.prototype.removeTargetLanguage\n     * @function\n     * @param lang - language to be removed\n     * @public\n     */\n    removeTargetLanguage(lang) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(lang, \"language to be removed\");\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            const languages = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n            const index = languages.indexOf(lang);\n            if (index > -1) {\n                languages.splice(index, 1);\n                this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n                this.updateLanguages(languages);\n            }\n        }\n    }\n    /**\n     * dynamically add a language to list of target language\n     * (can be used while recognition is ongoing)\n     * @member TranslationRecognizer.prototype.addTargetLanguage\n     * @function\n     * @param lang - language to be added\n     * @public\n     */\n    addTargetLanguage(lang) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(lang, \"language to be added\");\n        let languages = [];\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            languages = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n            if (!languages.includes(lang)) {\n                languages.push(lang);\n                this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n            }\n        }\n        else {\n            this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, lang);\n            languages = [lang];\n        }\n        this.updateLanguages(languages);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member TranslationRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * handles ConnectionEstablishedEvent for conversation translation scenarios.\n     * @member TranslationRecognizer.prototype.onConnection\n     * @function\n     * @public\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onConnection() { }\n    async dispose(disposing) {\n        if (this.privDisposedTranslationRecognizer) {\n            return;\n        }\n        this.privDisposedTranslationRecognizer = true;\n        if (disposing) {\n            await this.implRecognizerStop();\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_1.TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n    updateLanguages(languages) {\n        const conn = Connection_js_1.Connection.fromRecognizer(this);\n        if (!!conn) {\n            conn.setMessageProperty(\"speech.context\", \"translationcontext\", { to: languages });\n            conn.sendMessageAsync(\"event\", JSON.stringify({\n                id: \"translation\",\n                name: \"updateLanguage\",\n                to: languages\n            }));\n        }\n    }\n}\nexports.TranslationRecognizer = TranslationRecognizer;\n\n//# sourceMappingURL=TranslationRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Translations = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Represents collection of parameters and their values.\n * @class Translations\n */\nclass Translations {\n    constructor() {\n        // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\n        this.privMap = new Exports_js_1.PropertyCollection();\n    }\n    /**\n     * Get the languages in the object in a String array.\n     * @member Translations.prototype.languages\n     * @function\n     * @public\n     * @returns {string[]} languages in translations object.\n     */\n    get languages() {\n        return this.privMap.keys;\n    }\n    /**\n     * Returns the parameter value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member Translations.prototype.get\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    get(key, def) {\n        return this.privMap.getProperty(key, def);\n    }\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member Translations.prototype.set\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    set(key, value) {\n        this.privMap.setProperty(key, value);\n    }\n}\nexports.Translations = Translations;\n\n//# sourceMappingURL=Translations.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoMatchReason = void 0;\n/**\n * Defines the possible reasons a recognition result might not be recognized.\n * @class NoMatchReason\n */\nvar NoMatchReason;\n(function (NoMatchReason) {\n    /**\n     * Indicates that speech was detected, but not recognized.\n     * @member NoMatchReason.NotRecognized\n     */\n    NoMatchReason[NoMatchReason[\"NotRecognized\"] = 0] = \"NotRecognized\";\n    /**\n     * Indicates that the start of the audio stream contained only silence,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialSilenceTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialSilenceTimeout\"] = 1] = \"InitialSilenceTimeout\";\n    /**\n     * Indicates that the start of the audio stream contained only noise,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialBabbleTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialBabbleTimeout\"] = 2] = \"InitialBabbleTimeout\";\n})(NoMatchReason = exports.NoMatchReason || (exports.NoMatchReason = {}));\n\n//# sourceMappingURL=NoMatchReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoMatchDetails = void 0;\nconst Exports_js_1 = require(\"../../src/common.speech/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\nclass NoMatchDetails {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {NoMatchReason} reason - The no-match reason.\n     */\n    constructor(reason) {\n        this.privReason = reason;\n    }\n    /**\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n     * @member NoMatchDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n     * result - The recognition result that was not recognized.\n     * @returns {NoMatchDetails} The no match details object being created.\n     */\n    static fromResult(result) {\n        const simpleSpeech = Exports_js_1.SimpleSpeechPhrase.fromJSON(result.json, 0); // Offset fixups are already done.\n        let reason = Exports_js_2.NoMatchReason.NotRecognized;\n        switch (simpleSpeech.RecognitionStatus) {\n            case Exports_js_1.RecognitionStatus.BabbleTimeout:\n                reason = Exports_js_2.NoMatchReason.InitialBabbleTimeout;\n                break;\n            case Exports_js_1.RecognitionStatus.InitialSilenceTimeout:\n                reason = Exports_js_2.NoMatchReason.InitialSilenceTimeout;\n                break;\n            default:\n                reason = Exports_js_2.NoMatchReason.NotRecognized;\n                break;\n        }\n        return new NoMatchDetails(reason);\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member NoMatchDetails.prototype.reason\n     * @function\n     * @public\n     * @returns {NoMatchReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.NoMatchDetails = NoMatchDetails;\n\n//# sourceMappingURL=NoMatchDetails.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationRecognitionCanceledEventArgs = void 0;\n/**\n * Define payload of speech recognition canceled result events.\n * @class TranslationRecognitionCanceledEventArgs\n */\nclass TranslationRecognitionCanceledEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionid - The session id.\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {TranslationRecognitionResult} result - The result.\n     */\n    constructor(sessionid, cancellationReason, errorDetails, errorCode, result) {\n        this.privCancelReason = cancellationReason;\n        this.privErrorDetails = errorDetails;\n        this.privResult = result;\n        this.privSessionId = sessionid;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n    /**\n     * Specifies the session identifier.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\n     * @function\n     * @public\n     * @returns {string} the session identifier.\n     */\n    get sessionId() {\n        return this.privSessionId;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privCancelReason;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.TranslationRecognitionCanceledEventArgs = TranslationRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=TranslationRecognitionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentRecognitionCanceledEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Define payload of intent recognition canceled result events.\n * @class IntentRecognitionCanceledEventArgs\n */\nclass IntentRecognitionCanceledEventArgs extends Exports_js_1.IntentRecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} result - The result of the intent recognition.\n     * @param {string} offset - The offset.\n     * @param {IntentRecognitionResult} sessionId - The session id.\n     */\n    constructor(reason, errorDetails, errorCode, result, offset, sessionId) {\n        super(result, offset, sessionId);\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member IntentRecognitionCanceledEventArgs.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.IntentRecognitionCanceledEventArgs = IntentRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=IntentRecognitionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationDetailsBase = void 0;\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetailsBase\n */\nclass CancellationDetailsBase {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - The error details, if provided.\n     */\n    constructor(reason, errorDetails, errorCode) {\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member CancellationDetailsBase.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member CancellationDetailsBase.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get ErrorCode() {\n        return this.privErrorCode;\n    }\n}\nexports.CancellationDetailsBase = CancellationDetailsBase;\n\n//# sourceMappingURL=CancellationDetailsBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationDetails = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst CancellationDetailsBase_js_1 = require(\"./CancellationDetailsBase.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetails\n */\nclass CancellationDetails extends CancellationDetailsBase_js_1.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\n     * @member CancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\n     * @returns {CancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        let reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (result instanceof Exports_js_2.RecognitionResult && !!result.json) {\n            const simpleSpeech = Exports_js_1.SimpleSpeechPhrase.fromJSON(result.json, 0); // Offset fixups are already done.\n            reason = Exports_js_1.EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\n        }\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])];\n        }\n        return new CancellationDetails(reason, result.errorDetails || Exports_js_1.EnumTranslation.implTranslateErrorDetails(errorCode), errorCode);\n    }\n}\nexports.CancellationDetails = CancellationDetails;\n\n//# sourceMappingURL=CancellationDetails.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationErrorCode = void 0;\n/**\n * Defines error code in case that CancellationReason is Error.\n * Added in version 1.1.0.\n */\nvar CancellationErrorCode;\n(function (CancellationErrorCode) {\n    /**\n     * Indicates that no error occurred during speech recognition.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"NoError\"] = 0] = \"NoError\";\n    /**\n     * Indicates an authentication error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"AuthenticationFailure\"] = 1] = \"AuthenticationFailure\";\n    /**\n     * Indicates that one or more recognition parameters are invalid.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"BadRequestParameters\"] = 2] = \"BadRequestParameters\";\n    /**\n     * Indicates that the number of parallel requests exceeded the number of allowed\n     * concurrent transcriptions for the subscription.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"TooManyRequests\"] = 3] = \"TooManyRequests\";\n    /**\n     * Indicates a connection error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ConnectionFailure\"] = 4] = \"ConnectionFailure\";\n    /**\n     * Indicates a time-out error when waiting for response from service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceTimeout\"] = 5] = \"ServiceTimeout\";\n    /**\n     * Indicates that an error is returned by the service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceError\"] = 6] = \"ServiceError\";\n    /**\n     * Indicates an unexpected runtime error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"RuntimeError\"] = 7] = \"RuntimeError\";\n    /**\n     * Indicates an quota overrun on existing key.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"Forbidden\"] = 8] = \"Forbidden\";\n})(CancellationErrorCode = exports.CancellationErrorCode || (exports.CancellationErrorCode = {}));\n\n//# sourceMappingURL=CancellationErrorCodes.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines payload for connection events like Connected/Disconnected.\n * Added in version 1.2.0\n */\nclass ConnectionEventArgs extends Exports_js_1.SessionEventArgs {\n}\nexports.ConnectionEventArgs = ConnectionEventArgs;\n\n//# sourceMappingURL=ConnectionEventArgs.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceEventArgs = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines payload for any Service message event\n * Added in version 1.9.0\n */\nclass ServiceEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} json - json payload of the USP message.\n     */\n    constructor(json, name, sessionId) {\n        super(sessionId);\n        this.privJsonResult = json;\n        this.privEventName = name;\n    }\n    get jsonString() {\n        return this.privJsonResult;\n    }\n    get eventName() {\n        return this.privEventName;\n    }\n}\nexports.ServiceEventArgs = ServiceEventArgs;\n\n//# sourceMappingURL=ServiceEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PhraseListGrammar = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\nclass PhraseListGrammar {\n    constructor(recogBase) {\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\n    }\n    /**\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n     * @param recognizer The recognizer to add phrase lists to.\n     */\n    static fromRecognizer(recognizer) {\n        const recoBase = recognizer.internalData;\n        return new PhraseListGrammar(recoBase);\n    }\n    /**\n     * Adds a single phrase to the current recognizer.\n     * @param phrase Phrase to add.\n     */\n    addPhrase(phrase) {\n        this.privGrammerBuilder.addPhrase(phrase);\n    }\n    /**\n     * Adds multiple phrases to the current recognizer.\n     * @param phrases Array of phrases to add.\n     */\n    addPhrases(phrases) {\n        this.privGrammerBuilder.addPhrase(phrases);\n    }\n    /**\n     * Clears all phrases added to the current recognizer.\n     */\n    clear() {\n        this.privGrammerBuilder.clearPhrases();\n    }\n    /**\n     * Sets the phrase list grammar biasing weight.\n     * The allowed range is [0.0, 2.0].\n     * The default weight is 1.0. Value zero disables the phrase list.\n     * @param weight Phrase list grammar biasing weight.\n     */\n    setWeight(weight) {\n        Contracts_js_1.Contracts.throwIfNumberOutOfRange(weight, \"weight\", 0.0, 2.0);\n        this.privGrammerBuilder.setWeight(weight);\n    }\n}\nexports.PhraseListGrammar = PhraseListGrammar;\n\n//# sourceMappingURL=PhraseListGrammar.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceConfigImpl = exports.DialogServiceConfig = void 0;\n/* eslint-disable max-classes-per-file */\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Class that defines base configurations for dialog service connector\n * @class DialogServiceConfig\n */\nclass DialogServiceConfig {\n    /**\n     * Creates an instance of DialogService config.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Sets the corresponding backend application identifier.\n     * @member DialogServiceConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to set.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    set applicationId(value) { }\n    static get DialogTypes() {\n        return {\n            BotFramework: \"bot_framework\",\n            CustomCommands: \"custom_commands\"\n        };\n    }\n}\nexports.DialogServiceConfig = DialogServiceConfig;\n/**\n * Dialog Service configuration.\n * @class DialogServiceConfigImpl\n */\nclass DialogServiceConfigImpl extends DialogServiceConfig {\n    /**\n     * Creates an instance of dialogService config.\n     */\n    constructor() {\n        super();\n        this.privSpeechConfig = new Exports_js_1.SpeechConfigImpl();\n    }\n    /**\n     * Provides access to custom properties.\n     * @member DialogServiceConfigImpl.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The properties.\n     */\n    get properties() {\n        return this.privSpeechConfig.properties;\n    }\n    /**\n     * Gets the speech recognition language.\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechConfig.speechRecognitionLanguage;\n    }\n    /**\n     * Sets the speech recognition language.\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @param {string} value - The language to set.\n     */\n    set speechRecognitionLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechConfig.speechRecognitionLanguage = value;\n    }\n    get outputFormat() {\n        return this.privSpeechConfig.outputFormat;\n    }\n    set outputFormat(value) {\n        this.privSpeechConfig.outputFormat = value;\n    }\n    /**\n     * Sets a named property as value\n     * @member DialogServiceConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {PropertyId | string} name - The property to set.\n     * @param {string} value - The value.\n     */\n    setProperty(name, value) {\n        this.privSpeechConfig.setProperty(name, value);\n    }\n    /**\n     * Sets a named property as value\n     * @member DialogServiceConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {PropertyId | string} name - The property to get.\n     * @param {string} def - The default value to return in case the property is not known.\n     * @returns {string} The current value, or provided default, of the given property.\n     */\n    getProperty(name, def) {\n        void def;\n        return this.privSpeechConfig.getProperty(name);\n    }\n    /**\n     * Sets the proxy configuration.\n     * Only relevant in Node.js environments.\n     * Added in version 1.4.0.\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\n     * @param proxyPort The port number of the proxy server.\n     * @param proxyUserName The user name of the proxy server.\n     * @param proxyPassword The password of the proxy server.\n     */\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyHostName, proxyHostName);\n        this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPort, `${proxyPort}`);\n        if (proxyUserName) {\n            this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyUserName, proxyUserName);\n        }\n        if (proxyPassword) {\n            this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPassword, proxyPassword);\n        }\n    }\n    setServiceProperty(name, value, channel) {\n        void channel;\n        this.privSpeechConfig.setServiceProperty(name, value);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member DialogServiceConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n}\nexports.DialogServiceConfigImpl = DialogServiceConfigImpl;\n\n//# sourceMappingURL=DialogServiceConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BotFrameworkConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst DialogServiceConfig_js_1 = require(\"./DialogServiceConfig.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Class that defines configurations for the dialog service connector object for using a Bot Framework backend.\n * @class BotFrameworkConfig\n */\nclass BotFrameworkConfig extends DialogServiceConfig_js_1.DialogServiceConfigImpl {\n    /**\n     * Creates an instance of BotFrameworkConfig.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a bot framework configuration instance with the provided subscription information.\n     * @member BotFrameworkConfig.fromSubscription\n     * @function\n     * @public\n     * @param subscription Subscription key associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromSubscription(subscription, region, botId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscription);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        if (botId) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, botId);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates a bot framework configuration instance for the specified authorization token and region.\n     * Note: The caller must ensure that an authorization token is valid. Before an authorization token expires, the\n     * caller must refresh it by setting the authorizationToken property on the corresponding\n     * DialogServiceConnector instance created with this config. The contents of configuration objects are copied\n     * when connectors are created, so setting authorizationToken on a DialogServiceConnector will not update the\n     * original configuration's authorization token. Create a new configuration instance or set the\n     * SpeechServiceAuthorization_Token property to update an existing instance if it will be used to create\n     * further DialogServiceConnectors.\n     * @member BotFrameworkConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param authorizationToken The authorization token associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromAuthorizationToken(authorizationToken, region, botId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        if (botId) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, botId);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates an instance of a BotFrameworkConfig.\n     * This method is intended only for users who use a non-default service host. The standard resource path will be\n     * assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL) and then set the AuthorizationToken\n     * property on the created BotFrameworkConfig instance.\n     * Note: Added in version 1.15.0.\n     * @member BotFrameworkConfig.fromHost\n     * @function\n     * @public\n     * @param {URL | string} host - If a URL is provided, the fully-qualified host with protocol (e.g.\n     * wss://your.host.com:1234) will be used. If a string is provided, it will be embedded in\n     * wss://{host}.convai.speech.azure.us.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\n     * token must be set.\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromHost(host, subscriptionKey, botId) {\n        void botId;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(host, \"host\");\n        const resolvedHost = host instanceof URL ? host : new URL(`wss://${host}.convai.speech.azure.us`);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(resolvedHost, \"resolvedHost\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Host, resolvedHost.toString());\n        if (undefined !== subscriptionKey) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates an instance of a BotFrameworkConfig.\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created BotFrameworkConfig instance to\n     * use the authorization token.\n     * Note: Added in version 1.15.0.\n     * @member BotFrameworkConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\n     * token must be set.\n     * @returns {BotFrameworkConfig} - A new bot framework configuration instance using the provided endpoint.\n     */\n    static fromEndpoint(endpoint, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Endpoint, endpoint.toString());\n        if (undefined !== subscriptionKey) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return botFrameworkConfig;\n    }\n}\nexports.BotFrameworkConfig = BotFrameworkConfig;\n\n//# sourceMappingURL=BotFrameworkConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomCommandsConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst DialogServiceConfig_js_1 = require(\"./DialogServiceConfig.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Class that defines configurations for the dialog service connector object for using a CustomCommands backend.\n * @class CustomCommandsConfig\n */\nclass CustomCommandsConfig extends DialogServiceConfig_js_1.DialogServiceConfigImpl {\n    /**\n     * Creates an instance of CustomCommandsConfig.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified subscription and region.\n     * @member CustomCommandsConfig.fromSubscription\n     * @function\n     * @public\n     * @param applicationId Speech Commands application id.\n     * @param subscription Subscription key associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {CustomCommandsConfig} A new bot framework config.\n     */\n    static fromSubscription(applicationId, subscription, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const customCommandsConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.CustomCommands);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, applicationId);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscription);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        return customCommandsConfig;\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified Speech Commands application id, authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member CustomCommandsConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param applicationId Speech Commands application id.\n     * @param authorizationToken The authorization token associated with the application.\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {CustomCommandsConfig} A new speech commands config.\n     */\n    static fromAuthorizationToken(applicationId, authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const customCommandsConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.CustomCommands);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, applicationId);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        return customCommandsConfig;\n    }\n    /**\n     * Sets the corresponding backend application identifier.\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to set.\n     */\n    set applicationId(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, value);\n    }\n    /**\n     * Gets the corresponding backend application identifier.\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to get.\n     */\n    get applicationId() {\n        return this.getProperty(Exports_js_1.PropertyId.Conversation_ApplicationId);\n    }\n}\nexports.CustomCommandsConfig = CustomCommandsConfig;\n\n//# sourceMappingURL=CustomCommandsConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryParameterNames = void 0;\nclass QueryParameterNames {\n}\nexports.QueryParameterNames = QueryParameterNames;\nQueryParameterNames.BotId = \"botid\";\nQueryParameterNames.CustomSpeechDeploymentId = \"cid\";\nQueryParameterNames.CustomVoiceDeploymentId = \"deploymentId\";\nQueryParameterNames.EnableAudioLogging = \"storeAudio\";\nQueryParameterNames.EnableLanguageId = \"lidEnabled\";\nQueryParameterNames.EnableWordLevelTimestamps = \"wordLevelTimestamps\";\nQueryParameterNames.EndSilenceTimeoutMs = \"endSilenceTimeoutMs\";\nQueryParameterNames.SegmentationSilenceTimeoutMs = \"segmentationSilenceTimeoutMs\";\nQueryParameterNames.SegmentationMaximumTimeMs = \"segmentationMaximumTimeMs\";\nQueryParameterNames.SegmentationStrategy = \"segmentationStrategy\";\nQueryParameterNames.Format = \"format\";\nQueryParameterNames.InitialSilenceTimeoutMs = \"initialSilenceTimeoutMs\";\nQueryParameterNames.Language = \"language\";\nQueryParameterNames.Profanity = \"profanity\";\nQueryParameterNames.RequestBotStatusMessages = \"enableBotMessageStatus\";\nQueryParameterNames.StableIntermediateThreshold = \"stableIntermediateThreshold\";\nQueryParameterNames.StableTranslation = \"stableTranslation\";\nQueryParameterNames.TestHooks = \"testhooks\";\nQueryParameterNames.Postprocessing = \"postprocessing\";\nQueryParameterNames.CtsMeetingId = \"meetingId\";\nQueryParameterNames.CtsDeviceId = \"deviceId\";\nQueryParameterNames.CtsIsParticipant = \"isParticipant\";\nQueryParameterNames.EnableAvatar = \"enableTalkingAvatar\";\n\n//# sourceMappingURL=QueryParameterNames.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionFactoryBase = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass ConnectionFactoryBase {\n    static getHostSuffix(region) {\n        if (!!region) {\n            if (region.toLowerCase().startsWith(\"china\")) {\n                return \".azure.cn\";\n            }\n            if (region.toLowerCase().startsWith(\"usgov\")) {\n                return \".azure.us\";\n            }\n        }\n        return \".microsoft.com\";\n    }\n    setCommonUrlParams(config, queryParams, endpoint) {\n        const propertyIdToParameterMap = new Map([\n            [Exports_js_3.PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.SegmentationSilenceTimeoutMs],\n            [Exports_js_3.PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames_js_1.QueryParameterNames.EnableAudioLogging],\n            [Exports_js_3.PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.EndSilenceTimeoutMs],\n            [Exports_js_3.PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.InitialSilenceTimeoutMs],\n            [Exports_js_3.PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames_js_1.QueryParameterNames.Postprocessing],\n            [Exports_js_3.PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames_js_1.QueryParameterNames.Profanity],\n            [Exports_js_3.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, QueryParameterNames_js_1.QueryParameterNames.EnableWordLevelTimestamps],\n            [Exports_js_3.PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames_js_1.QueryParameterNames.StableIntermediateThreshold],\n        ]);\n        propertyIdToParameterMap.forEach((parameterName, propertyId) => {\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\n        });\n        const serviceProperties = JSON.parse(config.parameters.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        Object.keys(serviceProperties).forEach((value) => {\n            queryParams[value] = serviceProperties[value];\n        });\n    }\n    setUrlParameter(propId, parameterName, config, queryParams, endpoint) {\n        const value = config.parameters.getProperty(propId, undefined);\n        // FIXME: The .search() check will incorrectly match parameter name anywhere in the string\n        //        including e.g. the path portion, or even as a substring of other query parameters\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\n            queryParams[parameterName] = value.toLocaleLowerCase();\n        }\n    }\n    static async getRedirectUrlFromEndpoint(endpoint) {\n        // make a rest call to the endpoint to get the redirect url\n        const redirectUrl = new URL(endpoint);\n        redirectUrl.protocol = \"https:\";\n        redirectUrl.port = \"443\";\n        const params = redirectUrl.searchParams;\n        params.append(\"GenerateRedirectResponse\", \"true\");\n        const redirectedUrlString = redirectUrl.toString();\n        Exports_js_2.Events.instance.onEvent(new Exports_js_2.ConnectionRedirectEvent(\"\", redirectedUrlString, undefined, \"ConnectionFactoryBase: redirectUrl request\"));\n        const redirectResponse = await fetch(redirectedUrlString);\n        if (redirectResponse.status !== 200) {\n            return endpoint;\n        }\n        // Fix: properly read the response text\n        const redirectUrlString = await redirectResponse.text();\n        Exports_js_2.Events.instance.onEvent(new Exports_js_2.ConnectionRedirectEvent(\"\", redirectUrlString, endpoint, \"ConnectionFactoryBase: redirectUrlString\"));\n        try {\n            // Validate the URL before returning\n            return new URL(redirectUrlString.trim()).toString();\n        }\n        catch (error) {\n            return endpoint; // Return original endpoint if the redirect URL is invalid\n        }\n    }\n}\nexports.ConnectionFactoryBase = ConnectionFactoryBase;\n\n//# sourceMappingURL=ConnectionFactoryBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogConnectionFactory = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common.speech/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass DialogConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        const applicationId = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_ApplicationId, \"\");\n        const dialogType = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_DialogType);\n        const region = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Region);\n        const language = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\n        const requestTurnStatus = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_Request_Bot_Status_Messages, \"true\");\n        const queryParams = {};\n        queryParams[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = config.parameters.getProperty(Exports_js_2.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.RequestBotStatusMessages] = requestTurnStatus;\n        if (applicationId) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.BotId] = applicationId;\n            if (dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands) {\n                queryParams[HeaderNames_js_1.HeaderNames.CustomCommandsAppId] = applicationId;\n            }\n        }\n        const resourceInfix = dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands ? \"commands/\"\n            : \"\";\n        const version = dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands ? \"v1\"\n            : dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.BotFramework ? \"v3\"\n                : \"v0\";\n        const headers = {};\n        if (authInfo.token != null && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        // The URL used for connection is chosen in a priority order of specification:\n        //  1. If a custom endpoint is provided, that URL is used verbatim.\n        //  2. If a custom host is provided (e.g. \"wss://my.custom.endpoint.com:1123\"), a URL is constructed from it.\n        //  3. If no custom connection details are provided, a URL is constructed from default values.\n        let endpoint = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint, \"\");\n        if (!endpoint) {\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Host, `wss://${region}.${DialogConnectionFactory.BaseUrl}${hostSuffix}`);\n            const standardizedHost = host.endsWith(\"/\") ? host : host + \"/\";\n            endpoint = `${standardizedHost}${resourceInfix}${DialogConnectionFactory.ApiKey}/${version}`;\n        }\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n}\nexports.DialogConnectionFactory = DialogConnectionFactory;\nDialogConnectionFactory.ApiKey = \"api\";\nDialogConnectionFactory.BaseUrl = \"convai.speech\";\n\n//# sourceMappingURL=DialogConnectorFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceConnector = void 0;\nconst DialogConnectorFactory_js_1 = require(\"../common.speech/DialogConnectorFactory.js\");\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst PropertyId_js_1 = require(\"./PropertyId.js\");\n/**\n * Dialog Service Connector\n * @class DialogServiceConnector\n */\nclass DialogServiceConnector extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the DialogServiceConnector.\n     * @constructor\n     * @param {DialogServiceConfig} dialogConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     */\n    constructor(dialogConfig, audioConfig) {\n        const dialogServiceConfigImpl = dialogConfig;\n        Contracts_js_1.Contracts.throwIfNull(dialogConfig, \"dialogConfig\");\n        super(audioConfig, dialogServiceConfigImpl.properties, new DialogConnectorFactory_js_1.DialogConnectionFactory());\n        this.isTurnComplete = true;\n        this.privIsDisposed = false;\n        this.privProperties = dialogServiceConfigImpl.properties.clone();\n        const agentConfig = this.buildAgentConfig();\n        this.privReco.agentConfig.set(agentConfig);\n    }\n    /**\n     * Starts a connection to the service.\n     * Users can optionally call connect() to manually set up a connection in advance, before starting interactions.\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notified when the connection is established.\n     * @member DialogServiceConnector.prototype.connect\n     * @function\n     * @public\n     */\n    connect(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privReco.connect(), cb, err);\n    }\n    /**\n     * Closes the connection the service.\n     * Users can optionally call disconnect() to manually shutdown the connection of the associated DialogServiceConnector.\n     *\n     * If disconnect() is called during a recognition, recognition will fail and cancel with an error.\n     */\n    disconnect(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privReco.disconnect(), cb, err);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member DialogServiceConnector.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId_js_1.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Sets the authorization token used to communicate with the service.\n     * @member DialogServiceConnector.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId_js_1.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this DialogServiceConnector.\n     * @member DialogServiceConnector.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this DialogServiceConnector.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /** Gets the template for the activity generated by service from speech.\n     * Properties from the template will be stamped on the generated activity.\n     * It can be empty\n     */\n    get speechActivityTemplate() {\n        return this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Speech_Activity_Template);\n    }\n    /** Sets the template for the activity generated by service from speech.\n     * Properties from the template will be stamped on the generated activity.\n     * It can be null or empty.\n     * Note: it has to be a valid Json object.\n     */\n    set speechActivityTemplate(speechActivityTemplate) {\n        this.properties.setProperty(PropertyId_js_1.PropertyId.Conversation_Speech_Activity_Template, speechActivityTemplate);\n    }\n    /**\n     * Starts recognition and stops after the first utterance is recognized.\n     * @member DialogServiceConnector.prototype.listenOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the reco has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    listenOnceAsync(cb, err) {\n        if (this.isTurnComplete) {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            const callbackHolder = async () => {\n                await this.privReco.connect();\n                await this.implRecognizerStop();\n                this.isTurnComplete = false;\n                const ret = new Exports_js_2.Deferred();\n                await this.privReco.recognize(PhraseDetectionContext_js_1.RecognitionMode.Conversation, ret.resolve, ret.reject);\n                const e = await ret.promise;\n                await this.implRecognizerStop();\n                return e;\n            };\n            const retPromise = callbackHolder();\n            retPromise.catch(() => {\n                // Destroy the recognizer.\n                // We've done all we can here.\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                this.dispose(true).catch(() => { });\n            });\n            (0, Exports_js_2.marshalPromiseToCallbacks)(retPromise.finally(() => {\n                this.isTurnComplete = true;\n            }), cb, err);\n        }\n    }\n    sendActivityAsync(activity, cb, errCb) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.privReco.sendMessage(activity), cb, errCb);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member DialogServiceConnector.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, err);\n    }\n    async dispose(disposing) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (disposing) {\n            this.privIsDisposed = true;\n            await this.implRecognizerStop();\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioSource = audioConfig;\n        return new Exports_js_1.DialogServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\n    }\n    buildAgentConfig() {\n        const communicationType = this.properties.getProperty(\"Conversation_Communication_Type\", \"Default\");\n        return {\n            botInfo: {\n                commType: communicationType,\n                commandsCulture: undefined,\n                connectionId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Agent_Connection_Id),\n                conversationId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Conversation_Id, undefined),\n                fromId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_From_Id, undefined),\n                ttsAudioFormat: this.properties.getProperty(PropertyId_js_1.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)\n            },\n            version: 0.2\n        };\n    }\n}\nexports.DialogServiceConnector = DialogServiceConnector;\n\n//# sourceMappingURL=DialogServiceConnector.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActivityReceivedEventArgs = void 0;\n/**\n * Defines contents of received message/events.\n * @class ActivityReceivedEventArgs\n */\nclass ActivityReceivedEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {any} activity - The activity..\n     */\n    constructor(activity, audioStream) {\n        this.privActivity = activity;\n        this.privAudioStream = audioStream;\n    }\n    /**\n     * Gets the received activity\n     * @member ActivityReceivedEventArgs.prototype.activity\n     * @function\n     * @public\n     * @returns {any} the received activity.\n     */\n    get activity() {\n        return this.privActivity;\n    }\n    get audioStream() {\n        return this.privAudioStream;\n    }\n}\nexports.ActivityReceivedEventArgs = ActivityReceivedEventArgs;\n\n//# sourceMappingURL=ActivityReceivedEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TurnStatusResponsePayload = void 0;\nclass TurnStatusResponsePayload {\n    constructor(json) {\n        this.privMessageStatusResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new TurnStatusResponsePayload(json);\n    }\n    get interactionId() {\n        return this.privMessageStatusResponse.interactionId;\n    }\n    get conversationId() {\n        return this.privMessageStatusResponse.conversationId;\n    }\n    get statusCode() {\n        // Payloads may contain a limited set of textual representations or a numeric status\n        // code. The textual values are here converted into numeric ones.\n        switch (this.privMessageStatusResponse.statusCode) {\n            case \"Success\":\n                return 200;\n            case \"Failed\":\n                return 400;\n            case \"TimedOut\":\n                return 429;\n            default:\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return this.privMessageStatusResponse.statusCode;\n        }\n    }\n}\nexports.TurnStatusResponsePayload = TurnStatusResponsePayload;\n\n//# sourceMappingURL=TurnStatusPayload.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TurnStatusReceivedEventArgs = void 0;\nconst TurnStatusPayload_js_1 = require(\"../common.speech/ServiceMessages/TurnStatusPayload.js\");\n/**\n * Defines contents of received message/events.\n * @class TurnStatusReceivedEventArgs\n */\nclass TurnStatusReceivedEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} turnStatus - The JSON-encoded turn status message.\n     */\n    constructor(turnStatus) {\n        this.privTurnStatus = TurnStatusPayload_js_1.TurnStatusResponsePayload.fromJSON(turnStatus);\n    }\n    /**\n     * Gets the interaction identifier associated with this turn status event.\n     * @member TurnStatusReceivedEventArgs.prototype.interactionId\n     * @function\n     * @public\n     * @returns {any} the received interaction id.\n     */\n    get interactionId() {\n        return this.privTurnStatus.interactionId;\n    }\n    /**\n     * Gets the conversation identifier associated with this turn status event.\n     * @member TurnStatusReceivedEventArgs.prototype.conversationId\n     * @function\n     * @public\n     * @returns {any} the received conversation id.\n     */\n    get conversationId() {\n        return this.privTurnStatus.conversationId;\n    }\n    /**\n     * Gets the received turn status code.\n     * @member TurnStatusReceivedEventArgs.prototype.statusCode\n     * @function\n     * @public\n     * @returns {number} the received turn status.\n     */\n    get statusCode() {\n        return this.privTurnStatus.statusCode; // eslint-disable-line @typescript-eslint/no-unsafe-return\n    }\n}\nexports.TurnStatusReceivedEventArgs = TurnStatusReceivedEventArgs;\n\n//# sourceMappingURL=TurnStatusReceivedEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServicePropertyChannel = void 0;\n/**\n * Defines channels used to pass property settings to service.\n * Added in version 1.7.0.\n */\nvar ServicePropertyChannel;\n(function (ServicePropertyChannel) {\n    /**\n     * Uses URI query parameter to pass property settings to service.\n     */\n    ServicePropertyChannel[ServicePropertyChannel[\"UriQueryParameter\"] = 0] = \"UriQueryParameter\";\n})(ServicePropertyChannel = exports.ServicePropertyChannel || (exports.ServicePropertyChannel = {}));\n\n//# sourceMappingURL=ServicePropertyChannel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProfanityOption = void 0;\n/**\n * Profanity option.\n * Added in version 1.7.0.\n */\nvar ProfanityOption;\n(function (ProfanityOption) {\n    ProfanityOption[ProfanityOption[\"Masked\"] = 0] = \"Masked\";\n    ProfanityOption[ProfanityOption[\"Removed\"] = 1] = \"Removed\";\n    ProfanityOption[ProfanityOption[\"Raw\"] = 2] = \"Raw\";\n})(ProfanityOption = exports.ProfanityOption || (exports.ProfanityOption = {}));\n\n//# sourceMappingURL=ProfanityOption.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseAudioPlayer = void 0;\nconst Error_js_1 = require(\"../../common/Error.js\");\nconst Exports_js_1 = require(\"../Exports.js\");\nconst AudioStreamFormat_js_1 = require(\"./AudioStreamFormat.js\");\n/**\n * Base audio player class\n * TODO: Plays only PCM for now.\n * @class\n */\nclass BaseAudioPlayer {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {AudioStreamFormat} audioFormat audio stream format recognized by the player.\n     */\n    constructor(audioFormat) {\n        this.audioContext = null;\n        this.gainNode = null;\n        this.autoUpdateBufferTimer = 0;\n        if (audioFormat === undefined) {\n            audioFormat = Exports_js_1.AudioStreamFormat.getDefaultInputFormat();\n        }\n        this.init(audioFormat);\n    }\n    /**\n     * play Audio sample\n     * @param newAudioData audio data to be played.\n     */\n    playAudioSample(newAudioData, cb, err) {\n        try {\n            this.ensureInitializedContext();\n            const audioData = this.formatAudioData(newAudioData);\n            const newSamplesData = new Float32Array(this.samples.length + audioData.length);\n            newSamplesData.set(this.samples, 0);\n            newSamplesData.set(audioData, this.samples.length);\n            this.samples = newSamplesData;\n            if (!!cb) {\n                cb();\n            }\n        }\n        catch (e) {\n            if (!!err) {\n                err(e);\n            }\n        }\n    }\n    /**\n     * stops audio and clears the buffers\n     */\n    stopAudio(cb, err) {\n        if (this.audioContext !== null) {\n            this.samples = new Float32Array();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearInterval(this.autoUpdateBufferTimer);\n            this.audioContext.close().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            this.audioContext = null;\n        }\n    }\n    init(audioFormat) {\n        this.audioFormat = audioFormat;\n        this.samples = new Float32Array();\n    }\n    ensureInitializedContext() {\n        if (this.audioContext === null) {\n            this.createAudioContext();\n            const timerPeriod = 200;\n            this.autoUpdateBufferTimer = setInterval(() => {\n                this.updateAudioBuffer();\n            }, timerPeriod);\n        }\n    }\n    createAudioContext() {\n        // new ((window as any).AudioContext || (window as any).webkitAudioContext)();\n        this.audioContext = AudioStreamFormat_js_1.AudioStreamFormatImpl.getAudioContext();\n        // TODO: Various examples shows this gain node, it does not seem to be needed unless we plan\n        // to control the volume, not likely\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.gain.value = 1;\n        this.gainNode.connect(this.audioContext.destination);\n        this.startTime = this.audioContext.currentTime;\n    }\n    formatAudioData(audioData) {\n        switch (this.audioFormat.bitsPerSample) {\n            case 8:\n                return this.formatArrayBuffer(new Int8Array(audioData), 128);\n            case 16:\n                return this.formatArrayBuffer(new Int16Array(audioData), 32768);\n            case 32:\n                return this.formatArrayBuffer(new Int32Array(audioData), 2147483648);\n            default:\n                throw new Error_js_1.InvalidOperationError(\"Only WAVE_FORMAT_PCM (8/16/32 bps) format supported at this time\");\n        }\n    }\n    formatArrayBuffer(audioData, maxValue) {\n        const float32Data = new Float32Array(audioData.length);\n        for (let i = 0; i < audioData.length; i++) {\n            float32Data[i] = audioData[i] / maxValue;\n        }\n        return float32Data;\n    }\n    updateAudioBuffer() {\n        if (this.samples.length === 0) {\n            return;\n        }\n        const channelCount = this.audioFormat.channels;\n        const bufferSource = this.audioContext.createBufferSource();\n        const frameCount = this.samples.length / channelCount;\n        const audioBuffer = this.audioContext.createBuffer(channelCount, frameCount, this.audioFormat.samplesPerSec);\n        // TODO: Should we do the conversion in the pushAudioSample instead?\n        for (let channel = 0; channel < channelCount; channel++) {\n            // Fill in individual channel data\n            let channelOffset = channel;\n            const audioData = audioBuffer.getChannelData(channel);\n            for (let i = 0; i < this.samples.length; i++, channelOffset += channelCount) {\n                audioData[i] = this.samples[channelOffset];\n            }\n        }\n        if (this.startTime < this.audioContext.currentTime) {\n            this.startTime = this.audioContext.currentTime;\n        }\n        bufferSource.buffer = audioBuffer;\n        bufferSource.connect(this.gainNode);\n        bufferSource.start(this.startTime);\n        // Make sure we play the next sample after the current one.\n        this.startTime += audioBuffer.duration;\n        // Clear the samples for the next pushed data.\n        this.samples = new Float32Array();\n    }\n    async playAudio(audioData) {\n        if (this.audioContext === null) {\n            this.createAudioContext();\n        }\n        const source = this.audioContext.createBufferSource();\n        const destination = this.audioContext.destination;\n        await this.audioContext.decodeAudioData(audioData, (newBuffer) => {\n            source.buffer = newBuffer;\n            source.connect(destination);\n            source.start(0);\n        });\n    }\n}\nexports.BaseAudioPlayer = BaseAudioPlayer;\n\n//# sourceMappingURL=BaseAudioPlayer.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionMessageEventArgs = void 0;\nclass ConnectionMessageEventArgs {\n    constructor(message) {\n        this.privConnectionMessage = message;\n    }\n    /**\n     * Gets the <see cref=\"ConnectionMessage\"/> associated with this <see cref=\"ConnectionMessageEventArgs\"/>.\n     */\n    get message() {\n        return this.privConnectionMessage;\n    }\n    /**\n     * Returns a string that represents the connection message event.\n     */\n    toString() {\n        return \"Message: \" + this.privConnectionMessage.toString();\n    }\n}\nexports.ConnectionMessageEventArgs = ConnectionMessageEventArgs;\n\n//# sourceMappingURL=ConnectionMessageEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfile = void 0;\n/**\n * Defines Voice Profile class for Speaker Recognition\n * @class VoiceProfile\n */\nclass VoiceProfile {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} profileId - profileId of this Voice Profile.\n     * @param {VoiceProfileType} profileType - profileType of this Voice Profile.\n     */\n    constructor(profileId, profileType) {\n        this.privId = profileId;\n        this.privProfileType = profileType;\n    }\n    /**\n     * profileId of this Voice Profile instance\n     * @member VoiceProfile.prototype.profileId\n     * @function\n     * @public\n     * @returns {string} profileId of this Voice Profile instance.\n     */\n    get profileId() {\n        return this.privId;\n    }\n    /**\n     * profileType of this Voice Profile instance\n     * @member VoiceProfile.prototype.profileType\n     * @function\n     * @public\n     * @returns {VoiceProfileType} profile type of this Voice Profile instance.\n     */\n    get profileType() {\n        return this.privProfileType;\n    }\n}\nexports.VoiceProfile = VoiceProfile;\n\n//# sourceMappingURL=VoiceProfile.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileEnrollmentCancellationDetails = exports.VoiceProfileEnrollmentResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Output format\n * @class VoiceProfileEnrollmentResult\n */\nclass VoiceProfileEnrollmentResult {\n    constructor(reason, json, statusText) {\n        this.privReason = reason;\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        if (this.privReason !== Exports_js_2.ResultReason.Canceled) {\n            if (!!json) {\n                this.privDetails = JSON.parse(json);\n                if (this.privDetails.enrollmentStatus.toLowerCase() === \"enrolling\") {\n                    this.privReason = Exports_js_2.ResultReason.EnrollingVoiceProfile;\n                }\n            }\n        }\n        else {\n            this.privErrorDetails = statusText;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.ServiceError]);\n        }\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get enrollmentsCount() {\n        return this.privDetails.enrollmentsCount;\n    }\n    get enrollmentsLength() {\n        return this.privDetails.enrollmentsLength;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get enrollmentResultDetails() {\n        return this.privDetails;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    static FromIdentificationProfileList(json) {\n        const results = [];\n        for (const item of json.value) {\n            const reason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\n                Exports_js_2.ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\n                Exports_js_2.ResultReason.EnrolledVoiceProfile : Exports_js_2.ResultReason.Canceled;\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\n            result.privDetails = this.getIdentificationDetails(item);\n            results.push(result);\n        }\n        return results;\n    }\n    static FromVerificationProfileList(json) {\n        const results = [];\n        for (const item of json.value) {\n            const reason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\n                Exports_js_2.ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\n                Exports_js_2.ResultReason.EnrolledVoiceProfile : Exports_js_2.ResultReason.Canceled;\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\n            result.privDetails = this.getVerificationDetails(item);\n            results.push(result);\n        }\n        return results;\n    }\n    static getIdentificationDetails(json) {\n        return {\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\n            enrollmentStatus: json.enrollmentStatus,\n            enrollmentsCount: json.enrollmentsCount || 0,\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\n            profileId: json.profileId || json.identificationProfileId,\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\n        };\n    }\n    static getVerificationDetails(json) {\n        return {\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\n            enrollmentStatus: json.enrollmentStatus,\n            enrollmentsCount: json.enrollmentsCount,\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\n            profileId: json.profileId || json.verificationProfileId,\n            remainingEnrollmentsCount: json.remainingEnrollments || json.remainingEnrollmentsCount,\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\n        };\n    }\n}\nexports.VoiceProfileEnrollmentResult = VoiceProfileEnrollmentResult;\n/**\n * @class VoiceProfileEnrollmentCancellationDetails\n */\nclass VoiceProfileEnrollmentCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of VoiceProfileEnrollmentCancellationDetails object for the canceled VoiceProfileEnrollmentResult.\n     * @member VoiceProfileEnrollmentCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {VoiceProfileEnrollmentResult} result - The result that was canceled.\n     * @returns {VoiceProfileEnrollmentCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])]; //eslint-disable-line\n        }\n        return new VoiceProfileEnrollmentCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.VoiceProfileEnrollmentCancellationDetails = VoiceProfileEnrollmentCancellationDetails;\n\n//# sourceMappingURL=VoiceProfileEnrollmentResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileCancellationDetails = exports.VoiceProfileResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Output format\n * @class VoiceProfileResult\n */\nclass VoiceProfileResult {\n    constructor(reason, statusText) {\n        this.privReason = reason;\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        if (reason === Exports_js_2.ResultReason.Canceled) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(statusText, \"statusText\");\n            this.privErrorDetails = statusText;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.ServiceError]);\n        }\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.VoiceProfileResult = VoiceProfileResult;\n/**\n * @class VoiceProfileCancellationDetails\n */\nclass VoiceProfileCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of VoiceProfileCancellationDetails object for the canceled VoiceProfileResult.\n     * @member VoiceProfileCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {VoiceProfileResult} result - The result that was canceled.\n     * @returns {VoiceProfileCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])]; //eslint-disable-line\n        }\n        return new VoiceProfileCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.VoiceProfileCancellationDetails = VoiceProfileCancellationDetails;\n\n//# sourceMappingURL=VoiceProfileResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfilePhraseResult = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Output format\n * @class VoiceProfilePhraseResult\n */\nclass VoiceProfilePhraseResult extends Exports_js_1.VoiceProfileResult {\n    constructor(reason, statusText, type, phraseArray) {\n        super(reason, statusText);\n        this.privPhrases = [];\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(phraseArray, \"phrase array\");\n        this.privType = type;\n        if (!!phraseArray && !!phraseArray[0]) {\n            this.privPhrases = phraseArray;\n        }\n    }\n    get phrases() {\n        return this.privPhrases;\n    }\n    get type() {\n        return this.privType;\n    }\n}\nexports.VoiceProfilePhraseResult = VoiceProfilePhraseResult;\n\n//# sourceMappingURL=VoiceProfilePhraseResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileClient = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst AudioConfig_js_1 = require(\"./Audio/AudioConfig.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Defines VoiceProfileClient class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class VoiceProfileClient\n */\nclass VoiceProfileClient extends Exports_js_2.Recognizer {\n    /**\n     * VoiceProfileClient constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer (authentication key, region, &c)\n     */\n    constructor(speechConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        super(AudioConfig_js_1.AudioConfig.fromStreamInput(Exports_js_2.AudioInputStream.createPushStream()), speechConfigImpl.properties, new Exports_js_1.VoiceProfileConnectionFactory());\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.privVoiceAdapter = this.privReco;\n        this.privDisposedVoiceAdapter = false;\n    }\n    /**\n     * The collection of properties and their values defined for this VoiceProfileClient.\n     * @member VoiceProfileClient.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this VoiceProfileClient.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member VoiceProfileClient.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member VoiceProfileClient.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Create a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.createProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType Type of Voice Profile to be created\n     * @param {string} lang Language string (locale) for Voice Profile\n     * @return {Promise<VoiceProfile>} - Promise of a VoiceProfile.\n     */\n    async createProfileAsync(profileType, lang) {\n        const profileIds = await this.privVoiceAdapter.createProfile(profileType, lang);\n        return new Exports_js_2.VoiceProfile(profileIds[0], profileType);\n    }\n    /**\n     * Get current information of a voice profile\n     * @member VoiceProfileClient.prototype.retrieveEnrollmentResultAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to retrieve info for\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\n     */\n    async retrieveEnrollmentResultAsync(profile) {\n        return this.privVoiceAdapter.retrieveEnrollmentResult(profile);\n    }\n    /**\n     * Get all voice profiles on account with given voice profile type\n     * @member VoiceProfileClient.prototype.getAllProfilesAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType profile type (identification/verification) for which to list profiles\n     * @return {Promise<VoiceProfileEnrollmentResult[]>} - Promise of an array of VoiceProfileEnrollmentResults.\n     */\n    async getAllProfilesAsync(profileType) {\n        return this.privVoiceAdapter.getAllProfiles(profileType);\n        /*\n        const result: { json: { value: EnrollmentResultJSON[] } } = await this.privAdapter.getProfiles(profileType);\n        if (profileType === VoiceProfileType.TextIndependentIdentification) {\n            return VoiceProfileEnrollmentResult.FromIdentificationProfileList(result.json);\n        }\n        return VoiceProfileEnrollmentResult.FromVerificationProfileList(result.json);\n        */\n    }\n    /**\n     * Get valid authorization phrases for voice profile enrollment\n     * @member VoiceProfileClient.prototype.getActivationPhrasesAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType Profile Type to get activation phrases for\n     * @param {string} lang Language string (locale) for Voice Profile\n     */\n    async getActivationPhrasesAsync(profileType, lang) {\n        return this.privVoiceAdapter.getActivationPhrases(profileType, lang);\n    }\n    /**\n     * Create a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.enrollProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to create enrollment for\n     * @param {AudioConfig} audioConfig source info from which to create enrollment\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\n     */\n    async enrollProfileAsync(profile, audioConfig) {\n        const configImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"audioConfig\");\n        this.audioConfig = audioConfig;\n        this.privVoiceAdapter.SpeakerAudioSource = configImpl;\n        return this.privVoiceAdapter.enrollProfile(profile);\n    }\n    /**\n     * Delete a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.deleteProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to be deleted\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\n     */\n    async deleteProfileAsync(profile) {\n        return this.privVoiceAdapter.deleteProfile(profile);\n    }\n    /**\n     * Remove all enrollments for a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.resetProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to be reset\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\n     */\n    async resetProfileAsync(profile) {\n        return this.privVoiceAdapter.resetProfile(profile);\n    }\n    /**\n     * Clean up object and close underlying connection\n     * @member VoiceProfileClient.prototype.close\n     * @function\n     * @async\n     * @public\n     */\n    async close() {\n        await this.dispose(true);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.VoiceServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedVoiceAdapter) {\n            return;\n        }\n        this.privDisposedVoiceAdapter = true;\n        if (disposing) {\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.properties);\n    }\n    getResult(result, successReason) {\n        const response = new Exports_js_2.VoiceProfileResult(result.ok ? successReason : Exports_js_2.ResultReason.Canceled, result.statusText);\n        return (response);\n    }\n}\nexports.VoiceProfileClient = VoiceProfileClient;\n\n//# sourceMappingURL=VoiceProfileClient.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n/**\n * Defines SpeakerRecognizer class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class SpeakerRecognizer\n */\nclass SpeakerRecognizer extends Exports_js_2.Recognizer {\n    /**\n     * Initializes an instance of the SpeakerRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, new Exports_js_1.SpeakerRecognitionConnectionFactory());\n        this.privAudioConfigImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\n        this.privDisposedSpeakerRecognizer = false;\n        this.privProperties = configImpl.properties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this SpeakerRecognizer.\n     * @member SpeakerRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Get recognition result for model using given audio\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @async\n     * @param {SpeakerIdentificationModel | SpeakerVerificationModel} model Model containing Voice Profiles to be identified\n     * @param cb - Callback invoked once result is returned.\n     * @param err - Callback invoked in case of an error.\n     */\n    async recognizeOnceAsync(model) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        return this.recognizeSpeakerOnceAsyncImpl(model);\n    }\n    /**\n     * Included for compatibility\n     * @member SpeakerRecognizer.prototype.close\n     * @function\n     * @public\n     * @async\n     */\n    async close() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        await this.dispose(true);\n    }\n    async recognizeSpeakerOnceAsyncImpl(model) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        await this.implRecognizerStop();\n        const result = await this.privReco.recognizeSpeaker(model);\n        await this.implRecognizerStop();\n        return result;\n    }\n    async implRecognizerStop() {\n        if (this.privReco) {\n            await this.privReco.stopRecognizing();\n        }\n        return;\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.SpeakerServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedSpeakerRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedSpeakerRecognizer = true;\n            await super.dispose(disposing);\n        }\n    }\n}\nexports.SpeakerRecognizer = SpeakerRecognizer;\n\n//# sourceMappingURL=SpeakerRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerIdentificationModel = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\nclass SpeakerIdentificationModel {\n    constructor(profiles) {\n        this.privVoiceProfiles = [];\n        this.privProfileIds = [];\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n        if (profiles.length === 0) {\n            throw new Error(\"Empty Voice Profiles array\");\n        }\n        for (const profile of profiles) {\n            if (profile.profileType !== Exports_js_1.VoiceProfileType.TextIndependentIdentification) {\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n            }\n            this.privVoiceProfiles.push(profile);\n            this.privProfileIds.push(profile.profileId);\n        }\n    }\n    static fromProfiles(profiles) {\n        return new SpeakerIdentificationModel(profiles);\n    }\n    get voiceProfileIds() {\n        return this.privProfileIds.join(\",\");\n    }\n    get profileIds() {\n        return this.privProfileIds;\n    }\n    get scenario() {\n        return \"TextIndependentIdentification\";\n    }\n}\nexports.SpeakerIdentificationModel = SpeakerIdentificationModel;\n\n//# sourceMappingURL=SpeakerIdentificationModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerVerificationModel = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines SpeakerVerificationModel class for Speaker Recognition\n * Model contains a profile against which to verify a speaker\n * @class SpeakerVerificationModel\n */\nclass SpeakerVerificationModel {\n    constructor(profile) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(profile, \"VoiceProfile\");\n        if (profile.profileType === Exports_js_1.VoiceProfileType.TextIndependentIdentification) {\n            throw new Error(\"Verification model cannot be created from Identification profile\");\n        }\n        this.privVoiceProfile = profile;\n    }\n    static fromProfile(profile) {\n        return new SpeakerVerificationModel(profile);\n    }\n    get voiceProfile() {\n        return this.privVoiceProfile;\n    }\n    get profileIds() {\n        return [this.voiceProfile.profileId];\n    }\n    get scenario() {\n        if (this.voiceProfile.profileType === Exports_js_1.VoiceProfileType.TextDependentVerification) {\n            return \"TextDependentVerification\";\n        }\n        else {\n            return \"TextIndependentVerification\";\n        }\n    }\n}\nexports.SpeakerVerificationModel = SpeakerVerificationModel;\n\n//# sourceMappingURL=SpeakerVerificationModel.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LanguageIdMode = void 0;\n/**\n * Language Identification mode\n * @class LanguageIdMode\n */\nvar LanguageIdMode;\n(function (LanguageIdMode) {\n    /**\n     * Detect language at audio start\n     * @member LanguageIdMode.AtStart\n     */\n    LanguageIdMode[LanguageIdMode[\"AtStart\"] = 0] = \"AtStart\";\n    /**\n     * Continuously detect language\n     * @member LanguageIdMode.Continuous\n     */\n    LanguageIdMode[LanguageIdMode[\"Continuous\"] = 1] = \"Continuous\";\n})(LanguageIdMode = exports.LanguageIdMode || (exports.LanguageIdMode = {}));\n\n//# sourceMappingURL=LanguageIdMode.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoDetectSourceLanguageConfig = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nconst LanguageIdMode_js_1 = require(\"./LanguageIdMode.js\");\n/**\n * Language auto detect configuration.\n * @class AutoDetectSourceLanguageConfig\n * Added in version 1.13.0.\n */\nclass AutoDetectSourceLanguageConfig {\n    constructor() {\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\n        this.privLanguageIdMode = LanguageIdMode_js_1.LanguageIdMode.AtStart;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromOpenRange\n     * @function\n     * @public\n     * Only [[SpeechSynthesizer]] supports source language auto detection from open range,\n     * for [[Recognizer]], please use AutoDetectSourceLanguageConfig with specific source languages.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with open range.\n     */\n    static fromOpenRange() {\n        const config = new AutoDetectSourceLanguageConfig();\n        config.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, Exports_js_1.AutoDetectSourceLanguagesOpenRangeOptionName);\n        config.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\n        return config;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromLanguages\n     * @function\n     * @public\n     * @param {string[]} languages Comma-separated string of languages (eg. \"en-US,fr-FR\") to populate properties of config.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given languages.\n     */\n    static fromLanguages(languages) {\n        Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, \"languages\");\n        const config = new AutoDetectSourceLanguageConfig();\n        config.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, languages.join());\n        return config;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromSourceLanguageConfigs\n     * @function\n     * @public\n     * @param {SourceLanguageConfig[]} configs SourceLanguageConfigs to populate properties of config.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given SourceLanguageConfigs.\n     */\n    static fromSourceLanguageConfigs(configs) {\n        if (configs.length < 1) {\n            throw new Error(\"Expected non-empty SourceLanguageConfig array.\");\n        }\n        const autoConfig = new AutoDetectSourceLanguageConfig();\n        const langs = [];\n        configs.forEach((config) => {\n            langs.push(config.language);\n            if (config.endpointId !== undefined && config.endpointId !== \"\") {\n                const customProperty = config.language + Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId.toString();\n                autoConfig.properties.setProperty(customProperty, config.endpointId);\n            }\n        });\n        autoConfig.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, langs.join());\n        return autoConfig;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets an auto detected language config properties\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.prototype.mode\n     * @function\n     * @public\n     * @param {LanguageIdMode} mode LID mode desired.\n     * @summary Sets LID operation to desired mode\n     */\n    set mode(mode) {\n        if (mode === LanguageIdMode_js_1.LanguageIdMode.Continuous) {\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"Continuous\");\n        }\n        else { // LanguageIdMode.AtStart\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"1\");\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\n        }\n        this.privLanguageIdMode = mode;\n    }\n}\nexports.AutoDetectSourceLanguageConfig = AutoDetectSourceLanguageConfig;\n\n//# sourceMappingURL=AutoDetectSourceLanguageConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoDetectSourceLanguageResult = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Output format\n * @class AutoDetectSourceLanguageResult\n */\nclass AutoDetectSourceLanguageResult {\n    constructor(language, languageDetectionConfidence) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(language, \"language\");\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n    }\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult} result - The recognition result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n    static fromResult(result) {\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n    }\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a ConversationTranscriptionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromConversationTranscriptionResult\n     * @function\n     * @public\n     * @param {ConversationTranscriptionResult} result - The transcription result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n    static fromConversationTranscriptionResult(result) {\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n    }\n    get language() {\n        return this.privLanguage;\n    }\n    get languageDetectionConfidence() {\n        return this.privLanguageDetectionConfidence;\n    }\n}\nexports.AutoDetectSourceLanguageResult = AutoDetectSourceLanguageResult;\n\n//# sourceMappingURL=AutoDetectSourceLanguageResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceLanguageConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\n/**\n * Source Language configuration.\n * @class SourceLanguageConfig\n */\nclass SourceLanguageConfig {\n    constructor(language, endpointId) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(language, \"language\");\n        this.privLanguage = language;\n        this.privEndpointId = endpointId;\n    }\n    /**\n     * @member SourceLanguageConfig.fromLanguage\n     * @function\n     * @public\n     * @param {string} language language (eg. \"en-US\") value of config.\n     * @param {string?} endpointId endpointId of model bound to given language of config.\n     * @return {SourceLanguageConfig} Instance of SourceLanguageConfig\n     * @summary Creates an instance of the SourceLanguageConfig with the given language and optional endpointId.\n     * Added in version 1.13.0.\n     */\n    static fromLanguage(language, endpointId) {\n        return new SourceLanguageConfig(language, endpointId);\n    }\n    get language() {\n        return this.privLanguage;\n    }\n    get endpointId() {\n        return this.privEndpointId;\n    }\n}\nexports.SourceLanguageConfig = SourceLanguageConfig;\n\n//# sourceMappingURL=SourceLanguageConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerRecognitionCancellationDetails = exports.SpeakerRecognitionResult = exports.SpeakerRecognitionResultType = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nvar SpeakerRecognitionResultType;\n(function (SpeakerRecognitionResultType) {\n    SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Verify\"] = 0] = \"Verify\";\n    SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Identify\"] = 1] = \"Identify\";\n})(SpeakerRecognitionResultType = exports.SpeakerRecognitionResultType || (exports.SpeakerRecognitionResultType = {}));\n/**\n * Output format\n * @class SpeakerRecognitionResult\n */\nclass SpeakerRecognitionResult {\n    constructor(response, resultReason = Exports_js_2.ResultReason.RecognizedSpeaker, cancellationErrorCode = Exports_js_2.CancellationErrorCode.NoError, errorDetails = \"\") {\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        const resultType = response.scenario === \"TextIndependentIdentification\" ? SpeakerRecognitionResultType.Identify : SpeakerRecognitionResultType.Verify;\n        this.privReason = resultReason;\n        if (this.privReason !== Exports_js_2.ResultReason.Canceled) {\n            if (resultType === SpeakerRecognitionResultType.Identify) {\n                this.privProfileId = response.identificationResult.identifiedProfile.profileId;\n                this.privScore = response.identificationResult.identifiedProfile.score;\n                this.privReason = Exports_js_2.ResultReason.RecognizedSpeakers;\n            }\n            else {\n                this.privScore = response.verificationResult.score;\n                if (response.verificationResult.recognitionResult.toLowerCase() !== \"accept\") {\n                    this.privReason = Exports_js_2.ResultReason.NoMatch;\n                }\n                if (response.verificationResult.profileId !== undefined && response.verificationResult.profileId !== \"\") {\n                    this.privProfileId = response.verificationResult.profileId;\n                }\n            }\n        }\n        else {\n            this.privErrorDetails = errorDetails;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[cancellationErrorCode]);\n        }\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, JSON.stringify(response));\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get profileId() {\n        return this.privProfileId;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    get score() {\n        return this.privScore;\n    }\n}\nexports.SpeakerRecognitionResult = SpeakerRecognitionResult;\n/**\n * @class SpeakerRecognitionCancellationDetails\n */\nclass SpeakerRecognitionCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\n     * @member SpeakerRecognitionCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])];\n        }\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.SpeakerRecognitionCancellationDetails = SpeakerRecognitionCancellationDetails;\n\n//# sourceMappingURL=SpeakerRecognitionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationImpl = exports.Conversation = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nclass Conversation {\n    constructor() {\n        return;\n    }\n    /**\n     * Create a conversation\n     * @param speechConfig\n     * @param cb\n     * @param err\n     */\n    static createConversationAsync(speechConfig, arg2, arg3, arg4) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.region, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceAuthorization_Token])) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\n        }\n        let conversationImpl;\n        let cb;\n        let err;\n        if (typeof arg2 === \"string\") {\n            conversationImpl = new ConversationImpl(speechConfig, arg2);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            (0, Exports_js_2.marshalPromiseToCallbacks)((async () => { })(), arg3, arg4);\n        }\n        else {\n            conversationImpl = new ConversationImpl(speechConfig);\n            cb = arg2;\n            err = arg3;\n            conversationImpl.createConversationAsync((() => {\n                if (!!cb) {\n                    cb();\n                }\n            }), (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        return conversationImpl;\n    }\n}\nexports.Conversation = Conversation;\nclass ConversationImpl extends Conversation {\n    /**\n     * Create a conversation impl\n     * @param speechConfig\n     * @param {string} id - optional conversationId\n     */\n    constructor(speechConfig, id) {\n        super();\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        /** websocket callbacks */\n        /* eslint-disable @typescript-eslint/typedef */\n        this.onConnected = (e) => {\n            this.privIsConnected = true;\n            try {\n                if (!!this.privConversationTranslator?.sessionStarted) {\n                    this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onDisconnected = (e) => {\n            try {\n                if (!!this.privConversationTranslator?.sessionStopped) {\n                    this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n            finally {\n                void this.close(false);\n            }\n        };\n        this.onCanceled = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator?.canceled) {\n                    this.privConversationTranslator.canceled(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantUpdateCommandReceived = (r, e) => {\n            try {\n                const updatedParticipant = this.privParticipants.getParticipant(e.id);\n                if (updatedParticipant !== undefined) {\n                    switch (e.key) {\n                        case Exports_js_1.ConversationTranslatorCommandTypes.changeNickname:\n                            updatedParticipant.displayName = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setUseTTS:\n                            updatedParticipant.isUsingTts = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering:\n                            updatedParticipant.profanity = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setMute:\n                            updatedParticipant.isMuted = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages:\n                            updatedParticipant.translateToLanguages = e.value;\n                            break;\n                    }\n                    this.privParticipants.addOrUpdateParticipant(updatedParticipant);\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, [this.toParticipant(updatedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onLockRoomCommandReceived = () => {\n            // TODO\n        };\n        this.onMuteAllCommandReceived = (r, e) => {\n            try {\n                this.privParticipants.participants.forEach((p) => p.isMuted = (p.isHost ? false : e.isMuted));\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, this.toParticipants(false), e.sessionId));\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantJoinCommandReceived = (r, e) => {\n            try {\n                const newParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\n                if (newParticipant !== undefined) {\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, [this.toParticipant(newParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantLeaveCommandReceived = (r, e) => {\n            try {\n                const ejectedParticipant = this.privParticipants.getParticipant(e.participant.id);\n                if (ejectedParticipant !== undefined) {\n                    // remove the participant from the internal participants list\n                    this.privParticipants.deleteParticipant(e.participant.id);\n                    if (!!this.privConversationTranslator) {\n                        // notify subscribers that the participant has left the conversation\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.LeftConversation, [this.toParticipant(ejectedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onTranslationReceived = (r, e) => {\n            try {\n                switch (e.command) {\n                    case Exports_js_1.ConversationTranslatorMessageTypes.final:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribed(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.partial:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribing(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.instantMessage:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.textMessageReceived(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantsListReceived = (r, e) => {\n            try {\n                // check if the session token needs to be updated\n                if (e.sessionToken !== undefined && e.sessionToken !== null) {\n                    this.privRoom.token = e.sessionToken;\n                }\n                // save the participants\n                this.privParticipants.participants = [...e.participants];\n                // enable the conversation\n                if (this.privParticipants.me !== undefined) {\n                    this.privIsReady = true;\n                }\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\n                }\n                // if this is the host, update the nickname if needed\n                if (this.me.isHost) {\n                    const nickname = this.privConversationTranslator?.properties.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Name);\n                    if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\n                        // issue a change nickname request\n                        this.changeNicknameAsync(nickname);\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onConversationExpiration = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.privIsConnected = false;\n        this.privIsDisposed = false;\n        this.privConversationId = \"\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privManager = new Exports_js_1.ConversationManager();\n        // check the speech language\n        const language = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!language) {\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], Exports_js_1.ConversationConnectionConfig.defaultLanguageCode);\n        }\n        this.privLanguage = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!id) {\n            // check the target language(s)\n            if (speechConfig.targetLanguages.length === 0) {\n                speechConfig.addTargetLanguage(this.privLanguage);\n            }\n            // check the profanity setting: speech and conversationTranslator should be in sync\n            const profanity = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceResponse_ProfanityOption]);\n            if (!profanity) {\n                speechConfig.setProfanity(Exports_js_3.ProfanityOption.Masked);\n            }\n            // check the nickname: it should pass this regex: ^\\w+([\\s-][\\w\\(\\)]+)*$\"\n            // TODO: specify the regex required. Nicknames must be unique or get the duplicate nickname error\n            // TODO: check what the max length is and if a truncation is required or if the service handles it without an error\n            let hostNickname = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name]);\n            if (hostNickname === undefined || hostNickname === null) {\n                hostNickname = \"Host\";\n            }\n            Contracts_js_1.Contracts.throwIfNullOrTooLong(hostNickname, \"nickname\", 50);\n            Contracts_js_1.Contracts.throwIfNullOrTooShort(hostNickname, \"nickname\", 2);\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name], hostNickname);\n        }\n        else {\n            this.privConversationId = id;\n        }\n        // save the speech config for future usage\n        this.privConfig = speechConfig;\n        // save the config properties\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        this.privProperties = configImpl.properties.clone();\n        this.privIsConnected = false;\n        this.privParticipants = new Exports_js_1.InternalParticipants();\n        this.privIsReady = false;\n        this.privTextMessageMaxLength = 1000;\n    }\n    // get the internal data about a conversation\n    get room() {\n        return this.privRoom;\n    }\n    // get the wrapper for connecting to the websockets\n    get connection() {\n        return this.privConversationRecognizer; // this.privConnection;\n    }\n    // get the config\n    get config() {\n        return this.privConfig;\n    }\n    // get the conversation Id\n    get conversationId() {\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\n    }\n    // get the properties\n    get properties() {\n        return this.privProperties;\n    }\n    // get the speech language\n    get speechRecognitionLanguage() {\n        return this.privLanguage;\n    }\n    get isMutedByHost() {\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\n    }\n    get isConnected() {\n        return this.privIsConnected && this.privIsReady;\n    }\n    get participants() {\n        return this.toParticipants(true);\n    }\n    get me() {\n        return this.toParticipant(this.privParticipants.me);\n    }\n    get host() {\n        return this.toParticipant(this.privParticipants.host);\n    }\n    get transcriberRecognizer() {\n        return this.privTranscriberRecognizer;\n    }\n    get conversationInfo() {\n        const convId = this.conversationId;\n        const p = this.participants.map((part) => ({\n            id: part.id,\n            preferredLanguage: part.preferredLanguage,\n            voice: part.voice\n        }));\n        const props = {};\n        for (const key of Exports_js_1.ConversationConnectionConfig.transcriptionEventKeys) {\n            const val = this.properties.getProperty(key, \"\");\n            if (val !== \"\") {\n                props[key] = val;\n            }\n        }\n        const info = { id: convId, participants: p, conversationProperties: props };\n        return info;\n    }\n    get canSend() {\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\n    }\n    get canSendAsHost() {\n        return this.privIsConnected && this.privParticipants.me?.isHost;\n    }\n    // get / set the speech auth token\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    get authorizationToken() {\n        return this.privToken;\n    }\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\n        this.privToken = value;\n    }\n    set conversationTranslator(conversationTranslator) {\n        this.privConversationTranslator = conversationTranslator;\n    }\n    onToken(token) {\n        this.privConversationTranslator.onToken(token);\n    }\n    /**\n     * Create a new conversation as Host\n     * @param cb\n     * @param err\n     */\n    createConversationAsync(cb, err) {\n        try {\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            this.privManager.createOrJoin(this.privProperties, undefined, ((room) => {\n                if (!room) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\n                }\n                this.privRoom = room;\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Starts a new conversation as host.\n     * @param cb\n     * @param err\n     */\n    startConversationAsync(cb, err) {\n        try {\n            // check if there is already a recognizer\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            // check if there is conversation data available\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\n            // connect to the conversation websocket\n            this.privParticipants.meId = this.privRoom.participantId;\n            this.privConversationRecognizer = Exports_js_1.ConversationRecognizerFactory.fromConfig(this, this.privConfig);\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\n            // has to forward serviceRecognizer connection events that usually get passed automatically\n            this.privConversationRecognizer.connected = this.onConnected;\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\n            this.privConversationRecognizer.canceled = this.onCanceled;\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\n            this.privConversationRecognizer.connect(this.privRoom.token, (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Join a conversation as a participant.\n     * @param { IParticipant } participant - participant to add\n     * @param cb\n     * @param err\n     */\n    addParticipantAsync(participant, cb, err) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(participant, \"Participant\");\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.addParticipantImplAsync(participant), cb, err);\n    }\n    /**\n     * Join a conversation as a participant.\n     * @param conversation\n     * @param nickname\n     * @param lang\n     * @param cb\n     * @param err\n     */\n    joinConversationAsync(conversationId, nickname, lang, cb, err) {\n        try {\n            // TODO\n            // if (!!this.privConversationRecognizer) {\n            //     throw new Error(this.privErrors.permissionDeniedStart);\n            // }\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(conversationId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\n            // join the conversation\n            this.privManager.createOrJoin(this.privProperties, conversationId, ((room) => {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\n                this.privRoom = room;\n                this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\n                // join callback\n                if (!!cb) {\n                    cb(room.cognitiveSpeechAuthToken);\n                }\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Deletes a conversation\n     * @param cb\n     * @param err\n     */\n    deleteConversationAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.deleteConversationImplAsync(), cb, err);\n    }\n    async deleteConversationImplAsync() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\n        await this.privManager.leave(this.privProperties, this.privRoom.token);\n        this.dispose();\n    }\n    /**\n     * Issues a request to close the client websockets\n     * @param cb\n     * @param err\n     */\n    endConversationAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.endConversationImplAsync(), cb, err);\n    }\n    endConversationImplAsync() {\n        return this.close(true);\n    }\n    /**\n     * Issues a request to lock the conversation\n     * @param cb\n     * @param err\n     */\n    lockConversationAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute the conversation\n     * @param cb\n     * @param err\n     */\n    muteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the user's permissions\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute a participant in the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    muteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to remove a participant from the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    removeParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\n                // Assume this is a transcription participant\n                (0, Exports_js_2.marshalPromiseToCallbacks)(this.removeParticipantImplAsync(userId), cb, err);\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n                if (!this.canSendAsHost) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\n                }\n                let participantId = \"\";\n                if (typeof userId === \"string\") {\n                    participantId = userId;\n                }\n                else if (userId.hasOwnProperty(\"id\")) {\n                    const participant = userId;\n                    participantId = participant.id;\n                }\n                else if (userId.hasOwnProperty(\"userId\")) {\n                    const user = userId;\n                    participantId = user.userId;\n                }\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n                // check the participant exists\n                const index = this.participants.findIndex((p) => p.id === participantId);\n                if (index === -1) {\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n                }\n                if (!!this.privConversationRecognizer) {\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), (() => {\n                        this.handleCallback(cb, err);\n                    }), ((error) => {\n                        this.handleError(error, err);\n                    }));\n                }\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unlock the conversation\n     * @param cb\n     * @param err\n     */\n    unlockConversationAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute all participants in the conversation\n     * @param cb\n     * @param err\n     */\n    unmuteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute a participant in the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    unmuteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // TODO: is a max length check required?\n            if (message.length > this.privTextMessageMaxLength) {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Set translated to languages\n     * @param {string[]} languages - languages to translate to\n     * @param cb\n     * @param err\n     */\n    setTranslatedLanguagesAsync(languages, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Change nickname\n     * @param {string} nickname - new nickname for the room\n     * @param cb\n     * @param err\n     */\n    changeNicknameAsync(nickname, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.privIsDisposed = true;\n        if (!!this.config) {\n            this.config.close();\n        }\n        this.privConfig = undefined;\n        this.privLanguage = undefined;\n        this.privProperties = undefined;\n        this.privRoom = undefined;\n        this.privToken = undefined;\n        this.privManager = undefined;\n        this.privIsConnected = false;\n        this.privIsReady = false;\n        this.privParticipants = undefined;\n    }\n    async connectTranscriberRecognizer(recognizer) {\n        if (!!this.privTranscriberRecognizer) {\n            await this.privTranscriberRecognizer.close();\n        }\n        await recognizer.enforceAudioGating();\n        this.privTranscriberRecognizer = recognizer;\n        this.privTranscriberRecognizer.conversation = this;\n    }\n    getKeepAlive() {\n        const nickname = (!!this.me) ? this.me.displayName : \"default_nickname\";\n        return JSON.stringify({\n            id: \"0\",\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.keepAlive\n        });\n    }\n    /* eslint-enable @typescript-eslint/typedef */\n    addParticipantImplAsync(participant) {\n        const newParticipant = this.privParticipants.addOrUpdateParticipant(participant);\n        if (newParticipant !== undefined) {\n            if (!!this.privTranscriberRecognizer) {\n                const conversationInfo = this.conversationInfo;\n                conversationInfo.participants = [participant];\n                return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"join\");\n            }\n        }\n    }\n    removeParticipantImplAsync(participant) {\n        this.privParticipants.deleteParticipant(participant.id);\n        const conversationInfo = this.conversationInfo;\n        conversationInfo.participants = [participant];\n        return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"leave\");\n    }\n    async close(dispose) {\n        try {\n            this.privIsConnected = false;\n            await this.privConversationRecognizer?.close();\n            this.privConversationRecognizer = undefined;\n            if (!!this.privConversationTranslator) {\n                this.privConversationTranslator.dispose();\n            }\n        }\n        catch (e) {\n            // ignore error\n            throw e;\n        }\n        if (dispose) {\n            this.dispose();\n        }\n    }\n    /** Helpers */\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n    /** Participant Helpers */\n    toParticipants(includeHost) {\n        const participants = this.privParticipants.participants.map((p) => (this.toParticipant(p)));\n        if (!includeHost) {\n            return participants.filter((p) => p.isHost === false);\n        }\n        else {\n            return participants;\n        }\n    }\n    toParticipant(p) {\n        return new Exports_js_3.Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\n    }\n    getMuteAllCommand(isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMuteAll,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getMuteCommand(participantId, isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMute,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getLockCommand(isLocked) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setLockState,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isLocked\n        });\n    }\n    getEjectCommand(participantId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.ejectParticipant,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n        });\n    }\n    getSetTranslateToLanguagesCommand(languages) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: languages\n        });\n    }\n    getChangeNicknameCommand(nickname) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.changeNickname,\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: nickname\n        });\n    }\n    getMessageCommand(message) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, \"message\");\n        return JSON.stringify({\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            text: message,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.instantMessage\n        });\n    }\n}\nexports.ConversationImpl = ConversationImpl;\n\n//# sourceMappingURL=Conversation.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationCommon = void 0;\nclass ConversationCommon {\n    constructor(audioConfig) {\n        this.privAudioConfig = audioConfig;\n    }\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n}\nexports.ConversationCommon = ConversationCommon;\n\n//# sourceMappingURL=ConversationCommon.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationExpirationEventArgs = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass ConversationExpirationEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(expirationTime, sessionId) {\n        super(sessionId);\n        this.privExpirationTime = expirationTime;\n    }\n    /** How much longer until the conversation expires (in minutes). */\n    get expirationTime() {\n        return this.privExpirationTime;\n    }\n}\nexports.ConversationExpirationEventArgs = ConversationExpirationEventArgs;\n\n//# sourceMappingURL=ConversationExpirationEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationParticipantsChangedEventArgs = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass ConversationParticipantsChangedEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(reason, participants, sessionId) {\n        super(sessionId);\n        this.privReason = reason;\n        this.privParticipant = participants;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get participants() {\n        return this.privParticipant;\n    }\n}\nexports.ConversationParticipantsChangedEventArgs = ConversationParticipantsChangedEventArgs;\n\n//# sourceMappingURL=ConversationParticipantsChangedEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslationCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"../CancellationEventArgsBase.js\");\nclass ConversationTranslationCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.ConversationTranslationCanceledEventArgs = ConversationTranslationCanceledEventArgs;\n\n//# sourceMappingURL=ConversationTranslationCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslationEventArgs = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass ConversationTranslationEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ConversationTranslationResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @returns {ConversationTranslationResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.ConversationTranslationEventArgs = ConversationTranslationEventArgs;\n\n//# sourceMappingURL=ConversationTranslationEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslationResult = void 0;\nconst TranslationRecognitionResult_js_1 = require(\"../TranslationRecognitionResult.js\");\nclass ConversationTranslationResult extends TranslationRecognitionResult_js_1.TranslationRecognitionResult {\n    constructor(participantId, translations, originalLanguage, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        super(translations, resultId, reason, text, duration, offset, undefined, undefined, errorDetails, json, properties);\n        this.privId = participantId;\n        this.privOrigLang = originalLanguage;\n    }\n    /**\n     * The unique identifier for the participant this result is for.\n     */\n    get participantId() {\n        return this.privId;\n    }\n    /**\n     * The original language this result was in.\n     */\n    get originalLang() {\n        return this.privOrigLang;\n    }\n}\nexports.ConversationTranslationResult = ConversationTranslationResult;\n\n//# sourceMappingURL=ConversationTranslationResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringUtils = void 0;\n/**\n * String helper functions\n */\nclass StringUtils {\n    /**\n     * Formats a string by replacing the named {keys} in the string with the values contained in the replacement dictionary.\n     * @param format The format string that contains the parts to replace surrounded by {}. For example: \"wss://{region}.cts.speech.microsoft.com\".\n     * If your string needs to contain a { or } you can use the {{ and }} escape sequences respectively.\n     * @param replacements The dictionary of replacements. If a replacement is not found, it is replaced with an empty string\n     * @returns The formatted string. If you pass in a null or undefined format string, an empty string will be returned\n     */\n    static formatString(format, replacements) {\n        if (!format) {\n            return \"\";\n        }\n        if (!replacements) {\n            return format;\n        }\n        let formatted = \"\";\n        let key = \"\";\n        const appendToFormatted = (str) => {\n            formatted += str;\n        };\n        const appendToKey = (str) => {\n            key += str;\n        };\n        let appendFunc = appendToFormatted;\n        for (let i = 0; i < format.length; i++) {\n            const c = format[i];\n            const next = i + 1 < format.length ? format[i + 1] : \"\";\n            switch (c) {\n                case \"{\":\n                    if (next === \"{\") {\n                        appendFunc(\"{\");\n                        i++;\n                    }\n                    else {\n                        appendFunc = appendToKey;\n                    }\n                    break;\n                case \"}\":\n                    if (next === \"}\") {\n                        appendFunc(\"}\");\n                        i++;\n                    }\n                    else {\n                        if (replacements.hasOwnProperty(key)) {\n                            formatted += replacements[key];\n                        }\n                        appendFunc = appendToFormatted;\n                        key = \"\";\n                    }\n                    break;\n                default:\n                    appendFunc(c);\n                    break;\n            }\n        }\n        return formatted;\n    }\n}\nexports.StringUtils = StringUtils;\n\n//# sourceMappingURL=StringUtils.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslatorConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../../common.browser/Exports.js\");\nconst StringUtils_js_1 = require(\"../../common/StringUtils.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_2 = require(\"../../sdk/Exports.js\");\nconst HeaderNames_js_1 = require(\"../HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"../QueryParameterNames.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./../ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./../Exports.js\");\n/**\n * Connection factory for the conversation translator. Handles connecting to the regular translator endpoint,\n * as well as the virtual microphone array transcription endpoint\n */\nclass ConversationTranslatorConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor(convGetter) {\n        super();\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(convGetter, \"convGetter\");\n        this.privConvGetter = convGetter;\n    }\n    create(config, authInfo, connectionId) {\n        const isVirtMicArrayEndpoint = config.parameters.getProperty(\"ConversationTranslator_MultiChannelAudio\", \"\").toUpperCase() === \"TRUE\";\n        const convInfo = this.privConvGetter().room;\n        const region = convInfo.cognitiveSpeechRegion || config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"\");\n        const replacementValues = {\n            hostSuffix: ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region),\n            path: ConversationTranslatorConnectionFactory.CTS_VIRT_MIC_PATH,\n            region: encodeURIComponent(region)\n        };\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.Language] = encodeURIComponent(config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, \"\"));\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId] = encodeURIComponent(convInfo.roomId);\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId] = encodeURIComponent(convInfo.participantId);\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant] = convInfo.isHost ? \"\" : (\"&\" + QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant);\n        let endpointUrl = \"\";\n        const queryParams = {};\n        const headers = {};\n        if (isVirtMicArrayEndpoint) {\n            // connecting to the conversation transcription virtual microphone array endpoint\n            endpointUrl = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n            if (!endpointUrl) {\n                const hostName = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"transcribe.{region}.cts.speech{hostSuffix}\");\n                endpointUrl = \"wss://\" + hostName + \"{path}\";\n            }\n            // because the region can change during a session, we support being passed a format string which we can then\n            // replace with the correct information.\n            endpointUrl = StringUtils_js_1.StringUtils.formatString(endpointUrl, replacementValues);\n            const parsedUrl = new URL(endpointUrl);\n            parsedUrl.searchParams.forEach((val, key) => {\n                queryParams[key] = val;\n            });\n            const connFactory = new Exports_js_3.TranscriberConnectionFactory();\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\n            // Some query parameters are required for the CTS endpoint, let's explicity set them here\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId] = replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId];\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId] = replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId];\n            if (!convInfo.isHost) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant] = \"\"; // this doesn't have a value so set to an empty string\n            }\n            if (!(QueryParameterNames_js_1.QueryParameterNames.Format in queryParams)) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = \"simple\";\n            }\n            parsedUrl.searchParams.forEach((val, key) => {\n                parsedUrl.searchParams.set(key, queryParams[key]);\n                delete queryParams[key];\n            });\n            endpointUrl = parsedUrl.toString();\n        }\n        else {\n            // connecting to regular translation endpoint\n            const connFactory = new Exports_js_3.TranslationConnectionFactory();\n            endpointUrl = connFactory.getEndpointUrl(config, true);\n            endpointUrl = StringUtils_js_1.StringUtils.formatString(endpointUrl, replacementValues);\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        headers[Exports_js_1.RestConfigBase.configParams.token] = convInfo.token;\n        if (!!authInfo.token) {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"\").toUpperCase() === \"TRUE\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpointUrl, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n}\nexports.ConversationTranslatorConnectionFactory = ConversationTranslatorConnectionFactory;\nConversationTranslatorConnectionFactory.CTS_VIRT_MIC_PATH = \"/speech/recognition/dynamicaudio\";\n\n//# sourceMappingURL=ConversationTranslatorConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslator = exports.SpeechState = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst ConversationTranslatorConnectionFactory_js_1 = require(\"../../common.speech/Transcription/ConversationTranslatorConnectionFactory.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst Conversation_js_1 = require(\"./Conversation.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nvar SpeechState;\n(function (SpeechState) {\n    SpeechState[SpeechState[\"Inactive\"] = 0] = \"Inactive\";\n    SpeechState[SpeechState[\"Connecting\"] = 1] = \"Connecting\";\n    SpeechState[SpeechState[\"Connected\"] = 2] = \"Connected\";\n})(SpeechState = exports.SpeechState || (exports.SpeechState = {}));\n// child class of TranslationRecognizer meant only for use with ConversationTranslator\nclass ConversationTranslationRecognizer extends Exports_js_3.TranslationRecognizer {\n    constructor(speechConfig, audioConfig, translator, convGetter) {\n        super(speechConfig, audioConfig, new ConversationTranslatorConnectionFactory_js_1.ConversationTranslatorConnectionFactory(convGetter));\n        this.privSpeechState = SpeechState.Inactive;\n        if (!!translator) {\n            this.privTranslator = translator;\n            this.sessionStarted = () => {\n                this.privSpeechState = SpeechState.Connected;\n            };\n            this.sessionStopped = () => {\n                this.privSpeechState = SpeechState.Inactive;\n            };\n            this.recognizing = (tr, e) => {\n                if (!!this.privTranslator.recognizing) {\n                    this.privTranslator.recognizing(this.privTranslator, e);\n                }\n            };\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            this.recognized = async (tr, e) => {\n                // if there is an error connecting to the conversation service from the speech service the error will be returned in the ErrorDetails field.\n                if (e.result?.errorDetails) {\n                    await this.cancelSpeech();\n                    // TODO: format the error message contained in 'errorDetails'\n                    this.fireCancelEvent(e.result.errorDetails);\n                }\n                else {\n                    if (!!this.privTranslator.recognized) {\n                        this.privTranslator.recognized(this.privTranslator, e);\n                    }\n                }\n                return;\n            };\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            this.canceled = async () => {\n                if (this.privSpeechState !== SpeechState.Inactive) {\n                    try {\n                        await this.cancelSpeech();\n                    }\n                    catch (error) {\n                        this.privSpeechState = SpeechState.Inactive;\n                    }\n                }\n            };\n        }\n    }\n    get state() {\n        return this.privSpeechState;\n    }\n    set state(newState) {\n        this.privSpeechState = newState;\n    }\n    set authentication(token) {\n        this.privReco.authentication = token;\n    }\n    onConnection() {\n        this.privSpeechState = SpeechState.Connected;\n    }\n    async onCancelSpeech() {\n        this.privSpeechState = SpeechState.Inactive;\n        await this.cancelSpeech();\n    }\n    /**\n     * Fire a cancel event\n     * @param error\n     */\n    fireCancelEvent(error) {\n        try {\n            if (!!this.privTranslator.canceled) {\n                const cancelEvent = new Exports_js_4.ConversationTranslationCanceledEventArgs(Exports_js_3.CancellationReason.Error, error, Exports_js_3.CancellationErrorCode.RuntimeError);\n                this.privTranslator.canceled(this.privTranslator, cancelEvent);\n            }\n        }\n        catch (e) {\n            //\n        }\n    }\n    async cancelSpeech() {\n        try {\n            this.stopContinuousRecognitionAsync();\n            await this.privReco?.disconnect();\n            this.privSpeechState = SpeechState.Inactive;\n        }\n        catch (e) {\n            // ignore the error\n        }\n    }\n}\n/**\n * Join, leave or connect to a conversation.\n */\nclass ConversationTranslator extends Exports_js_4.ConversationCommon {\n    constructor(audioConfig) {\n        super(audioConfig);\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        this.privIsDisposed = false;\n        this.privIsSpeaking = false;\n        this.privPlaceholderKey = \"abcdefghijklmnopqrstuvwxyz012345\";\n        this.privPlaceholderRegion = \"westus\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get speechRecognitionLanguage() {\n        return this.privSpeechRecognitionLanguage;\n    }\n    get participants() {\n        return this.privConversation?.participants;\n    }\n    get canSpeak() {\n        // is there a Conversation websocket available and has the Recognizer been set up\n        if (!this.privConversation.isConnected || !this.privCTRecognizer) {\n            return false;\n        }\n        // is the user already speaking\n        if (this.privIsSpeaking || this.privCTRecognizer.state === SpeechState.Connected || this.privCTRecognizer.state === SpeechState.Connecting) {\n            return false;\n        }\n        // is the user muted\n        if (this.privConversation.isMutedByHost) {\n            return false;\n        }\n        return true;\n    }\n    onToken(token) {\n        this.privCTRecognizer.authentication = token;\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    joinConversationAsync(conversation, nickname, param1, param2, param3) {\n        try {\n            if (typeof conversation === \"string\") {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n                if (!!this.privConversation) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedStart), param3);\n                }\n                let lang = param1;\n                if (lang === undefined || lang === null || lang === \"\") {\n                    lang = Exports_js_1.ConversationConnectionConfig.defaultLanguageCode;\n                }\n                // create a placeholder config\n                this.privSpeechTranslationConfig = Exports_js_3.SpeechTranslationConfig.fromSubscription(this.privPlaceholderKey, this.privPlaceholderRegion);\n                this.privSpeechTranslationConfig.setProfanity(Exports_js_3.ProfanityOption.Masked);\n                this.privSpeechTranslationConfig.addTargetLanguage(lang);\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], lang);\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name], nickname);\n                const propertyIdsToCopy = [\n                    Exports_js_3.PropertyId.SpeechServiceConnection_Host,\n                    Exports_js_3.PropertyId.ConversationTranslator_Host,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyHostName,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyPassword,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyPort,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyUserName,\n                    \"ConversationTranslator_MultiChannelAudio\",\n                    \"ConversationTranslator_Region\"\n                ];\n                for (const prop of propertyIdsToCopy) {\n                    const value = this.privProperties.getProperty(prop);\n                    if (value) {\n                        const key = typeof prop === \"string\" ? prop : Exports_js_3.PropertyId[prop];\n                        this.privSpeechTranslationConfig.setProperty(key, value);\n                    }\n                }\n                const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n                for (const prop of Object.keys(currentProperties)) {\n                    this.privSpeechTranslationConfig.setServiceProperty(prop, currentProperties[prop], Exports_js_3.ServicePropertyChannel.UriQueryParameter);\n                }\n                // join the conversation\n                this.privConversation = new Conversation_js_1.ConversationImpl(this.privSpeechTranslationConfig);\n                this.privConversation.conversationTranslator = this;\n                this.privConversation.joinConversationAsync(conversation, nickname, lang, ((result) => {\n                    if (!result) {\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), param3);\n                    }\n                    this.privSpeechTranslationConfig.authorizationToken = result;\n                    this.privConversation.room.isHost = false;\n                    // connect to the ws\n                    this.privConversation.startConversationAsync((() => {\n                        this.handleCallback(param2, param3);\n                    }), ((error) => {\n                        this.handleError(error, param3);\n                    }));\n                }), ((error) => {\n                    this.handleError(error, param3);\n                }));\n            }\n            else if (typeof conversation === \"object\") {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n                // save the nickname\n                this.privProperties.setProperty(Exports_js_3.PropertyId.ConversationTranslator_Name, nickname);\n                // ref the conversation object\n                this.privConversation = conversation;\n                // ref the conversation translator object\n                this.privConversation.conversationTranslator = this;\n                this.privConversation.room.isHost = true;\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedConnect);\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\n                this.privSpeechTranslationConfig = conversation.config;\n                this.handleCallback(param1, param2);\n            }\n            else {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"invalid conversation type\")), param2);\n            }\n        }\n        catch (error) {\n            this.handleError(error, typeof param1 === \"string\" ? param3 : param2);\n        }\n    }\n    /**\n     * Leave the conversation\n     * @param cb\n     * @param err\n     */\n    leaveConversationAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => {\n            // stop the speech websocket\n            await this.cancelSpeech();\n            // stop the websocket\n            await this.privConversation.endConversationImplAsync();\n            // https delete request\n            await this.privConversation.deleteConversationImplAsync();\n            this.dispose();\n        })(), cb, err);\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", message));\n            this.privConversation.sendTextMessageAsync(message, cb, err);\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Start speaking\n     * @param cb\n     * @param err\n     */\n    startTranscribingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => {\n            try {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\n                if (this.privCTRecognizer === undefined) {\n                    await this.connectTranslatorRecognizer();\n                }\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privCTRecognizer, this.privErrors.permissionDeniedSend);\n                if (!this.canSpeak) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n                }\n                await this.startContinuousRecognition();\n                this.privIsSpeaking = true;\n            }\n            catch (error) {\n                this.privIsSpeaking = false;\n                await this.cancelSpeech();\n                throw error;\n            }\n        })(), cb, err);\n    }\n    /**\n     * Stop speaking\n     * @param cb\n     * @param err\n     */\n    stopTranscribingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => {\n            try {\n                if (!this.privIsSpeaking) {\n                    // stop speech\n                    await this.cancelSpeech();\n                    return;\n                }\n                // stop the recognition but leave the websocket open\n                this.privIsSpeaking = false;\n                await new Promise((resolve, reject) => {\n                    this.privCTRecognizer.stopContinuousRecognitionAsync(resolve, reject);\n                });\n            }\n            catch (error) {\n                await this.cancelSpeech();\n            }\n        })(), cb, err);\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose(reason, success, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => {\n            if (this.isDisposed && !this.privIsSpeaking) {\n                return;\n            }\n            await this.cancelSpeech();\n            this.privIsDisposed = true;\n            this.privSpeechTranslationConfig.close();\n            this.privSpeechRecognitionLanguage = undefined;\n            this.privProperties = undefined;\n            this.privAudioConfig = undefined;\n            this.privSpeechTranslationConfig = undefined;\n            this.privConversation.dispose();\n            this.privConversation = undefined;\n        })(), success, err);\n    }\n    /**\n     * Cancel the speech websocket\n     */\n    async cancelSpeech() {\n        try {\n            this.privIsSpeaking = false;\n            await this.privCTRecognizer?.onCancelSpeech();\n            this.privCTRecognizer = undefined;\n        }\n        catch (e) {\n            // ignore the error\n        }\n    }\n    /**\n     * Connect to the speech translation recognizer.\n     * Currently there is no language validation performed before sending the SpeechLanguage code to the service.\n     * If it's an invalid language the raw error will be: 'Error during WebSocket handshake: Unexpected response code: 400'\n     * e.g. pass in 'fr' instead of 'fr-FR', or a text-only language 'cy'\n     */\n    async connectTranslatorRecognizer() {\n        try {\n            if (this.privAudioConfig === undefined) {\n                this.privAudioConfig = Exports_js_3.AudioConfig.fromDefaultMicrophoneInput();\n            }\n            // clear the temp subscription key if it's a participant joining\n            if (this.privSpeechTranslationConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key])\n                === this.privPlaceholderKey) {\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key], \"\");\n            }\n            const convGetter = () => this.privConversation;\n            this.privCTRecognizer = new ConversationTranslationRecognizer(this.privSpeechTranslationConfig, this.privAudioConfig, this, convGetter);\n        }\n        catch (error) {\n            await this.cancelSpeech();\n            throw error;\n        }\n    }\n    /**\n     * Handle the start speaking request\n     */\n    startContinuousRecognition() {\n        return new Promise((resolve, reject) => {\n            this.privCTRecognizer.startContinuousRecognitionAsync(resolve, reject);\n        });\n    }\n}\nexports.ConversationTranslator = ConversationTranslator;\n\n//# sourceMappingURL=ConversationTranslator.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriber = void 0;\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../../common.speech/ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\n/**\n * Performs speech recognition with speaker separation from microphone, file, or other audio input streams, and gets transcribed text as result.\n * @class ConversationTranscriber\n */\nclass ConversationTranscriber extends Exports_js_3.Recognizer {\n    /**\n     * ConversationTranscriber constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechConfigImpl.properties, new Exports_js_1.ConversationTranscriberConnectionFactory(), speechConfig.tokenCredential);\n        this.privProperties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * ConversationTranscriber constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        const recognizer = new ConversationTranscriber(speechConfig, audioConfig);\n        return recognizer;\n    }\n    /**\n     * Gets the endpoint id of a customized speech model that is used for transcription.\n     * @member ConversationTranscriber.prototype.endpointId\n     * @function\n     * @public\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n     */\n    get endpointId() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member ConversationTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member ConversationTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Gets the spoken language of transcription.\n     * @member ConversationTranscriber.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of transcription.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the output format of transcription.\n     * @member ConversationTranscriber.prototype.outputFormat\n     * @function\n     * @public\n     * @returns {OutputFormat} The output format of transcription.\n     */\n    get outputFormat() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        if (this.properties.getProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) {\n            return Exports_js_3.OutputFormat.Simple;\n        }\n        else {\n            return Exports_js_3.OutputFormat.Detailed;\n        }\n    }\n    /**\n     * The collection of properties and their values defined for this conversation transcriber.\n     * @member ConversationTranscriber.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member ConversationTranscriber.prototype.startTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startTranscribingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops conversation transcription.\n     * @member ConversationTranscriber.prototype.stopTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopTranscribingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member ConversationTranscriber.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        recognizerConfig.isSpeakerDiarizationEnabled = true;\n        return new Exports_js_1.ConversationTranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.ConversationTranscriber = ConversationTranscriber;\n\n//# sourceMappingURL=ConversationTranscriber.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Participant = exports.User = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../Exports.js\");\nclass User {\n    constructor(userId) {\n        this.privUserId = userId;\n    }\n    get userId() {\n        return this.privUserId;\n    }\n}\nexports.User = User;\nclass Participant {\n    constructor(id, avatar, displayName, isHost, isMuted, isUsingTts, preferredLanguage, voice) {\n        this.privId = id;\n        this.privAvatar = avatar;\n        this.privDisplayName = displayName;\n        this.privIsHost = isHost;\n        this.privIsMuted = isMuted;\n        this.privIsUsingTts = isUsingTts;\n        this.privPreferredLanguage = preferredLanguage;\n        this.privVoice = voice;\n        this.privProperties = new Exports_js_1.PropertyCollection();\n    }\n    get avatar() {\n        return this.privAvatar;\n    }\n    get displayName() {\n        return this.privDisplayName;\n    }\n    get id() {\n        return this.privId;\n    }\n    get preferredLanguage() {\n        return this.privPreferredLanguage;\n    }\n    get isHost() {\n        return this.privIsHost;\n    }\n    get isMuted() {\n        return this.privIsMuted;\n    }\n    get isUsingTts() {\n        return this.privIsUsingTts;\n    }\n    get voice() {\n        return this.privVoice;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    static From(id, language, voice) {\n        return new Participant(id, \"\", id, false, false, false, language, voice);\n    }\n}\nexports.Participant = Participant;\n\n//# sourceMappingURL=IParticipant.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticipantChangedReason = void 0;\nvar ParticipantChangedReason;\n(function (ParticipantChangedReason) {\n    /** Participant has joined the conversation. */\n    ParticipantChangedReason[ParticipantChangedReason[\"JoinedConversation\"] = 0] = \"JoinedConversation\";\n    /** Participant has left the conversation. This could be voluntary, or involuntary\n     * (e.g. they are experiencing networking issues).\n     */\n    ParticipantChangedReason[ParticipantChangedReason[\"LeftConversation\"] = 1] = \"LeftConversation\";\n    /** The participants' state has changed (e.g. they became muted, changed their nickname). */\n    ParticipantChangedReason[ParticipantChangedReason[\"Updated\"] = 2] = \"Updated\";\n})(ParticipantChangedReason = exports.ParticipantChangedReason || (exports.ParticipantChangedReason = {}));\n\n//# sourceMappingURL=ParticipantChangedReason.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingImpl = exports.Meeting = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nclass Meeting {\n    constructor() {\n        return;\n    }\n    /**\n     * Create a meeting\n     * @param speechConfig\n     * @param meetingId\n     * @param cb\n     * @param err\n     */\n    static createMeetingAsync(speechConfig, meetingId, arg3, arg4) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.region, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\n        Contracts_js_1.Contracts.throwIfNull(meetingId, \"meetingId\");\n        if (meetingId.length === 0) {\n            throw new Error(\"meetingId cannot be empty\");\n        }\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceAuthorization_Token])) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\n        }\n        const meetingImpl = new MeetingImpl(speechConfig, meetingId);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => { })(), arg3, arg4);\n        return meetingImpl;\n    }\n}\nexports.Meeting = Meeting;\nclass MeetingImpl extends Meeting {\n    /**\n     * Create a Meeting impl\n     * @param speechConfig\n     * @param {string} id - optional conversationId\n     */\n    constructor(speechConfig, id) {\n        super();\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        /** websocket callbacks */\n        /* eslint-disable @typescript-eslint/typedef */\n        this.onConnected = (e) => {\n            this.privIsConnected = true;\n            try {\n                if (!!this.privConversationTranslator?.sessionStarted) {\n                    this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onDisconnected = (e) => {\n            try {\n                if (!!this.privConversationTranslator?.sessionStopped) {\n                    this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n            finally {\n                void this.close(false);\n            }\n        };\n        this.onCanceled = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator?.canceled) {\n                    this.privConversationTranslator.canceled(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantUpdateCommandReceived = (r, e) => {\n            try {\n                const updatedParticipant = this.privParticipants.getParticipant(e.id);\n                if (updatedParticipant !== undefined) {\n                    switch (e.key) {\n                        case Exports_js_1.ConversationTranslatorCommandTypes.changeNickname:\n                            updatedParticipant.displayName = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setUseTTS:\n                            updatedParticipant.isUsingTts = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering:\n                            updatedParticipant.profanity = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setMute:\n                            updatedParticipant.isMuted = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages:\n                            updatedParticipant.translateToLanguages = e.value;\n                            break;\n                    }\n                    this.privParticipants.addOrUpdateParticipant(updatedParticipant);\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, [this.toParticipant(updatedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onLockRoomCommandReceived = () => {\n            // TODO\n        };\n        this.onMuteAllCommandReceived = (r, e) => {\n            try {\n                this.privParticipants.participants.forEach((p) => p.isMuted = (p.isHost ? false : e.isMuted));\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, this.toParticipants(false), e.sessionId));\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantJoinCommandReceived = (r, e) => {\n            try {\n                const newParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\n                if (newParticipant !== undefined) {\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, [this.toParticipant(newParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantLeaveCommandReceived = (r, e) => {\n            try {\n                const ejectedParticipant = this.privParticipants.getParticipant(e.participant.id);\n                if (ejectedParticipant !== undefined) {\n                    // remove the participant from the internal participants list\n                    this.privParticipants.deleteParticipant(e.participant.id);\n                    if (!!this.privConversationTranslator) {\n                        // notify subscribers that the participant has left the conversation\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.LeftConversation, [this.toParticipant(ejectedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onTranslationReceived = (r, e) => {\n            try {\n                switch (e.command) {\n                    case Exports_js_1.ConversationTranslatorMessageTypes.final:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribed(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.partial:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribing(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.instantMessage:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.textMessageReceived(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantsListReceived = (r, e) => {\n            try {\n                // check if the session token needs to be updated\n                if (e.sessionToken !== undefined && e.sessionToken !== null) {\n                    this.privRoom.token = e.sessionToken;\n                }\n                // save the participants\n                this.privParticipants.participants = [...e.participants];\n                // enable the conversation\n                if (this.privParticipants.me !== undefined) {\n                    this.privIsReady = true;\n                }\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\n                }\n                // if this is the host, update the nickname if needed\n                if (this.me.isHost) {\n                    const nickname = this.privConversationTranslator?.properties.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Name);\n                    if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\n                        // issue a change nickname request\n                        this.changeNicknameAsync(nickname);\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onConversationExpiration = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.privIsConnected = false;\n        this.privIsDisposed = false;\n        this.privConversationId = \"\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privManager = new Exports_js_1.ConversationManager();\n        // check the speech language\n        const language = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!language) {\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], Exports_js_1.ConversationConnectionConfig.defaultLanguageCode);\n        }\n        this.privLanguage = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        this.privConversationId = id;\n        // save the speech config for future usage\n        this.privConfig = speechConfig;\n        // save the config properties\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        this.privProperties = configImpl.properties.clone();\n        this.privIsConnected = false;\n        this.privParticipants = new Exports_js_1.InternalParticipants();\n        this.privIsReady = false;\n        this.privTextMessageMaxLength = 1000;\n    }\n    // get the internal data about a conversation\n    get room() {\n        return this.privRoom;\n    }\n    // get the wrapper for connecting to the websockets\n    get connection() {\n        return this.privConversationRecognizer; // this.privConnection;\n    }\n    // get the config\n    get config() {\n        return this.privConfig;\n    }\n    // get the meeting Id\n    get meetingId() {\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\n    }\n    // get the properties\n    get properties() {\n        return this.privProperties;\n    }\n    // get the speech language\n    get speechRecognitionLanguage() {\n        return this.privLanguage;\n    }\n    get isMutedByHost() {\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\n    }\n    get isConnected() {\n        return this.privIsConnected && this.privIsReady;\n    }\n    get participants() {\n        return this.toParticipants(true);\n    }\n    get me() {\n        return this.toParticipant(this.privParticipants.me);\n    }\n    get host() {\n        return this.toParticipant(this.privParticipants.host);\n    }\n    get transcriberRecognizer() {\n        return this.privTranscriberRecognizer;\n    }\n    get meetingInfo() {\n        const convId = this.meetingId;\n        const p = this.participants.map((part) => ({\n            id: part.id,\n            preferredLanguage: part.preferredLanguage,\n            voice: part.voice\n        }));\n        const props = {};\n        for (const key of Exports_js_1.ConversationConnectionConfig.transcriptionEventKeys) {\n            const val = this.properties.getProperty(key, \"\");\n            if (val !== \"\") {\n                props[key] = val;\n            }\n        }\n        const info = { id: convId, participants: p, meetingProperties: props };\n        return info;\n    }\n    get canSend() {\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\n    }\n    get canSendAsHost() {\n        return this.privIsConnected && this.privParticipants.me?.isHost;\n    }\n    // get / set the speech auth token\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    get authorizationToken() {\n        return this.privToken;\n    }\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\n        this.privToken = value;\n    }\n    /**\n     * Create a new meeting as Host\n     * @param cb\n     * @param err\n     */\n    createMeetingAsync(cb, err) {\n        try {\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            this.privManager.createOrJoin(this.privProperties, undefined, ((room) => {\n                if (!room) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\n                }\n                this.privRoom = room;\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Starts a new meeting as host.\n     * @param cb\n     * @param err\n     */\n    startMeetingAsync(cb, err) {\n        try {\n            // check if there is already a recognizer\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            // check if there is conversation data available\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\n            // connect to the conversation websocket\n            this.privParticipants.meId = this.privRoom.participantId;\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\n            // has to forward serviceRecognizer connection events that usually get passed automatically\n            this.privConversationRecognizer.connected = this.onConnected;\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\n            this.privConversationRecognizer.canceled = this.onCanceled;\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\n            this.privConversationRecognizer.connect(this.privRoom.token, (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Join a meeting as a participant.\n     * @param { IParticipant } participant - participant to add\n     * @param cb\n     * @param err\n     */\n    addParticipantAsync(participant, cb, err) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(participant, \"Participant\");\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.addParticipantImplAsync(participant), cb, err);\n    }\n    /**\n     * Join a meeting as a participant.\n     * @param meeting\n     * @param nickname\n     * @param lang\n     * @param cb\n     * @param err\n     */\n    joinMeetingAsync(meetingId, nickname, lang, cb, err) {\n        try {\n            // TODO\n            // if (!!this.privConversationRecognizer) {\n            //     throw new Error(this.privErrors.permissionDeniedStart);\n            // }\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(meetingId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\n            // join the conversation\n            this.privManager.createOrJoin(this.privProperties, meetingId, ((room) => {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\n                this.privRoom = room;\n                this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\n                // join callback\n                if (!!cb) {\n                    cb(room.cognitiveSpeechAuthToken);\n                }\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Deletes a meeting\n     * @param cb\n     * @param err\n     */\n    deleteMeetingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.deleteMeetingImplAsync(), cb, err);\n    }\n    async deleteMeetingImplAsync() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\n        await this.privManager.leave(this.privProperties, this.privRoom.token);\n        this.dispose();\n    }\n    /**\n     * Issues a request to close the client websockets\n     * @param cb\n     * @param err\n     */\n    endMeetingAsync(cb, err) {\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.endMeetingImplAsync(), cb, err);\n    }\n    endMeetingImplAsync() {\n        return this.close(true);\n    }\n    /**\n     * Issues a request to lock the conversation\n     * @param cb\n     * @param err\n     */\n    lockMeetingAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute the meeting\n     * @param cb\n     * @param err\n     */\n    muteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the user's permissions\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute a participant in the meeting\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    muteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to remove a participant from the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    removeParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\n                // Assume this is a transcription participant\n                (0, Exports_js_2.marshalPromiseToCallbacks)(this.removeParticipantImplAsync(userId), cb, err);\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n                if (!this.canSendAsHost) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\n                }\n                let participantId = \"\";\n                if (typeof userId === \"string\") {\n                    participantId = userId;\n                }\n                else if (userId.hasOwnProperty(\"id\")) {\n                    const participant = userId;\n                    participantId = participant.id;\n                }\n                else if (userId.hasOwnProperty(\"userId\")) {\n                    const user = userId;\n                    participantId = user.userId;\n                }\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n                // check the participant exists\n                const index = this.participants.findIndex((p) => p.id === participantId);\n                if (index === -1) {\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n                }\n                if (!!this.privConversationRecognizer) {\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), (() => {\n                        this.handleCallback(cb, err);\n                    }), ((error) => {\n                        this.handleError(error, err);\n                    }));\n                }\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unlock the meeting\n     * @param cb\n     * @param err\n     */\n    unlockMeetingAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute all participants in the meeting\n     * @param cb\n     * @param err\n     */\n    unmuteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute a participant in the meeting\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    unmuteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // TODO: is a max length check required?\n            if (message.length > this.privTextMessageMaxLength) {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Set translated to languages\n     * @param {string[]} languages - languages to translate to\n     * @param cb\n     * @param err\n     */\n    setTranslatedLanguagesAsync(languages, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Change nickname\n     * @param {string} nickname - new nickname for the room\n     * @param cb\n     * @param err\n     */\n    changeNicknameAsync(nickname, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.privIsDisposed = true;\n        if (!!this.config) {\n            this.config.close();\n        }\n        this.privConfig = undefined;\n        this.privLanguage = undefined;\n        this.privProperties = undefined;\n        this.privRoom = undefined;\n        this.privToken = undefined;\n        this.privManager = undefined;\n        this.privIsConnected = false;\n        this.privIsReady = false;\n        this.privParticipants = undefined;\n    }\n    async connectTranscriberRecognizer(recognizer) {\n        if (!!this.privTranscriberRecognizer) {\n            await this.privTranscriberRecognizer.close();\n        }\n        await recognizer.enforceAudioGating();\n        this.privTranscriberRecognizer = recognizer;\n        this.privTranscriberRecognizer.meeting = this;\n    }\n    getKeepAlive() {\n        const nickname = (!!this.me) ? this.me.displayName : \"default_nickname\";\n        return JSON.stringify({\n            id: \"0\",\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.keepAlive\n        });\n    }\n    /* eslint-enable @typescript-eslint/typedef */\n    addParticipantImplAsync(participant) {\n        const newParticipant = this.privParticipants.addOrUpdateParticipant(participant);\n        if (newParticipant !== undefined) {\n            if (!!this.privTranscriberRecognizer) {\n                const meetingInfo = this.meetingInfo;\n                meetingInfo.participants = [participant];\n                return this.privTranscriberRecognizer.pushMeetingEvent(meetingInfo, \"join\");\n            }\n        }\n    }\n    removeParticipantImplAsync(participant) {\n        this.privParticipants.deleteParticipant(participant.id);\n        const meetingInfo = this.meetingInfo;\n        meetingInfo.participants = [participant];\n        return this.privTranscriberRecognizer.pushMeetingEvent(meetingInfo, \"leave\");\n    }\n    async close(dispose) {\n        try {\n            this.privIsConnected = false;\n            await this.privConversationRecognizer?.close();\n            this.privConversationRecognizer = undefined;\n            if (!!this.privConversationTranslator) {\n                this.privConversationTranslator.dispose();\n            }\n        }\n        catch (e) {\n            // ignore error\n            throw e;\n        }\n        if (dispose) {\n            this.dispose();\n        }\n    }\n    /** Helpers */\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n    /** Participant Helpers */\n    toParticipants(includeHost) {\n        const participants = this.privParticipants.participants.map((p) => (this.toParticipant(p)));\n        if (!includeHost) {\n            return participants.filter((p) => p.isHost === false);\n        }\n        else {\n            return participants;\n        }\n    }\n    toParticipant(p) {\n        return new Exports_js_3.Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\n    }\n    getMuteAllCommand(isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingd\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMuteAll,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getMuteCommand(participantId, isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMute,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getLockCommand(isLocked) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setLockState,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isLocked\n        });\n    }\n    getEjectCommand(participantId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.ejectParticipant,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n        });\n    }\n    getSetTranslateToLanguagesCommand(languages) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: languages\n        });\n    }\n    getChangeNicknameCommand(nickname) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.changeNickname,\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: nickname\n        });\n    }\n    getMessageCommand(message) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, \"message\");\n        return JSON.stringify({\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            text: message,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.instantMessage\n        });\n    }\n}\nexports.MeetingImpl = MeetingImpl;\n\n//# sourceMappingURL=Meeting.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"../CancellationEventArgsBase.js\");\nclass MeetingTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.MeetingTranscriptionCanceledEventArgs = MeetingTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=MeetingTranscriptionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingTranscriber = void 0;\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../Contracts.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nclass MeetingTranscriber {\n    /**\n     * MeetingTranscriber constructor.\n     * @constructor\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(audioConfig) {\n        this.privAudioConfig = audioConfig;\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privRecognizer = undefined;\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member MeetingTranscriber.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * The collection of properties and their values defined for this MeetingTranscriber.\n     * @member MeetingTranscriber.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this MeetingTranscriber.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * @Internal\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privRecognizer.internalData;\n    }\n    /**\n     * @Deprecated\n     * @Obsolete\n     * Please use the Connection.fromRecognizer pattern to obtain a connection object\n     */\n    get connection() {\n        return Exports_js_3.Connection.fromRecognizer(this.privRecognizer);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member MeetingTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member MeetingTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * @param {Meeting} meeting - meeting to be recognized\n     */\n    joinMeetingAsync(meeting, cb, err) {\n        /* eslint-disable no-console */\n        // console.log(\">> MeetingTranscriber::joinMeetingAsync\");\n        /* eslint-enable no-console */\n        const meetingImpl = meeting;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(Exports_js_4.MeetingImpl, \"Meeting\");\n        // ref the meeting object\n        // create recognizer and subscribe to recognizer events\n        this.privRecognizer = new Exports_js_1.TranscriberRecognizer(meeting.config, this.privAudioConfig);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRecognizer, \"Recognizer\");\n        this.privRecognizer.connectMeetingCallbacks(this);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(meetingImpl.connectTranscriberRecognizer(this.privRecognizer), cb, err);\n    }\n    /**\n     * Starts meeting transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member MeetingTranscriber.prototype.startTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startTranscribingAsync(cb, err) {\n        this.privRecognizer.startContinuousRecognitionAsync(cb, err);\n    }\n    /**\n     * Starts meeting transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member MeetingTranscriber.prototype.stopTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopTranscribingAsync(cb, err) {\n        this.privRecognizer.stopContinuousRecognitionAsync(cb, err);\n    }\n    /**\n     * Leave the current meeting. After this is called, you will no longer receive any events.\n     */\n    leaveMeetingAsync(cb, err) {\n        this.privRecognizer.disconnectCallbacks();\n        // eslint-disable-next-line\n        (0, Exports_js_2.marshalPromiseToCallbacks)((async () => { return; })(), cb, err);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member MeetingTranscriber.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member MeetingTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (!!this.privRecognizer) {\n            await this.privRecognizer.close();\n            this.privRecognizer = undefined;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n        }\n    }\n}\nexports.MeetingTranscriber = MeetingTranscriber;\n\n//# sourceMappingURL=MeetingTranscriber.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriptionResult = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\n/**\n * Defines result of conversation transcription.\n * @class ConversationTranscriptionResult\n */\nclass ConversationTranscriptionResult extends Exports_js_1.RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, speakerId, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n    /**\n     * speaker id\n     * @member ConversationTranscriptionResult.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    get speakerId() {\n        return this.privSpeakerId;\n    }\n}\nexports.ConversationTranscriptionResult = ConversationTranscriptionResult;\n\n//# sourceMappingURL=ConversationTranscriptionResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriptionResult = exports.MeetingTranscriber = exports.MeetingTranscriptionCanceledEventArgs = exports.MeetingImpl = exports.Meeting = exports.ParticipantChangedReason = exports.User = exports.Participant = exports.ConversationTranscriber = exports.ConversationTranslator = exports.ConversationTranslationResult = exports.ConversationTranslationEventArgs = exports.ConversationTranslationCanceledEventArgs = exports.ConversationParticipantsChangedEventArgs = exports.ConversationExpirationEventArgs = exports.ConversationCommon = exports.ConversationImpl = exports.Conversation = void 0;\nvar Conversation_js_1 = require(\"./Conversation.js\");\nObject.defineProperty(exports, \"Conversation\", { enumerable: true, get: function () { return Conversation_js_1.Conversation; } });\nObject.defineProperty(exports, \"ConversationImpl\", { enumerable: true, get: function () { return Conversation_js_1.ConversationImpl; } });\nvar ConversationCommon_js_1 = require(\"./ConversationCommon.js\");\nObject.defineProperty(exports, \"ConversationCommon\", { enumerable: true, get: function () { return ConversationCommon_js_1.ConversationCommon; } });\nvar ConversationExpirationEventArgs_js_1 = require(\"./ConversationExpirationEventArgs.js\");\nObject.defineProperty(exports, \"ConversationExpirationEventArgs\", { enumerable: true, get: function () { return ConversationExpirationEventArgs_js_1.ConversationExpirationEventArgs; } });\nvar ConversationParticipantsChangedEventArgs_js_1 = require(\"./ConversationParticipantsChangedEventArgs.js\");\nObject.defineProperty(exports, \"ConversationParticipantsChangedEventArgs\", { enumerable: true, get: function () { return ConversationParticipantsChangedEventArgs_js_1.ConversationParticipantsChangedEventArgs; } });\nvar ConversationTranslationCanceledEventArgs_js_1 = require(\"./ConversationTranslationCanceledEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranslationCanceledEventArgs\", { enumerable: true, get: function () { return ConversationTranslationCanceledEventArgs_js_1.ConversationTranslationCanceledEventArgs; } });\nvar ConversationTranslationEventArgs_js_1 = require(\"./ConversationTranslationEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranslationEventArgs\", { enumerable: true, get: function () { return ConversationTranslationEventArgs_js_1.ConversationTranslationEventArgs; } });\nvar ConversationTranslationResult_js_1 = require(\"./ConversationTranslationResult.js\");\nObject.defineProperty(exports, \"ConversationTranslationResult\", { enumerable: true, get: function () { return ConversationTranslationResult_js_1.ConversationTranslationResult; } });\nvar ConversationTranslator_js_1 = require(\"./ConversationTranslator.js\");\nObject.defineProperty(exports, \"ConversationTranslator\", { enumerable: true, get: function () { return ConversationTranslator_js_1.ConversationTranslator; } });\nvar ConversationTranscriber_js_1 = require(\"./ConversationTranscriber.js\");\nObject.defineProperty(exports, \"ConversationTranscriber\", { enumerable: true, get: function () { return ConversationTranscriber_js_1.ConversationTranscriber; } });\nvar IParticipant_js_1 = require(\"./IParticipant.js\");\nObject.defineProperty(exports, \"Participant\", { enumerable: true, get: function () { return IParticipant_js_1.Participant; } });\nObject.defineProperty(exports, \"User\", { enumerable: true, get: function () { return IParticipant_js_1.User; } });\nvar ParticipantChangedReason_js_1 = require(\"./ParticipantChangedReason.js\");\nObject.defineProperty(exports, \"ParticipantChangedReason\", { enumerable: true, get: function () { return ParticipantChangedReason_js_1.ParticipantChangedReason; } });\nvar Meeting_js_1 = require(\"./Meeting.js\");\nObject.defineProperty(exports, \"Meeting\", { enumerable: true, get: function () { return Meeting_js_1.Meeting; } });\nObject.defineProperty(exports, \"MeetingImpl\", { enumerable: true, get: function () { return Meeting_js_1.MeetingImpl; } });\nvar MeetingTranscriptionCanceledEventArgs_js_1 = require(\"./MeetingTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"MeetingTranscriptionCanceledEventArgs\", { enumerable: true, get: function () { return MeetingTranscriptionCanceledEventArgs_js_1.MeetingTranscriptionCanceledEventArgs; } });\nvar MeetingTranscriber_js_1 = require(\"./MeetingTranscriber.js\");\nObject.defineProperty(exports, \"MeetingTranscriber\", { enumerable: true, get: function () { return MeetingTranscriber_js_1.MeetingTranscriber; } });\nvar ConversationTranscriptionResult_js_1 = require(\"./ConversationTranscriptionResult.js\");\nObject.defineProperty(exports, \"ConversationTranscriptionResult\", { enumerable: true, get: function () { return ConversationTranscriptionResult_js_1.ConversationTranscriptionResult; } });\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisRequest = exports.Synthesizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nclass Synthesizer {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The speech config to initialize the synthesizer.\n     */\n    constructor(speechConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.privDisposed = false;\n        this.privSynthesizing = false;\n        this.synthesisRequestQueue = new Exports_js_2.Queue();\n        this.tokenCredential = speechConfig.tokenCredential;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member Synthesizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member Synthesizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this Synthesizer.\n     * @member Synthesizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Indicates if auto detect source language is enabled\n     * @member Synthesizer.prototype.autoDetectSourceLanguage\n     * @function\n     * @public\n     * @returns {boolean} if auto detect source language is enabled\n     */\n    get autoDetectSourceLanguage() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === Exports_js_1.AutoDetectSourceLanguagesOpenRangeOptionName;\n    }\n    buildSsml(text) {\n        const languageToDefaultVoice = {\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\n            [\"bn-IN\"]: \"bn-IN-BashkarNeural\",\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\n            [\"de-CH\"]: \"de-CH-JanNeural\",\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\n            [\"en-HK\"]: \"en-HK-SamNeural\",\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\n            [\"en-US\"]: \"en-US-AvaMultilingualNeural\",\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\n            [\"is-IS\"]: \"is-IS-GudrunNeural\",\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\n            [\"kk-KZ\"]: \"kk-KZ-AigulNeural\",\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\n            [\"kn-IN\"]: \"kn-IN-GaganNeural\",\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\n            [\"lo-LA\"]: \"lo-LA-ChanthavongNeural\",\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\n            [\"mk-MK\"]: \"mk-MK-AleksandarNeural\",\n            [\"ml-IN\"]: \"ml-IN-MidhunNeural\",\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\n            [\"ps-AF\"]: \"ps-AF-GulNawazNeural\",\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\n            [\"si-LK\"]: \"si-LK-SameeraNeural\",\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\n            [\"sr-RS\"]: \"sr-RS-NicholasNeural\",\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\n        };\n        let language = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\n        let voice = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthVoice, \"\");\n        let ssml = Synthesizer.XMLEncode(text);\n        if (this.autoDetectSourceLanguage) {\n            language = \"en-US\";\n        }\n        else {\n            voice = voice || languageToDefaultVoice[language];\n        }\n        if (voice) {\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\n        }\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\n        return ssml;\n    }\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Synthesizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    async dispose(disposing) {\n        if (this.privDisposed) {\n            return;\n        }\n        if (disposing) {\n            if (this.privAdapter) {\n                await this.privAdapter.dispose();\n            }\n        }\n        this.privDisposed = true;\n    }\n    async adapterSpeak() {\n        if (!this.privDisposed && !this.privSynthesizing) {\n            this.privSynthesizing = true;\n            const request = await this.synthesisRequestQueue.dequeue();\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\n        }\n    }\n    createSynthesizerConfig(speechConfig) {\n        return new Exports_js_1.SynthesizerConfig(speechConfig, this.privProperties);\n    }\n    // Does the generic synthesizer setup that is common across all synthesizer types.\n    implCommonSynthesizeSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const synthesizerConfig = this.createSynthesizerConfig(new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(new Exports_js_1.OS(osPlatform, osName, osVersion))));\n        const subscriptionKey = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Key, undefined);\n        const authentication = (subscriptionKey && subscriptionKey !== \"\")\n            ? new Exports_js_1.CognitiveSubscriptionKeyAuthentication(subscriptionKey)\n            : (this.tokenCredential)\n                ? new Exports_js_1.CognitiveTokenAuthentication(async () => {\n                    try {\n                        const tokenResponse = await this.tokenCredential.getToken(\"https://cognitiveservices.azure.com/.default\");\n                        return tokenResponse?.token ?? \"\";\n                    }\n                    catch (err) {\n                        throw err;\n                    }\n                }, async () => {\n                    try {\n                        const tokenResponse = await this.tokenCredential.getToken(\"https://cognitiveservices.azure.com/.default\");\n                        return tokenResponse?.token ?? \"\";\n                    }\n                    catch (err) {\n                        throw err;\n                    }\n                })\n                : new Exports_js_1.CognitiveTokenAuthentication(() => {\n                    const authorizationToken = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                    return Promise.resolve(authorizationToken);\n                }, () => {\n                    const authorizationToken = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                    return Promise.resolve(authorizationToken);\n                });\n        this.privAdapter = this.createSynthesisAdapter(authentication, this.privConnectionFactory, synthesizerConfig);\n        this.privRestAdapter = this.createRestSynthesisAdapter(authentication, synthesizerConfig);\n    }\n    static XMLEncode(text) {\n        return text.replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&apos;\");\n    }\n}\nexports.Synthesizer = Synthesizer;\nclass SynthesisRequest {\n    constructor(requestId, text, isSSML, cb, err, dataStream) {\n        this.requestId = requestId;\n        this.text = text;\n        this.isSSML = isSSML;\n        this.cb = cb;\n        this.err = err;\n        this.dataStream = dataStream;\n    }\n}\nexports.SynthesisRequest = SynthesisRequest;\n\n//# sourceMappingURL=Synthesizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesizer = void 0;\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioFileWriter_js_1 = require(\"./Audio/AudioFileWriter.js\");\nconst AudioOutputFormat_js_1 = require(\"./Audio/AudioOutputFormat.js\");\nconst AudioOutputStream_js_1 = require(\"./Audio/AudioOutputStream.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst Synthesizer_js_1 = require(\"./Synthesizer.js\");\n/**\n * Defines the class SpeechSynthesizer for text to speech.\n * Updated in version 1.16.0\n * @class SpeechSynthesizer\n */\nclass SpeechSynthesizer extends Exports_js_3.Synthesizer {\n    /**\n     * SpeechSynthesizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\n     */\n    constructor(speechConfig, audioConfig) {\n        super(speechConfig);\n        if (audioConfig !== null) {\n            if (audioConfig === undefined) {\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : Exports_js_3.AudioConfig.fromDefaultSpeakerOutput();\n            }\n            else {\n                this.audioConfig = audioConfig;\n            }\n        }\n        this.privConnectionFactory = new Exports_js_1.SpeechSynthesisConnectionFactory();\n        this.implCommonSynthesizeSetup();\n    }\n    /**\n     * SpeechSynthesizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        return new SpeechSynthesizer(speechConfig, audioConfig);\n    }\n    /**\n     * Executes speech synthesis on plain text.\n     * The task returns the synthesis result.\n     * @member SpeechSynthesizer.prototype.speakTextAsync\n     * @function\n     * @public\n     * @param text - Text to be synthesized.\n     * @param cb - Callback that received the SpeechSynthesisResult.\n     * @param err - Callback invoked in case of an error.\n     * @param stream - AudioOutputStream to receive the synthesized audio.\n     */\n    speakTextAsync(text, cb, err, stream) {\n        this.speakImpl(text, false, cb, err, stream);\n    }\n    /**\n     * Executes speech synthesis on SSML.\n     * The task returns the synthesis result.\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\n     * @function\n     * @public\n     * @param ssml - SSML to be synthesized.\n     * @param cb - Callback that received the SpeechSynthesisResult.\n     * @param err - Callback invoked in case of an error.\n     * @param stream - AudioOutputStream to receive the synthesized audio.\n     */\n    speakSsmlAsync(ssml, cb, err, stream) {\n        this.speakImpl(ssml, true, cb, err, stream);\n    }\n    /**\n     * Get list of synthesis voices available.\n     * The task returns the synthesis voice result.\n     * @member SpeechSynthesizer.prototype.getVoicesAsync\n     * @function\n     * @async\n     * @public\n     * @param locale - Locale of voices in BCP-47 format; if left empty, get all available voices.\n     * @return {Promise<SynthesisVoicesResult>} - Promise of a SynthesisVoicesResult.\n     */\n    async getVoicesAsync(locale = \"\") {\n        return this.getVoices(locale);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member SpeechSynthesizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        (0, Exports_js_2.marshalPromiseToCallbacks)(this.dispose(true), cb, err);\n    }\n    /**\n     * @Internal\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privAdapter;\n    }\n    //\n    // ################################################################################################################\n    // IMPLEMENTATION.\n    // ################################################################################################################\n    //\n    // Creates the synthesis adapter\n    createSynthesisAdapter(authentication, connectionFactory, synthesizerConfig) {\n        return new Exports_js_1.SpeechSynthesisAdapter(authentication, connectionFactory, synthesizerConfig, this, this.audioConfig);\n    }\n    createRestSynthesisAdapter(authentication, synthesizerConfig) {\n        return new Exports_js_1.SynthesisRestAdapter(synthesizerConfig, authentication);\n    }\n    implCommonSynthesizeSetup() {\n        super.implCommonSynthesizeSetup();\n        this.privAdapter.audioOutputFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(Exports_js_3.SpeechSynthesisOutputFormat[this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]);\n    }\n    speakImpl(text, IsSsml, cb, err, dataStream) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n            const requestId = (0, Exports_js_2.createNoDashGuid)();\n            let audioDestination;\n            if (dataStream instanceof Exports_js_3.PushAudioOutputStreamCallback) {\n                audioDestination = new AudioOutputStream_js_1.PushAudioOutputStreamImpl(dataStream);\n            }\n            else if (dataStream instanceof Exports_js_3.PullAudioOutputStream) {\n                audioDestination = dataStream;\n            }\n            else if (dataStream !== undefined) {\n                audioDestination = new AudioFileWriter_js_1.AudioFileWriter(dataStream);\n            }\n            else {\n                audioDestination = undefined;\n            }\n            this.synthesisRequestQueue.enqueue(new Synthesizer_js_1.SynthesisRequest(requestId, text, IsSsml, (e) => {\n                this.privSynthesizing = false;\n                if (!!cb) {\n                    try {\n                        cb(e);\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(e);\n                        }\n                    }\n                }\n                cb = undefined;\n                /* eslint-disable no-empty */\n                this.adapterSpeak().catch(() => { });\n            }, (e) => {\n                if (!!err) {\n                    err(e);\n                }\n            }, audioDestination));\n            /* eslint-disable no-empty-function */\n            this.adapterSpeak().catch(() => { });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the synthesizer.\n            /* eslint-disable no-empty */\n            this.dispose(true).catch(() => { });\n        }\n    }\n    async getVoices(locale) {\n        const requestId = (0, Exports_js_2.createNoDashGuid)();\n        const response = await this.privRestAdapter.getVoicesList(requestId);\n        if (response.ok && Array.isArray(response.json)) {\n            let json = response.json;\n            if (!!locale && locale.length > 0) {\n                json = json.filter((item) => !!item.Locale && item.Locale.toLowerCase() === locale.toLowerCase());\n            }\n            return new Exports_js_3.SynthesisVoicesResult(requestId, json, undefined);\n        }\n        else {\n            return new Exports_js_3.SynthesisVoicesResult(requestId, undefined, `Error: ${response.status}: ${response.statusText}`);\n        }\n    }\n}\nexports.SpeechSynthesizer = SpeechSynthesizer;\n\n//# sourceMappingURL=SpeechSynthesizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisResult = void 0;\n/**\n * Base class for synthesis results\n * @class SynthesisResult\n * Added in version 1.20.0\n */\nclass SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, errorDetails, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privProperties = properties;\n    }\n    /**\n     * Specifies the result identifier.\n     * @member SynthesisResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get resultId() {\n        return this.privResultId;\n    }\n    /**\n     * Specifies status of the result.\n     * @member SynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\n     * @member SynthesisResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * The set of properties exposed in the result.\n     * @member SynthesisResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\nexports.SynthesisResult = SynthesisResult;\n\n//# sourceMappingURL=SynthesisResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines result of speech synthesis.\n * @class SpeechSynthesisResult\n * Added in version 1.11.0\n */\nclass SpeechSynthesisResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {ArrayBuffer} audioData - The synthesized audio binary.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     * @param {number} audioDuration - The audio duration.\n     */\n    constructor(resultId, reason, audioData, errorDetails, properties, audioDuration) {\n        super(resultId, reason, errorDetails, properties);\n        this.privAudioData = audioData;\n        this.privAudioDuration = audioDuration;\n    }\n    /**\n     * The synthesized audio data\n     * @member SpeechSynthesisResult.prototype.audioData\n     * @function\n     * @public\n     * @returns {ArrayBuffer} The synthesized audio data.\n     */\n    get audioData() {\n        return this.privAudioData;\n    }\n    /**\n     * The time duration of synthesized audio, in ticks (100 nanoseconds).\n     * @member SpeechSynthesisResult.prototype.audioDuration\n     * @function\n     * @public\n     * @returns {number} The time duration of synthesized audio.\n     */\n    get audioDuration() {\n        return this.privAudioDuration;\n    }\n}\nexports.SpeechSynthesisResult = SpeechSynthesisResult;\n\n//# sourceMappingURL=SpeechSynthesisResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisEventArgs = void 0;\n/**\n * Defines contents of speech synthesis events.\n * @class SpeechSynthesisEventArgs\n * Added in version 1.11.0\n */\nclass SpeechSynthesisEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\n     */\n    constructor(result) {\n        this.privResult = result;\n    }\n    /**\n     * Specifies the synthesis result.\n     * @member SpeechSynthesisEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechSynthesisResult} the synthesis result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.SpeechSynthesisEventArgs = SpeechSynthesisEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisWordBoundaryEventArgs = void 0;\n/**\n * Defines contents of speech synthesis word boundary event.\n * @class SpeechSynthesisWordBoundaryEventArgs\n * Added in version 1.11.0\n */\nclass SpeechSynthesisWordBoundaryEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {number} duration - The audio duration.\n     * @param {string} text - The text.\n     * @param {number} wordLength - The length of the word.\n     * @param {number} textOffset - The text offset.\n     * @param {SpeechSynthesisBoundaryType} boundaryType - The boundary type\n     */\n    constructor(audioOffset, duration, text, wordLength, textOffset, boundaryType) {\n        this.privAudioOffset = audioOffset;\n        this.privDuration = duration;\n        this.privText = text;\n        this.privWordLength = wordLength;\n        this.privTextOffset = textOffset;\n        this.privBoundaryType = boundaryType;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the duration, in ticks (100 nanoseconds).\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.duration\n     * @function\n     * @public\n     * @returns {number} Duration in 100 nanosecond increments.\n     */\n    get duration() {\n        return this.privDuration;\n    }\n    /**\n     * Specifies the text of the word boundary event.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\n     * @function\n     * @public\n     * @returns {string} the text.\n     */\n    get text() {\n        return this.privText;\n    }\n    /**\n     * Specifies the word length\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\n     * @function\n     * @public\n     * @returns {number} the word length\n     */\n    get wordLength() {\n        return this.privWordLength;\n    }\n    /**\n     * Specifies the text offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\n     * @function\n     * @public\n     * @returns {number} the text offset.\n     */\n    get textOffset() {\n        return this.privTextOffset;\n    }\n    /**\n     * Specifies the boundary type.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.boundaryType\n     * @function\n     * @public\n     * @returns {SpeechSynthesisBoundaryType} the boundary type.\n     */\n    get boundaryType() {\n        return this.privBoundaryType;\n    }\n}\nexports.SpeechSynthesisWordBoundaryEventArgs = SpeechSynthesisWordBoundaryEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisWordBoundaryEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisBookmarkEventArgs = void 0;\n/**\n * Defines contents of speech synthesis bookmark event.\n * @class SpeechSynthesisBookmarkEventArgs\n * Added in version 1.16.0\n */\nclass SpeechSynthesisBookmarkEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {string} text - The bookmark text.\n     */\n    constructor(audioOffset, text) {\n        this.privAudioOffset = audioOffset;\n        this.privText = text;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the bookmark.\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.text\n     * @function\n     * @public\n     * @returns {string} the bookmark text.\n     */\n    get text() {\n        return this.privText;\n    }\n}\nexports.SpeechSynthesisBookmarkEventArgs = SpeechSynthesisBookmarkEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisBookmarkEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisVisemeEventArgs = void 0;\n/**\n * Defines contents of speech synthesis viseme event.\n * @class SpeechSynthesisVisemeEventArgs\n * Added in version 1.16.0\n */\nclass SpeechSynthesisVisemeEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {number} visemeId - The viseme ID.\n     * @param {string} animation - The animation, could be in svg or other format.\n     */\n    constructor(audioOffset, visemeId, animation) {\n        this.privAudioOffset = audioOffset;\n        this.privVisemeId = visemeId;\n        this.privAnimation = animation;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the viseme ID.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.visemeId\n     * @function\n     * @public\n     * @returns {number} the viseme ID.\n     */\n    get visemeId() {\n        return this.privVisemeId;\n    }\n    /**\n     * Specifies the animation.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.animation\n     * @function\n     * @public\n     * @returns {string} the animation, could be in svg or other format.\n     */\n    get animation() {\n        return this.privAnimation;\n    }\n}\nexports.SpeechSynthesisVisemeEventArgs = SpeechSynthesisVisemeEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisVisemeEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisBoundaryType = void 0;\n/**\n * Defines the boundary type of speech synthesis boundary event.\n * @class SpeechSynthesisBoundaryType\n * Added in version 1.21.0\n */\nvar SpeechSynthesisBoundaryType;\n(function (SpeechSynthesisBoundaryType) {\n    /**\n     * Indicates the boundary text is a word.\n     * @member SpeechSynthesisBoundaryType.Word\n     */\n    SpeechSynthesisBoundaryType[\"Word\"] = \"WordBoundary\";\n    /**\n     * Indicates the boundary text is a punctuation.\n     * @member SpeechSynthesisBoundaryType.Punctuation\n     */\n    SpeechSynthesisBoundaryType[\"Punctuation\"] = \"PunctuationBoundary\";\n    /**\n     * Indicates the boundary text is a sentence.\n     * @member SpeechSynthesisBoundaryType.Sentence\n     */\n    SpeechSynthesisBoundaryType[\"Sentence\"] = \"SentenceBoundary\";\n})(SpeechSynthesisBoundaryType = exports.SpeechSynthesisBoundaryType || (exports.SpeechSynthesisBoundaryType = {}));\n\n//# sourceMappingURL=SpeechSynthesisBoundaryType.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisVoicesResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines result of speech synthesis.\n * @class SynthesisVoicesResult\n * Added in version 1.20.0\n */\nclass SynthesisVoicesResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param requestId - result id for request.\n     * @param json - json payload from endpoint.\n     */\n    constructor(requestId, json, errorDetails) {\n        if (Array.isArray(json)) {\n            super(requestId, Exports_js_1.ResultReason.VoicesListRetrieved, undefined, new Exports_js_1.PropertyCollection());\n            this.privVoices = [];\n            for (const item of json) {\n                this.privVoices.push(new Exports_js_1.VoiceInfo(item));\n            }\n        }\n        else {\n            super(requestId, Exports_js_1.ResultReason.Canceled, errorDetails ? errorDetails : \"Error information unavailable\", new Exports_js_1.PropertyCollection());\n        }\n    }\n    /**\n     * The list of voices\n     * @member SynthesisVoicesResult.prototype.voices\n     * @function\n     * @public\n     * @returns {VoiceInfo[]} List of synthesized voices.\n     */\n    get voices() {\n        return this.privVoices;\n    }\n}\nexports.SynthesisVoicesResult = SynthesisVoicesResult;\n\n//# sourceMappingURL=SynthesisVoicesResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceInfo = exports.SynthesisVoiceType = exports.SynthesisVoiceGender = void 0;\n/**\n * Defines the gender of synthesis voices.\n * Added in version 1.20.0.\n */\nvar SynthesisVoiceGender;\n(function (SynthesisVoiceGender) {\n    /** Gender unknown */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Unknown\"] = 0] = \"Unknown\";\n    /** Female voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Female\"] = 1] = \"Female\";\n    /** Male voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Male\"] = 2] = \"Male\";\n    /** Neutral voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Neutral\"] = 3] = \"Neutral\";\n})(SynthesisVoiceGender = exports.SynthesisVoiceGender || (exports.SynthesisVoiceGender = {}));\nvar SynthesisVoiceType;\n(function (SynthesisVoiceType) {\n    /**\n     * Voice type is not known.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Online neural voices.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OnlineNeural\"] = 1] = \"OnlineNeural\";\n    /**\n     * Online standard voices. These voices are deprecated.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OnlineStandard\"] = 2] = \"OnlineStandard\";\n    /**\n     * Offline neural voices.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OfflineNeural\"] = 3] = \"OfflineNeural\";\n    /**\n     * Offline standard voices.\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OfflineStandard\"] = 4] = \"OfflineStandard\";\n    /**\n     * High definition (HD) voices. Refer to https://learn.microsoft.com/azure/ai-services/speech-service/high-definition-voices\n     */\n    SynthesisVoiceType[SynthesisVoiceType[\"OnlineNeuralHD\"] = 5] = \"OnlineNeuralHD\";\n})(SynthesisVoiceType = exports.SynthesisVoiceType || (exports.SynthesisVoiceType = {}));\nconst GENDER_LOOKUP = {\n    [SynthesisVoiceGender[SynthesisVoiceGender.Neutral]]: SynthesisVoiceGender.Neutral,\n    [SynthesisVoiceGender[SynthesisVoiceGender.Male]]: SynthesisVoiceGender.Male,\n    [SynthesisVoiceGender[SynthesisVoiceGender.Female]]: SynthesisVoiceGender.Female,\n};\nconst VOICE_TYPE_LOOKUP = {\n    Neural: SynthesisVoiceType.OnlineNeural,\n    NeuralHD: SynthesisVoiceType.OnlineNeuralHD,\n};\n/**\n * Information about Speech Synthesis voice\n * Added in version 1.20.0.\n * @class VoiceInfo\n */\nclass VoiceInfo {\n    constructor(json) {\n        this.privStyleList = [];\n        if (!!json) {\n            this.privName = json.Name;\n            this.privLocale = json.Locale;\n            this.privShortName = json.ShortName;\n            this.privLocaleName = json.LocaleName;\n            this.privDisplayName = json.DisplayName;\n            this.privLocalName = json.LocalName;\n            this.privVoiceType = VOICE_TYPE_LOOKUP[json.VoiceType] || SynthesisVoiceType.Unknown;\n            this.privGender = GENDER_LOOKUP[json.Gender] || SynthesisVoiceGender.Unknown;\n            if (!!json.StyleList && Array.isArray(json.StyleList)) {\n                for (const style of json.StyleList) {\n                    this.privStyleList.push(style);\n                }\n            }\n            this.privSampleRateHertz = json.SampleRateHertz;\n            this.privStatus = json.Status;\n            if (json.ExtendedPropertyMap) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privExtendedPropertyMap = json.ExtendedPropertyMap;\n            }\n            this.privWordsPerMinute = json.WordsPerMinute;\n            if (Array.isArray(json.SecondaryLocaleList)) {\n                this.privSecondaryLocaleList = [...json.SecondaryLocaleList];\n            }\n            if (Array.isArray(json.RolePlayList)) {\n                this.privRolePlayList = [...json.RolePlayList];\n            }\n            if (json.VoiceTag) {\n                this.privVoiceTag = json.VoiceTag;\n            }\n        }\n    }\n    get name() {\n        return this.privName;\n    }\n    get locale() {\n        return this.privLocale;\n    }\n    get shortName() {\n        return this.privShortName;\n    }\n    get displayName() {\n        return this.privDisplayName;\n    }\n    get localName() {\n        return this.privLocalName;\n    }\n    get localeName() {\n        return this.privLocaleName;\n    }\n    get gender() {\n        return this.privGender;\n    }\n    get voiceType() {\n        return this.privVoiceType;\n    }\n    get styleList() {\n        return this.privStyleList;\n    }\n    get sampleRateHertz() {\n        return this.privSampleRateHertz;\n    }\n    get status() {\n        return this.privStatus;\n    }\n    get extendedPropertyMap() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.privExtendedPropertyMap;\n    }\n    get wordsPerMinute() {\n        return this.privWordsPerMinute;\n    }\n    get secondaryLocaleList() {\n        return this.privSecondaryLocaleList;\n    }\n    get rolePlayList() {\n        return this.privRolePlayList;\n    }\n    get voiceTag() {\n        return this.privVoiceTag;\n    }\n}\nexports.VoiceInfo = VoiceInfo;\n\n//# sourceMappingURL=VoiceInfo.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerAudioDestination = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst AudioOutputStream_js_1 = require(\"./AudioOutputStream.js\");\nconst AudioStreamFormat_js_1 = require(\"./AudioStreamFormat.js\");\nconst MediaDurationPlaceholderSeconds = 60 * 30;\nconst AudioFormatToMimeType = {\n    [AudioStreamFormat_js_1.AudioFormatTag.PCM]: \"audio/wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.MuLaw]: \"audio/x-wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.MP3]: \"audio/mpeg\",\n    [AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS]: \"audio/ogg\",\n    [AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS]: \"audio/webm; codecs=opus\",\n    [AudioStreamFormat_js_1.AudioFormatTag.ALaw]: \"audio/x-wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.FLAC]: \"audio/flac\",\n    [AudioStreamFormat_js_1.AudioFormatTag.AMR_WB]: \"audio/amr-wb\",\n    [AudioStreamFormat_js_1.AudioFormatTag.G722]: \"audio/G722\",\n};\n/**\n * Represents the speaker playback audio destination, which only works in browser.\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\n * @class SpeakerAudioDestination\n * Updated in version 1.17.0\n */\nclass SpeakerAudioDestination {\n    constructor(audioDestinationId) {\n        this.privPlaybackStarted = false;\n        this.privAppendingToBuffer = false;\n        this.privMediaSourceOpened = false;\n        this.privBytesReceived = 0;\n        this.privId = audioDestinationId ? audioDestinationId : (0, Exports_js_1.createNoDashGuid)();\n        this.privIsPaused = false;\n        this.privIsClosed = false;\n    }\n    id() {\n        return this.privId;\n    }\n    write(buffer, cb, err) {\n        if (this.privAudioBuffer !== undefined) {\n            this.privAudioBuffer.push(buffer);\n            this.updateSourceBuffer().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        else if (this.privAudioOutputStream !== undefined) {\n            this.privAudioOutputStream.write(buffer);\n            this.privBytesReceived += buffer.byteLength;\n        }\n    }\n    close(cb, err) {\n        this.privIsClosed = true;\n        if (this.privSourceBuffer !== undefined) {\n            this.handleSourceBufferUpdateEnd().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        else if (this.privAudioOutputStream !== undefined && typeof window !== \"undefined\") {\n            if ((this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.PCM || this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.MuLaw\n                || this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.ALaw) && this.privFormat.hasHeader === false) {\n                // eslint-disable-next-line no-console\n                console.warn(\"Play back is not supported for raw PCM, mulaw or alaw format without header.\");\n                if (!!this.onAudioEnd) {\n                    this.onAudioEnd(this);\n                }\n            }\n            else {\n                let receivedAudio = new ArrayBuffer(this.privBytesReceived);\n                this.privAudioOutputStream.read(receivedAudio).then(() => {\n                    receivedAudio = this.privFormat.addHeader(receivedAudio);\n                    const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\n                    this.privAudio.src = window.URL.createObjectURL(audioBlob);\n                    this.notifyPlayback().then(() => {\n                        if (!!cb) {\n                            cb();\n                        }\n                    }, (error) => {\n                        if (!!err) {\n                            err(error);\n                        }\n                    });\n                }, (error) => {\n                    if (!!err) {\n                        err(error);\n                    }\n                });\n            }\n        }\n        else {\n            // unsupported format, call onAudioEnd directly.\n            if (!!this.onAudioEnd) {\n                this.onAudioEnd(this);\n            }\n        }\n    }\n    set format(format) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (typeof (AudioContext) !== \"undefined\" || (typeof (window) !== \"undefined\" && typeof (window.webkitAudioContext) !== \"undefined\")) {\n            this.privFormat = format;\n            const mimeType = AudioFormatToMimeType[this.privFormat.formatTag];\n            if (mimeType === undefined) {\n                // eslint-disable-next-line no-console\n                console.warn(`Unknown mimeType for format ${AudioStreamFormat_js_1.AudioFormatTag[this.privFormat.formatTag]}; playback is not supported.`);\n            }\n            else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\n                this.privAudio = new Audio();\n                this.privAudioBuffer = [];\n                this.privMediaSource = new MediaSource();\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\n                this.privAudio.load();\n                this.privMediaSource.onsourceopen = () => {\n                    this.privMediaSourceOpened = true;\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\n                    this.privSourceBuffer.onupdate = () => {\n                        this.updateSourceBuffer().catch((reason) => {\n                            Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                        });\n                    };\n                    this.privSourceBuffer.onupdateend = () => {\n                        this.handleSourceBufferUpdateEnd().catch((reason) => {\n                            Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                        });\n                    };\n                    this.privSourceBuffer.onupdatestart = () => {\n                        this.privAppendingToBuffer = false;\n                    };\n                };\n                this.updateSourceBuffer().catch((reason) => {\n                    Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                });\n            }\n            else {\n                // eslint-disable-next-line no-console\n                console.warn(`Format ${AudioStreamFormat_js_1.AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\n                this.privAudioOutputStream = new AudioOutputStream_js_1.PullAudioOutputStreamImpl();\n                this.privAudioOutputStream.format = this.privFormat;\n                this.privAudio = new Audio();\n            }\n        }\n    }\n    get volume() {\n        return this.privAudio?.volume ?? -1;\n    }\n    set volume(volume) {\n        if (!!this.privAudio) {\n            this.privAudio.volume = volume;\n        }\n    }\n    mute() {\n        if (!!this.privAudio) {\n            this.privAudio.muted = true;\n        }\n    }\n    unmute() {\n        if (!!this.privAudio) {\n            this.privAudio.muted = false;\n        }\n    }\n    get isClosed() {\n        return this.privIsClosed;\n    }\n    get currentTime() {\n        if (this.privAudio !== undefined) {\n            return this.privAudio.currentTime;\n        }\n        return -1;\n    }\n    pause() {\n        if (!this.privIsPaused && this.privAudio !== undefined) {\n            this.privAudio.pause();\n            this.privIsPaused = true;\n        }\n    }\n    resume(cb, err) {\n        if (this.privIsPaused && this.privAudio !== undefined) {\n            this.privAudio.play().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            this.privIsPaused = false;\n        }\n    }\n    get internalAudio() {\n        return this.privAudio;\n    }\n    async updateSourceBuffer() {\n        if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\n            this.privAppendingToBuffer = true;\n            const binary = this.privAudioBuffer.shift();\n            try {\n                this.privSourceBuffer.appendBuffer(binary);\n            }\n            catch (error) {\n                this.privAudioBuffer.unshift(binary);\n                // eslint-disable-next-line no-console\n                console.log(\"buffer filled, pausing addition of binaries until space is made\");\n                return;\n            }\n            await this.notifyPlayback();\n        }\n        else if (this.canEndStream()) {\n            await this.handleSourceBufferUpdateEnd();\n        }\n    }\n    async handleSourceBufferUpdateEnd() {\n        if (this.canEndStream() && this.sourceBufferAvailable()) {\n            this.privMediaSource.endOfStream();\n            await this.notifyPlayback();\n        }\n    }\n    async notifyPlayback() {\n        if (!this.privPlaybackStarted && this.privAudio !== undefined) {\n            this.privPlaybackStarted = true;\n            if (!!this.onAudioStart) {\n                this.onAudioStart(this);\n            }\n            this.privAudio.onended = () => {\n                if (!!this.onAudioEnd) {\n                    this.onAudioEnd(this);\n                }\n            };\n            if (!this.privIsPaused) {\n                await this.privAudio.play();\n            }\n        }\n    }\n    canEndStream() {\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\n    }\n    sourceBufferAvailable() {\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\n    }\n}\nexports.SpeakerAudioDestination = SpeakerAudioDestination;\n\n//# sourceMappingURL=SpeakerAudioDestination.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"./CancellationEventArgsBase.js\");\n/**\n * Defines content of a RecognitionErrorEvent.\n * @class ConversationTranscriptionCanceledEventArgs\n */\nclass ConversationTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.ConversationTranscriptionCanceledEventArgs = ConversationTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=ConversationTranscriptionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = require(\"./CancellationEventArgsBase.js\");\n/**\n * Defines content of a MeetingTranscriptionCanceledEvent.\n * @class MeetingTranscriptionCanceledEventArgs\n */\nclass MeetingTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.MeetingTranscriptionCanceledEventArgs = MeetingTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=MeetingTranscriptionCanceledEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentGradingSystem = void 0;\n/**\n * Defines the point system for pronunciation score calibration; default value is FivePoint.\n * Added in version 1.15.0\n * @class PronunciationAssessmentGradingSystem\n */\nvar PronunciationAssessmentGradingSystem;\n(function (PronunciationAssessmentGradingSystem) {\n    /**\n     * Five point calibration\n     * @member PronunciationAssessmentGradingSystem.FivePoint\n     */\n    PronunciationAssessmentGradingSystem[PronunciationAssessmentGradingSystem[\"FivePoint\"] = 1] = \"FivePoint\";\n    /**\n     * Hundred mark\n     * @member PronunciationAssessmentGradingSystem.HundredMark\n     */\n    PronunciationAssessmentGradingSystem[PronunciationAssessmentGradingSystem[\"HundredMark\"] = 2] = \"HundredMark\";\n})(PronunciationAssessmentGradingSystem = exports.PronunciationAssessmentGradingSystem || (exports.PronunciationAssessmentGradingSystem = {}));\n\n//# sourceMappingURL=PronunciationAssessmentGradingSystem.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentGranularity = void 0;\n/**\n * Defines the pronunciation evaluation granularity; default value is Phoneme.\n * Added in version 1.15.0\n * @class PronunciationAssessmentGranularity\n */\nvar PronunciationAssessmentGranularity;\n(function (PronunciationAssessmentGranularity) {\n    /**\n     * Shows the score on the full text, word and phoneme level\n     * @member PronunciationAssessmentGranularity.Phoneme\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"Phoneme\"] = 1] = \"Phoneme\";\n    /**\n     * Shows the score on the full text and word level\n     * @member PronunciationAssessmentGranularity.Word\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"Word\"] = 2] = \"Word\";\n    /**\n     * Shows the score on the full text level only\n     * @member PronunciationAssessmentGranularity.FullText\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"FullText\"] = 3] = \"FullText\";\n})(PronunciationAssessmentGranularity = exports.PronunciationAssessmentGranularity || (exports.PronunciationAssessmentGranularity = {}));\n\n//# sourceMappingURL=PronunciationAssessmentGranularity.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Pronunciation assessment configuration.\n * @class PronunciationAssessmentConfig\n * Added in version 1.15.0.\n */\nclass PronunciationAssessmentConfig {\n    /**\n     * PronunciationAssessmentConfig constructor.\n     * @constructor\n     * @param {string} referenceText\n     * @param gradingSystem\n     * @param granularity\n     * @param enableMiscue\n     */\n    constructor(referenceText, gradingSystem = Exports_js_1.PronunciationAssessmentGradingSystem.FivePoint, granularity = Exports_js_1.PronunciationAssessmentGranularity.Phoneme, enableMiscue = false) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\n        this.privProperties = new Exports_js_1.PropertyCollection();\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_GradingSystem, Exports_js_1.PronunciationAssessmentGradingSystem[gradingSystem]);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Granularity, Exports_js_1.PronunciationAssessmentGranularity[granularity]);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\n    }\n    /**\n     * @member PronunciationAssessmentConfig.fromJSON\n     * @function\n     * @public\n     * @param {string} json The json string containing the pronunciation assessment parameters.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\n     * This method is designed to support the pronunciation assessment parameters still in preview.\n     * Under normal circumstances, use the constructor instead.\n     */\n    static fromJSON(json) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n        const config = new PronunciationAssessmentConfig(\"\");\n        config.privProperties = new Exports_js_1.PropertyCollection();\n        config.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Json, json);\n        return config;\n    }\n    toJSON() {\n        this.updateJson();\n        return this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params);\n    }\n    applyTo(recognizer) {\n        this.updateJson();\n        const recoBase = recognizer.internalData;\n        recoBase.expectContentAssessmentResponse = !!this.privContentAssessmentTopic;\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params), this.privContentAssessmentTopic, recoBase.isSpeakerDiarizationEnabled);\n    }\n    /**\n     * Gets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @returns {string} Reference text.\n     */\n    get referenceText() {\n        return this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText);\n    }\n    /**\n     * Gets/Sets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @param {string} referenceText - Reference text.\n     */\n    set referenceText(referenceText) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\n        this.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    }\n    /**\n     * Sets the phoneme alphabet.\n     * The valid values are \"SAPI\" (default) and \"IPA\".\n     * Added in version 1.20.0\n     * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\n     * @function\n     * @public\n     * @param {string} phonemeAlphabet - Phoneme alphabet.\n     */\n    set phonemeAlphabet(phonemeAlphabet) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\n        this.privPhonemeAlphabet = phonemeAlphabet;\n    }\n    /**\n     * Sets the boolean enableMiscue property.\n     * Added in version 1.26.0\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\n     * @function\n     * @public\n     * @param {boolean} enableMiscue - enable miscue.\n     */\n    set enableMiscue(enableMiscue) {\n        const enableMiscueString = enableMiscue ? \"true\" : \"false\";\n        this.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, enableMiscueString);\n    }\n    /**\n     * Gets the boolean enableMiscue property.\n     * Added in version 1.26.0\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\n     * @function\n     * @public\n     * @return {boolean} enableMiscue - enable miscue.\n     */\n    get enableMiscue() {\n        const enableMiscueString = this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, \"false\");\n        return (enableMiscueString.toLowerCase() === \"true\");\n    }\n    /**\n     * Sets the nbest phoneme count\n     * Added in version 1.20.0\n     * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\n     * @function\n     * @public\n     * @param {number} nbestPhonemeCount - NBest phoneme count.\n     */\n    set nbestPhonemeCount(nbestPhonemeCount) {\n        this.privNBestPhonemeCount = nbestPhonemeCount;\n    }\n    /**\n     * Enables the prosody assessment.\n     * Added in version 1.34.0\n     * @member PronunciationAssessmentConfig.prototype.enableProsodyAssessment\n     * @function\n     * @public\n     * @param {boolean} enableProsodyAssessment - enable prosody assessment.\n     */\n    set enableProsodyAssessment(enableProsodyAssessment) {\n        this.privEnableProsodyAssessment = enableProsodyAssessment;\n    }\n    /**\n     * Enables content assessment and sets the topic.\n     * Added in version 1.34.0\n     * @member PronunciationAssessmentConfig.prototype.enableContentAssessmentWithTopic\n     * @function\n     * @public\n     * @param {string} topic - Topic for content assessment.\n     */\n    enableContentAssessmentWithTopic(topic) {\n        this.privContentAssessmentTopic = topic;\n    }\n    /**\n     * @member PronunciationAssessmentConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets a pronunciation assessment config properties\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    updateJson() {\n        const jsonString = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Json, \"{}\");\n        const paramsJson = JSON.parse(jsonString);\n        const referenceText = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText);\n        if (referenceText) {\n            paramsJson.referenceText = referenceText;\n        }\n        const gradingSystem = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_GradingSystem);\n        if (gradingSystem) {\n            paramsJson.gradingSystem = gradingSystem;\n        }\n        const granularity = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Granularity);\n        if (granularity) {\n            paramsJson.granularity = granularity;\n        }\n        if (this.privPhonemeAlphabet) {\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\n        }\n        if (this.privNBestPhonemeCount) {\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\n        }\n        paramsJson.enableProsodyAssessment = this.privEnableProsodyAssessment;\n        // always set dimension to Comprehensive\n        paramsJson.dimension = \"Comprehensive\";\n        const enableMiscueString = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue);\n        if (enableMiscueString) {\n            paramsJson.enableMiscue = this.enableMiscue;\n        }\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\n    }\n}\nexports.PronunciationAssessmentConfig = PronunciationAssessmentConfig;\n\n//# sourceMappingURL=PronunciationAssessmentConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PronunciationAssessmentResult = exports.ContentAssessmentResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\nclass ContentAssessmentResult {\n    /**\n     * @Internal\n     * Do not use externally.\n     */\n    constructor(detailResult) {\n        this.privPronJson = detailResult;\n    }\n    /**\n     * Correctness in using grammar and variety of sentence patterns.\n     * Grammatical errors are jointly evaluated by lexical accuracy,\n     * grammatical accuracy and diversity of sentence structures.\n     * @member ContentAssessmentResult.prototype.grammarScore\n     * @function\n     * @public\n     * @returns {number} Grammar score.\n     */\n    get grammarScore() {\n        return this.privPronJson.ContentAssessment.GrammarScore;\n    }\n    /**\n     * Proficiency in lexical usage. It evaluates the speaker's effective usage\n     * of words and their appropriateness within the given context to express\n     * ideas accurately, as well as level of lexical complexity.\n     * @member ContentAssessmentResult.prototype.vocabularyScore\n     * @function\n     * @public\n     * @returns {number} Vocabulary score.\n     */\n    get vocabularyScore() {\n        return this.privPronJson.ContentAssessment.VocabularyScore;\n    }\n    /**\n     * Level of understanding and engagement with the topic, which provides\n     * insights into the speaker’s ability to express their thoughts and ideas\n     * effectively and the ability to engage with the topic.\n     * @member ContentAssessmentResult.prototype.topicScore\n     * @function\n     * @public\n     * @returns {number} Topic score.\n     */\n    get topicScore() {\n        return this.privPronJson.ContentAssessment.TopicScore;\n    }\n}\nexports.ContentAssessmentResult = ContentAssessmentResult;\n/**\n * Pronunciation assessment results.\n * @class PronunciationAssessmentResult\n * Added in version 1.15.0.\n */\nclass PronunciationAssessmentResult {\n    constructor(jsonString) {\n        const j = JSON.parse(jsonString);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\n        this.privPronJson = j.NBest[0];\n    }\n    /**\n     * @member PronunciationAssessmentResult.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult} result The recognition result.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\n     */\n    static fromResult(result) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(result, \"result\");\n        const json = result.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n        return new PronunciationAssessmentResult(json);\n    }\n    /**\n     * Gets the detail result of pronunciation assessment.\n     * @member PronunciationAssessmentConfig.prototype.detailResult\n     * @function\n     * @public\n     * @returns {DetailResult} detail result.\n     */\n    get detailResult() {\n        return this.privPronJson;\n    }\n    /**\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\n     * how closely the phonemes match a native speaker's pronunciation.\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\n     * @function\n     * @public\n     * @returns {number} Accuracy score.\n     */\n    get accuracyScore() {\n        return this.detailResult.PronunciationAssessment?.AccuracyScore;\n    }\n    /**\n     * The overall score indicating the pronunciation quality of the given speech.\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\n     * @function\n     * @public\n     * @returns {number} Pronunciation score.\n     */\n    get pronunciationScore() {\n        return this.detailResult.PronunciationAssessment?.PronScore;\n    }\n    /**\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\n     * @member PronunciationAssessmentResult.prototype.completenessScore\n     * @function\n     * @public\n     * @returns {number} Completeness score.\n     */\n    get completenessScore() {\n        return this.detailResult.PronunciationAssessment?.CompletenessScore;\n    }\n    /**\n     * The score indicating the fluency of the given speech.\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\n     * @function\n     * @public\n     * @returns {number} Fluency score.\n     */\n    get fluencyScore() {\n        return this.detailResult.PronunciationAssessment?.FluencyScore;\n    }\n    /**\n     * The prosody score, which indicates how nature of the given speech, including stress, intonation, speaking speed and rhythm.\n     * @member PronunciationAssessmentResult.prototype.prosodyScore\n     * @function\n     * @public\n     * @returns {number} Prosody score.\n     */\n    get prosodyScore() {\n        return this.detailResult.PronunciationAssessment?.ProsodyScore;\n    }\n    /**\n     * The concent assessment result.\n     * Only available when content assessment is enabled.\n     * @member PronunciationAssessmentResult.prototype.contentAssessmentResult\n     * @function\n     * @public\n     * @returns {ContentAssessmentResult} Content assessment result.\n     */\n    get contentAssessmentResult() {\n        if (this.detailResult.ContentAssessment === undefined) {\n            return undefined;\n        }\n        return new ContentAssessmentResult(this.detailResult);\n    }\n}\nexports.PronunciationAssessmentResult = PronunciationAssessmentResult;\n\n//# sourceMappingURL=PronunciationAssessmentResult.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines the talking avatar configuration.\n * @class AvatarConfig\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} character - The avatar character.\n     * @param {string} style - The avatar style.\n     * @param {AvatarVideoFormat} videoFormat - The talking avatar output video format.\n     */\n    constructor(character, style, videoFormat) {\n        this.privCustomized = false;\n        this.privUseBuiltInVoice = false;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(character, \"character\");\n        this.character = character;\n        this.style = style;\n        if (videoFormat === undefined) {\n            videoFormat = new Exports_js_1.AvatarVideoFormat();\n        }\n        this.videoFormat = videoFormat;\n    }\n    /**\n     * Indicates if the talking avatar is customized.\n     */\n    get customized() {\n        return this.privCustomized;\n    }\n    /**\n     * Sets if the talking avatar is customized.\n     */\n    set customized(value) {\n        this.privCustomized = value;\n    }\n    /**\n     * Indicates whether to use built-in voice for custom avatar.\n     */\n    get useBuiltInVoice() {\n        return this.privUseBuiltInVoice;\n    }\n    /**\n     * Sets whether to use built-in voice for custom avatar.\n     */\n    set useBuiltInVoice(value) {\n        this.privUseBuiltInVoice = value;\n    }\n    /**\n     * Gets the background color.\n     */\n    get backgroundColor() {\n        return this.privBackgroundColor;\n    }\n    /**\n     * Sets the background color.\n     */\n    set backgroundColor(value) {\n        this.privBackgroundColor = value;\n    }\n    /**\n     * Gets the background image.\n     */\n    get backgroundImage() {\n        return this.privBackgroundImage;\n    }\n    /**\n     * Sets the background image.\n     * @param {URL} value - The background image.\n     */\n    set backgroundImage(value) {\n        this.privBackgroundImage = value;\n    }\n    /**\n     * Gets the remote ICE servers.\n     * @remarks This method is designed to be used internally in the SDK.\n     * @returns {RTCIceServer[]} The remote ICE servers.\n     */\n    get remoteIceServers() {\n        return this.privRemoteIceServers;\n    }\n    /**\n     * Sets the remote ICE servers.\n     * @remarks Normally, the ICE servers are gathered from the PeerConnection,\n     * set this property to override the ICE servers. E.g., the ICE servers are\n     * different in client and server side.\n     * @param {RTCIceServer[]} value - The remote ICE servers.\n     */\n    set remoteIceServers(value) {\n        this.privRemoteIceServers = value;\n    }\n}\nexports.AvatarConfig = AvatarConfig;\n\n//# sourceMappingURL=AvatarConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarEventArgs = exports.AvatarEventTypes = void 0;\nvar AvatarEventTypes;\n(function (AvatarEventTypes) {\n    AvatarEventTypes[\"SwitchedToSpeaking\"] = \"SwitchedToSpeaking\";\n    AvatarEventTypes[\"SwitchedToIdle\"] = \"SwitchedToIdle\";\n    AvatarEventTypes[\"SessionClosed\"] = \"SessionClosed\";\n})(AvatarEventTypes = exports.AvatarEventTypes || (exports.AvatarEventTypes = {}));\n/**\n * Defines content for talking avatar events.\n * @class AvatarEventArgs\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {string} description - The description of the event.\n     */\n    constructor(audioOffset, description) {\n        this.privOffset = audioOffset;\n        this.privDescription = description;\n    }\n    /**\n     * The type of the event.\n     * @public\n     * @returns {AvatarEventTypes} The type of the event.\n     */\n    get type() {\n        return this.privType;\n    }\n    /**\n     * The time offset associated with this event.\n     * @public\n     * @returns {number} The time offset associated with this event.\n     */\n    get offset() {\n        return this.privOffset;\n    }\n    /**\n     * The description of the event.\n     * @public\n     * @returns {string} The description of the event.\n     */\n    get description() {\n        return this.privDescription;\n    }\n}\nexports.AvatarEventArgs = AvatarEventArgs;\n\n//# sourceMappingURL=AvatarEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass SpeechSynthesisConnectionFactory {\n    constructor() {\n        this.synthesisUri = \"/tts/cognitiveservices/websocket/v1\";\n    }\n    async create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const hostPrefix = (endpointId === undefined) ? \"tts\" : \"voice\";\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".\" + hostPrefix + \".speech\" + hostSuffix);\n        const queryParams = {};\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        if (endpointId !== undefined && endpointId !== \"\") {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomVoiceDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomVoiceDeploymentId] = endpointId;\n            }\n        }\n        if (config.avatarEnabled) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.EnableAvatar) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableAvatar] = \"true\";\n            }\n        }\n        if (!!endpoint) {\n            const endpointUrl = new URL(endpoint);\n            const pathName = endpointUrl.pathname;\n            if (pathName === \"\" || pathName === \"/\") {\n                // We need to generate the path, and we need to check for a redirect.\n                endpointUrl.pathname = this.synthesisUri;\n                endpoint = await ConnectionFactoryBase_js_1.ConnectionFactoryBase.getRedirectUrlFromEndpoint(endpointUrl.toString());\n            }\n        }\n        if (!endpoint) {\n            endpoint = host + this.synthesisUri;\n        }\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromParameters(config.parameters), enableCompression, connectionId);\n    }\n}\nexports.SpeechSynthesisConnectionFactory = SpeechSynthesisConnectionFactory;\n\n//# sourceMappingURL=SpeechSynthesisConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarSynthesizer = void 0;\nconst SpeechSynthesisConnectionFactory_js_1 = require(\"../common.speech/SpeechSynthesisConnectionFactory.js\");\nconst Exports_js_1 = require(\"../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioOutputFormat_js_1 = require(\"./Audio/AudioOutputFormat.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Synthesizer_js_1 = require(\"./Synthesizer.js\");\n/**\n * Defines the avatar synthesizer.\n * @class AvatarSynthesizer\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarSynthesizer extends Exports_js_3.Synthesizer {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The speech config.\n     * @param {AvatarConfig} avatarConfig - The talking avatar config.\n     */\n    constructor(speechConfig, avatarConfig) {\n        super(speechConfig);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(avatarConfig, \"avatarConfig\");\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory_js_1.SpeechSynthesisConnectionFactory();\n        this.privAvatarConfig = avatarConfig;\n        this.implCommonSynthesizeSetup();\n    }\n    implCommonSynthesizeSetup() {\n        super.implCommonSynthesizeSetup();\n        // The service checks the audio format setting while it ignores it in avatar synthesis.\n        this.privAdapter.audioOutputFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(Exports_js_3.SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm);\n    }\n    /**\n     * Starts the talking avatar session and establishes the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.startAvatarAsync\n     * @function\n     * @public\n     * @param {AvatarWebRTCConnectionInfo} peerConnection - The peer connection.\n     * @returns {Promise<SynthesisResult>} The promise of the connection result.\n     */\n    async startAvatarAsync(peerConnection) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(peerConnection, \"peerConnection\");\n        this.privIceServers = peerConnection.getConfiguration().iceServers;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privIceServers, \"Ice servers must be set.\");\n        const iceGatheringDone = new Exports_js_2.Deferred();\n        // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\n        peerConnection.onicegatheringstatechange = () => {\n            Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering state: \" + peerConnection.iceGatheringState, Exports_js_2.EventType.Debug));\n            if (peerConnection.iceGatheringState === \"complete\") {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering complete.\", Exports_js_2.EventType.Info));\n                iceGatheringDone.resolve();\n            }\n        };\n        peerConnection.onicecandidate = (event) => {\n            if (event.candidate) {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice candidate: \" + event.candidate.candidate, Exports_js_2.EventType.Debug));\n            }\n            else {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice candidate: complete\", Exports_js_2.EventType.Debug));\n                iceGatheringDone.resolve();\n            }\n        };\n        // Set a timeout for ice gathering, currently 2 seconds.\n        setTimeout(() => {\n            if (peerConnection.iceGatheringState !== \"complete\") {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering timeout.\", Exports_js_2.EventType.Warning));\n                iceGatheringDone.resolve();\n            }\n        }, 2000);\n        const sdp = await peerConnection.createOffer();\n        await peerConnection.setLocalDescription(sdp);\n        await iceGatheringDone.promise;\n        Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: got local SDP.\", Exports_js_2.EventType.Info));\n        this.privProperties.setProperty(Exports_js_3.PropertyId.TalkingAvatarService_WebRTC_SDP, JSON.stringify(peerConnection.localDescription));\n        const result = await this.speak(\"\", false);\n        if (result.reason !== Exports_js_3.ResultReason.SynthesizingAudioCompleted) {\n            return new Exports_js_3.SynthesisResult(result.resultId, result.reason, result.errorDetails, result.properties);\n        }\n        const sdpAnswerString = atob(result.properties.getProperty(Exports_js_3.PropertyId.TalkingAvatarService_WebRTC_SDP));\n        const sdpAnswer = new RTCSessionDescription(JSON.parse(sdpAnswerString));\n        await peerConnection.setRemoteDescription(sdpAnswer);\n        return new Exports_js_3.SynthesisResult(result.resultId, result.reason, undefined, result.properties);\n    }\n    /**\n     * Speaks plain text asynchronously. The rendered audio and video will be sent via the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.speakTextAsync\n     * @function\n     * @public\n     * @param {string} text - The plain text to speak.\n     * @returns {Promise<SynthesisResult>} The promise of the synthesis result.\n     */\n    async speakTextAsync(text) {\n        const r = await this.speak(text, false);\n        return new Exports_js_3.SynthesisResult(r.resultId, r.reason, r.errorDetails, r.properties);\n    }\n    /**\n     * Speaks SSML asynchronously. The rendered audio and video will be sent via the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.speakSsmlAsync\n     * @function\n     * @public\n     * @param {string} ssml - The SSML text to speak.\n     * @returns {Promise<SynthesisResult>} The promise of the synthesis result.\n     */\n    async speakSsmlAsync(ssml) {\n        const r = await this.speak(ssml, true);\n        return new Exports_js_3.SynthesisResult(r.resultId, r.reason, r.errorDetails, r.properties);\n    }\n    /**\n     * Speaks text asynchronously. The avatar will switch to idle state.\n     * @member AvatarSynthesizer.prototype.stopSpeakingAsync\n     * @function\n     * @public\n     * @returns {Promise<void>} The promise of the void result.\n     */\n    async stopSpeakingAsync() {\n        while (this.synthesisRequestQueue.length() > 0) {\n            const request = await this.synthesisRequestQueue.dequeue();\n            request.err(\"Synthesis is canceled by user.\");\n        }\n        return this.privAdapter.stopSpeaking();\n    }\n    /**\n     * Stops the talking avatar session and closes the WebRTC connection.\n     * For now, this is the same as close().\n     * You need to create a new AvatarSynthesizer instance to start a new session.\n     * @member AvatarSynthesizer.prototype.stopAvatarAsync\n     * @function\n     * @public\n     * @returns {Promise<void>} The promise of the void result.\n     */\n    async stopAvatarAsync() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        return this.dispose(true);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member AvatarSynthesizer.prototype.close\n     * @function\n     * @public\n     */\n    async close() {\n        if (this.privDisposed) {\n            return;\n        }\n        return this.dispose(true);\n    }\n    /**\n     * Gets the ICE servers. Internal use only.\n     */\n    get iceServers() {\n        return this.privIceServers;\n    }\n    // Creates the synthesis adapter\n    createSynthesisAdapter(authentication, connectionFactory, synthesizerConfig) {\n        return new Exports_js_1.AvatarSynthesisAdapter(authentication, connectionFactory, synthesizerConfig, this, this.privAvatarConfig);\n    }\n    createRestSynthesisAdapter(_authentication, _synthesizerConfig) {\n        return undefined;\n    }\n    createSynthesizerConfig(speechConfig) {\n        const config = super.createSynthesizerConfig(speechConfig);\n        config.avatarEnabled = true;\n        return config;\n    }\n    async speak(text, isSSML) {\n        const requestId = (0, Exports_js_2.createNoDashGuid)();\n        const deferredResult = new Exports_js_2.Deferred();\n        this.synthesisRequestQueue.enqueue(new Synthesizer_js_1.SynthesisRequest(requestId, text, isSSML, (e) => {\n            deferredResult.resolve(e);\n            this.privSynthesizing = false;\n            void this.adapterSpeak();\n        }, (e) => {\n            deferredResult.reject(e);\n            this.privSynthesizing = false;\n        }));\n        void this.adapterSpeak();\n        return deferredResult.promise;\n    }\n}\nexports.AvatarSynthesizer = AvatarSynthesizer;\n\n//# sourceMappingURL=AvatarSynthesizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarVideoFormat = exports.Coordinate = void 0;\n/* eslint-disable max-classes-per-file */\n/**\n * Defines a coordinate in 2D space.\n * @class Coordinate\n * Added in version 1.33.0\n */\nclass Coordinate {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\nexports.Coordinate = Coordinate;\n/**\n * Defines the avatar output video format.\n * @class AvatarVideoFormat\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change in the future.\n */\nclass AvatarVideoFormat {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} codec - The video codec.\n     * @param {number} bitrate - The video bitrate.\n     * @param {number} width - The video width.\n     * @param {number} height - The video height.\n     */\n    constructor(codec = \"H264\", bitrate = 2000000, width = 1920, height = 1080) {\n        this.codec = codec;\n        this.bitrate = bitrate;\n        this.width = width;\n        this.height = height;\n    }\n    /**\n     * Sets the video crop range.\n     */\n    setCropRange(topLeft, bottomRight) {\n        this.cropRange = {\n            bottomRight,\n            topLeft,\n        };\n    }\n}\nexports.AvatarVideoFormat = AvatarVideoFormat;\n\n//# sourceMappingURL=AvatarVideoFormat.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarWebRTCConnectionResult = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines the avatar WebRTC connection result.\n * @class AvatarWebRTCConnectionResult\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change in the future.\n */\nclass AvatarWebRTCConnectionResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {RTCSessionDescriptionInit} SDPAnswer - The SDP answer of WebRTC connection.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(SDPAnswer, resultId, reason, errorDetails, properties) {\n        super(resultId, reason, errorDetails, properties);\n        this.privSDPAnswer = SDPAnswer;\n    }\n    /**\n     * Specifies SDP (Session Description Protocol) answer of WebRTC connection.\n     * @member AvatarWebRTCConnectionResult.prototype.SDPAnswer\n     * @function\n     * @public\n     * @returns {RTCSessionDescriptionInit} Specifies the SDP answer of WebRTC connection.\n     */\n    get SDPAnswer() {\n        return this.privSDPAnswer;\n    }\n}\nexports.AvatarWebRTCConnectionResult = AvatarWebRTCConnectionResult;\n\n//# sourceMappingURL=AvatarWebRTCConnectionResult.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Diagnostics = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\n/**\n * Defines diagnostics API for managing console output\n * Added in version 1.21.0\n */\nclass Diagnostics {\n    static SetLoggingLevel(logLevel) {\n        this.privListener = new Exports_js_1.ConsoleLoggingListener(logLevel);\n        Exports_js_2.Events.instance.attachConsoleListener(this.privListener);\n    }\n    static StartConsoleOutput() {\n        if (!!this.privListener) {\n            this.privListener.enableConsoleOutput = true;\n        }\n    }\n    static StopConsoleOutput() {\n        if (!!this.privListener) {\n            this.privListener.enableConsoleOutput = false;\n        }\n    }\n    static SetLogOutputPath(path) {\n        if (typeof window === \"undefined\") {\n            if (!!this.privListener) {\n                this.privListener.logPath = path;\n            }\n        }\n        else {\n            throw new Error(\"File system logging not available in browser.\");\n        }\n    }\n    static set onLogOutput(callback) {\n        if (!!this.privListener) {\n            this.privListener.logCallback = callback;\n        }\n    }\n}\nexports.Diagnostics = Diagnostics;\nDiagnostics.privListener = undefined;\n\n//# sourceMappingURL=Diagnostics.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionEventArgs = exports.CancellationErrorCode = exports.CancellationDetails = exports.CancellationDetailsBase = exports.IntentRecognitionCanceledEventArgs = exports.TranslationRecognitionCanceledEventArgs = exports.NoMatchDetails = exports.NoMatchReason = exports.Translations = exports.TranslationRecognizer = exports.VoiceProfileType = exports.IntentRecognizer = exports.SpeechRecognizer = exports.Recognizer = exports.PropertyId = exports.PropertyCollection = exports.SpeechTranslationConfigImpl = exports.SpeechTranslationConfig = exports.SpeechConfigImpl = exports.SpeechConfig = exports.ResultReason = exports.TranslationSynthesisResult = exports.TranslationRecognitionResult = exports.TranslationSynthesisEventArgs = exports.TranslationRecognitionEventArgs = exports.SpeechRecognitionCanceledEventArgs = exports.MeetingTranscriptionEventArgs = exports.ConversationTranscriptionEventArgs = exports.SpeechRecognitionEventArgs = exports.LanguageUnderstandingModel = exports.IntentRecognitionResult = exports.SpeechRecognitionResult = exports.RecognitionResult = exports.IntentRecognitionEventArgs = exports.OutputFormat = exports.RecognitionEventArgs = exports.SessionEventArgs = exports.KeywordRecognitionModel = exports.PushAudioOutputStreamCallback = exports.PullAudioInputStreamCallback = exports.CancellationReason = exports.PushAudioOutputStream = exports.PullAudioOutputStream = exports.AudioOutputStream = exports.PushAudioInputStream = exports.PullAudioInputStream = exports.AudioInputStream = exports.AudioFormatTag = exports.AudioStreamFormat = exports.AudioConfig = void 0;\nexports.SpeechSynthesisEventArgs = exports.SpeechSynthesisResult = exports.SynthesisResult = exports.SpeechSynthesizer = exports.SpeechSynthesisOutputFormat = exports.Synthesizer = exports.User = exports.ParticipantChangedReason = exports.Participant = exports.MeetingTranscriber = exports.Meeting = exports.ConversationTranscriptionResult = exports.ConversationTranscriber = exports.ConversationTranslator = exports.ConversationTranslationResult = exports.ConversationTranslationEventArgs = exports.ConversationTranslationCanceledEventArgs = exports.ConversationParticipantsChangedEventArgs = exports.ConversationExpirationEventArgs = exports.Conversation = exports.SpeakerRecognitionCancellationDetails = exports.SpeakerRecognitionResultType = exports.SpeakerRecognitionResult = exports.SourceLanguageConfig = exports.AutoDetectSourceLanguageResult = exports.AutoDetectSourceLanguageConfig = exports.SpeakerVerificationModel = exports.SpeakerIdentificationModel = exports.SpeakerRecognizer = exports.VoiceProfileClient = exports.VoiceProfilePhraseResult = exports.VoiceProfileCancellationDetails = exports.VoiceProfileResult = exports.VoiceProfileEnrollmentCancellationDetails = exports.VoiceProfileEnrollmentResult = exports.VoiceProfile = exports.ConnectionMessage = exports.ConnectionMessageEventArgs = exports.BaseAudioPlayer = exports.ProfanityOption = exports.ServicePropertyChannel = exports.TurnStatusReceivedEventArgs = exports.ActivityReceivedEventArgs = exports.DialogServiceConnector = exports.CustomCommandsConfig = exports.BotFrameworkConfig = exports.DialogServiceConfig = exports.PhraseListGrammar = exports.Connection = exports.ServiceEventArgs = void 0;\nexports.LogLevel = exports.Diagnostics = exports.AvatarWebRTCConnectionResult = exports.Coordinate = exports.AvatarVideoFormat = exports.AvatarSynthesizer = exports.AvatarEventArgs = exports.AvatarConfig = exports.LanguageIdMode = exports.PronunciationAssessmentResult = exports.PronunciationAssessmentConfig = exports.PronunciationAssessmentGranularity = exports.PronunciationAssessmentGradingSystem = exports.MeetingTranscriptionCanceledEventArgs = exports.ConversationTranscriptionCanceledEventArgs = exports.SpeakerAudioDestination = exports.VoiceInfo = exports.SynthesisVoiceType = exports.SynthesisVoiceGender = exports.SynthesisVoicesResult = exports.SpeechSynthesisBoundaryType = exports.SpeechSynthesisVisemeEventArgs = exports.SpeechSynthesisBookmarkEventArgs = exports.SpeechSynthesisWordBoundaryEventArgs = void 0;\nvar AudioConfig_js_1 = require(\"./Audio/AudioConfig.js\");\nObject.defineProperty(exports, \"AudioConfig\", { enumerable: true, get: function () { return AudioConfig_js_1.AudioConfig; } });\nvar AudioStreamFormat_js_1 = require(\"./Audio/AudioStreamFormat.js\");\nObject.defineProperty(exports, \"AudioStreamFormat\", { enumerable: true, get: function () { return AudioStreamFormat_js_1.AudioStreamFormat; } });\nObject.defineProperty(exports, \"AudioFormatTag\", { enumerable: true, get: function () { return AudioStreamFormat_js_1.AudioFormatTag; } });\nvar AudioInputStream_js_1 = require(\"./Audio/AudioInputStream.js\");\nObject.defineProperty(exports, \"AudioInputStream\", { enumerable: true, get: function () { return AudioInputStream_js_1.AudioInputStream; } });\nObject.defineProperty(exports, \"PullAudioInputStream\", { enumerable: true, get: function () { return AudioInputStream_js_1.PullAudioInputStream; } });\nObject.defineProperty(exports, \"PushAudioInputStream\", { enumerable: true, get: function () { return AudioInputStream_js_1.PushAudioInputStream; } });\nvar AudioOutputStream_js_1 = require(\"./Audio/AudioOutputStream.js\");\nObject.defineProperty(exports, \"AudioOutputStream\", { enumerable: true, get: function () { return AudioOutputStream_js_1.AudioOutputStream; } });\nObject.defineProperty(exports, \"PullAudioOutputStream\", { enumerable: true, get: function () { return AudioOutputStream_js_1.PullAudioOutputStream; } });\nObject.defineProperty(exports, \"PushAudioOutputStream\", { enumerable: true, get: function () { return AudioOutputStream_js_1.PushAudioOutputStream; } });\nvar CancellationReason_js_1 = require(\"./CancellationReason.js\");\nObject.defineProperty(exports, \"CancellationReason\", { enumerable: true, get: function () { return CancellationReason_js_1.CancellationReason; } });\nvar PullAudioInputStreamCallback_js_1 = require(\"./Audio/PullAudioInputStreamCallback.js\");\nObject.defineProperty(exports, \"PullAudioInputStreamCallback\", { enumerable: true, get: function () { return PullAudioInputStreamCallback_js_1.PullAudioInputStreamCallback; } });\nvar PushAudioOutputStreamCallback_js_1 = require(\"./Audio/PushAudioOutputStreamCallback.js\");\nObject.defineProperty(exports, \"PushAudioOutputStreamCallback\", { enumerable: true, get: function () { return PushAudioOutputStreamCallback_js_1.PushAudioOutputStreamCallback; } });\nvar KeywordRecognitionModel_js_1 = require(\"./KeywordRecognitionModel.js\");\nObject.defineProperty(exports, \"KeywordRecognitionModel\", { enumerable: true, get: function () { return KeywordRecognitionModel_js_1.KeywordRecognitionModel; } });\nvar SessionEventArgs_js_1 = require(\"./SessionEventArgs.js\");\nObject.defineProperty(exports, \"SessionEventArgs\", { enumerable: true, get: function () { return SessionEventArgs_js_1.SessionEventArgs; } });\nvar RecognitionEventArgs_js_1 = require(\"./RecognitionEventArgs.js\");\nObject.defineProperty(exports, \"RecognitionEventArgs\", { enumerable: true, get: function () { return RecognitionEventArgs_js_1.RecognitionEventArgs; } });\nvar OutputFormat_js_1 = require(\"./OutputFormat.js\");\nObject.defineProperty(exports, \"OutputFormat\", { enumerable: true, get: function () { return OutputFormat_js_1.OutputFormat; } });\nvar IntentRecognitionEventArgs_js_1 = require(\"./IntentRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"IntentRecognitionEventArgs\", { enumerable: true, get: function () { return IntentRecognitionEventArgs_js_1.IntentRecognitionEventArgs; } });\nvar RecognitionResult_js_1 = require(\"./RecognitionResult.js\");\nObject.defineProperty(exports, \"RecognitionResult\", { enumerable: true, get: function () { return RecognitionResult_js_1.RecognitionResult; } });\nvar SpeechRecognitionResult_js_1 = require(\"./SpeechRecognitionResult.js\");\nObject.defineProperty(exports, \"SpeechRecognitionResult\", { enumerable: true, get: function () { return SpeechRecognitionResult_js_1.SpeechRecognitionResult; } });\nvar IntentRecognitionResult_js_1 = require(\"./IntentRecognitionResult.js\");\nObject.defineProperty(exports, \"IntentRecognitionResult\", { enumerable: true, get: function () { return IntentRecognitionResult_js_1.IntentRecognitionResult; } });\nvar LanguageUnderstandingModel_js_1 = require(\"./LanguageUnderstandingModel.js\");\nObject.defineProperty(exports, \"LanguageUnderstandingModel\", { enumerable: true, get: function () { return LanguageUnderstandingModel_js_1.LanguageUnderstandingModel; } });\nvar SpeechRecognitionEventArgs_js_1 = require(\"./SpeechRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"SpeechRecognitionEventArgs\", { enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.SpeechRecognitionEventArgs; } });\nObject.defineProperty(exports, \"ConversationTranscriptionEventArgs\", { enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.ConversationTranscriptionEventArgs; } });\nObject.defineProperty(exports, \"MeetingTranscriptionEventArgs\", { enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.MeetingTranscriptionEventArgs; } });\nvar SpeechRecognitionCanceledEventArgs_js_1 = require(\"./SpeechRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"SpeechRecognitionCanceledEventArgs\", { enumerable: true, get: function () { return SpeechRecognitionCanceledEventArgs_js_1.SpeechRecognitionCanceledEventArgs; } });\nvar TranslationRecognitionEventArgs_js_1 = require(\"./TranslationRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"TranslationRecognitionEventArgs\", { enumerable: true, get: function () { return TranslationRecognitionEventArgs_js_1.TranslationRecognitionEventArgs; } });\nvar TranslationSynthesisEventArgs_js_1 = require(\"./TranslationSynthesisEventArgs.js\");\nObject.defineProperty(exports, \"TranslationSynthesisEventArgs\", { enumerable: true, get: function () { return TranslationSynthesisEventArgs_js_1.TranslationSynthesisEventArgs; } });\nvar TranslationRecognitionResult_js_1 = require(\"./TranslationRecognitionResult.js\");\nObject.defineProperty(exports, \"TranslationRecognitionResult\", { enumerable: true, get: function () { return TranslationRecognitionResult_js_1.TranslationRecognitionResult; } });\nvar TranslationSynthesisResult_js_1 = require(\"./TranslationSynthesisResult.js\");\nObject.defineProperty(exports, \"TranslationSynthesisResult\", { enumerable: true, get: function () { return TranslationSynthesisResult_js_1.TranslationSynthesisResult; } });\nvar ResultReason_js_1 = require(\"./ResultReason.js\");\nObject.defineProperty(exports, \"ResultReason\", { enumerable: true, get: function () { return ResultReason_js_1.ResultReason; } });\nvar SpeechConfig_js_1 = require(\"./SpeechConfig.js\");\nObject.defineProperty(exports, \"SpeechConfig\", { enumerable: true, get: function () { return SpeechConfig_js_1.SpeechConfig; } });\nObject.defineProperty(exports, \"SpeechConfigImpl\", { enumerable: true, get: function () { return SpeechConfig_js_1.SpeechConfigImpl; } });\nvar SpeechTranslationConfig_js_1 = require(\"./SpeechTranslationConfig.js\");\nObject.defineProperty(exports, \"SpeechTranslationConfig\", { enumerable: true, get: function () { return SpeechTranslationConfig_js_1.SpeechTranslationConfig; } });\nObject.defineProperty(exports, \"SpeechTranslationConfigImpl\", { enumerable: true, get: function () { return SpeechTranslationConfig_js_1.SpeechTranslationConfigImpl; } });\nvar PropertyCollection_js_1 = require(\"./PropertyCollection.js\");\nObject.defineProperty(exports, \"PropertyCollection\", { enumerable: true, get: function () { return PropertyCollection_js_1.PropertyCollection; } });\nvar PropertyId_js_1 = require(\"./PropertyId.js\");\nObject.defineProperty(exports, \"PropertyId\", { enumerable: true, get: function () { return PropertyId_js_1.PropertyId; } });\nvar Recognizer_js_1 = require(\"./Recognizer.js\");\nObject.defineProperty(exports, \"Recognizer\", { enumerable: true, get: function () { return Recognizer_js_1.Recognizer; } });\nvar SpeechRecognizer_js_1 = require(\"./SpeechRecognizer.js\");\nObject.defineProperty(exports, \"SpeechRecognizer\", { enumerable: true, get: function () { return SpeechRecognizer_js_1.SpeechRecognizer; } });\nvar IntentRecognizer_js_1 = require(\"./IntentRecognizer.js\");\nObject.defineProperty(exports, \"IntentRecognizer\", { enumerable: true, get: function () { return IntentRecognizer_js_1.IntentRecognizer; } });\nvar VoiceProfileType_js_1 = require(\"./VoiceProfileType.js\");\nObject.defineProperty(exports, \"VoiceProfileType\", { enumerable: true, get: function () { return VoiceProfileType_js_1.VoiceProfileType; } });\nvar TranslationRecognizer_js_1 = require(\"./TranslationRecognizer.js\");\nObject.defineProperty(exports, \"TranslationRecognizer\", { enumerable: true, get: function () { return TranslationRecognizer_js_1.TranslationRecognizer; } });\nvar Translations_js_1 = require(\"./Translations.js\");\nObject.defineProperty(exports, \"Translations\", { enumerable: true, get: function () { return Translations_js_1.Translations; } });\nvar NoMatchReason_js_1 = require(\"./NoMatchReason.js\");\nObject.defineProperty(exports, \"NoMatchReason\", { enumerable: true, get: function () { return NoMatchReason_js_1.NoMatchReason; } });\nvar NoMatchDetails_js_1 = require(\"./NoMatchDetails.js\");\nObject.defineProperty(exports, \"NoMatchDetails\", { enumerable: true, get: function () { return NoMatchDetails_js_1.NoMatchDetails; } });\nvar TranslationRecognitionCanceledEventArgs_js_1 = require(\"./TranslationRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"TranslationRecognitionCanceledEventArgs\", { enumerable: true, get: function () { return TranslationRecognitionCanceledEventArgs_js_1.TranslationRecognitionCanceledEventArgs; } });\nvar IntentRecognitionCanceledEventArgs_js_1 = require(\"./IntentRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"IntentRecognitionCanceledEventArgs\", { enumerable: true, get: function () { return IntentRecognitionCanceledEventArgs_js_1.IntentRecognitionCanceledEventArgs; } });\nvar CancellationDetailsBase_js_1 = require(\"./CancellationDetailsBase.js\");\nObject.defineProperty(exports, \"CancellationDetailsBase\", { enumerable: true, get: function () { return CancellationDetailsBase_js_1.CancellationDetailsBase; } });\nvar CancellationDetails_js_1 = require(\"./CancellationDetails.js\");\nObject.defineProperty(exports, \"CancellationDetails\", { enumerable: true, get: function () { return CancellationDetails_js_1.CancellationDetails; } });\nvar CancellationErrorCodes_js_1 = require(\"./CancellationErrorCodes.js\");\nObject.defineProperty(exports, \"CancellationErrorCode\", { enumerable: true, get: function () { return CancellationErrorCodes_js_1.CancellationErrorCode; } });\nvar ConnectionEventArgs_js_1 = require(\"./ConnectionEventArgs.js\");\nObject.defineProperty(exports, \"ConnectionEventArgs\", { enumerable: true, get: function () { return ConnectionEventArgs_js_1.ConnectionEventArgs; } });\nvar ServiceEventArgs_js_1 = require(\"./ServiceEventArgs.js\");\nObject.defineProperty(exports, \"ServiceEventArgs\", { enumerable: true, get: function () { return ServiceEventArgs_js_1.ServiceEventArgs; } });\nvar Connection_js_1 = require(\"./Connection.js\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return Connection_js_1.Connection; } });\nvar PhraseListGrammar_js_1 = require(\"./PhraseListGrammar.js\");\nObject.defineProperty(exports, \"PhraseListGrammar\", { enumerable: true, get: function () { return PhraseListGrammar_js_1.PhraseListGrammar; } });\nvar DialogServiceConfig_js_1 = require(\"./DialogServiceConfig.js\");\nObject.defineProperty(exports, \"DialogServiceConfig\", { enumerable: true, get: function () { return DialogServiceConfig_js_1.DialogServiceConfig; } });\nvar BotFrameworkConfig_js_1 = require(\"./BotFrameworkConfig.js\");\nObject.defineProperty(exports, \"BotFrameworkConfig\", { enumerable: true, get: function () { return BotFrameworkConfig_js_1.BotFrameworkConfig; } });\nvar CustomCommandsConfig_js_1 = require(\"./CustomCommandsConfig.js\");\nObject.defineProperty(exports, \"CustomCommandsConfig\", { enumerable: true, get: function () { return CustomCommandsConfig_js_1.CustomCommandsConfig; } });\nvar DialogServiceConnector_js_1 = require(\"./DialogServiceConnector.js\");\nObject.defineProperty(exports, \"DialogServiceConnector\", { enumerable: true, get: function () { return DialogServiceConnector_js_1.DialogServiceConnector; } });\nvar ActivityReceivedEventArgs_js_1 = require(\"./ActivityReceivedEventArgs.js\");\nObject.defineProperty(exports, \"ActivityReceivedEventArgs\", { enumerable: true, get: function () { return ActivityReceivedEventArgs_js_1.ActivityReceivedEventArgs; } });\nvar TurnStatusReceivedEventArgs_js_1 = require(\"./TurnStatusReceivedEventArgs.js\");\nObject.defineProperty(exports, \"TurnStatusReceivedEventArgs\", { enumerable: true, get: function () { return TurnStatusReceivedEventArgs_js_1.TurnStatusReceivedEventArgs; } });\nvar ServicePropertyChannel_js_1 = require(\"./ServicePropertyChannel.js\");\nObject.defineProperty(exports, \"ServicePropertyChannel\", { enumerable: true, get: function () { return ServicePropertyChannel_js_1.ServicePropertyChannel; } });\nvar ProfanityOption_js_1 = require(\"./ProfanityOption.js\");\nObject.defineProperty(exports, \"ProfanityOption\", { enumerable: true, get: function () { return ProfanityOption_js_1.ProfanityOption; } });\nvar BaseAudioPlayer_js_1 = require(\"./Audio/BaseAudioPlayer.js\");\nObject.defineProperty(exports, \"BaseAudioPlayer\", { enumerable: true, get: function () { return BaseAudioPlayer_js_1.BaseAudioPlayer; } });\nvar ConnectionMessageEventArgs_js_1 = require(\"./ConnectionMessageEventArgs.js\");\nObject.defineProperty(exports, \"ConnectionMessageEventArgs\", { enumerable: true, get: function () { return ConnectionMessageEventArgs_js_1.ConnectionMessageEventArgs; } });\nvar ConnectionMessage_js_1 = require(\"./ConnectionMessage.js\");\nObject.defineProperty(exports, \"ConnectionMessage\", { enumerable: true, get: function () { return ConnectionMessage_js_1.ConnectionMessage; } });\nvar VoiceProfile_js_1 = require(\"./VoiceProfile.js\");\nObject.defineProperty(exports, \"VoiceProfile\", { enumerable: true, get: function () { return VoiceProfile_js_1.VoiceProfile; } });\nvar VoiceProfileEnrollmentResult_js_1 = require(\"./VoiceProfileEnrollmentResult.js\");\nObject.defineProperty(exports, \"VoiceProfileEnrollmentResult\", { enumerable: true, get: function () { return VoiceProfileEnrollmentResult_js_1.VoiceProfileEnrollmentResult; } });\nObject.defineProperty(exports, \"VoiceProfileEnrollmentCancellationDetails\", { enumerable: true, get: function () { return VoiceProfileEnrollmentResult_js_1.VoiceProfileEnrollmentCancellationDetails; } });\nvar VoiceProfileResult_js_1 = require(\"./VoiceProfileResult.js\");\nObject.defineProperty(exports, \"VoiceProfileResult\", { enumerable: true, get: function () { return VoiceProfileResult_js_1.VoiceProfileResult; } });\nObject.defineProperty(exports, \"VoiceProfileCancellationDetails\", { enumerable: true, get: function () { return VoiceProfileResult_js_1.VoiceProfileCancellationDetails; } });\nvar VoiceProfilePhraseResult_js_1 = require(\"./VoiceProfilePhraseResult.js\");\nObject.defineProperty(exports, \"VoiceProfilePhraseResult\", { enumerable: true, get: function () { return VoiceProfilePhraseResult_js_1.VoiceProfilePhraseResult; } });\nvar VoiceProfileClient_js_1 = require(\"./VoiceProfileClient.js\");\nObject.defineProperty(exports, \"VoiceProfileClient\", { enumerable: true, get: function () { return VoiceProfileClient_js_1.VoiceProfileClient; } });\nvar SpeakerRecognizer_js_1 = require(\"./SpeakerRecognizer.js\");\nObject.defineProperty(exports, \"SpeakerRecognizer\", { enumerable: true, get: function () { return SpeakerRecognizer_js_1.SpeakerRecognizer; } });\nvar SpeakerIdentificationModel_js_1 = require(\"./SpeakerIdentificationModel.js\");\nObject.defineProperty(exports, \"SpeakerIdentificationModel\", { enumerable: true, get: function () { return SpeakerIdentificationModel_js_1.SpeakerIdentificationModel; } });\nvar SpeakerVerificationModel_js_1 = require(\"./SpeakerVerificationModel.js\");\nObject.defineProperty(exports, \"SpeakerVerificationModel\", { enumerable: true, get: function () { return SpeakerVerificationModel_js_1.SpeakerVerificationModel; } });\nvar AutoDetectSourceLanguageConfig_js_1 = require(\"./AutoDetectSourceLanguageConfig.js\");\nObject.defineProperty(exports, \"AutoDetectSourceLanguageConfig\", { enumerable: true, get: function () { return AutoDetectSourceLanguageConfig_js_1.AutoDetectSourceLanguageConfig; } });\nvar AutoDetectSourceLanguageResult_js_1 = require(\"./AutoDetectSourceLanguageResult.js\");\nObject.defineProperty(exports, \"AutoDetectSourceLanguageResult\", { enumerable: true, get: function () { return AutoDetectSourceLanguageResult_js_1.AutoDetectSourceLanguageResult; } });\nvar SourceLanguageConfig_js_1 = require(\"./SourceLanguageConfig.js\");\nObject.defineProperty(exports, \"SourceLanguageConfig\", { enumerable: true, get: function () { return SourceLanguageConfig_js_1.SourceLanguageConfig; } });\nvar SpeakerRecognitionResult_js_1 = require(\"./SpeakerRecognitionResult.js\");\nObject.defineProperty(exports, \"SpeakerRecognitionResult\", { enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionResult; } });\nObject.defineProperty(exports, \"SpeakerRecognitionResultType\", { enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionResultType; } });\nObject.defineProperty(exports, \"SpeakerRecognitionCancellationDetails\", { enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionCancellationDetails; } });\nvar Exports_js_1 = require(\"./Transcription/Exports.js\");\nObject.defineProperty(exports, \"Conversation\", { enumerable: true, get: function () { return Exports_js_1.Conversation; } });\nObject.defineProperty(exports, \"ConversationExpirationEventArgs\", { enumerable: true, get: function () { return Exports_js_1.ConversationExpirationEventArgs; } });\nObject.defineProperty(exports, \"ConversationParticipantsChangedEventArgs\", { enumerable: true, get: function () { return Exports_js_1.ConversationParticipantsChangedEventArgs; } });\nObject.defineProperty(exports, \"ConversationTranslationCanceledEventArgs\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranslationCanceledEventArgs; } });\nObject.defineProperty(exports, \"ConversationTranslationEventArgs\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranslationEventArgs; } });\nObject.defineProperty(exports, \"ConversationTranslationResult\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranslationResult; } });\nObject.defineProperty(exports, \"ConversationTranslator\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranslator; } });\nObject.defineProperty(exports, \"ConversationTranscriber\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranscriber; } });\nObject.defineProperty(exports, \"ConversationTranscriptionResult\", { enumerable: true, get: function () { return Exports_js_1.ConversationTranscriptionResult; } });\nObject.defineProperty(exports, \"Meeting\", { enumerable: true, get: function () { return Exports_js_1.Meeting; } });\nObject.defineProperty(exports, \"MeetingTranscriber\", { enumerable: true, get: function () { return Exports_js_1.MeetingTranscriber; } });\nObject.defineProperty(exports, \"Participant\", { enumerable: true, get: function () { return Exports_js_1.Participant; } });\nObject.defineProperty(exports, \"ParticipantChangedReason\", { enumerable: true, get: function () { return Exports_js_1.ParticipantChangedReason; } });\nObject.defineProperty(exports, \"User\", { enumerable: true, get: function () { return Exports_js_1.User; } });\nvar Synthesizer_js_1 = require(\"./Synthesizer.js\");\nObject.defineProperty(exports, \"Synthesizer\", { enumerable: true, get: function () { return Synthesizer_js_1.Synthesizer; } });\nvar SpeechSynthesisOutputFormat_js_1 = require(\"./SpeechSynthesisOutputFormat.js\");\nObject.defineProperty(exports, \"SpeechSynthesisOutputFormat\", { enumerable: true, get: function () { return SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat; } });\nvar SpeechSynthesizer_js_1 = require(\"./SpeechSynthesizer.js\");\nObject.defineProperty(exports, \"SpeechSynthesizer\", { enumerable: true, get: function () { return SpeechSynthesizer_js_1.SpeechSynthesizer; } });\nvar SynthesisResult_js_1 = require(\"./SynthesisResult.js\");\nObject.defineProperty(exports, \"SynthesisResult\", { enumerable: true, get: function () { return SynthesisResult_js_1.SynthesisResult; } });\nvar SpeechSynthesisResult_js_1 = require(\"./SpeechSynthesisResult.js\");\nObject.defineProperty(exports, \"SpeechSynthesisResult\", { enumerable: true, get: function () { return SpeechSynthesisResult_js_1.SpeechSynthesisResult; } });\nvar SpeechSynthesisEventArgs_js_1 = require(\"./SpeechSynthesisEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisEventArgs\", { enumerable: true, get: function () { return SpeechSynthesisEventArgs_js_1.SpeechSynthesisEventArgs; } });\nvar SpeechSynthesisWordBoundaryEventArgs_js_1 = require(\"./SpeechSynthesisWordBoundaryEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisWordBoundaryEventArgs\", { enumerable: true, get: function () { return SpeechSynthesisWordBoundaryEventArgs_js_1.SpeechSynthesisWordBoundaryEventArgs; } });\nvar SpeechSynthesisBookmarkEventArgs_js_1 = require(\"./SpeechSynthesisBookmarkEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisBookmarkEventArgs\", { enumerable: true, get: function () { return SpeechSynthesisBookmarkEventArgs_js_1.SpeechSynthesisBookmarkEventArgs; } });\nvar SpeechSynthesisVisemeEventArgs_js_1 = require(\"./SpeechSynthesisVisemeEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisVisemeEventArgs\", { enumerable: true, get: function () { return SpeechSynthesisVisemeEventArgs_js_1.SpeechSynthesisVisemeEventArgs; } });\nvar SpeechSynthesisBoundaryType_js_1 = require(\"./SpeechSynthesisBoundaryType.js\");\nObject.defineProperty(exports, \"SpeechSynthesisBoundaryType\", { enumerable: true, get: function () { return SpeechSynthesisBoundaryType_js_1.SpeechSynthesisBoundaryType; } });\nvar SynthesisVoicesResult_js_1 = require(\"./SynthesisVoicesResult.js\");\nObject.defineProperty(exports, \"SynthesisVoicesResult\", { enumerable: true, get: function () { return SynthesisVoicesResult_js_1.SynthesisVoicesResult; } });\nvar VoiceInfo_js_1 = require(\"./VoiceInfo.js\");\nObject.defineProperty(exports, \"SynthesisVoiceGender\", { enumerable: true, get: function () { return VoiceInfo_js_1.SynthesisVoiceGender; } });\nObject.defineProperty(exports, \"SynthesisVoiceType\", { enumerable: true, get: function () { return VoiceInfo_js_1.SynthesisVoiceType; } });\nObject.defineProperty(exports, \"VoiceInfo\", { enumerable: true, get: function () { return VoiceInfo_js_1.VoiceInfo; } });\nvar SpeakerAudioDestination_js_1 = require(\"./Audio/SpeakerAudioDestination.js\");\nObject.defineProperty(exports, \"SpeakerAudioDestination\", { enumerable: true, get: function () { return SpeakerAudioDestination_js_1.SpeakerAudioDestination; } });\nvar ConversationTranscriptionCanceledEventArgs_js_1 = require(\"./ConversationTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranscriptionCanceledEventArgs\", { enumerable: true, get: function () { return ConversationTranscriptionCanceledEventArgs_js_1.ConversationTranscriptionCanceledEventArgs; } });\nvar MeetingTranscriptionCanceledEventArgs_js_1 = require(\"./MeetingTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"MeetingTranscriptionCanceledEventArgs\", { enumerable: true, get: function () { return MeetingTranscriptionCanceledEventArgs_js_1.MeetingTranscriptionCanceledEventArgs; } });\nvar PronunciationAssessmentGradingSystem_js_1 = require(\"./PronunciationAssessmentGradingSystem.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentGradingSystem\", { enumerable: true, get: function () { return PronunciationAssessmentGradingSystem_js_1.PronunciationAssessmentGradingSystem; } });\nvar PronunciationAssessmentGranularity_js_1 = require(\"./PronunciationAssessmentGranularity.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentGranularity\", { enumerable: true, get: function () { return PronunciationAssessmentGranularity_js_1.PronunciationAssessmentGranularity; } });\nvar PronunciationAssessmentConfig_js_1 = require(\"./PronunciationAssessmentConfig.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentConfig\", { enumerable: true, get: function () { return PronunciationAssessmentConfig_js_1.PronunciationAssessmentConfig; } });\nvar PronunciationAssessmentResult_js_1 = require(\"./PronunciationAssessmentResult.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentResult\", { enumerable: true, get: function () { return PronunciationAssessmentResult_js_1.PronunciationAssessmentResult; } });\nvar LanguageIdMode_js_1 = require(\"./LanguageIdMode.js\");\nObject.defineProperty(exports, \"LanguageIdMode\", { enumerable: true, get: function () { return LanguageIdMode_js_1.LanguageIdMode; } });\nvar AvatarConfig_js_1 = require(\"./AvatarConfig.js\");\nObject.defineProperty(exports, \"AvatarConfig\", { enumerable: true, get: function () { return AvatarConfig_js_1.AvatarConfig; } });\nvar AvatarEventArgs_js_1 = require(\"./AvatarEventArgs.js\");\nObject.defineProperty(exports, \"AvatarEventArgs\", { enumerable: true, get: function () { return AvatarEventArgs_js_1.AvatarEventArgs; } });\nvar AvatarSynthesizer_js_1 = require(\"./AvatarSynthesizer.js\");\nObject.defineProperty(exports, \"AvatarSynthesizer\", { enumerable: true, get: function () { return AvatarSynthesizer_js_1.AvatarSynthesizer; } });\nvar AvatarVideoFormat_js_1 = require(\"./AvatarVideoFormat.js\");\nObject.defineProperty(exports, \"AvatarVideoFormat\", { enumerable: true, get: function () { return AvatarVideoFormat_js_1.AvatarVideoFormat; } });\nObject.defineProperty(exports, \"Coordinate\", { enumerable: true, get: function () { return AvatarVideoFormat_js_1.Coordinate; } });\nvar AvatarWebRTCConnectionResult_js_1 = require(\"./AvatarWebRTCConnectionResult.js\");\nObject.defineProperty(exports, \"AvatarWebRTCConnectionResult\", { enumerable: true, get: function () { return AvatarWebRTCConnectionResult_js_1.AvatarWebRTCConnectionResult; } });\nvar Diagnostics_js_1 = require(\"./Diagnostics.js\");\nObject.defineProperty(exports, \"Diagnostics\", { enumerable: true, get: function () { return Diagnostics_js_1.Diagnostics; } });\nvar LogLevel_js_1 = require(\"./LogLevel.js\");\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return LogLevel_js_1.LogLevel; } });\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyInfo = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nclass ProxyInfo {\n    constructor(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.privProxyHostName = proxyHostName;\n        this.privProxyPort = proxyPort;\n        this.privProxyUserName = proxyUserName;\n        this.privProxyPassword = proxyPassword;\n    }\n    static fromParameters(parameters) {\n        return new ProxyInfo(parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyHostName), parseInt(parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPort), 10), parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyUserName), parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPassword));\n    }\n    static fromRecognizerConfig(config) {\n        return this.fromParameters(config.parameters);\n    }\n    get HostName() {\n        return this.privProxyHostName;\n    }\n    get Port() {\n        return this.privProxyPort;\n    }\n    get UserName() {\n        return this.privProxyUserName;\n    }\n    get Password() {\n        return this.privProxyPassword;\n    }\n}\nexports.ProxyInfo = ProxyInfo;\n\n//# sourceMappingURL=ProxyInfo.js.map\n","'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (Array.isArray(arg) || arg instanceof Set) {\n        arg.forEach(code => statusCodes.add(code))\n      } else {\n        if (headers) {\n          throw new Error('Cannot set headers twice.')\n        }\n        headers = arg\n      }\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n","'use strict'\n/* global fetch, btoa, Headers */\nconst core = require('./core')\n\nclass StatusError extends Error {\n  constructor (res, ...params) {\n    super(...params)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, StatusError)\n    }\n\n    this.name = 'StatusError'\n    this.message = res.statusMessage\n    this.statusCode = res.status\n    this.res = res\n    this.json = res.json.bind(res)\n    this.text = res.text.bind(res)\n    this.arrayBuffer = res.arrayBuffer.bind(res)\n    let buffer\n    const get = () => {\n      if (!buffer) buffer = this.arrayBuffer()\n      return buffer\n    }\n    Object.defineProperty(this, 'responseBody', { get })\n    // match Node.js headers object\n    this.headers = {}\n    for (const [key, value] of res.headers.entries()) {\n      this.headers[key.toLowerCase()] = value\n    }\n  }\n}\n\nconst mkrequest = (statusCodes, method, encoding, headers, baseurl) => async (_url, body, _headers = {}) => {\n  _url = baseurl + (_url || '')\n  let parsed = new URL(_url)\n\n  if (!headers) headers = {}\n  if (parsed.username) {\n    headers.Authorization = 'Basic ' + btoa(parsed.username + ':' + parsed.password)\n    parsed = new URL(parsed.protocol + '//' + parsed.host + parsed.pathname + parsed.search)\n  }\n  if (parsed.protocol !== 'https:' && parsed.protocol !== 'http:') {\n    throw new Error(`Unknown protocol, ${parsed.protocol}`)\n  }\n\n  if (body) {\n    if (body instanceof ArrayBuffer ||\n      ArrayBuffer.isView(body) ||\n      typeof body === 'string'\n    ) {\n      // noop\n    } else if (typeof body === 'object') {\n      body = JSON.stringify(body)\n      headers['Content-Type'] = 'application/json'\n    } else {\n      throw new Error('Unknown body type.')\n    }\n  }\n\n  _headers = new Headers({ ...(headers || {}), ..._headers })\n\n  const resp = await fetch(parsed, { method, headers: _headers, body })\n  resp.statusCode = resp.status\n\n  if (!statusCodes.has(resp.status)) {\n    throw new StatusError(resp)\n  }\n\n  if (encoding === 'json') return resp.json()\n  else if (encoding === 'buffer') return resp.arrayBuffer()\n  else if (encoding === 'string') return resp.text()\n  else return resp\n}\n\nmodule.exports = core(mkrequest)\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestMessageAdapter = exports.RestRequestType = void 0;\nconst bent_1 = __importDefault(require(\"bent\"));\nconst Exports_js_1 = require(\"../common/Exports.js\");\nvar RestRequestType;\n(function (RestRequestType) {\n    RestRequestType[\"Get\"] = \"GET\";\n    RestRequestType[\"Post\"] = \"POST\";\n    RestRequestType[\"Delete\"] = \"DELETE\";\n    RestRequestType[\"File\"] = \"file\";\n})(RestRequestType = exports.RestRequestType || (exports.RestRequestType = {}));\n// accept rest operations via request method and return abstracted objects from server response\nclass RestMessageAdapter {\n    constructor(configParams) {\n        if (!configParams) {\n            throw new Exports_js_1.ArgumentNullError(\"configParams\");\n        }\n        this.privHeaders = configParams.headers;\n        this.privIgnoreCache = configParams.ignoreCache;\n    }\n    static extractHeaderValue(headerKey, headers) {\n        let headerValue = \"\";\n        try {\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            const headerMap = {};\n            arr.forEach((line) => {\n                const parts = line.split(\": \");\n                const header = parts.shift().toLowerCase();\n                const value = parts.join(\": \");\n                headerMap[header] = value;\n            });\n            headerValue = headerMap[headerKey.toLowerCase()];\n        }\n        catch (e) {\n            // ignore the error\n        }\n        return headerValue;\n    }\n    set options(configParams) {\n        this.privHeaders = configParams.headers;\n        this.privIgnoreCache = configParams.ignoreCache;\n    }\n    setHeaders(key, value) {\n        this.privHeaders[key] = value;\n    }\n    request(method, uri, queryParams = {}, body = null) {\n        const responseReceivedDeferral = new Exports_js_1.Deferred();\n        const requestCommand = method === RestRequestType.File ? \"POST\" : method;\n        const handleRestResponse = (data, j = {}) => {\n            const d = data;\n            return {\n                data: JSON.stringify(j),\n                headers: JSON.stringify(data.headers),\n                json: j,\n                ok: data.statusCode >= 200 && data.statusCode < 300,\n                status: data.statusCode,\n                statusText: j.error ? j.error.message : d.statusText ? d.statusText : d.statusMessage\n            };\n        };\n        const send = (postData) => {\n            const sendRequest = (0, bent_1.default)(uri, requestCommand, this.privHeaders, 200, 201, 202, 204, 400, 401, 402, 403, 404);\n            const params = this.queryParams(queryParams) === \"\" ? \"\" : `?${this.queryParams(queryParams)}`;\n            sendRequest(params, postData).then(async (data) => {\n                if (method === RestRequestType.Delete || data.statusCode === 204) {\n                    // No JSON from Delete and reset (204) operations\n                    responseReceivedDeferral.resolve(handleRestResponse(data));\n                }\n                else {\n                    try {\n                        const j = await data.json();\n                        responseReceivedDeferral.resolve(handleRestResponse(data, j));\n                    }\n                    catch {\n                        responseReceivedDeferral.resolve(handleRestResponse(data));\n                    }\n                }\n            }).catch((error) => {\n                responseReceivedDeferral.reject(error);\n            });\n        };\n        if (this.privIgnoreCache) {\n            this.privHeaders[\"Cache-Control\"] = \"no-cache\";\n        }\n        if (method === RestRequestType.Post && body) {\n            this.privHeaders[\"content-type\"] = \"application/json\";\n            this.privHeaders[\"Content-Type\"] = \"application/json\";\n        }\n        send(body);\n        return responseReceivedDeferral.promise;\n    }\n    queryParams(params = {}) {\n        return Object.keys(params)\n            .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\n            .join(\"&\");\n    }\n}\nexports.RestMessageAdapter = RestMessageAdapter;\n\n//# sourceMappingURL=RestMessageAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestConfigBase = void 0;\nclass RestConfigBase {\n    static get requestOptions() {\n        return RestConfigBase.privDefaultRequestOptions;\n    }\n    static get configParams() {\n        return RestConfigBase.privDefaultParams;\n    }\n    static get restErrors() {\n        return RestConfigBase.privRestErrors;\n    }\n}\nexports.RestConfigBase = RestConfigBase;\nRestConfigBase.privDefaultRequestOptions = {\n    headers: {\n        Accept: \"application/json\",\n    },\n    ignoreCache: false,\n    timeout: 10000,\n};\nRestConfigBase.privRestErrors = {\n    authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\n    authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\n    invalidArgs: \"Required input not found: {arg}.\",\n    invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\n    invalidParticipantRequest: \"The requested participant was not found.\",\n    permissionDeniedConnect: \"Required credentials not found.\",\n    permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\n    permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\n    permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\n    permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\n};\nRestConfigBase.privDefaultParams = {\n    apiVersion: \"api-version\",\n    authorization: \"Authorization\",\n    clientAppId: \"X-ClientAppId\",\n    contentTypeKey: \"Content-Type\",\n    correlationId: \"X-CorrelationId\",\n    languageCode: \"language\",\n    nickname: \"nickname\",\n    profanity: \"profanity\",\n    requestId: \"X-RequestId\",\n    roomId: \"roomid\",\n    sessionToken: \"token\",\n    subscriptionKey: \"Ocp-Apim-Subscription-Key\",\n    subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\n    token: \"X-CapitoToken\",\n};\n\n//# sourceMappingURL=RestConfigBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ConsoleLoggingListener.js\"), exports);\n__exportStar(require(\"./IRecorder.js\"), exports);\n__exportStar(require(\"./MicAudioSource.js\"), exports);\n__exportStar(require(\"./FileAudioSource.js\"), exports);\n__exportStar(require(\"./PCMRecorder.js\"), exports);\n__exportStar(require(\"./WebsocketConnection.js\"), exports);\n__exportStar(require(\"./WebsocketMessageAdapter.js\"), exports);\n__exportStar(require(\"./ReplayableAudioNode.js\"), exports);\n__exportStar(require(\"./ProxyInfo.js\"), exports);\n__exportStar(require(\"./RestMessageAdapter.js\"), exports);\n__exportStar(require(\"./RestConfigBase.js\"), exports);\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nclass IntentConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion);\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".sr.speech\" + hostSuffix);\n            endpoint = host + \"/speech/recognition/interactive/cognitiveservices/v1\";\n        }\n        const queryParams = {\n            format: \"simple\",\n            language: config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage),\n        };\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n    getSpeechRegionFromIntentRegion(intentRegion) {\n        switch (intentRegion) {\n            case \"West US\":\n            case \"US West\":\n            case \"westus\":\n                return \"uswest\";\n            case \"West US 2\":\n            case \"US West 2\":\n            case \"westus2\":\n                return \"uswest2\";\n            case \"South Central US\":\n            case \"US South Central\":\n            case \"southcentralus\":\n                return \"ussouthcentral\";\n            case \"West Central US\":\n            case \"US West Central\":\n            case \"westcentralus\":\n                return \"uswestcentral\";\n            case \"East US\":\n            case \"US East\":\n            case \"eastus\":\n                return \"useast\";\n            case \"East US 2\":\n            case \"US East 2\":\n            case \"eastus2\":\n                return \"useast2\";\n            case \"West Europe\":\n            case \"Europe West\":\n            case \"westeurope\":\n                return \"europewest\";\n            case \"North Europe\":\n            case \"Europe North\":\n            case \"northeurope\":\n                return \"europenorth\";\n            case \"Brazil South\":\n            case \"South Brazil\":\n            case \"southbrazil\":\n                return \"brazilsouth\";\n            case \"Australia East\":\n            case \"East Australia\":\n            case \"eastaustralia\":\n                return \"australiaeast\";\n            case \"Southeast Asia\":\n            case \"Asia Southeast\":\n            case \"southeastasia\":\n                return \"asiasoutheast\";\n            case \"East Asia\":\n            case \"Asia East\":\n            case \"eastasia\":\n                return \"asiaeast\";\n            default:\n                return intentRegion;\n        }\n    }\n}\nexports.IntentConnectionFactory = IntentConnectionFactory;\n\n//# sourceMappingURL=IntentConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceProfileConnectionFactory = exports.SpeakerRecognitionConnectionFactory = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nclass SpeakerRecognitionConnectionFactoryBase extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, endpointPath, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, `wss://${region}.spr-frontend.speech${hostSuffix}`);\n            const scenario = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SpeakerIdMode, \"TextIndependentIdentification\");\n            endpoint = `${host}/speaker/ws/${this.scenarioToPath(scenario)}/${endpointPath}`;\n        }\n        const queryParams = {\n            format: \"simple\",\n            language: config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage),\n        };\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        headers[HeaderNames_js_1.HeaderNames.SpIDAuthKey] = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n    scenarioToPath(mode) {\n        switch (mode) {\n            case \"TextIndependentVerification\":\n            case \"2\":\n                return \"verification/text-independent\";\n            case \"TextDependentVerification\":\n            case \"1\":\n                return \"verification/text-dependent\";\n            default:\n                return \"identification/text-independent\";\n        }\n    }\n}\nclass SpeakerRecognitionConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        return super.create(config, authInfo, \"recognition\", connectionId);\n    }\n}\nexports.SpeakerRecognitionConnectionFactory = SpeakerRecognitionConnectionFactory;\nclass VoiceProfileConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        return super.create(config, authInfo, \"profile\", connectionId);\n    }\n}\nexports.VoiceProfileConnectionFactory = VoiceProfileConnectionFactory;\n\n//# sourceMappingURL=SpeakerRecognitionConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionEndedEvent = exports.RecognitionCompletionStatus = exports.RecognitionStartedEvent = exports.ConnectingToServiceEvent = exports.ListeningStartedEvent = exports.RecognitionTriggeredEvent = exports.SpeechRecognitionEvent = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nclass SpeechRecognitionEvent extends Exports_js_1.PlatformEvent {\n    constructor(eventName, requestId, sessionId, eventType = Exports_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privRequestId = requestId;\n        this.privSessionId = sessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.SpeechRecognitionEvent = SpeechRecognitionEvent;\nclass RecognitionTriggeredEvent extends SpeechRecognitionEvent {\n    constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.RecognitionTriggeredEvent = RecognitionTriggeredEvent;\nclass ListeningStartedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n        super(\"ListeningStartedEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.ListeningStartedEvent = ListeningStartedEvent;\nclass ConnectingToServiceEvent extends SpeechRecognitionEvent {\n    constructor(requestId, authFetchEventid, sessionId) {\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\n        this.privAuthFetchEventid = authFetchEventid;\n    }\n    get authFetchEventid() {\n        return this.privAuthFetchEventid;\n    }\n}\nexports.ConnectingToServiceEvent = ConnectingToServiceEvent;\nclass RecognitionStartedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.RecognitionStartedEvent = RecognitionStartedEvent;\nvar RecognitionCompletionStatus;\n(function (RecognitionCompletionStatus) {\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n})(RecognitionCompletionStatus = exports.RecognitionCompletionStatus || (exports.RecognitionCompletionStatus = {}));\nclass RecognitionEndedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? Exports_js_1.EventType.Info : Exports_js_1.EventType.Error);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privAuthFetchEventId = authFetchEventId;\n        this.privStatus = status;\n        this.privError = error;\n        this.privServiceTag = serviceTag;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n    get serviceTag() {\n        return this.privServiceTag;\n    }\n    get status() {\n        return this.privStatus;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.RecognitionEndedEvent = RecognitionEndedEvent;\n\n//# sourceMappingURL=RecognitionEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechConnectionMessage = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nclass SpeechConnectionMessage extends Exports_js_1.ConnectionMessage {\n    constructor(messageType, path, requestId, contentType, body, streamId, additionalHeaders, id) {\n        if (!path) {\n            throw new Exports_js_1.ArgumentNullError(\"path\");\n        }\n        if (!requestId) {\n            throw new Exports_js_1.ArgumentNullError(\"requestId\");\n        }\n        const headers = {};\n        headers[HeaderNames_js_1.HeaderNames.Path] = path;\n        headers[HeaderNames_js_1.HeaderNames.RequestId] = requestId;\n        headers[HeaderNames_js_1.HeaderNames.RequestTimestamp] = new Date().toISOString();\n        if (contentType) {\n            headers[HeaderNames_js_1.HeaderNames.ContentType] = contentType;\n        }\n        if (streamId) {\n            headers[HeaderNames_js_1.HeaderNames.RequestStreamId] = streamId;\n        }\n        if (additionalHeaders) {\n            for (const headerName in additionalHeaders) {\n                if (headerName) {\n                    headers[headerName] = additionalHeaders[headerName];\n                }\n            }\n        }\n        if (id) {\n            super(messageType, body, headers, id);\n        }\n        else {\n            super(messageType, body, headers);\n        }\n        this.privPath = path;\n        this.privRequestId = requestId;\n        this.privContentType = contentType;\n        this.privStreamId = streamId;\n        this.privAdditionalHeaders = additionalHeaders;\n    }\n    get path() {\n        return this.privPath;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get contentType() {\n        return this.privContentType;\n    }\n    get streamId() {\n        return this.privStreamId;\n    }\n    get additionalHeaders() {\n        return this.privAdditionalHeaders;\n    }\n    static fromConnectionMessage(message) {\n        let path = null;\n        let requestId = null;\n        let contentType = null;\n        // let requestTimestamp = null;\n        let streamId = null;\n        const additionalHeaders = {};\n        if (message.headers) {\n            for (const headerName in message.headers) {\n                if (headerName) {\n                    if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.Path.toLowerCase()) {\n                        path = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.RequestId.toLowerCase()) {\n                        requestId = message.headers[headerName];\n                        // } else if (headerName.toLowerCase() === HeaderNames.RequestTimestamp.toLowerCase()) {\n                        //  requestTimestamp = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.ContentType.toLowerCase()) {\n                        contentType = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.RequestStreamId.toLowerCase()) {\n                        streamId = message.headers[headerName];\n                    }\n                    else {\n                        additionalHeaders[headerName] = message.headers[headerName];\n                    }\n                }\n            }\n        }\n        return new SpeechConnectionMessage(message.messageType, path, requestId, contentType, message.body, streamId, additionalHeaders, message.id);\n    }\n}\nexports.SpeechConnectionMessage = SpeechConnectionMessage;\n\n//# sourceMappingURL=SpeechConnectionMessage.Internal.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SegmentationMode = void 0;\n/**\n * The segmentation mode.\n */\nvar SegmentationMode;\n(function (SegmentationMode) {\n    SegmentationMode[\"Normal\"] = \"Normal\";\n    SegmentationMode[\"Disabled\"] = \"Disabled\";\n    SegmentationMode[\"Custom\"] = \"Custom\";\n    SegmentationMode[\"Semantic\"] = \"Semantic\";\n})(SegmentationMode = exports.SegmentationMode || (exports.SegmentationMode = {}));\n\n//# sourceMappingURL=Segmentation.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NextAction = void 0;\n/**\n * The action to take on success\n */\nvar NextAction;\n(function (NextAction) {\n    NextAction[\"None\"] = \"None\";\n    NextAction[\"Synthesize\"] = \"Synthesize\";\n})(NextAction = exports.NextAction || (exports.NextAction = {}));\n\n//# sourceMappingURL=OnSuccess.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mode = void 0;\n/**\n * Result type\n */\nvar Mode;\n(function (Mode) {\n    Mode[\"None\"] = \"None\";\n    Mode[\"Always\"] = \"Always\";\n})(Mode = exports.Mode || (exports.Mode = {}));\n\n//# sourceMappingURL=InterimResults.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LanguageIdDetectionPriority = exports.LanguageIdDetectionMode = void 0;\n/**\n * The enum that represents which mode will language detection take place\n * There is only detectAtAudioStart mode for now as language detection models are not trained for different modes\n * This enum can be extended in future to support different modes\n */\nvar LanguageIdDetectionMode;\n(function (LanguageIdDetectionMode) {\n    LanguageIdDetectionMode[\"DetectAtAudioStart\"] = \"DetectAtAudioStart\";\n    LanguageIdDetectionMode[\"DetectContinuous\"] = \"DetectContinuous\";\n    LanguageIdDetectionMode[\"DetectSegments\"] = \"DetectSegments\";\n})(LanguageIdDetectionMode = exports.LanguageIdDetectionMode || (exports.LanguageIdDetectionMode = {}));\n/**\n * The language id detection mode, setting this will load the detection setting of MaxAudioDuration and MaxSpeechDuration\n * If the maxAudioDuration and maxSpeechDuration is set in the speech.context, then this detection mode will be ignored\n */\nvar LanguageIdDetectionPriority;\n(function (LanguageIdDetectionPriority) {\n    /**\n     * default, Service decides the best mode to use.\n     */\n    LanguageIdDetectionPriority[\"Auto\"] = \"Auto\";\n    /**\n     * Offers lower latency via a trade-off of accuracy.\n     */\n    LanguageIdDetectionPriority[\"PrioritizeLatency\"] = \"PrioritizeLatency\";\n    /**\n     * Offers higher accuracy via a trade-off of latency.\n     */\n    LanguageIdDetectionPriority[\"PrioritizeAccuracy\"] = \"PrioritizeAccuracy\";\n})(LanguageIdDetectionPriority = exports.LanguageIdDetectionPriority || (exports.LanguageIdDetectionPriority = {}));\n\n//# sourceMappingURL=LanguageIdContext.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NextAction = void 0;\n/**\n * The action to take on successful language detection\n */\nvar NextAction;\n(function (NextAction) {\n    NextAction[\"Recognize\"] = \"Recognize\";\n    NextAction[\"None\"] = \"None\";\n})(NextAction = exports.NextAction || (exports.NextAction = {}));\n\n//# sourceMappingURL=OnSuccess.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OnUnknownAction = void 0;\n/**\n * An enum that defines actions that can be taken on unknown language detection\n */\nvar OnUnknownAction;\n(function (OnUnknownAction) {\n    OnUnknownAction[\"RecognizeWithDefaultLanguage\"] = \"RecognizeWithDefaultLanguage\";\n    OnUnknownAction[\"None\"] = \"None\";\n})(OnUnknownAction = exports.OnUnknownAction || (exports.OnUnknownAction = {}));\n\n//# sourceMappingURL=OnUnknown.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResultType = void 0;\n/**\n * The result type enum\n */\nvar ResultType;\n(function (ResultType) {\n    ResultType[\"Auto\"] = \"Auto\";\n    ResultType[\"StableFragment\"] = \"StableFragment\";\n    ResultType[\"Hypothesis\"] = \"Hypothesis\";\n    ResultType[\"None\"] = \"None\";\n})(ResultType = exports.ResultType || (exports.ResultType = {}));\n\n//# sourceMappingURL=InterimResults.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PhraseResultOutputType = void 0;\n/**\n * The phrase result output type\n */\nvar PhraseResultOutputType;\n(function (PhraseResultOutputType) {\n    PhraseResultOutputType[\"Always\"] = \"Always\";\n    PhraseResultOutputType[\"None\"] = \"None\";\n})(PhraseResultOutputType = exports.PhraseResultOutputType || (exports.PhraseResultOutputType = {}));\n\n//# sourceMappingURL=PhraseResults.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NextAction = void 0;\n/**\n * The action enum when speech recognition return a final phrase result\n */\nvar NextAction;\n(function (NextAction) {\n    NextAction[\"None\"] = \"None\";\n    NextAction[\"Translate\"] = \"Translate\";\n})(NextAction = exports.NextAction || (exports.NextAction = {}));\n\n//# sourceMappingURL=OnSuccess.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceRecognizerBase = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\nconst Segmentation_js_1 = require(\"./ServiceMessages/PhraseDetection/Segmentation.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst OnSuccess_js_1 = require(\"./ServiceMessages/Translation/OnSuccess.js\");\nconst InterimResults_js_1 = require(\"./ServiceMessages/Translation/InterimResults.js\");\nconst LanguageIdContext_js_1 = require(\"./ServiceMessages/LanguageId/LanguageIdContext.js\");\nconst OnSuccess_js_2 = require(\"./ServiceMessages/LanguageId/OnSuccess.js\");\nconst OnUnknown_js_1 = require(\"./ServiceMessages/LanguageId/OnUnknown.js\");\nconst InterimResults_js_2 = require(\"./ServiceMessages/PhraseOutput/InterimResults.js\");\nconst PhraseResults_js_1 = require(\"./ServiceMessages/PhraseOutput/PhraseResults.js\");\nconst OnSuccess_js_3 = require(\"./ServiceMessages/PhraseDetection/OnSuccess.js\");\nclass ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        // A promise for a configured connection.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionConfigurationPromise = undefined;\n        // A promise for a connection, but one that has not had the speech context sent yet.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionPromise = undefined;\n        this.privSetTimeout = setTimeout;\n        this.privIsLiveAudio = false;\n        this.privAverageBytesPerMs = 0;\n        this.privEnableSpeakerId = false;\n        this.privExpectContentAssessmentResponse = false;\n        this.recognizeOverride = undefined;\n        this.recognizeSpeaker = undefined;\n        this.disconnectOverride = undefined;\n        this.receiveMessageOverride = undefined;\n        this.sendPrePayloadJSONOverride = undefined;\n        this.postConnectImplOverride = undefined;\n        this.configConnectionOverride = undefined;\n        this.handleSpeechPhraseMessage = undefined;\n        this.handleSpeechHypothesisMessage = undefined;\n        if (!authentication) {\n            throw new Exports_js_2.ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new Exports_js_2.ArgumentNullError(\"connectionFactory\");\n        }\n        if (!audioSource) {\n            throw new Exports_js_2.ArgumentNullError(\"audioSource\");\n        }\n        if (!recognizerConfig) {\n            throw new Exports_js_2.ArgumentNullError(\"recognizerConfig\");\n        }\n        this.privEnableSpeakerId = recognizerConfig.isSpeakerDiarizationEnabled;\n        this.privMustReportEndOfStream = false;\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privAudioSource = audioSource;\n        this.privRecognizerConfig = recognizerConfig;\n        this.privIsDisposed = false;\n        this.privRecognizer = recognizer;\n        this.privRequestSession = new Exports_js_4.RequestSession(this.privAudioSource.id());\n        this.privConnectionEvents = new Exports_js_2.EventSource();\n        this.privServiceEvents = new Exports_js_2.EventSource();\n        this.privDynamicGrammar = new Exports_js_4.DynamicGrammarBuilder();\n        this.privSpeechContext = new Exports_js_4.SpeechContext(this.privDynamicGrammar);\n        this.privAgentConfig = new Exports_js_4.AgentConfig();\n        const webWorkerLoadType = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.WebWorkerLoadType, \"on\").toLowerCase();\n        if (webWorkerLoadType === \"on\" && typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\n            this.privSetTimeout = Exports_js_2.Timeout.setTimeout;\n        }\n        else {\n            if (typeof window !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = window.setTimeout.bind(window);\n            }\n            if (typeof globalThis !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = globalThis.setTimeout.bind(globalThis);\n            }\n        }\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                const connectionClosedEvent = connectionEvent;\n                if (connectionClosedEvent.statusCode === 1003 ||\n                    connectionClosedEvent.statusCode === 1007 ||\n                    connectionClosedEvent.statusCode === 1002 ||\n                    connectionClosedEvent.statusCode === 4000 ||\n                    this.privRequestSession.numConnectionAttempts > this.privRecognizerConfig.maxRetryCount) {\n                    void this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, connectionClosedEvent.statusCode === 1007 ? Exports_js_3.CancellationErrorCode.BadRequestParameters : Exports_js_3.CancellationErrorCode.ConnectionFailure, `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\n                }\n            }\n        });\n        if (this.privEnableSpeakerId) {\n            this.privDiarizationSessionId = (0, Exports_js_2.createNoDashGuid)();\n        }\n    }\n    setTranslationJson() {\n        const targetLanguages = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined);\n        if (targetLanguages !== undefined) {\n            const languages = targetLanguages.split(\",\");\n            const translationVoice = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n            const categoryId = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationCategoryId, undefined);\n            const action = (translationVoice !== undefined) ? OnSuccess_js_1.NextAction.Synthesize : OnSuccess_js_1.NextAction.None;\n            this.privSpeechContext.getContext().translation = {\n                onPassthrough: { action },\n                onSuccess: { action },\n                output: {\n                    includePassThroughResults: true,\n                    interimResults: { mode: InterimResults_js_1.Mode.Always }\n                },\n                targetLanguages: languages,\n            };\n            // Add category if specified\n            if (categoryId !== undefined) {\n                this.privSpeechContext.getContext().translation.category = categoryId;\n            }\n            if (translationVoice !== undefined) {\n                const languageToVoiceMap = {};\n                for (const lang of languages) {\n                    languageToVoiceMap[lang] = translationVoice;\n                }\n                this.privSpeechContext.getContext().synthesis = {\n                    defaultVoices: languageToVoiceMap\n                };\n            }\n            // Configure phrase detection for translation\n            const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n            phraseDetection.onSuccess = { action: OnSuccess_js_3.NextAction.Translate };\n            phraseDetection.onInterim = { action: OnSuccess_js_3.NextAction.Translate };\n            this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n        }\n    }\n    setSpeechSegmentationTimeoutJson() {\n        const speechSegmentationSilenceTimeoutMs = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationSilenceTimeoutMs, undefined);\n        const speechSegmentationMaximumTimeMs = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationMaximumTimeMs, undefined);\n        const speechSegmentationStrategy = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationStrategy, undefined);\n        const segmentation = {\n            mode: Segmentation_js_1.SegmentationMode.Normal,\n        };\n        let configuredSegment = false;\n        if (speechSegmentationStrategy !== undefined) {\n            configuredSegment = true;\n            let segMode = Segmentation_js_1.SegmentationMode.Normal;\n            switch (speechSegmentationStrategy.toLowerCase()) {\n                case \"default\":\n                    break;\n                case \"time\":\n                    segMode = Segmentation_js_1.SegmentationMode.Custom;\n                    break;\n                case \"semantic\":\n                    segMode = Segmentation_js_1.SegmentationMode.Semantic;\n                    break;\n            }\n            segmentation.mode = segMode;\n        }\n        if (speechSegmentationSilenceTimeoutMs !== undefined) {\n            configuredSegment = true;\n            const segmentationSilenceTimeoutMs = parseInt(speechSegmentationSilenceTimeoutMs, 10);\n            segmentation.mode = Segmentation_js_1.SegmentationMode.Custom;\n            segmentation.segmentationSilenceTimeoutMs = segmentationSilenceTimeoutMs;\n        }\n        if (speechSegmentationMaximumTimeMs !== undefined) {\n            configuredSegment = true;\n            const segmentationMaximumTimeMs = parseInt(speechSegmentationMaximumTimeMs, 10);\n            segmentation.mode = Segmentation_js_1.SegmentationMode.Custom;\n            segmentation.segmentationForcedTimeoutMs = segmentationMaximumTimeMs;\n        }\n        if (configuredSegment) {\n            const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n            phraseDetection.mode = this.recognitionMode;\n            switch (this.recognitionMode) {\n                case PhraseDetectionContext_js_1.RecognitionMode.Conversation:\n                    phraseDetection.conversation = phraseDetection.conversation ?? { segmentation: {} };\n                    phraseDetection.conversation.segmentation = segmentation;\n                    break;\n                case PhraseDetectionContext_js_1.RecognitionMode.Interactive:\n                    phraseDetection.interactive = phraseDetection.interactive ?? { segmentation: {} };\n                    phraseDetection.interactive.segmentation = segmentation;\n                    break;\n                case PhraseDetectionContext_js_1.RecognitionMode.Dictation:\n                    phraseDetection.dictation = phraseDetection.dictation ?? {};\n                    phraseDetection.dictation.segmentation = segmentation;\n                    break;\n            }\n            this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n        }\n    }\n    setLanguageIdJson() {\n        const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n        if (this.privRecognizerConfig.autoDetectSourceLanguages !== undefined) {\n            const sourceLanguages = this.privRecognizerConfig.autoDetectSourceLanguages.split(\",\");\n            if (sourceLanguages.length === 1 && sourceLanguages[0] === Exports_js_4.AutoDetectSourceLanguagesOpenRangeOptionName) {\n                sourceLanguages[0] = \"UND\";\n            }\n            let speechContextLidMode;\n            if (this.privRecognizerConfig.languageIdMode === \"Continuous\") {\n                speechContextLidMode = LanguageIdContext_js_1.LanguageIdDetectionMode.DetectContinuous;\n            }\n            else { // recognizerConfig.languageIdMode === \"AtStart\"\n                speechContextLidMode = LanguageIdContext_js_1.LanguageIdDetectionMode.DetectAtAudioStart;\n            }\n            this.privSpeechContext.getContext().languageId = {\n                languages: sourceLanguages,\n                mode: speechContextLidMode,\n                onSuccess: { action: OnSuccess_js_2.NextAction.Recognize },\n                onUnknown: { action: OnUnknown_js_1.OnUnknownAction.None },\n                priority: LanguageIdContext_js_1.LanguageIdDetectionPriority.PrioritizeLatency\n            };\n            this.privSpeechContext.getContext().phraseOutput = {\n                interimResults: {\n                    resultType: InterimResults_js_2.ResultType.Auto\n                },\n                phraseResults: {\n                    resultType: PhraseResults_js_1.PhraseResultOutputType.Always\n                }\n            };\n            const customModels = this.privRecognizerConfig.sourceLanguageModels;\n            if (customModels !== undefined) {\n                phraseDetection.customModels = customModels;\n                phraseDetection.onInterim = { action: OnSuccess_js_3.NextAction.None };\n                phraseDetection.onSuccess = { action: OnSuccess_js_3.NextAction.None };\n            }\n        }\n        // No longer setting translation-specific configuration here\n        // This is now handled in setTranslationJson and setupTranslationWithLanguageId methods\n        this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n    }\n    setOutputDetailLevelJson() {\n        if (this.privEnableSpeakerId) {\n            const requestWordLevelTimestamps = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase();\n            if (requestWordLevelTimestamps === \"true\") {\n                this.privSpeechContext.setWordLevelTimings();\n            }\n            else {\n                const outputFormat = this.privRecognizerConfig.parameters.getProperty(Exports_js_4.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n                if (outputFormat === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Detailed].toLocaleLowerCase()) {\n                    this.privSpeechContext.setDetailedOutputFormat();\n                }\n            }\n        }\n    }\n    get isSpeakerDiarizationEnabled() {\n        return this.privEnableSpeakerId;\n    }\n    get audioSource() {\n        return this.privAudioSource;\n    }\n    get speechContext() {\n        return this.privSpeechContext;\n    }\n    get dynamicGrammar() {\n        return this.privDynamicGrammar;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n    set conversationTranslatorToken(token) {\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.ConversationTranslator_Token, token);\n    }\n    set voiceProfileType(type) {\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SpeakerIdMode, type);\n    }\n    set authentication(auth) {\n        this.privAuthentication = auth;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    async dispose(reason) {\n        this.privIsDisposed = true;\n        if (this.privConnectionPromise !== undefined) {\n            try {\n                const connection = await this.privConnectionPromise;\n                await connection.dispose(reason);\n            }\n            catch (error) {\n                // The connection is in a bad state. But we're trying to kill it, so...\n                return;\n            }\n        }\n    }\n    get connectionEvents() {\n        return this.privConnectionEvents;\n    }\n    get serviceEvents() {\n        return this.privServiceEvents;\n    }\n    get recognitionMode() {\n        return this.privRecognizerConfig.recognitionMode;\n    }\n    async recognize(recoMode, successCallback, errorCallBack) {\n        if (this.recognizeOverride !== undefined) {\n            await this.recognizeOverride(recoMode, successCallback, errorCallBack);\n            return;\n        }\n        // Clear the existing configuration promise to force a re-transmission of config and context.\n        this.privConnectionConfigurationPromise = undefined;\n        this.privRecognizerConfig.recognitionMode = recoMode;\n        if (this.privRecognizerConfig.recognitionEndpointVersion === \"2\") {\n            const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n            phraseDetection.mode = recoMode;\n            this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n        }\n        // Set language ID (if configured)\n        this.setLanguageIdJson();\n        // Then set translation (if configured)\n        this.setTranslationJson();\n        // Configure the integration between language ID and translation (if both are used)\n        if (this.privRecognizerConfig.autoDetectSourceLanguages !== undefined &&\n            this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            this.setupTranslationWithLanguageId();\n        }\n        this.setSpeechSegmentationTimeoutJson();\n        this.setOutputDetailLevelJson();\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallBack;\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        let audioNode;\n        try {\n            const audioStreamNode = await this.audioSource.attach(this.privRequestSession.audioNodeId);\n            const format = await this.audioSource.format;\n            const deviceInfo = await this.audioSource.deviceInfo;\n            this.privIsLiveAudio = deviceInfo.type && deviceInfo.type === Exports_js_4.type.Microphones;\n            audioNode = new Exports_js_1.ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\n            await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        }\n        catch (error) {\n            await this.privRequestSession.onStopRecognizing();\n            throw error;\n        }\n        try {\n            await conPromise;\n        }\n        catch (error) {\n            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, error);\n            return;\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        audioSendPromise.catch(async (error) => {\n            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return;\n    }\n    async stopRecognizing() {\n        if (this.privRequestSession.isRecognizing) {\n            try {\n                await this.audioSource.turnOff();\n                await this.sendFinalAudio();\n                await this.privRequestSession.onStopRecognizing();\n                await this.privRequestSession.turnCompletionPromise;\n            }\n            finally {\n                await this.privRequestSession.dispose();\n            }\n        }\n        return;\n    }\n    async connect() {\n        await this.connectImpl();\n        return Promise.resolve();\n    }\n    connectAsync(cb, err) {\n        this.connectImpl().then(() => {\n            try {\n                if (!!cb) {\n                    cb();\n                }\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n        }, (reason) => {\n            try {\n                if (!!err) {\n                    err(reason);\n                }\n                /* eslint-disable no-empty */\n            }\n            catch (error) {\n            }\n        });\n    }\n    async disconnect() {\n        await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.NoError, \"Disconnecting\");\n        if (this.disconnectOverride !== undefined) {\n            await this.disconnectOverride();\n        }\n        if (this.privConnectionPromise !== undefined) {\n            try {\n                await (await this.privConnectionPromise).dispose();\n            }\n            catch (error) {\n            }\n        }\n        this.privConnectionPromise = undefined;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    sendMessage(message) {\n        return;\n    }\n    async sendNetworkMessage(path, payload) {\n        const type = typeof payload === \"string\" ? Exports_js_2.MessageType.Text : Exports_js_2.MessageType.Binary;\n        const contentType = typeof payload === \"string\" ? \"application/json\" : \"\";\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\n    }\n    set activityTemplate(messagePayload) {\n        this.privActivityTemplate = messagePayload;\n    }\n    get activityTemplate() {\n        return this.privActivityTemplate;\n    }\n    set expectContentAssessmentResponse(value) {\n        this.privExpectContentAssessmentResponse = value;\n    }\n    async sendTelemetryData() {\n        const telemetryData = this.privRequestSession.getTelemetry();\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\n            this.privIsDisposed ||\n            null === telemetryData) {\n            return;\n        }\n        if (!!ServiceRecognizerBase.telemetryData) {\n            try {\n                ServiceRecognizerBase.telemetryData(telemetryData);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"telemetry\", this.privRequestSession.requestId, \"application/json\", telemetryData));\n    }\n    // Cancels recognition.\n    async cancelRecognitionLocal(cancellationReason, errorCode, error) {\n        if (!!this.privRequestSession.isRecognizing) {\n            await this.privRequestSession.onStopRecognizing();\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, cancellationReason, errorCode, error);\n        }\n    }\n    async receiveMessage() {\n        try {\n            if (this.privIsDisposed) {\n                // We're done.\n                return;\n            }\n            let connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.receiveMessageOverride !== undefined) {\n                return this.receiveMessageOverride();\n            }\n            // indicates we are draining the queue and it came with no message;\n            if (!message) {\n                return this.receiveMessage();\n            }\n            this.privServiceHasSentMessage = true;\n            const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n            if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        this.privMustReportEndOfStream = true;\n                        this.privRequestSession.onServiceTurnStartResponse();\n                        break;\n                    case \"speech.startdetected\":\n                        const speechStartDetected = Exports_js_4.SpeechDetected.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStartEventArgs = new Exports_js_3.RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechStartDetected) {\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\n                        }\n                        break;\n                    case \"speech.enddetected\":\n                        let json;\n                        if (connectionMessage.textBody.length > 0) {\n                            json = connectionMessage.textBody;\n                        }\n                        else {\n                            // If the request was empty, the JSON returned is empty.\n                            json = \"{ Offset: 0 }\";\n                        }\n                        const speechStopDetected = Exports_js_4.SpeechDetected.fromJSON(json, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStopEventArgs = new Exports_js_3.RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechEndDetected) {\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\n                        }\n                        break;\n                    case \"turn.end\":\n                        await this.sendTelemetryData();\n                        if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\n                            this.privMustReportEndOfStream = false;\n                            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.EndOfStream, Exports_js_3.CancellationErrorCode.NoError, undefined);\n                        }\n                        const sessionStopEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n                        await this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\n                        if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\n                            if (!!this.privRecognizer.sessionStopped) {\n                                this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\n                            }\n                            return;\n                        }\n                        else {\n                            connection = await this.fetchConnection();\n                            await this.sendPrePayloadJSON(connection);\n                        }\n                        break;\n                    default:\n                        if (!await this.processTypeSpecificMessages(connectionMessage)) {\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\n                            if (!!this.privServiceEvents) {\n                                this.serviceEvents.onEvent(new Exports_js_2.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                            }\n                        }\n                }\n            }\n            return this.receiveMessage();\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    updateSpeakerDiarizationAudioOffset() {\n        const bytesSent = this.privRequestSession.recognitionBytesSent;\n        const audioOffsetMs = this.privAverageBytesPerMs !== 0 ? bytesSent / this.privAverageBytesPerMs : 0;\n        this.privSpeechContext.setSpeakerDiarizationAudioOffsetMs(audioOffsetMs);\n    }\n    sendSpeechContext(connection, generateNewRequestId) {\n        if (this.privEnableSpeakerId) {\n            this.updateSpeakerDiarizationAudioOffset();\n        }\n        const speechContextJson = this.speechContext.toJSON();\n        if (generateNewRequestId) {\n            this.privRequestSession.onSpeechContext();\n        }\n        if (speechContextJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.context\", this.privRequestSession.requestId, \"application/json\", speechContextJson));\n        }\n        return;\n    }\n    setupTranslationWithLanguageId() {\n        const targetLanguages = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined);\n        const hasLanguageId = this.privRecognizerConfig.autoDetectSourceLanguages !== undefined;\n        if (targetLanguages !== undefined && hasLanguageId) {\n            // Configure phraseOutput for translation + language ID scenario\n            this.privSpeechContext.getContext().phraseOutput = {\n                interimResults: {\n                    resultType: InterimResults_js_2.ResultType.None\n                },\n                phraseResults: {\n                    resultType: PhraseResults_js_1.PhraseResultOutputType.None\n                }\n            };\n            // Handle custom language models and voice mapping\n            const translationContext = this.privSpeechContext.getContext().translation;\n            if (translationContext) {\n                const customModels = this.privRecognizerConfig.sourceLanguageModels;\n                if (customModels !== undefined && customModels.length > 0) {\n                    const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n                    phraseDetection.customModels = customModels;\n                    this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n                }\n                const translationVoice = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n                if (translationVoice !== undefined) {\n                    // Update translation actions for synthesis\n                    translationContext.onSuccess = { action: OnSuccess_js_1.NextAction.Synthesize };\n                    translationContext.onPassthrough = { action: OnSuccess_js_1.NextAction.Synthesize };\n                }\n            }\n        }\n    }\n    noOp() {\n        // operation not supported\n        return;\n    }\n    // Encapsulated for derived service recognizers that need to send additional JSON\n    async sendPrePayloadJSON(connection, generateNewRequestId = true) {\n        if (this.sendPrePayloadJSONOverride !== undefined) {\n            return this.sendPrePayloadJSONOverride(connection);\n        }\n        await this.sendSpeechContext(connection, generateNewRequestId);\n        await this.sendWaveHeader(connection);\n        return;\n    }\n    async sendWaveHeader(connection) {\n        const format = await this.audioSource.format;\n        // this.writeBufferToConsole(format.header);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, \"audio/x-wav\", format.header));\n    }\n    // Establishes a websocket connection to the end point.\n    connectImpl() {\n        if (this.privConnectionPromise !== undefined) {\n            return this.privConnectionPromise.then((connection) => {\n                if (connection.state() === Exports_js_2.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionPromise = undefined;\n                    this.privServiceHasSentMessage = false;\n                    return this.connectImpl();\n                }\n                return this.privConnectionPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionPromise = undefined;\n                this.privServiceHasSentMessage = false;\n                return this.connectImpl();\n            });\n        }\n        this.privConnectionPromise = this.retryableConnect();\n        // Attach an empty handler to allow the promise to run in the background while\n        // other startup events happen. It'll eventually be awaited on.\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.privConnectionPromise.catch(() => { });\n        if (this.postConnectImplOverride !== undefined) {\n            return this.postConnectImplOverride(this.privConnectionPromise);\n        }\n        return this.privConnectionPromise;\n    }\n    sendSpeechServiceConfig(connection, requestSession, SpeechServiceConfigJson) {\n        requestSession.onSpeechContext();\n        // filter out anything that is not required for the service to work.\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\n            const withTelemetry = JSON.parse(SpeechServiceConfigJson);\n            const replacement = {\n                context: {\n                    system: withTelemetry.context.system,\n                },\n            };\n            SpeechServiceConfigJson = JSON.stringify(replacement);\n        }\n        if (this.privRecognizerConfig.parameters.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() === \"true\") {\n            const json = JSON.parse(SpeechServiceConfigJson);\n            json.context.DisableReferenceChannel = \"True\";\n            json.context.MicSpec = \"1_0_0\";\n            SpeechServiceConfigJson = JSON.stringify(json);\n        }\n        if (SpeechServiceConfigJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.config\", requestSession.requestId, \"application/json\", SpeechServiceConfigJson));\n        }\n        return;\n    }\n    async fetchConnection() {\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            return this.privConnectionConfigurationPromise.then((connection) => {\n                if (connection.state() === Exports_js_2.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigurationPromise = undefined;\n                    this.privServiceHasSentMessage = false;\n                    return this.fetchConnection();\n                }\n                return this.privConnectionConfigurationPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigurationPromise = undefined;\n                this.privServiceHasSentMessage = false;\n                return this.fetchConnection();\n            });\n        }\n        this.privConnectionConfigurationPromise = this.configureConnection();\n        return await this.privConnectionConfigurationPromise;\n    }\n    async sendAudio(audioStreamNode) {\n        const audioFormat = await this.audioSource.format;\n        this.privAverageBytesPerMs = audioFormat.avgBytesPerSec / 1000;\n        // The time we last sent data to the service.\n        let nextSendTime = Date.now();\n        // Max amount to send before we start to throttle\n        const fastLaneSizeMs = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\n        const maxSendUnthrottledBytes = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\n        const startRecogNumber = this.privRequestSession.recogNumber;\n        const readAndUploadCycle = async () => {\n            // If speech is done, stop sending audio.\n            if (!this.privIsDisposed &&\n                !this.privRequestSession.isSpeechEnded &&\n                this.privRequestSession.isRecognizing &&\n                this.privRequestSession.recogNumber === startRecogNumber) {\n                const connection = await this.fetchConnection();\n                const audioStreamChunk = await audioStreamNode.read();\n                // we have a new audio chunk to upload.\n                if (this.privRequestSession.isSpeechEnded) {\n                    // If service already recognized audio end then don't send any more audio\n                    return;\n                }\n                let payload;\n                let sendDelay;\n                if (!audioStreamChunk || audioStreamChunk.isEnd) {\n                    payload = null;\n                    sendDelay = 0;\n                }\n                else {\n                    payload = audioStreamChunk.buffer;\n                    this.privRequestSession.onAudioSent(payload.byteLength);\n                    if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\n                        sendDelay = 0;\n                    }\n                    else {\n                        sendDelay = Math.max(0, nextSendTime - Date.now());\n                    }\n                }\n                if (0 !== sendDelay) {\n                    await this.delay(sendDelay);\n                }\n                if (payload !== null) {\n                    nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\n                }\n                // Are we still alive?\n                if (!this.privIsDisposed &&\n                    !this.privRequestSession.isSpeechEnded &&\n                    this.privRequestSession.isRecognizing &&\n                    this.privRequestSession.recogNumber === startRecogNumber) {\n                    connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)).catch(() => {\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch(() => { });\n                    });\n                    if (!audioStreamChunk?.isEnd) {\n                        // this.writeBufferToConsole(payload);\n                        // Regardless of success or failure, schedule the next upload.\n                        // If the underlying connection was broken, the next cycle will\n                        // get a new connection and re-transmit missing audio automatically.\n                        return readAndUploadCycle();\n                    }\n                    else {\n                        // the audio stream has been closed, no need to schedule next\n                        // read-upload cycle.\n                        if (!this.privIsLiveAudio) {\n                            this.privRequestSession.onSpeechEnded();\n                        }\n                    }\n                }\n            }\n        };\n        return readAndUploadCycle();\n    }\n    async retryableConnect() {\n        let isUnAuthorized = false;\n        this.privAuthFetchEventId = (0, Exports_js_2.createNoDashGuid)();\n        const sessionId = this.privRequestSession.sessionId;\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : (0, Exports_js_2.createNoDashGuid)();\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\n        let lastStatusCode = 0;\n        let lastReason = \"\";\n        while (this.privRequestSession.numConnectionAttempts <= this.privRecognizerConfig.maxRetryCount) {\n            this.privRequestSession.onRetryConnection();\n            // Get the auth information for the connection. This is a bit of overkill for the current API surface, but leaving the plumbing in place to be able to raise a developer-customer\n            // facing event when a connection fails to let them try and provide new auth information.\n            const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n            const auth = await authPromise;\n            await this.privRequestSession.onAuthCompleted(false);\n            // Create the connection\n            const connection = await this.privConnectionFactory.create(this.privRecognizerConfig, auth, this.privConnectionId);\n            // Attach the telemetry handlers.\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach((event) => {\n                this.connectionEvents.onEvent(event);\n            });\n            const response = await connection.open();\n            // 200 == everything is fine.\n            if (response.statusCode === 200) {\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.resolve(connection);\n            }\n            else if (response.statusCode === 1006) {\n                isUnAuthorized = true;\n            }\n            lastStatusCode = response.statusCode;\n            lastReason = response.reason;\n        }\n        await this.privRequestSession.onConnectionEstablishCompleted(lastStatusCode, lastReason);\n        return Promise.reject(`Unable to contact server. StatusCode: ${lastStatusCode}, ${this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${lastReason}`);\n    }\n    delay(delayMs) {\n        return new Promise((resolve) => this.privSetTimeout(resolve, delayMs));\n    }\n    writeBufferToConsole(buffer) {\n        let out = \"Buffer Size: \";\n        if (null === buffer) {\n            out += \"null\";\n        }\n        else {\n            const readView = new Uint8Array(buffer);\n            out += `${buffer.byteLength}\\r\\n`;\n            for (let i = 0; i < buffer.byteLength; i++) {\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\n                if (((i + 1) % 16) === 0) {\n                    // eslint-disable-next-line no-console\n                    console.info(out);\n                    out = \"\";\n                }\n            }\n        }\n        // eslint-disable-next-line no-console\n        console.info(out);\n    }\n    async sendFinalAudio() {\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\n        return;\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configureConnection() {\n        const connection = await this.connectImpl();\n        if (this.configConnectionOverride !== undefined) {\n            return this.configConnectionOverride(connection);\n        }\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\n        await this.sendPrePayloadJSON(connection, false);\n        return connection;\n    }\n}\nexports.ServiceRecognizerBase = ServiceRecognizerBase;\nServiceRecognizerBase.telemetryDataEnabled = true;\n\n//# sourceMappingURL=ServiceRecognizerBase.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass ConversationServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.handleSpeechPhraseMessage = async (textBody) => this.handleSpeechPhrase(textBody);\n        this.handleSpeechHypothesisMessage = (textBody) => this.handleSpeechHypothesis(textBody);\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        void connectionMessage;\n        return;\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        void result;\n        void offset;\n        void sessionId;\n        return;\n    }\n    handleRecognizingCallback(result, duration, sessionId) {\n        void result;\n        void duration;\n        void sessionId;\n        return;\n    }\n    async processSpeechMessages(connectionMessage) {\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                if (!!this.handleSpeechHypothesisMessage) {\n                    this.handleSpeechHypothesisMessage(connectionMessage.textBody);\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                if (!!this.handleSpeechPhraseMessage) {\n                    await this.handleSpeechPhraseMessage(connectionMessage.textBody);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        // Implementing to allow inheritance\n        void sessionId;\n        void requestId;\n        void cancellationReason;\n        void errorCode;\n        void error;\n    }\n    async handleSpeechPhrase(textBody) {\n        const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n        const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, textBody);\n        this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n        if (Exports_js_1.ResultReason.Canceled === resultReason) {\n            const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n            const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n            await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n        }\n        else {\n            if (simple.RecognitionStatus !== Exports_js_2.RecognitionStatus.EndOfDictation) {\n                if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                    result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, simple.SpeakerId, undefined, simple.asJson(), resultProps);\n                }\n                else {\n                    const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n                    result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.Text, detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, detailed.SpeakerId, undefined, detailed.asJson(), resultProps);\n                }\n                this.handleRecognizedCallback(result, result.offset, this.privRequestSession.sessionId);\n            }\n        }\n    }\n    handleSpeechHypothesis(textBody) {\n        const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, textBody);\n        const result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, hypothesis.SpeakerId, undefined, hypothesis.asJson(), resultProps);\n        this.privRequestSession.onHypothesis(hypothesis.Offset);\n        this.handleRecognizingCallback(result, hypothesis.Duration, this.privRequestSession.sessionId);\n    }\n}\nexports.ConversationServiceRecognizer = ConversationServiceRecognizer;\n\n//# sourceMappingURL=ConversationServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognizerConfig = exports.SpeechResultFormat = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nvar SpeechResultFormat;\n(function (SpeechResultFormat) {\n    SpeechResultFormat[SpeechResultFormat[\"Simple\"] = 0] = \"Simple\";\n    SpeechResultFormat[SpeechResultFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(SpeechResultFormat = exports.SpeechResultFormat || (exports.SpeechResultFormat = {}));\nclass RecognizerConfig {\n    constructor(speechServiceConfig, parameters) {\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new Exports_js_2.SpeechServiceConfig(new Exports_js_2.Context(null));\n        this.privParameters = parameters;\n        this.privMaxRetryCount = parseInt(parameters.getProperty(\"SPEECH-Error-MaxRetryCount\", \"4\"), 10);\n        this.privLanguageIdMode = parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_LanguageIdMode, undefined);\n        this.privEnableSpeakerId = false;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get recognitionMode() {\n        return this.privRecognitionMode;\n    }\n    set recognitionMode(value) {\n        this.privRecognitionMode = value;\n        this.privRecognitionActivityTimeout = value === PhraseDetectionContext_js_1.RecognitionMode.Interactive ? 8000 : 25000;\n        this.privSpeechServiceConfig.Recognition = PhraseDetectionContext_js_1.RecognitionMode[value];\n    }\n    get SpeechServiceConfig() {\n        return this.privSpeechServiceConfig;\n    }\n    get recognitionActivityTimeout() {\n        return this.privRecognitionActivityTimeout;\n    }\n    get isContinuousRecognition() {\n        return this.privRecognitionMode !== PhraseDetectionContext_js_1.RecognitionMode.Interactive;\n    }\n    get languageIdMode() {\n        return this.privLanguageIdMode;\n    }\n    get autoDetectSourceLanguages() {\n        return this.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\n    }\n    get recognitionEndpointVersion() {\n        return this.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\n    }\n    set recognitionEndpointVersion(version) {\n        this.parameters.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, version);\n    }\n    get sourceLanguageModels() {\n        const models = [];\n        let modelsExist = false;\n        if (this.autoDetectSourceLanguages !== undefined) {\n            for (const language of this.autoDetectSourceLanguages.split(\",\")) {\n                const customProperty = language + Exports_js_1.PropertyId.SpeechServiceConnection_EndpointId.toString();\n                const modelId = this.parameters.getProperty(customProperty, undefined);\n                if (modelId !== undefined) {\n                    models.push({ language, endpoint: modelId });\n                    modelsExist = true;\n                }\n                else {\n                    models.push({ language, endpoint: \"\" });\n                }\n            }\n        }\n        return modelsExist ? models : undefined;\n    }\n    get maxRetryCount() {\n        return this.privMaxRetryCount;\n    }\n    get isSpeakerDiarizationEnabled() {\n        return this.privEnableSpeakerId;\n    }\n    set isSpeakerDiarizationEnabled(value) {\n        this.privEnableSpeakerId = value;\n    }\n}\nexports.RecognizerConfig = RecognizerConfig;\n\n//# sourceMappingURL=RecognizerConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=SpeechServiceInterfaces.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebsocketMessageFormatter = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst CRLF = \"\\r\\n\";\nclass WebsocketMessageFormatter {\n    toConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const textMessage = message.textContent;\n                let headers = {};\n                let body = null;\n                if (textMessage) {\n                    const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\n                    if (headerBodySplit && headerBodySplit.length > 0) {\n                        headers = this.parseHeaders(headerBodySplit[0]);\n                        if (headerBodySplit.length > 1) {\n                            body = headerBodySplit[1];\n                        }\n                    }\n                }\n                deferral.resolve(new Exports_js_1.ConnectionMessage(message.messageType, body, headers, message.id));\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                const binaryMessage = message.binaryContent;\n                let headers = {};\n                let body = null;\n                if (!binaryMessage || binaryMessage.byteLength < 2) {\n                    throw new Error(\"Invalid binary message format. Header length missing.\");\n                }\n                const dataView = new DataView(binaryMessage);\n                const headerLength = dataView.getInt16(0);\n                if (binaryMessage.byteLength < headerLength + 2) {\n                    throw new Error(\"Invalid binary message format. Header content missing.\");\n                }\n                let headersString = \"\";\n                for (let i = 0; i < headerLength; i++) {\n                    headersString += String.fromCharCode((dataView).getInt8(i + 2));\n                }\n                headers = this.parseHeaders(headersString);\n                if (binaryMessage.byteLength > headerLength + 2) {\n                    body = binaryMessage.slice(2 + headerLength);\n                }\n                deferral.resolve(new Exports_js_1.ConnectionMessage(message.messageType, body, headers, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. Error: ${e}`);\n        }\n        return deferral.promise;\n    }\n    fromConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, payload, message.id));\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                const headersString = this.makeHeaders(message);\n                const content = message.binaryBody;\n                const headerBuffer = this.stringToArrayBuffer(headersString);\n                const headerInt8Array = new Int8Array(headerBuffer);\n                const headerLength = headerInt8Array.byteLength;\n                const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\n                payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\n                payloadInt8Array[1] = headerLength & 0xff;\n                payloadInt8Array.set(headerInt8Array, 2);\n                if (content) {\n                    const bodyInt8Array = new Int8Array(content);\n                    payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\n                }\n                const payload = payloadInt8Array.buffer;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Binary, payload, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. ${e}`);\n        }\n        return deferral.promise;\n    }\n    makeHeaders(message) {\n        let headersString = \"\";\n        if (message.headers) {\n            for (const header in message.headers) {\n                if (header) {\n                    headersString += `${header}: ${message.headers[header]}${CRLF}`;\n                }\n            }\n        }\n        return headersString;\n    }\n    parseHeaders(headersString) {\n        const headers = {};\n        if (headersString) {\n            const headerMatches = headersString.match(/[^\\r\\n]+/g);\n            if (headers) {\n                for (const header of headerMatches) {\n                    if (header) {\n                        const separatorIndex = header.indexOf(\":\");\n                        const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\n                        const headerValue = separatorIndex > 0 && header.length > (separatorIndex + 1) ?\n                            header.substr(separatorIndex + 1).trim() :\n                            \"\";\n                        headers[headerName] = headerValue;\n                    }\n                }\n            }\n        }\n        return headers;\n    }\n    stringToArrayBuffer(str) {\n        const buffer = new ArrayBuffer(str.length);\n        const view = new DataView(buffer);\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(i, str.charCodeAt(i));\n        }\n        return buffer;\n    }\n}\nexports.WebsocketMessageFormatter = WebsocketMessageFormatter;\n\n//# sourceMappingURL=WebsocketMessageFormatter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common.speech/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nclass SpeechConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.interactiveRelativeUri = \"/speech/recognition/interactive/cognitiveservices/v1\";\n        this.conversationRelativeUri = \"/speech/recognition/conversation/cognitiveservices/v1\";\n        this.dictationRelativeUri = \"/speech/recognition/dictation/cognitiveservices/v1\";\n        this.universalUri = \"/stt/speech/universal/v\";\n    }\n    async create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const host = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\n        const queryParams = {};\n        const endpointId = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n            }\n        }\n        else if (language) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Language) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n            }\n        }\n        if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Format) === -1) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = config.parameters.getProperty(Exports_js_2.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n        }\n        if (config.autoDetectSourceLanguages !== undefined) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableLanguageId] = \"true\";\n        }\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        if (!!endpoint) {\n            const endpointUrl = new URL(endpoint);\n            const pathName = endpointUrl.pathname;\n            if (pathName === \"\" || pathName === \"/\") {\n                // We need to generate the path, and we need to check for a redirect.\n                endpointUrl.pathname = this.universalUri + config.recognitionEndpointVersion;\n                endpoint = await ConnectionFactoryBase_js_1.ConnectionFactoryBase.getRedirectUrlFromEndpoint(endpointUrl.toString());\n            }\n        }\n        if (!endpoint) {\n            switch (config.recognitionMode) {\n                case PhraseDetectionContext_js_1.RecognitionMode.Conversation:\n                    if (config.parameters.getProperty(Exports_js_2.ForceDictationPropertyName, \"false\") === \"true\") {\n                        endpoint = host + this.dictationRelativeUri;\n                    }\n                    else {\n                        if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\n                            endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\n                        }\n                        else {\n                            endpoint = host + this.conversationRelativeUri;\n                        }\n                    }\n                    break;\n                case PhraseDetectionContext_js_1.RecognitionMode.Dictation:\n                    endpoint = host + this.dictationRelativeUri;\n                    break;\n                default:\n                    if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\n                        endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\n                    }\n                    else {\n                        endpoint = host + this.interactiveRelativeUri; // default is interactive\n                    }\n                    break;\n            }\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        headers.connectionId = connectionId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        const webSocketConnection = new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\n        // URI that was used to make the connection (including query parameters).\n        const uri = webSocketConnection.uri;\n        config.parameters.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Url, uri);\n        return webSocketConnection;\n    }\n}\nexports.SpeechConnectionFactory = SpeechConnectionFactory;\n\n//# sourceMappingURL=SpeechConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriberConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"../common.speech/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass ConversationTranscriberConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.universalUri = \"/stt/speech/universal/v2\";\n    }\n    async create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\n        const queryParams = {};\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n            }\n        }\n        else if (language) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Language) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n            }\n        }\n        if (config.autoDetectSourceLanguages !== undefined) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableLanguageId] = \"true\";\n        }\n        this.setV2UrlParams(config, queryParams, endpoint);\n        if (!!endpoint) {\n            const endpointUrl = new URL(endpoint);\n            const pathName = endpointUrl.pathname;\n            if (pathName === \"\" || pathName === \"/\") {\n                // We need to generate the path, and we need to check for a redirect.\n                endpointUrl.pathname = this.universalUri;\n                endpoint = await ConnectionFactoryBase_js_1.ConnectionFactoryBase.getRedirectUrlFromEndpoint(endpointUrl.toString());\n            }\n        }\n        if (!endpoint) {\n            endpoint = `${host}${this.universalUri}`;\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        const webSocketConnection = new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\n        // URI that was used to make the connection (including query parameters).\n        const uri = webSocketConnection.uri;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, uri);\n        return webSocketConnection;\n    }\n    setV2UrlParams(config, queryParams, endpoint) {\n        const propertyIdToParameterMap = new Map([\n            [Exports_js_2.PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.SegmentationSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames_js_1.QueryParameterNames.EnableAudioLogging],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.EndSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.InitialSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames_js_1.QueryParameterNames.Postprocessing],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames_js_1.QueryParameterNames.Profanity],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames_js_1.QueryParameterNames.StableIntermediateThreshold],\n        ]);\n        propertyIdToParameterMap.forEach((parameterName, propertyId) => {\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\n        });\n        const serviceProperties = JSON.parse(config.parameters.getProperty(Exports_js_3.ServicePropertiesPropertyName, \"{}\"));\n        Object.keys(serviceProperties).forEach((value) => {\n            queryParams[value] = serviceProperties[value];\n        });\n    }\n}\nexports.ConversationTranscriberConnectionFactory = ConversationTranscriberConnectionFactory;\n\n//# sourceMappingURL=ConversationTranscriberConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranscriberConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nclass TranscriberConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.multiaudioRelativeUri = \"/speech/recognition/multiaudio\";\n    }\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"centralus\");\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const hostDefault = \"wss://transcribe.\" + region + \".cts.speech\" + hostSuffix + this.multiaudioRelativeUri;\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostDefault);\n        const queryParams = {};\n        this.setQueryParams(queryParams, config, endpoint);\n        if (!endpoint) {\n            endpoint = host;\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n    setQueryParams(queryParams, config, endpointUrl) {\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId && !(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId in queryParams)) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n        }\n        if (language && !(QueryParameterNames_js_1.QueryParameterNames.Language in queryParams)) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n        }\n        const wordLevelTimings = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase() === \"true\";\n        const detailed = config.parameters.getProperty(Exports_js_3.OutputFormatPropertyName, Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Simple]) !== Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Simple];\n        if (wordLevelTimings || detailed) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Detailed].toLowerCase();\n        }\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\n    }\n}\nexports.TranscriberConnectionFactory = TranscriberConnectionFactory;\n\n//# sourceMappingURL=TranscriberConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst StringUtils_js_1 = require(\"../common/StringUtils.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\nconst QueryParameterNames_js_1 = require(\"./QueryParameterNames.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nclass TranslationConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.universalUri = \"/stt/speech/universal/v2\";\n        this.translationV1Uri = \"/speech/translation/cognitiveservices/v1\";\n    }\n    async create(config, authInfo, connectionId) {\n        let endpoint = this.getEndpointUrl(config);\n        const queryParams = {};\n        // Determine if we're using V1 or V2 endpoint\n        this.setQueryParams(queryParams, config, endpoint);\n        if (!!endpoint) {\n            const endpointUrl = new URL(endpoint);\n            const pathName = endpointUrl.pathname;\n            if (pathName === \"\" || pathName === \"/\") {\n                // We need to generate the path, and we need to check for a redirect.\n                endpointUrl.pathname = this.universalUri;\n                endpoint = await ConnectionFactoryBase_js_1.ConnectionFactoryBase.getRedirectUrlFromEndpoint(endpointUrl.toString());\n            }\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        const webSocketConnection = new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n        return webSocketConnection;\n    }\n    getEndpointUrl(config, returnRegionPlaceholder) {\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        // First check for an explicitly specified endpoint\n        let endpointUrl = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        // If an explicit endpoint is provided, use it\n        if (endpointUrl) {\n            if (returnRegionPlaceholder === true) {\n                return endpointUrl;\n            }\n            return StringUtils_js_1.StringUtils.formatString(endpointUrl, { region });\n        }\n        // Check if V1 endpoint is explicitly requested\n        const forceV1Endpoint = config.parameters.getProperty(\"SPEECH-ForceV1Endpoint\", \"false\") === \"true\";\n        if (forceV1Endpoint) {\n            // Use V1 endpoint with s2s.speech host\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://{region}.s2s.speech\" + hostSuffix);\n            endpointUrl = host + this.translationV1Uri;\n        }\n        else {\n            // Default to V2 endpoint with stt.speech host\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://{region}.stt.speech\" + hostSuffix);\n            endpointUrl = host + this.universalUri;\n        }\n        if (returnRegionPlaceholder === true) {\n            return endpointUrl;\n        }\n        return StringUtils_js_1.StringUtils.formatString(endpointUrl, { region });\n    }\n    setQueryParams(queryParams, config, endpointUrl) {\n        // Common parameters for both V1 and V2 endpoints\n        queryParams.from = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n        queryParams.to = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages);\n        queryParams.scenario = config.recognitionMode === PhraseDetectionContext_js_1.RecognitionMode.Interactive ? \"interactive\" :\n            config.recognitionMode === PhraseDetectionContext_js_1.RecognitionMode.Conversation ? \"conversation\" : \"\";\n        // Set common parameters\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\n        this.setUrlParameter(Exports_js_2.PropertyId.SpeechServiceResponse_TranslationRequestStablePartialResult, QueryParameterNames_js_1.QueryParameterNames.StableTranslation, config, queryParams, endpointUrl);\n        // Handle translation voice if specified\n        const translationVoice = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n        if (translationVoice !== undefined) {\n            queryParams.voice = translationVoice;\n            // Updated to match C++ implementation\n            queryParams.features = \"requireVoice\";\n        }\n    }\n}\nexports.TranslationConnectionFactory = TranslationConnectionFactory;\n\n//# sourceMappingURL=TranslationConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnumTranslation = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass EnumTranslation {\n    static implTranslateRecognitionResult(recognitionStatus, expectEndOfDictation = false) {\n        let reason = Exports_js_1.ResultReason.Canceled;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Success:\n                reason = Exports_js_1.ResultReason.RecognizedSpeech;\n                break;\n            case Exports_js_2.RecognitionStatus.EndOfDictation:\n                // If we need the result in EndOfDictation (typically some session level result),\n                // translate into RecognizedSpeech, otherwise NoMatch\n                reason = expectEndOfDictation ? Exports_js_1.ResultReason.RecognizedSpeech : Exports_js_1.ResultReason.NoMatch;\n                break;\n            case Exports_js_2.RecognitionStatus.NoMatch:\n            case Exports_js_2.RecognitionStatus.InitialSilenceTimeout:\n            case Exports_js_2.RecognitionStatus.BabbleTimeout:\n                reason = Exports_js_1.ResultReason.NoMatch;\n                break;\n            case Exports_js_2.RecognitionStatus.Error:\n            case Exports_js_2.RecognitionStatus.BadRequest:\n            case Exports_js_2.RecognitionStatus.Forbidden:\n            default:\n                reason = Exports_js_1.ResultReason.Canceled;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateCancelResult(recognitionStatus) {\n        let reason = Exports_js_1.CancellationReason.EndOfStream;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Success:\n            case Exports_js_2.RecognitionStatus.EndOfDictation:\n            case Exports_js_2.RecognitionStatus.NoMatch:\n                reason = Exports_js_1.CancellationReason.EndOfStream;\n                break;\n            case Exports_js_2.RecognitionStatus.InitialSilenceTimeout:\n            case Exports_js_2.RecognitionStatus.BabbleTimeout:\n            case Exports_js_2.RecognitionStatus.Error:\n            case Exports_js_2.RecognitionStatus.BadRequest:\n            case Exports_js_2.RecognitionStatus.Forbidden:\n            default:\n                reason = Exports_js_1.CancellationReason.Error;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateCancelErrorCode(recognitionStatus) {\n        let reason = Exports_js_1.CancellationErrorCode.NoError;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Error:\n                reason = Exports_js_1.CancellationErrorCode.ServiceError;\n                break;\n            case Exports_js_2.RecognitionStatus.TooManyRequests:\n                reason = Exports_js_1.CancellationErrorCode.TooManyRequests;\n                break;\n            case Exports_js_2.RecognitionStatus.BadRequest:\n                reason = Exports_js_1.CancellationErrorCode.BadRequestParameters;\n                break;\n            case Exports_js_2.RecognitionStatus.Forbidden:\n                reason = Exports_js_1.CancellationErrorCode.Forbidden;\n                break;\n            default:\n                reason = Exports_js_1.CancellationErrorCode.NoError;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateErrorDetails(cancellationErrorCode) {\n        let errorDetails = \"The speech service encountered an internal error and could not continue.\";\n        switch (cancellationErrorCode) {\n            case Exports_js_1.CancellationErrorCode.Forbidden:\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\n                break;\n            case Exports_js_1.CancellationErrorCode.BadRequestParameters:\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\n                break;\n            case Exports_js_1.CancellationErrorCode.TooManyRequests:\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\n                break;\n            default:\n                break;\n        }\n        return errorDetails;\n    }\n}\nexports.EnumTranslation = EnumTranslation;\n\n//# sourceMappingURL=EnumTranslation.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecognitionStatus = exports.SynthesisStatus = void 0;\n/**\n * @class SynthesisStatus\n * @private\n */\nvar SynthesisStatus;\n(function (SynthesisStatus) {\n    /**\n     * The response contains valid audio data.\n     * @member SynthesisStatus.Success\n     */\n    SynthesisStatus[SynthesisStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * Indicates the end of audio data. No valid audio data is included in the message.\n     * @member SynthesisStatus.SynthesisEnd\n     */\n    SynthesisStatus[SynthesisStatus[\"SynthesisEnd\"] = 1] = \"SynthesisEnd\";\n    /**\n     * Indicates an error occurred during synthesis data processing.\n     * @member SynthesisStatus.Error\n     */\n    SynthesisStatus[SynthesisStatus[\"Error\"] = 2] = \"Error\";\n})(SynthesisStatus = exports.SynthesisStatus || (exports.SynthesisStatus = {}));\nvar RecognitionStatus;\n(function (RecognitionStatus) {\n    RecognitionStatus[RecognitionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionStatus[RecognitionStatus[\"NoMatch\"] = 1] = \"NoMatch\";\n    RecognitionStatus[RecognitionStatus[\"InitialSilenceTimeout\"] = 2] = \"InitialSilenceTimeout\";\n    RecognitionStatus[RecognitionStatus[\"BabbleTimeout\"] = 3] = \"BabbleTimeout\";\n    RecognitionStatus[RecognitionStatus[\"Error\"] = 4] = \"Error\";\n    RecognitionStatus[RecognitionStatus[\"EndOfDictation\"] = 5] = \"EndOfDictation\";\n    RecognitionStatus[RecognitionStatus[\"TooManyRequests\"] = 6] = \"TooManyRequests\";\n    RecognitionStatus[RecognitionStatus[\"BadRequest\"] = 7] = \"BadRequest\";\n    RecognitionStatus[RecognitionStatus[\"Forbidden\"] = 8] = \"Forbidden\";\n})(RecognitionStatus = exports.RecognitionStatus || (exports.RecognitionStatus = {}));\n\n//# sourceMappingURL=Enums.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationSynthesisEnd = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass TranslationSynthesisEnd {\n    constructor(json) {\n        this.privSynthesisEnd = JSON.parse(json);\n        if (!!this.privSynthesisEnd.SynthesisStatus) {\n            this.privSynthesisEnd.SynthesisStatus = Exports_js_1.SynthesisStatus[this.privSynthesisEnd.SynthesisStatus];\n        }\n        if (!!this.privSynthesisEnd.Status) {\n            this.privSynthesisEnd.SynthesisStatus = Exports_js_1.SynthesisStatus[this.privSynthesisEnd.Status];\n        }\n    }\n    static fromJSON(json) {\n        return new TranslationSynthesisEnd(json);\n    }\n    get SynthesisStatus() {\n        return this.privSynthesisEnd.SynthesisStatus;\n    }\n    get FailureReason() {\n        return this.privSynthesisEnd.FailureReason;\n    }\n}\nexports.TranslationSynthesisEnd = TranslationSynthesisEnd;\n\n//# sourceMappingURL=TranslationSynthesisEnd.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationHypothesis = void 0;\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst TranslationStatus_js_1 = require(\"../TranslationStatus.js\");\nclass TranslationHypothesis {\n    constructor(hypothesis, baseOffset) {\n        this.privTranslationHypothesis = hypothesis;\n        this.privTranslationHypothesis.Offset += baseOffset;\n        this.privTranslationHypothesis.Translation.TranslationStatus = this.mapTranslationStatus(this.privTranslationHypothesis.Translation.TranslationStatus);\n    }\n    static fromJSON(json, baseOffset) {\n        return new TranslationHypothesis(JSON.parse(json), baseOffset);\n    }\n    static fromTranslationResponse(translationHypothesis, baseOffset) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(translationHypothesis, \"translationHypothesis\");\n        const hypothesis = translationHypothesis.SpeechHypothesis;\n        translationHypothesis.SpeechHypothesis = undefined;\n        hypothesis.Translation = translationHypothesis;\n        return new TranslationHypothesis(hypothesis, baseOffset);\n    }\n    get Duration() {\n        return this.privTranslationHypothesis.Duration;\n    }\n    get Offset() {\n        return this.privTranslationHypothesis.Offset;\n    }\n    get Text() {\n        return this.privTranslationHypothesis.Text;\n    }\n    get Translation() {\n        return this.privTranslationHypothesis.Translation;\n    }\n    get Language() {\n        return this.privTranslationHypothesis.PrimaryLanguage?.Language;\n    }\n    asJson() {\n        const jsonObj = { ...this.privTranslationHypothesis };\n        // Convert the enum value to its string representation for serialization purposes.\n        return jsonObj.Translation !== undefined ? JSON.stringify({\n            ...jsonObj,\n            TranslationStatus: TranslationStatus_js_1.TranslationStatus[jsonObj.Translation.TranslationStatus]\n        }) : JSON.stringify(jsonObj);\n    }\n    mapTranslationStatus(status) {\n        if (typeof status === \"string\") {\n            return TranslationStatus_js_1.TranslationStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.TranslationHypothesis = TranslationHypothesis;\n\n//# sourceMappingURL=TranslationHypothesis.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationPhrase = void 0;\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_1 = require(\"../Exports.js\");\nconst TranslationStatus_js_1 = require(\"../TranslationStatus.js\");\nclass TranslationPhrase {\n    constructor(phrase, baseOffset) {\n        this.privTranslationPhrase = phrase;\n        this.privTranslationPhrase.Offset += baseOffset;\n        this.privTranslationPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privTranslationPhrase.RecognitionStatus);\n        if (this.privTranslationPhrase.Translation !== undefined) {\n            this.privTranslationPhrase.Translation.TranslationStatus = this.mapTranslationStatus(this.privTranslationPhrase.Translation.TranslationStatus);\n        }\n    }\n    static fromJSON(json, baseOffset) {\n        return new TranslationPhrase(JSON.parse(json), baseOffset);\n    }\n    static fromTranslationResponse(translationResponse, baseOffset) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(translationResponse, \"translationResponse\");\n        const phrase = translationResponse.SpeechPhrase;\n        translationResponse.SpeechPhrase = undefined;\n        phrase.Translation = translationResponse;\n        phrase.Text = phrase.DisplayText;\n        return new TranslationPhrase(phrase, baseOffset);\n    }\n    get RecognitionStatus() {\n        return this.privTranslationPhrase.RecognitionStatus;\n    }\n    get Offset() {\n        return this.privTranslationPhrase.Offset;\n    }\n    get Duration() {\n        return this.privTranslationPhrase.Duration;\n    }\n    get Text() {\n        return this.privTranslationPhrase.Text;\n    }\n    get Language() {\n        return this.privTranslationPhrase.PrimaryLanguage?.Language;\n    }\n    get Confidence() {\n        return this.privTranslationPhrase.PrimaryLanguage?.Confidence;\n    }\n    get Translation() {\n        return this.privTranslationPhrase.Translation;\n    }\n    asJson() {\n        const jsonObj = { ...this.privTranslationPhrase };\n        // Convert the enum values to their string representations for serialization\n        const serializedObj = {\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        };\n        if (jsonObj.Translation) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            serializedObj.Translation = {\n                ...jsonObj.Translation,\n                TranslationStatus: TranslationStatus_js_1.TranslationStatus[jsonObj.Translation.TranslationStatus]\n            };\n        }\n        return JSON.stringify(serializedObj);\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n    mapTranslationStatus(status) {\n        if (typeof status === \"string\") {\n            return TranslationStatus_js_1.TranslationStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.TranslationPhrase = TranslationPhrase;\n\n//# sourceMappingURL=TranslationPhrase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass TranslationServiceRecognizer extends Exports_js_3.ConversationServiceRecognizer {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer);\n        this.privTranslationRecognizer = translationRecognizer;\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\n                this.privTranslationRecognizer.onConnection();\n            }\n        });\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        const resultProps = new Exports_js_2.PropertyCollection();\n        let processed = await this.processSpeechMessages(connectionMessage);\n        if (processed) {\n            return true;\n        }\n        const handleTranslationPhrase = async (translatedPhrase) => {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, translatedPhrase.asJson());\n            this.privRequestSession.onPhraseRecognized(translatedPhrase.Offset + translatedPhrase.Duration);\n            if (translatedPhrase.RecognitionStatus === Exports_js_3.RecognitionStatus.Success) {\n                // OK, the recognition was successful. How'd the translation do?\n                const result = this.fireEventForResult(translatedPhrase, resultProps);\n                if (!!this.privTranslationRecognizer.recognized) {\n                    try {\n                        this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                // report result to promise.\n                if (!!this.privSuccessCallback) {\n                    try {\n                        this.privSuccessCallback(result.result);\n                    }\n                    catch (e) {\n                        if (!!this.privErrorCallback) {\n                            this.privErrorCallback(e);\n                        }\n                    }\n                    // Only invoke the call back once.\n                    // and if it's successful don't invoke the\n                    // error after that.\n                    this.privSuccessCallback = undefined;\n                    this.privErrorCallback = undefined;\n                }\n            }\n            else {\n                const reason = Exports_js_3.EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\n                const result = new Exports_js_2.TranslationRecognitionResult(undefined, this.privRequestSession.requestId, reason, translatedPhrase.Text, translatedPhrase.Duration, translatedPhrase.Offset, translatedPhrase.Language, translatedPhrase.Confidence, undefined, translatedPhrase.asJson(), resultProps);\n                if (reason === Exports_js_2.ResultReason.Canceled) {\n                    const cancelReason = Exports_js_3.EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_3.EnumTranslation.implTranslateCancelErrorCode(translatedPhrase.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_3.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    if (translatedPhrase.RecognitionStatus !== Exports_js_3.RecognitionStatus.EndOfDictation) {\n                        const ev = new Exports_js_2.TranslationRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                        if (!!this.privTranslationRecognizer.recognized) {\n                            try {\n                                this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        // report result to promise.\n                        if (!!this.privSuccessCallback) {\n                            try {\n                                this.privSuccessCallback(result);\n                            }\n                            catch (e) {\n                                if (!!this.privErrorCallback) {\n                                    this.privErrorCallback(e);\n                                }\n                            }\n                            // Only invoke the call back once.\n                            // and if it's successful don't invoke the\n                            // error after that.\n                            this.privSuccessCallback = undefined;\n                            this.privErrorCallback = undefined;\n                        }\n                    }\n                }\n                processed = true;\n            }\n        };\n        const handleTranslationHypothesis = (hypothesis) => {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, hypothesis.asJson());\n            const result = this.fireEventForResult(hypothesis, resultProps);\n            this.privRequestSession.onHypothesis(result.offset);\n            if (!!this.privTranslationRecognizer.recognizing) {\n                try {\n                    this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\n                    /* eslint-disable no-empty */\n                }\n                catch (error) {\n                    // Not going to let errors in the event handler\n                    // trip things up.\n                }\n            }\n            processed = true;\n        };\n        if (connectionMessage.messageType === Exports_js_1.MessageType.Text) {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"translation.hypothesis\":\n                handleTranslationHypothesis(Exports_js_3.TranslationHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset));\n                break;\n            case \"translation.response\":\n                const phrase = JSON.parse(connectionMessage.textBody);\n                if (!!phrase.SpeechPhrase) {\n                    await handleTranslationPhrase(Exports_js_3.TranslationPhrase.fromTranslationResponse(phrase, this.privRequestSession.currentTurnAudioOffset));\n                }\n                else {\n                    const hypothesis = JSON.parse(connectionMessage.textBody);\n                    if (!!hypothesis.SpeechHypothesis) {\n                        handleTranslationHypothesis(Exports_js_3.TranslationHypothesis.fromTranslationResponse(hypothesis, this.privRequestSession.currentTurnAudioOffset));\n                    }\n                }\n                break;\n            case \"translation.phrase\":\n                await handleTranslationPhrase(Exports_js_3.TranslationPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset));\n                break;\n            case \"translation.synthesis\":\n            case \"audio\":\n                this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\n                processed = true;\n                break;\n            case \"audio.end\":\n            case \"translation.synthesis.end\":\n                const synthEnd = Exports_js_3.TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\n                switch (synthEnd.SynthesisStatus) {\n                    case Exports_js_3.SynthesisStatus.Error:\n                        if (!!this.privTranslationRecognizer.synthesizing) {\n                            const result = new Exports_js_2.TranslationSynthesisResult(Exports_js_2.ResultReason.Canceled, undefined);\n                            const retEvent = new Exports_js_2.TranslationSynthesisEventArgs(result, this.privRequestSession.sessionId);\n                            try {\n                                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        if (!!this.privTranslationRecognizer.canceled) {\n                            // And raise a canceled event to send the rich(er) error message back.\n                            const canceledResult = new Exports_js_2.TranslationRecognitionCanceledEventArgs(this.privRequestSession.sessionId, Exports_js_2.CancellationReason.Error, synthEnd.FailureReason, Exports_js_2.CancellationErrorCode.ServiceError, null);\n                            try {\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        break;\n                    case Exports_js_3.SynthesisStatus.Success:\n                        this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\n                        break;\n                    default:\n                        break;\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (!!this.privTranslationRecognizer.canceled) {\n            const cancelEvent = new Exports_js_2.TranslationRecognitionCanceledEventArgs(sessionId, cancellationReason, error, errorCode, undefined);\n            try {\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.TranslationRecognitionResult(undefined, // Translations\n            requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Druation\n            undefined, // Offset\n            undefined, // Language\n            undefined, // LanguageDetectionConfidence\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                /* eslint-disable no-empty */\n                this.privSuccessCallback = undefined;\n            }\n            catch { }\n        }\n    }\n    handleRecognizingCallback(result, offset, sessionId) {\n        try {\n            const ev = new Exports_js_2.TranslationRecognitionEventArgs(Exports_js_2.TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\n            this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, ev);\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        try {\n            const ev = new Exports_js_2.TranslationRecognitionEventArgs(Exports_js_2.TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\n            this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    fireEventForResult(serviceResult, properties) {\n        let translations;\n        if (undefined !== serviceResult.Translation.Translations) {\n            translations = new Exports_js_2.Translations();\n            for (const translation of serviceResult.Translation.Translations) {\n                translations.set(translation.Language, translation.Text || translation.DisplayText);\n            }\n        }\n        let resultReason;\n        let confidence;\n        if (serviceResult instanceof Exports_js_3.TranslationPhrase) {\n            if (!!serviceResult.Translation && serviceResult.Translation.TranslationStatus === Exports_js_1.TranslationStatus.Success) {\n                resultReason = Exports_js_2.ResultReason.TranslatedSpeech;\n            }\n            else {\n                resultReason = Exports_js_2.ResultReason.RecognizedSpeech;\n            }\n            confidence = serviceResult.Confidence;\n        }\n        else {\n            resultReason = Exports_js_2.ResultReason.TranslatingSpeech;\n        }\n        const language = serviceResult.Language;\n        const result = new Exports_js_2.TranslationRecognitionResult(translations, this.privRequestSession.requestId, resultReason, serviceResult.Text, serviceResult.Duration, serviceResult.Offset, language, confidence, serviceResult.Translation.FailureReason, serviceResult.asJson(), properties);\n        const ev = new Exports_js_2.TranslationRecognitionEventArgs(result, serviceResult.Offset, this.privRequestSession.sessionId);\n        return ev;\n    }\n    sendSynthesisAudio(audio, sessionId) {\n        const reason = (undefined === audio) ? Exports_js_2.ResultReason.SynthesizingAudioCompleted : Exports_js_2.ResultReason.SynthesizingAudio;\n        const result = new Exports_js_2.TranslationSynthesisResult(reason, audio);\n        const retEvent = new Exports_js_2.TranslationSynthesisEventArgs(result, sessionId);\n        if (!!this.privTranslationRecognizer.synthesizing) {\n            try {\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                /* eslint-disable no-empty */\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.TranslationServiceRecognizer = TranslationServiceRecognizer;\n\n//# sourceMappingURL=TranslationServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechDetected = void 0;\nclass SpeechDetected {\n    constructor(json, baseOffset) {\n        this.privSpeechStartDetected = JSON.parse(json);\n        this.privSpeechStartDetected.Offset += baseOffset;\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechDetected(json, baseOffset);\n    }\n    get Offset() {\n        return this.privSpeechStartDetected.Offset;\n    }\n}\nexports.SpeechDetected = SpeechDetected;\n\n//# sourceMappingURL=SpeechDetected.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechHypothesis = void 0;\nclass SpeechHypothesis {\n    constructor(json, baseOffset) {\n        this.privSpeechHypothesis = JSON.parse(json);\n        this.updateOffset(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechHypothesis(json, baseOffset);\n    }\n    updateOffset(baseOffset) {\n        this.privSpeechHypothesis.Offset += baseOffset;\n    }\n    asJson() {\n        return JSON.stringify(this.privSpeechHypothesis);\n    }\n    get Text() {\n        return this.privSpeechHypothesis.Text;\n    }\n    get Offset() {\n        return this.privSpeechHypothesis.Offset;\n    }\n    get Duration() {\n        return this.privSpeechHypothesis.Duration;\n    }\n    get Language() {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\n    }\n    get SpeakerId() {\n        return this.privSpeechHypothesis.SpeakerId;\n    }\n}\nexports.SpeechHypothesis = SpeechHypothesis;\n\n//# sourceMappingURL=SpeechHypothesis.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechKeyword = void 0;\nclass SpeechKeyword {\n    constructor(json, baseOffset) {\n        this.privSpeechKeyword = JSON.parse(json);\n        this.privSpeechKeyword.Offset += baseOffset;\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechKeyword(json, baseOffset);\n    }\n    get Status() {\n        return this.privSpeechKeyword.Status;\n    }\n    get Text() {\n        return this.privSpeechKeyword.Text;\n    }\n    get Offset() {\n        return this.privSpeechKeyword.Offset;\n    }\n    get Duration() {\n        return this.privSpeechKeyword.Duration;\n    }\n    asJson() {\n        return JSON.stringify(this.privSpeechKeyword);\n    }\n}\nexports.SpeechKeyword = SpeechKeyword;\n\n//# sourceMappingURL=SpeechKeyword.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass SpeechServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\n        this.privSpeechRecognizer = speechRecognizer;\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, hypothesis.asJson());\n                result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, undefined, // Speaker Id\n                undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_1.SpeechRecognitionEventArgs(result, hypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privSpeechRecognizer.recognizing) {\n                    try {\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, simple.asJson());\n                const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus, this.privExpectContentAssessmentResponse);\n                this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n                if (Exports_js_1.ResultReason.Canceled === resultReason) {\n                    const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    // Like the native SDK's, don't event / return an EndOfDictation message.\n                    if (simple.RecognitionStatus === Exports_js_2.RecognitionStatus.EndOfDictation) {\n                        break;\n                    }\n                    if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                        result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, undefined, // Speaker Id\n                        undefined, simple.asJson(), resultProps);\n                    }\n                    else {\n                        const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, detailed.asJson());\n                        result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === Exports_js_2.RecognitionStatus.Success ? detailed.NBest[0].Display : \"\", detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, undefined, // Speaker Id\n                        undefined, detailed.asJson(), resultProps);\n                    }\n                    const event = new Exports_js_1.SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                    if (!!this.privSpeechRecognizer.recognized) {\n                        try {\n                            this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    if (!!this.privSuccessCallback) {\n                        try {\n                            this.privSuccessCallback(result);\n                        }\n                        catch (e) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        this.privSuccessCallback = undefined;\n                        this.privErrorCallback = undefined;\n                    }\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_1.PropertyCollection();\n        properties.setProperty(Exports_js_2.CancellationErrorCodePropertyName, Exports_js_1.CancellationErrorCode[errorCode]);\n        if (!!this.privSpeechRecognizer.canceled) {\n            const cancelEvent = new Exports_js_1.SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_1.SpeechRecognitionResult(requestId, Exports_js_1.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // Language Detection Confidence\n            undefined, // Speaker Id\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.SpeechServiceRecognizer = SpeechServiceRecognizer;\n\n//# sourceMappingURL=SpeechServiceRecognizer.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityProvider = exports.SpeakerDiarizationMode = void 0;\n/**\n * The speaker diarization mode\n */\nvar SpeakerDiarizationMode;\n(function (SpeakerDiarizationMode) {\n    SpeakerDiarizationMode[\"None\"] = \"None\";\n    SpeakerDiarizationMode[\"Identity\"] = \"Identity\";\n    SpeakerDiarizationMode[\"Anonymous\"] = \"Anonymous\";\n})(SpeakerDiarizationMode = exports.SpeakerDiarizationMode || (exports.SpeakerDiarizationMode = {}));\n/**\n * The identity provider\n */\nvar IdentityProvider;\n(function (IdentityProvider) {\n    IdentityProvider[\"CallCenter\"] = \"CallCenter\";\n})(IdentityProvider = exports.IdentityProvider || (exports.IdentityProvider = {}));\n\n//# sourceMappingURL=SpeakerDiarization.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranscriptionServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nconst SpeakerDiarization_js_1 = require(\"./ServiceMessages/PhraseDetection/SpeakerDiarization.js\");\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\n// eslint-disable-next-line max-classes-per-file\nclass ConversationTranscriptionServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, conversationTranscriber) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationTranscriber);\n        this.privConversationTranscriber = conversationTranscriber;\n        this.setSpeakerDiarizationJson();\n    }\n    setSpeakerDiarizationJson() {\n        if (this.privEnableSpeakerId) {\n            const phraseDetection = this.privSpeechContext.getContext().phraseDetection || {};\n            phraseDetection.mode = PhraseDetectionContext_js_1.RecognitionMode.Conversation;\n            const speakerDiarization = {};\n            speakerDiarization.mode = SpeakerDiarization_js_1.SpeakerDiarizationMode.Anonymous;\n            speakerDiarization.audioSessionId = this.privDiarizationSessionId;\n            speakerDiarization.audioOffsetMs = 0;\n            speakerDiarization.diarizeIntermediates = this.privRecognizerConfig.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_DiarizeIntermediateResults, \"false\") === \"true\";\n            phraseDetection.speakerDiarization = speakerDiarization;\n            this.privSpeechContext.getContext().phraseDetection = phraseDetection;\n        }\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, hypothesis.SpeakerId, undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_1.ConversationTranscriptionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\n                if (!!this.privConversationTranscriber.transcribing) {\n                    try {\n                        this.privConversationTranscriber.transcribing(this.privConversationTranscriber, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n                this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n                if (Exports_js_1.ResultReason.Canceled === resultReason) {\n                    const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === Exports_js_1.ResultReason.NoMatch && simple.RecognitionStatus !== Exports_js_2.RecognitionStatus.InitialSilenceTimeout)) {\n                        if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                            result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, simple.SpeakerId, undefined, simple.asJson(), resultProps);\n                        }\n                        else {\n                            const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                            result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === Exports_js_2.RecognitionStatus.Success ? detailed.NBest[0].Display : undefined, detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, simple.SpeakerId, undefined, detailed.asJson(), resultProps);\n                        }\n                        const event = new Exports_js_1.ConversationTranscriptionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                        if (!!this.privConversationTranscriber.transcribed) {\n                            try {\n                                this.privConversationTranscriber.transcribed(this.privConversationTranscriber, event);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                    }\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_1.PropertyCollection();\n        properties.setProperty(Exports_js_2.CancellationErrorCodePropertyName, Exports_js_1.CancellationErrorCode[errorCode]);\n        if (!!this.privConversationTranscriber.canceled) {\n            const cancelEvent = new Exports_js_1.ConversationTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privConversationTranscriber.canceled(this.privConversationTranscriber, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.ConversationTranscriptionServiceRecognizer = ConversationTranscriptionServiceRecognizer;\n\n//# sourceMappingURL=ConversationTranscriptionServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranscriptionServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass TranscriptionServiceRecognizer extends Exports_js_3.ConversationServiceRecognizer {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, transcriber) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, transcriber);\n        this.privTranscriberRecognizer = transcriber;\n        this.sendPrePayloadJSONOverride = (connection) => this.sendTranscriptionStartJSON(connection);\n        if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps) === \"true\") {\n            this.privSpeechContext.setWordLevelTimings();\n        }\n    }\n    async sendSpeechEventAsync(info, command) {\n        if (!!this.privRequestSession.isRecognizing) {\n            const connection = await this.fetchConnection();\n            await this.sendSpeechEvent(connection, this.createSpeechEventPayload(info, command));\n        }\n    }\n    async sendMeetingSpeechEventAsync(info, command) {\n        if (!!this.privRequestSession.isRecognizing) {\n            const connection = await this.fetchConnection();\n            await this.sendSpeechEvent(connection, this.createMeetingSpeechEventPayload(info, command));\n        }\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        return this.processSpeechMessages(connectionMessage);\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        try {\n            const event = new Exports_js_2.SpeechRecognitionEventArgs(result, offset, sessionId);\n            this.privTranscriberRecognizer.recognized(this.privTranscriberRecognizer, event);\n            if (!!this.privSuccessCallback) {\n                try {\n                    this.privSuccessCallback(result);\n                }\n                catch (e) {\n                    if (!!this.privErrorCallback) {\n                        this.privErrorCallback(e);\n                    }\n                }\n                // Only invoke the call back once.\n                // and if it's successful don't invoke the\n                // error after that.\n                this.privSuccessCallback = undefined;\n                this.privErrorCallback = undefined;\n            }\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    handleRecognizingCallback(result, duration, sessionId) {\n        try {\n            const ev = new Exports_js_2.SpeechRecognitionEventArgs(result, duration, sessionId);\n            this.privTranscriberRecognizer.recognizing(this.privTranscriberRecognizer, ev);\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (this.privTranscriberRecognizer.IsMeetingRecognizer()) {\n            if (!!this.privTranscriberRecognizer.canceled) {\n                const cancelEvent = new Exports_js_2.MeetingTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n                try {\n                    this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n        else {\n            if (!!this.privTranscriberRecognizer.canceled) {\n                const cancelEvent = new Exports_js_2.ConversationTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n                try {\n                    this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.SpeechRecognitionResult(requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // Language Detection Confidence\n            undefined, // Speaker Id\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    // Encapsulated for derived service recognizers that need to send additional JSON\n    async sendTranscriptionStartJSON(connection) {\n        await this.sendSpeechContext(connection, true);\n        if (this.privTranscriberRecognizer.IsMeetingRecognizer()) {\n            const info = this.privTranscriberRecognizer.getMeetingInfo();\n            const payload = this.createMeetingSpeechEventPayload(info, \"start\");\n            await this.sendSpeechEvent(connection, payload);\n        }\n        else {\n            const info = this.privTranscriberRecognizer.getConversationInfo();\n            const payload = this.createSpeechEventPayload(info, \"start\");\n            await this.sendSpeechEvent(connection, payload);\n        }\n        await this.sendWaveHeader(connection);\n        return;\n    }\n    sendSpeechEvent(connection, payload) {\n        const speechEventJson = JSON.stringify(payload);\n        if (speechEventJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"speech.event\", this.privRequestSession.requestId, \"application/json\", speechEventJson));\n        }\n        return;\n    }\n    createSpeechEventPayload(info, command) {\n        const eventDict = { id: \"meeting\", name: command, meeting: info.conversationProperties };\n        eventDict.meeting.id = info.id;\n        eventDict.meeting.attendees = info.participants;\n        return eventDict;\n    }\n    createMeetingSpeechEventPayload(info, command) {\n        const eventDict = { id: \"meeting\", name: command, meeting: info.meetingProperties };\n        eventDict.meeting.id = info.id;\n        eventDict.meeting.attendees = info.participants;\n        return eventDict;\n    }\n}\nexports.TranscriptionServiceRecognizer = TranscriptionServiceRecognizer;\n\n//# sourceMappingURL=TranscriptionServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailedSpeechPhrase = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass DetailedSpeechPhrase {\n    constructor(json, baseOffset) {\n        this.privDetailedSpeechPhrase = JSON.parse(json);\n        this.privDetailedSpeechPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privDetailedSpeechPhrase.RecognitionStatus);\n        this.updateOffsets(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new DetailedSpeechPhrase(json, baseOffset);\n    }\n    updateOffsets(baseOffset) {\n        this.privDetailedSpeechPhrase.Offset += baseOffset;\n        if (!!this.privDetailedSpeechPhrase.NBest) {\n            for (const phrase of this.privDetailedSpeechPhrase.NBest) {\n                if (!!phrase.Words) {\n                    for (const word of phrase.Words) {\n                        word.Offset += baseOffset;\n                    }\n                }\n                if (!!phrase.DisplayWords) {\n                    for (const word of phrase.DisplayWords) {\n                        word.Offset += baseOffset;\n                    }\n                }\n            }\n        }\n    }\n    asJson() {\n        const jsonObj = { ...this.privDetailedSpeechPhrase };\n        // Convert the enum value to its string representation for serialization purposes.\n        return JSON.stringify({\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        });\n    }\n    get RecognitionStatus() {\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\n    }\n    get NBest() {\n        return this.privDetailedSpeechPhrase.NBest;\n    }\n    get Duration() {\n        return this.privDetailedSpeechPhrase.Duration;\n    }\n    get Offset() {\n        return this.privDetailedSpeechPhrase.Offset;\n    }\n    get Language() {\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\n    }\n    get Text() {\n        if (!!this.privDetailedSpeechPhrase.NBest && this.privDetailedSpeechPhrase.NBest[0]) {\n            return this.privDetailedSpeechPhrase.NBest[0].Display || this.privDetailedSpeechPhrase.NBest[0].DisplayText;\n        }\n        return this.privDetailedSpeechPhrase.DisplayText;\n    }\n    get SpeakerId() {\n        return this.privDetailedSpeechPhrase.SpeakerId;\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.DetailedSpeechPhrase = DetailedSpeechPhrase;\n\n//# sourceMappingURL=DetailedSpeechPhrase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleSpeechPhrase = void 0;\nconst Exports_js_1 = require(\"../Exports.js\");\nclass SimpleSpeechPhrase {\n    constructor(json, baseOffset = 0) {\n        this.privSimpleSpeechPhrase = JSON.parse(json);\n        this.privSimpleSpeechPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privSimpleSpeechPhrase.RecognitionStatus); // RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\n        this.updateOffset(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new SimpleSpeechPhrase(json, baseOffset);\n    }\n    updateOffset(baseOffset) {\n        this.privSimpleSpeechPhrase.Offset += baseOffset;\n    }\n    asJson() {\n        const jsonObj = { ...this.privSimpleSpeechPhrase };\n        // Convert the enum value to its string representation for serialization purposes.\n        return JSON.stringify({\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        });\n    }\n    get RecognitionStatus() {\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\n    }\n    get DisplayText() {\n        return this.privSimpleSpeechPhrase.DisplayText;\n    }\n    get Offset() {\n        return this.privSimpleSpeechPhrase.Offset;\n    }\n    get Duration() {\n        return this.privSimpleSpeechPhrase.Duration;\n    }\n    get Language() {\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\n    }\n    get SpeakerId() {\n        return this.privSimpleSpeechPhrase.SpeakerId;\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.SimpleSpeechPhrase = SimpleSpeechPhrase;\n\n//# sourceMappingURL=SimpleSpeechPhrase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddedLmIntent = void 0;\n/**\n * @class AddedLmIntent\n */\n// eslint-disable-next-line max-classes-per-file\nclass AddedLmIntent {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param modelImpl - The model.\n     * @param intentName - The intent name.\n     */\n    constructor(modelImpl, intentName) {\n        this.modelImpl = modelImpl;\n        this.intentName = intentName;\n    }\n}\nexports.AddedLmIntent = AddedLmIntent;\n\n//# sourceMappingURL=AddedLmIntent.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass IntentServiceRecognizer extends Exports_js_3.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privIntentRecognizer = recognizer;\n        this.privIntentDataSent = false;\n        recognizerConfig.recognitionEndpointVersion = \"1\";\n    }\n    setIntents(addedIntents, umbrellaIntent) {\n        this.privAddedLmIntents = addedIntents;\n        this.privUmbrellaIntent = umbrellaIntent;\n        this.privIntentDataSent = true;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let result;\n        let ev;\n        let processed = false;\n        const resultProps = new Exports_js_2.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_1.MessageType.Text) {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n                const speechHypothesis = Exports_js_3.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_2.IntentRecognitionResult(undefined, this.privRequestSession.requestId, Exports_js_2.ResultReason.RecognizingIntent, speechHypothesis.Text, speechHypothesis.Duration, speechHypothesis.Offset, speechHypothesis.Language, speechHypothesis.LanguageDetectionConfidence, undefined, speechHypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(result.offset);\n                ev = new Exports_js_2.IntentRecognitionEventArgs(result, speechHypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privIntentRecognizer.recognizing) {\n                    try {\n                        this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_3.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_2.IntentRecognitionResult(undefined, this.privRequestSession.requestId, Exports_js_3.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus), simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, undefined, simple.asJson(), resultProps);\n                ev = new Exports_js_2.IntentRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                const sendEvent = () => {\n                    if (!!this.privIntentRecognizer.recognized) {\n                        try {\n                            this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    // report result to promise.\n                    if (!!this.privSuccessCallback) {\n                        try {\n                            this.privSuccessCallback(result);\n                        }\n                        catch (e) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        this.privSuccessCallback = undefined;\n                        this.privErrorCallback = undefined;\n                    }\n                };\n                // If intent data was sent, the terminal result for this recognizer is an intent being found.\n                // If no intent data was sent, the terminal event is speech recognition being successful.\n                if (false === this.privIntentDataSent || Exports_js_2.ResultReason.NoMatch === ev.result.reason) {\n                    // Advance the buffers.\n                    this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\n                    sendEvent();\n                }\n                else {\n                    // Squirrel away the args, when the response event arrives it will build upon them\n                    // and then return\n                    this.privPendingIntentArgs = ev;\n                }\n                processed = true;\n                break;\n            case \"response\":\n                // Response from LUIS\n                ev = this.privPendingIntentArgs;\n                this.privPendingIntentArgs = undefined;\n                if (undefined === ev) {\n                    if (\"\" === connectionMessage.textBody) {\n                        // This condition happens if there is nothing but silence in the\n                        // audio sent to the service.\n                        return;\n                    }\n                    // Odd... Not sure this can happen\n                    ev = new Exports_js_2.IntentRecognitionEventArgs(new Exports_js_2.IntentRecognitionResult(), 0, this.privRequestSession.sessionId);\n                }\n                const intentResponse = Exports_js_3.IntentResponse.fromJSON(connectionMessage.textBody);\n                // If LUIS didn't return anything, send the existing event, else\n                // modify it to show the match.\n                // See if the intent found is in the list of intents asked for.\n                if (null !== intentResponse && !!intentResponse.topScoringIntent && !!intentResponse.topScoringIntent.intent) {\n                    let addedIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\n                    if (this.privUmbrellaIntent !== undefined) {\n                        addedIntent = this.privUmbrellaIntent;\n                    }\n                    if (!!addedIntent) {\n                        const intentId = addedIntent === undefined || addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\n                        let reason = ev.result.reason;\n                        if (undefined !== intentId) {\n                            reason = Exports_js_2.ResultReason.RecognizedIntent;\n                        }\n                        // make sure, properties is set.\n                        const properties = (undefined !== ev.result.properties) ?\n                            ev.result.properties : new Exports_js_2.PropertyCollection();\n                        properties.setProperty(Exports_js_2.PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\n                        ev = new Exports_js_2.IntentRecognitionEventArgs(new Exports_js_2.IntentRecognitionResult(intentId, ev.result.resultId, reason, ev.result.text, ev.result.duration, ev.result.offset, undefined, undefined, ev.result.errorDetails, ev.result.json, properties), ev.offset, ev.sessionId);\n                    }\n                }\n                this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\n                if (!!this.privIntentRecognizer.recognized) {\n                    try {\n                        this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                // report result to promise.\n                if (!!this.privSuccessCallback) {\n                    try {\n                        this.privSuccessCallback(ev.result);\n                    }\n                    catch (e) {\n                        if (!!this.privErrorCallback) {\n                            this.privErrorCallback(e);\n                        }\n                    }\n                    // Only invoke the call back once.\n                    // and if it's successful don't invoke the\n                    // error after that.\n                    this.privSuccessCallback = undefined;\n                    this.privErrorCallback = undefined;\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_1.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (!!this.privIntentRecognizer.canceled) {\n            const cancelEvent = new Exports_js_2.IntentRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, undefined, sessionId);\n            try {\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.IntentRecognitionResult(undefined, // Intent Id\n            requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // LanguageDetectionConfidence\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.IntentServiceRecognizer = IntentServiceRecognizer;\n\n//# sourceMappingURL=IntentServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntentResponse = void 0;\nclass IntentResponse {\n    constructor(json) {\n        if (json === \"\") {\n            this.privIntentResponse = {};\n        }\n        else {\n            this.privIntentResponse = JSON.parse(json);\n        }\n    }\n    static fromJSON(json) {\n        return new IntentResponse(json);\n    }\n    get query() {\n        return this.privIntentResponse.query;\n    }\n    get topScoringIntent() {\n        return this.privIntentResponse.topScoringIntent;\n    }\n    get entities() {\n        return this.privIntentResponse.entities;\n    }\n}\nexports.IntentResponse = IntentResponse;\n\n//# sourceMappingURL=IntentResponse.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n//# sourceMappingURL=SpeakerResponse.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceTelemetryListener = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst RecognitionEvents_js_1 = require(\"./RecognitionEvents.js\");\nclass ServiceTelemetryListener {\n    constructor(requestId, audioSourceId, audioNodeId) {\n        this.privIsDisposed = false;\n        this.privListeningTriggerMetric = null;\n        this.privMicMetric = null;\n        this.privConnectionEstablishMetric = null;\n        this.privRequestId = requestId;\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privReceivedMessages = {};\n        this.privPhraseLatencies = [];\n        this.privHypothesisLatencies = [];\n    }\n    phraseReceived(audioReceivedTime) {\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\n        }\n    }\n    hypothesisReceived(audioReceivedTime) {\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\n        }\n    }\n    onEvent(e) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (e instanceof RecognitionEvents_js_1.RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\n            this.privListeningTriggerMetric = {\n                End: e.eventTime,\n                Name: \"ListeningTrigger\",\n                Start: e.eventTime,\n            };\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            this.privMicStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            this.privMicStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Error: e.error,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Error: e.error,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof RecognitionEvents_js_1.ConnectingToServiceEvent && e.requestId === this.privRequestId) {\n            this.privConnectionId = e.sessionId;\n        }\n        if (e instanceof Exports_js_1.ConnectionStartEvent && e.connectionId === this.privConnectionId) {\n            this.privConnectionStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\n            if (!this.privConnectionEstablishMetric) {\n                this.privConnectionEstablishMetric = {\n                    End: e.eventTime,\n                    Id: this.privConnectionId,\n                    Name: \"Connection\",\n                    Start: this.privConnectionStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\n            if (!this.privConnectionEstablishMetric) {\n                this.privConnectionEstablishMetric = {\n                    End: e.eventTime,\n                    Error: this.getConnectionError(e.statusCode),\n                    Id: this.privConnectionId,\n                    Name: \"Connection\",\n                    Start: this.privConnectionStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\n            if (e.message && e.message.headers && e.message.headers.path) {\n                if (!this.privReceivedMessages[e.message.headers.path]) {\n                    this.privReceivedMessages[e.message.headers.path] = new Array();\n                }\n                const maxMessagesToSend = 50;\n                if (this.privReceivedMessages[e.message.headers.path].length < maxMessagesToSend) {\n                    this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\n                }\n            }\n        }\n    }\n    getTelemetry() {\n        const metrics = new Array();\n        if (this.privListeningTriggerMetric) {\n            metrics.push(this.privListeningTriggerMetric);\n        }\n        if (this.privMicMetric) {\n            metrics.push(this.privMicMetric);\n        }\n        if (this.privConnectionEstablishMetric) {\n            metrics.push(this.privConnectionEstablishMetric);\n        }\n        if (this.privPhraseLatencies.length > 0) {\n            metrics.push({\n                PhraseLatencyMs: this.privPhraseLatencies,\n            });\n        }\n        if (this.privHypothesisLatencies.length > 0) {\n            metrics.push({\n                FirstHypothesisLatencyMs: this.privHypothesisLatencies,\n            });\n        }\n        const telemetry = {\n            Metrics: metrics,\n            ReceivedMessages: this.privReceivedMessages,\n        };\n        const json = JSON.stringify(telemetry);\n        // We dont want to send the same telemetry again. So clean those out.\n        this.privReceivedMessages = {};\n        this.privListeningTriggerMetric = null;\n        this.privMicMetric = null;\n        this.privConnectionEstablishMetric = null;\n        this.privPhraseLatencies = [];\n        this.privHypothesisLatencies = [];\n        return json;\n    }\n    // Determines if there are any telemetry events to send to the service.\n    get hasTelemetry() {\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\n            this.privListeningTriggerMetric !== null ||\n            this.privMicMetric !== null ||\n            this.privConnectionEstablishMetric !== null ||\n            this.privPhraseLatencies.length !== 0 ||\n            this.privHypothesisLatencies.length !== 0);\n    }\n    dispose() {\n        this.privIsDisposed = true;\n    }\n    getConnectionError(statusCode) {\n        /*\n        -- Websocket status codes --\n        NormalClosure = 1000,\n        EndpointUnavailable = 1001,\n        ProtocolError = 1002,\n        InvalidMessageType = 1003,\n        Empty = 1005,\n        InvalidPayloadData = 1007,\n        PolicyViolation = 1008,\n        MessageTooBig = 1009,\n        MandatoryExtension = 1010,\n        InternalServerError = 1011\n        */\n        switch (statusCode) {\n            case 400:\n            case 1002:\n            case 1003:\n            case 1005:\n            case 1007:\n            case 1008:\n            case 1009: return \"BadRequest\";\n            case 401: return \"Unauthorized\";\n            case 403: return \"Forbidden\";\n            case 503:\n            case 1001: return \"ServerUnavailable\";\n            case 500:\n            case 1011: return \"ServerError\";\n            case 408:\n            case 504: return \"Timeout\";\n            default: return \"statuscode:\" + statusCode.toString();\n        }\n    }\n}\nexports.ServiceTelemetryListener = ServiceTelemetryListener;\n\n//# sourceMappingURL=ServiceTelemetryListener.Internal.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestSession = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst RecognitionEvents_js_1 = require(\"./RecognitionEvents.js\");\nconst ServiceTelemetryListener_Internal_js_1 = require(\"./ServiceTelemetryListener.Internal.js\");\nclass RequestSession {\n    constructor(audioSourceId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privIsAudioNodeDetached = false;\n        this.privIsRecognizing = false;\n        this.privIsSpeechEnded = false;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privHypothesisReceived = false;\n        this.privBytesSent = 0;\n        this.privRecognitionBytesSent = 0;\n        this.privRecogNumber = 0;\n        this.privInTurn = false;\n        this.privConnectionAttempts = 0;\n        this.privAudioSourceId = audioSourceId;\n        this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n        this.privAudioNodeId = (0, Exports_js_1.createNoDashGuid)();\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        // We're not in a turn, so resolve.\n        this.privTurnDeferral.resolve();\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get turnCompletionPromise() {\n        return this.privTurnDeferral.promise;\n    }\n    get isSpeechEnded() {\n        return this.privIsSpeechEnded;\n    }\n    get isRecognizing() {\n        return this.privIsRecognizing;\n    }\n    get currentTurnAudioOffset() {\n        return this.privTurnStartAudioOffset;\n    }\n    get recogNumber() {\n        return this.privRecogNumber;\n    }\n    get numConnectionAttempts() {\n        return this.privConnectionAttempts;\n    }\n    // The number of bytes sent for the current connection.\n    // Counter is reset to 0 each time a connection is established.\n    get bytesSent() {\n        return this.privBytesSent;\n    }\n    // The number of bytes sent for the current recognition.\n    // Counter is reset to 0 each time recognition is started.\n    get recognitionBytesSent() {\n        return this.privRecognitionBytesSent;\n    }\n    listenForServiceTelemetry(eventSource) {\n        if (!!this.privServiceTelemetryListener) {\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\n        }\n    }\n    startNewRecognition() {\n        this.privRecognitionBytesSent = 0;\n        this.privIsSpeechEnded = false;\n        this.privIsRecognizing = true;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privRecogNumber++;\n        this.privServiceTelemetryListener = new ServiceTelemetryListener_Internal_js_1.ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\n        this.onEvent(new RecognitionEvents_js_1.RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n    }\n    async onAudioSourceAttachCompleted(audioNode, isError) {\n        this.privAudioNode = audioNode;\n        this.privIsAudioNodeDetached = false;\n        if (isError) {\n            await this.onComplete();\n        }\n        else {\n            this.onEvent(new RecognitionEvents_js_1.ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n        }\n    }\n    onPreConnectionStart(authFetchEventId, connectionId) {\n        this.privAuthFetchEventId = authFetchEventId;\n        this.privSessionId = connectionId;\n        this.onEvent(new RecognitionEvents_js_1.ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\n    }\n    async onAuthCompleted(isError) {\n        if (isError) {\n            await this.onComplete();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async onConnectionEstablishCompleted(statusCode, reason) {\n        if (statusCode === 200) {\n            this.onEvent(new RecognitionEvents_js_1.RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\n            if (!!this.privAudioNode) {\n                this.privAudioNode.replay();\n            }\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\n            this.privBytesSent = 0;\n            return;\n        }\n        else if (statusCode === 403) {\n            await this.onComplete();\n        }\n    }\n    async onServiceTurnEndResponse(continuousRecognition) {\n        this.privTurnDeferral.resolve();\n        if (!continuousRecognition || this.isSpeechEnded) {\n            await this.onComplete();\n            this.privInTurn = false;\n        }\n        else {\n            // Start a new request set.\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\n            this.privAudioNode.replay();\n        }\n    }\n    onSpeechContext() {\n        this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n    }\n    onServiceTurnStartResponse() {\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\n            // What? How are we starting a turn with another not done?\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            this.privTurnDeferral.promise.then().catch(() => { });\n        }\n        this.privInTurn = true;\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n    }\n    onHypothesis(offset) {\n        if (!this.privHypothesisReceived) {\n            this.privHypothesisReceived = true;\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\n        }\n    }\n    onPhraseRecognized(offset) {\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\n        this.onServiceRecognized(offset);\n    }\n    onServiceRecognized(offset) {\n        this.privLastRecoOffset = offset;\n        this.privHypothesisReceived = false;\n        this.privAudioNode.shrinkBuffers(offset);\n        this.privConnectionAttempts = 0;\n    }\n    onAudioSent(bytesSent) {\n        this.privBytesSent += bytesSent;\n        this.privRecognitionBytesSent += bytesSent;\n    }\n    onRetryConnection() {\n        this.privConnectionAttempts++;\n    }\n    async dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n            if (!!this.privServiceTelemetryListener) {\n                this.privServiceTelemetryListener.dispose();\n            }\n            this.privIsRecognizing = false;\n        }\n    }\n    getTelemetry() {\n        if (this.privServiceTelemetryListener.hasTelemetry) {\n            return this.privServiceTelemetryListener.getTelemetry();\n        }\n        else {\n            return null;\n        }\n    }\n    async onStopRecognizing() {\n        await this.onComplete();\n    }\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\n    onSpeechEnded() {\n        this.privIsSpeechEnded = true;\n    }\n    onEvent(event) {\n        if (!!this.privServiceTelemetryListener) {\n            this.privServiceTelemetryListener.onEvent(event);\n        }\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    async onComplete() {\n        if (!!this.privIsRecognizing) {\n            this.privIsRecognizing = false;\n            await this.detachAudioNode();\n        }\n    }\n    async detachAudioNode() {\n        if (!this.privIsAudioNodeDetached) {\n            this.privIsAudioNodeDetached = true;\n            if (this.privAudioNode) {\n                await this.privAudioNode.detach();\n            }\n        }\n    }\n}\nexports.RequestSession = RequestSession;\n\n//# sourceMappingURL=RequestSession.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TentativePhraseResultsOption = exports.OutputFormat = exports.PhraseExtension = exports.PhraseOption = void 0;\n/**\n * The detailed output options.\n */\nvar PhraseOption;\n(function (PhraseOption) {\n    PhraseOption[\"WordTimings\"] = \"WordTimings\";\n    PhraseOption[\"SNR\"] = \"SNR\";\n    PhraseOption[\"Pronunciation\"] = \"Pronunciation\";\n    PhraseOption[\"WordPronunciation\"] = \"WordPronunciation\";\n    PhraseOption[\"WordConfidence\"] = \"WordConfidence\";\n    PhraseOption[\"Words\"] = \"Words\";\n    PhraseOption[\"Sentiment\"] = \"Sentiment\";\n    PhraseOption[\"PronunciationAssessment\"] = \"PronunciationAssessment\";\n    PhraseOption[\"ContentAssessment\"] = \"ContentAssessment\";\n    PhraseOption[\"PhraseAMScore\"] = \"PhraseAMScore\";\n    PhraseOption[\"PhraseLMScore\"] = \"PhraseLMScore\";\n    PhraseOption[\"WordAMScore\"] = \"WordAMScore\";\n    PhraseOption[\"WordLMScore\"] = \"WordLMScore\";\n    PhraseOption[\"RuleTree\"] = \"RuleTree\";\n    PhraseOption[\"NBestTimings\"] = \"NBestTimings\";\n    PhraseOption[\"DecoderDiagnostics\"] = \"DecoderDiagnostics\";\n    PhraseOption[\"DisplayWordTimings\"] = \"DisplayWordTimings\";\n    PhraseOption[\"DisplayWords\"] = \"DisplayWords\";\n})(PhraseOption = exports.PhraseOption || (exports.PhraseOption = {}));\n/**\n * The detailed output extensions.\n */\nvar PhraseExtension;\n(function (PhraseExtension) {\n    PhraseExtension[\"Graph\"] = \"Graph\";\n    PhraseExtension[\"Corrections\"] = \"Corrections\";\n    PhraseExtension[\"Sentiment\"] = \"Sentiment\";\n})(PhraseExtension = exports.PhraseExtension || (exports.PhraseExtension = {}));\n/**\n * The Recognition modes\n */\nvar OutputFormat;\n(function (OutputFormat) {\n    OutputFormat[\"Simple\"] = \"Simple\";\n    OutputFormat[\"Detailed\"] = \"Detailed\";\n})(OutputFormat = exports.OutputFormat || (exports.OutputFormat = {}));\n/**\n * The Tentative Phrase Results option\n */\nvar TentativePhraseResultsOption;\n(function (TentativePhraseResultsOption) {\n    TentativePhraseResultsOption[\"None\"] = \"None\";\n    TentativePhraseResultsOption[\"Always\"] = \"Always\";\n})(TentativePhraseResultsOption = exports.TentativePhraseResultsOption || (exports.TentativePhraseResultsOption = {}));\n\n//# sourceMappingURL=PhraseOutput.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechContext = void 0;\nconst PhraseDetectionContext_js_1 = require(\"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nconst PhraseOutput_js_1 = require(\"./ServiceMessages/PhraseOutput/PhraseOutput.js\");\n/**\n * Represents the JSON used in the speech.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nclass SpeechContext {\n    constructor(dynamicGrammar) {\n        this.privContext = {};\n        this.privDynamicGrammar = dynamicGrammar;\n    }\n    getContext() {\n        return this.privContext;\n    }\n    /**\n     * @Internal\n     * This is only used by pronunciation assessment config.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    setPronunciationAssessmentParams(params, contentAssessmentTopic, isSpeakerDiarizationEnabled = false) {\n        if (this.privContext.phraseDetection === undefined) {\n            this.privContext.phraseDetection = {\n                enrichment: {\n                    pronunciationAssessment: {}\n                }\n            };\n        }\n        if (this.privContext.phraseDetection.enrichment === undefined) {\n            this.privContext.phraseDetection.enrichment = {\n                pronunciationAssessment: {}\n            };\n        }\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params) || {};\n        if (isSpeakerDiarizationEnabled) {\n            this.privContext.phraseDetection.mode = PhraseDetectionContext_js_1.RecognitionMode.Conversation;\n        }\n        this.setWordLevelTimings();\n        this.privContext.phraseOutput.detailed.options.push(PhraseOutput_js_1.PhraseOption.PronunciationAssessment);\n        if (this.privContext.phraseOutput.detailed.options.indexOf(PhraseOutput_js_1.PhraseOption.SNR) === -1) {\n            this.privContext.phraseOutput.detailed.options.push(PhraseOutput_js_1.PhraseOption.SNR);\n        }\n        if (!!contentAssessmentTopic) {\n            this.privContext.phraseDetection.enrichment.contentAssessment = {\n                topic: contentAssessmentTopic\n            };\n            this.privContext.phraseOutput.detailed.options.push(PhraseOutput_js_1.PhraseOption.ContentAssessment);\n        }\n    }\n    setDetailedOutputFormat() {\n        if (this.privContext.phraseOutput === undefined) {\n            this.privContext.phraseOutput = {\n                detailed: {\n                    options: []\n                }\n            };\n        }\n        if (this.privContext.phraseOutput.detailed === undefined) {\n            this.privContext.phraseOutput.detailed = {\n                options: []\n            };\n        }\n        this.privContext.phraseOutput.format = PhraseOutput_js_1.OutputFormat.Detailed;\n    }\n    setWordLevelTimings() {\n        if (this.privContext.phraseOutput === undefined) {\n            this.privContext.phraseOutput = {\n                detailed: {\n                    options: []\n                }\n            };\n        }\n        if (this.privContext.phraseOutput.detailed === undefined) {\n            this.privContext.phraseOutput.detailed = {\n                options: []\n            };\n        }\n        this.privContext.phraseOutput.format = PhraseOutput_js_1.OutputFormat.Detailed;\n        if (this.privContext.phraseOutput.detailed.options.indexOf(PhraseOutput_js_1.PhraseOption.WordTimings) === -1) {\n            this.privContext.phraseOutput.detailed.options.push(PhraseOutput_js_1.PhraseOption.WordTimings);\n        }\n    }\n    setSpeakerDiarizationAudioOffsetMs(audioOffsetMs) {\n        this.privContext.phraseDetection.speakerDiarization.audioOffsetMs = audioOffsetMs;\n    }\n    toJSON() {\n        const dgi = this.privDynamicGrammar.generateGrammarObject();\n        this.privContext.dgi = dgi;\n        const ret = JSON.stringify(this.privContext);\n        return ret;\n    }\n}\nexports.SpeechContext = SpeechContext;\n\n//# sourceMappingURL=SpeechContext.js.map\n","\"use strict\";\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubstringMatchType = exports.GroupType = void 0;\n/**\n * Represents the type of the Intent.\n */\nvar GroupType;\n(function (GroupType) {\n    GroupType[\"IntentText\"] = \"IntentText\";\n    GroupType[\"IntentEntity\"] = \"IntentEntity\";\n    GroupType[\"Generic\"] = \"Generic\";\n    GroupType[\"People\"] = \"People\";\n    GroupType[\"Place\"] = \"Place\";\n    GroupType[\"DynamicEntity\"] = \"DynamicEntity\";\n})(GroupType = exports.GroupType || (exports.GroupType = {}));\n/**\n * Represents the type of the substring match.\n */\nvar SubstringMatchType;\n(function (SubstringMatchType) {\n    SubstringMatchType[\"None\"] = \"None\";\n    SubstringMatchType[\"LeftRooted\"] = \"LeftRooted\";\n    SubstringMatchType[\"PartialName\"] = \"PartialName\";\n    SubstringMatchType[\"MiddleOfSentence\"] = \"MiddleOfSentence\";\n})(SubstringMatchType = exports.SubstringMatchType || (exports.SubstringMatchType = {}));\n\n//# sourceMappingURL=Group.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DynamicGrammarBuilder = void 0;\nconst Group_js_1 = require(\"./ServiceMessages/Dgi/Group.js\");\n/**\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\n * @class DynamicGrammarBuilder\n */\nclass DynamicGrammarBuilder {\n    constructor() {\n        this.privWeight = 1.0;\n    }\n    // Adds one more reference phrases to the dynamic grammar to send.\n    // All added phrases are generic phrases.\n    addPhrase(phrase) {\n        if (!this.privPhrases) {\n            this.privPhrases = [];\n        }\n        if (phrase instanceof Array) {\n            this.privPhrases = this.privPhrases.concat(phrase);\n        }\n        else {\n            this.privPhrases.push(phrase);\n        }\n    }\n    // Clears all phrases stored in the current object.\n    clearPhrases() {\n        this.privPhrases = undefined;\n    }\n    // Adds one or more reference grammars to the current grammar.\n    addReferenceGrammar(grammar) {\n        if (!this.privGrammars) {\n            this.privGrammars = [];\n        }\n        if (grammar instanceof Array) {\n            this.privGrammars = this.privGrammars.concat(grammar);\n        }\n        else {\n            this.privGrammars.push(grammar);\n        }\n    }\n    // clears all grammars stored on the recognizer.\n    clearGrammars() {\n        this.privGrammars = undefined;\n    }\n    // Sets the weight for the dynamic grammar.\n    setWeight(weight) {\n        this.privWeight = weight;\n    }\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\n    // of a DynamicGrammarBuilder\n    generateGrammarObject() {\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\n            return undefined;\n        }\n        const retObj = {};\n        retObj.referenceGrammars = this.privGrammars;\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\n            const retPhrases = [];\n            this.privPhrases.forEach((value) => {\n                retPhrases.push({\n                    text: value,\n                });\n            });\n            retObj.groups = [{ type: Group_js_1.GroupType.Generic, items: retPhrases }];\n            retObj.bias = this.privWeight;\n        }\n        return retObj;\n    }\n}\nexports.DynamicGrammarBuilder = DynamicGrammarBuilder;\n\n//# sourceMappingURL=DynamicGrammarBuilder.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageDataStreamType = exports.ActivityPayloadResponse = void 0;\nclass ActivityPayloadResponse {\n    constructor(json) {\n        this.privActivityResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new ActivityPayloadResponse(json);\n    }\n    get conversationId() {\n        return this.privActivityResponse.conversationId;\n    }\n    get messageDataStreamType() {\n        return this.privActivityResponse.messageDataStreamType;\n    }\n    get messagePayload() {\n        return this.privActivityResponse.messagePayload;\n    }\n    get version() {\n        return this.privActivityResponse.version;\n    }\n}\nexports.ActivityPayloadResponse = ActivityPayloadResponse;\nvar MessageDataStreamType;\n(function (MessageDataStreamType) {\n    MessageDataStreamType[MessageDataStreamType[\"None\"] = 0] = \"None\";\n    MessageDataStreamType[MessageDataStreamType[\"TextToSpeechAudio\"] = 1] = \"TextToSpeechAudio\";\n})(MessageDataStreamType = exports.MessageDataStreamType || (exports.MessageDataStreamType = {}));\n\n//# sourceMappingURL=ActivityResponsePayload.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceTurnState = void 0;\nconst AudioOutputFormat_js_1 = require(\"../sdk/Audio/AudioOutputFormat.js\");\nconst AudioOutputStream_js_1 = require(\"../sdk/Audio/AudioOutputStream.js\");\nconst ActivityResponsePayload_js_1 = require(\"./ServiceMessages/ActivityResponsePayload.js\");\nclass DialogServiceTurnState {\n    constructor(manager, requestId) {\n        this.privRequestId = requestId;\n        this.privIsCompleted = false;\n        this.privAudioStream = null;\n        this.privTurnManager = manager;\n        this.resetTurnEndTimeout();\n    }\n    get audioStream() {\n        // Called when is needed to stream.\n        this.resetTurnEndTimeout();\n        return this.privAudioStream;\n    }\n    processActivityPayload(payload, audioFormat) {\n        if (payload.messageDataStreamType === ActivityResponsePayload_js_1.MessageDataStreamType.TextToSpeechAudio) {\n            this.privAudioStream = AudioOutputStream_js_1.AudioOutputStream.createPullStream();\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormat_js_1.AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        return this.privAudioStream;\n    }\n    endAudioStream() {\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\n            this.privAudioStream.close();\n        }\n    }\n    complete() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.endAudioStream();\n    }\n    resetTurnEndTimeout() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.privTimeoutToken = setTimeout(() => {\n            this.privTurnManager.CompleteTurn(this.privRequestId);\n            return;\n        }, 2000);\n    }\n}\nexports.DialogServiceTurnState = DialogServiceTurnState;\n\n//# sourceMappingURL=DialogServiceTurnState.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceTurnStateManager = void 0;\nconst Error_js_1 = require(\"../common/Error.js\");\nconst DialogServiceTurnState_js_1 = require(\"./DialogServiceTurnState.js\");\nclass DialogServiceTurnStateManager {\n    constructor() {\n        this.privTurnMap = new Map();\n        return;\n    }\n    StartTurn(id) {\n        if (this.privTurnMap.has(id)) {\n            throw new Error_js_1.InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n        }\n        const turnState = new DialogServiceTurnState_js_1.DialogServiceTurnState(this, id);\n        this.privTurnMap.set(id, turnState);\n        return this.privTurnMap.get(id);\n    }\n    GetTurn(id) {\n        return this.privTurnMap.get(id);\n    }\n    CompleteTurn(id) {\n        if (!this.privTurnMap.has(id)) {\n            throw new Error_js_1.InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n        }\n        const turnState = this.privTurnMap.get(id);\n        turnState.complete();\n        this.privTurnMap.delete(id);\n        return turnState;\n    }\n}\nexports.DialogServiceTurnStateManager = DialogServiceTurnStateManager;\n\n//# sourceMappingURL=DialogServiceTurnStateManager.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvocationSource = void 0;\n/**\n * Represents the source of speech recognition invocation.\n */\nvar InvocationSource;\n(function (InvocationSource) {\n    /**\n     * No invocation source specified.\n     */\n    InvocationSource[\"None\"] = \"None\";\n    /**\n     * Voice activation with a keyword.\n     */\n    InvocationSource[\"VoiceActivationWithKeyword\"] = \"VoiceActivationWithKeyword\";\n})(InvocationSource = exports.InvocationSource || (exports.InvocationSource = {}));\n\n//# sourceMappingURL=InvocationSource.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OnRejectAction = exports.KeywordDetectionType = void 0;\n/**\n * Represents the type of keyword detection.\n */\nvar KeywordDetectionType;\n(function (KeywordDetectionType) {\n    /**\n     * Triggered at the start of input.\n     */\n    KeywordDetectionType[\"StartTrigger\"] = \"StartTrigger\";\n})(KeywordDetectionType = exports.KeywordDetectionType || (exports.KeywordDetectionType = {}));\n/**\n * The action to take when a keyword is rejected.\n */\nvar OnRejectAction;\n(function (OnRejectAction) {\n    /**\n     * End the current turn.\n     */\n    OnRejectAction[\"EndOfTurn\"] = \"EndOfTurn\";\n    /**\n     * Continue processing.\n     */\n    OnRejectAction[\"Continue\"] = \"Continue\";\n})(OnRejectAction = exports.OnRejectAction || (exports.OnRejectAction = {}));\n\n//# sourceMappingURL=KeywordDetection.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DialogServiceAdapter = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst DialogEvents_js_1 = require(\"../common/DialogEvents.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst AudioOutputFormat_js_1 = require(\"../sdk/Audio/AudioOutputFormat.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst DialogServiceTurnStateManager_js_1 = require(\"./DialogServiceTurnStateManager.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst ActivityResponsePayload_js_1 = require(\"./ServiceMessages/ActivityResponsePayload.js\");\nconst InvocationSource_js_1 = require(\"./ServiceMessages/InvocationSource.js\");\nconst KeywordDetection_js_1 = require(\"./ServiceMessages/KeywordDetection/KeywordDetection.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\nclass DialogServiceAdapter extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector);\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privDialogServiceConnector = dialogServiceConnector;\n        this.receiveMessageOverride = () => this.receiveDialogMessageOverride();\n        this.privTurnStateManager = new DialogServiceTurnStateManager_js_1.DialogServiceTurnStateManager();\n        this.recognizeOverride =\n            (recoMode, successCallback, errorCallback) => this.listenOnce(recoMode, successCallback, errorCallback);\n        this.postConnectImplOverride = (connection) => this.dialogConnectImpl(connection);\n        this.configConnectionOverride = (connection) => this.configConnection(connection);\n        this.disconnectOverride = () => this.privDisconnect();\n        this.privDialogAudioSource = audioSource;\n        this.agentConfigSent = false;\n        this.privLastResult = null;\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                this.terminateMessageLoop = true;\n            }\n        });\n    }\n    async sendMessage(message) {\n        const interactionGuid = (0, Exports_js_2.createGuid)();\n        const requestId = (0, Exports_js_2.createNoDashGuid)();\n        const agentMessage = {\n            context: {\n                interactionId: interactionGuid\n            },\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            messagePayload: JSON.parse(message),\n            version: 0.5\n        };\n        const agentMessageJson = JSON.stringify(agentMessage);\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"agent\", requestId, \"application/json\", agentMessageJson));\n    }\n    async privDisconnect() {\n        await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.NoError, \"Disconnecting\");\n        this.terminateMessageLoop = true;\n        this.agentConfigSent = false;\n        return;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        let result;\n        let processed;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.phrase\":\n                const speechPhrase = Exports_js_4.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                this.privRequestSession.onPhraseRecognized(speechPhrase.Offset + speechPhrase.Duration);\n                if (speechPhrase.RecognitionStatus !== Exports_js_4.RecognitionStatus.TooManyRequests && speechPhrase.RecognitionStatus !== Exports_js_4.RecognitionStatus.Error) {\n                    const args = this.fireEventForResult(speechPhrase, resultProps);\n                    this.privLastResult = args.result;\n                    if (!!this.privDialogServiceConnector.recognized) {\n                        try {\n                            this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, args);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.hypothesis\":\n                const hypothesis = Exports_js_4.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_3.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, undefined, undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_3.SpeechRecognitionEventArgs(result, hypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privDialogServiceConnector.recognizing) {\n                    try {\n                        this.privDialogServiceConnector.recognizing(this.privDialogServiceConnector, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.keyword\":\n                const keyword = Exports_js_4.SpeechKeyword.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, keyword.Status === \"Accepted\" ? Exports_js_3.ResultReason.RecognizedKeyword : Exports_js_3.ResultReason.NoMatch, keyword.Text, keyword.Duration, keyword.Offset, undefined, undefined, undefined, undefined, keyword.asJson(), resultProps);\n                if (keyword.Status !== \"Accepted\") {\n                    this.privLastResult = result;\n                }\n                const event = new Exports_js_3.SpeechRecognitionEventArgs(result, result.duration, result.resultId);\n                if (!!this.privDialogServiceConnector.recognized) {\n                    try {\n                        this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, event);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"audio\":\n                {\n                    const audioRequestId = connectionMessage.requestId.toUpperCase();\n                    const turn = this.privTurnStateManager.GetTurn(audioRequestId);\n                    try {\n                        // Empty binary message signals end of stream.\n                        if (!connectionMessage.binaryBody) {\n                            turn.endAudioStream();\n                        }\n                        else {\n                            turn.audioStream.write(connectionMessage.binaryBody);\n                        }\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"response\":\n                {\n                    this.handleResponseMessage(connectionMessage);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    async cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        this.terminateMessageLoop = true;\n        if (!!this.privRequestSession.isRecognizing) {\n            await this.privRequestSession.onStopRecognizing();\n        }\n        if (!!this.privDialogServiceConnector.canceled) {\n            const properties = new Exports_js_3.PropertyCollection();\n            properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n            const cancelEvent = new Exports_js_3.SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privDialogServiceConnector.canceled(this.privDialogServiceConnector, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n            if (!!this.privSuccessCallback) {\n                const result = new Exports_js_3.SpeechRecognitionResult(undefined, // ResultId\n                Exports_js_3.ResultReason.Canceled, undefined, // Text\n                undefined, // Duration\n                undefined, // Offset\n                undefined, // Language\n                undefined, // Language Detection Confidence\n                undefined, // Speaker Id\n                error, undefined, // Json\n                properties);\n                try {\n                    this.privSuccessCallback(result);\n                    this.privSuccessCallback = undefined;\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n    }\n    async listenOnce(recoMode, successCallback, errorCallback) {\n        this.privRecognizerConfig.recognitionMode = recoMode;\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallback;\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privDialogAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages();\n        const node = await this.privDialogAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privDialogAudioSource.format;\n        const deviceInfo = await this.privDialogAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (error) {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, error);\n            return Promise.resolve();\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, async (error) => {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n    }\n    // Establishes a websocket connection to the end point.\n    dialogConnectImpl(connection) {\n        this.privConnectionLoop = this.startMessageLoop();\n        return connection;\n    }\n    receiveDialogMessageOverride() {\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\n        const communicationCustodian = new Exports_js_2.Deferred();\n        const loop = async () => {\n            try {\n                const isDisposed = this.isDisposed();\n                const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\n                if (isDisposed || terminateMessageLoop) {\n                    // We're done.\n                    communicationCustodian.resolve(undefined);\n                    return;\n                }\n                const connection = await this.fetchConnection();\n                const message = await connection.read();\n                if (!message) {\n                    return loop();\n                }\n                const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        {\n                            const turnRequestId = connectionMessage.requestId.toUpperCase();\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\n                            // turn started by the service\n                            if (turnRequestId !== audioSessionReqId) {\n                                this.privTurnStateManager.StartTurn(turnRequestId);\n                            }\n                            else {\n                                this.privRequestSession.onServiceTurnStartResponse();\n                            }\n                        }\n                        break;\n                    case \"speech.startdetected\":\n                        const speechStartDetected = Exports_js_4.SpeechDetected.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStartEventArgs = new Exports_js_3.RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechStartDetected) {\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\n                        }\n                        break;\n                    case \"speech.enddetected\":\n                        let json;\n                        if (connectionMessage.textBody.length > 0) {\n                            json = connectionMessage.textBody;\n                        }\n                        else {\n                            // If the request was empty, the JSON returned is empty.\n                            json = \"{ Offset: 0 }\";\n                        }\n                        const speechStopDetected = Exports_js_4.SpeechDetected.fromJSON(json, this.privRequestSession.currentTurnAudioOffset);\n                        this.privRequestSession.onServiceRecognized(speechStopDetected.Offset);\n                        const speechStopEventArgs = new Exports_js_3.RecognitionEventArgs(speechStopDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechEndDetected) {\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\n                        }\n                        break;\n                    case \"turn.end\":\n                        {\n                            const turnEndRequestId = connectionMessage.requestId.toUpperCase();\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\n                            // turn started by the service\n                            if (turnEndRequestId !== audioSessionReqId) {\n                                this.privTurnStateManager.CompleteTurn(turnEndRequestId);\n                            }\n                            else {\n                                // Audio session turn\n                                const sessionStopEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n                                await this.privRequestSession.onServiceTurnEndResponse(false);\n                                if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\n                                    if (!!this.privRecognizer.sessionStopped) {\n                                        this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\n                                    }\n                                }\n                                // report result to promise.\n                                if (!!this.privSuccessCallback && this.privLastResult) {\n                                    try {\n                                        this.privSuccessCallback(this.privLastResult);\n                                        this.privLastResult = null;\n                                    }\n                                    catch (e) {\n                                        if (!!this.privErrorCallback) {\n                                            this.privErrorCallback(e);\n                                        }\n                                    }\n                                    // Only invoke the call back once.\n                                    // and if it's successful don't invoke the\n                                    // error after that.\n                                    this.privSuccessCallback = undefined;\n                                    this.privErrorCallback = undefined;\n                                }\n                            }\n                        }\n                        break;\n                    default:\n                        try {\n                            const processed = await this.processTypeSpecificMessages(connectionMessage);\n                            if (!processed) {\n                                if (!!this.serviceEvents) {\n                                    this.serviceEvents.onEvent(new Exports_js_2.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                                }\n                            }\n                        }\n                        catch (e) {\n                            //\n                        }\n                }\n                const ret = loop();\n                return ret;\n            }\n            catch (error) {\n                this.terminateMessageLoop = true;\n                communicationCustodian.resolve();\n            }\n        };\n        loop().catch((reason) => {\n            Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n        });\n        return communicationCustodian.promise;\n    }\n    async startMessageLoop() {\n        this.terminateMessageLoop = false;\n        try {\n            await this.receiveDialogMessageOverride();\n        }\n        catch (error) {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        }\n        return Promise.resolve();\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configConnection(connection) {\n        if (this.terminateMessageLoop) {\n            this.terminateMessageLoop = false;\n            return Promise.reject(\"Connection to service terminated.\");\n        }\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\n        await this.sendAgentConfig(connection);\n        return connection;\n    }\n    async sendPreAudioMessages() {\n        const connection = await this.fetchConnection();\n        this.addKeywordContextData();\n        await this.sendSpeechContext(connection, true);\n        await this.sendAgentContext(connection);\n        await this.sendWaveHeader(connection);\n    }\n    sendAgentConfig(connection) {\n        if (this.agentConfig && !this.agentConfigSent) {\n            if (this.privRecognizerConfig\n                .parameters\n                .getProperty(Exports_js_3.PropertyId.Conversation_DialogType) === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands) {\n                const config = this.agentConfig.get();\n                config.botInfo.commandsCulture = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-us\");\n                this.agentConfig.set(config);\n            }\n            this.onEvent(new DialogEvents_js_1.SendingAgentContextMessageEvent(this.agentConfig));\n            const agentConfigJson = this.agentConfig.toJsonString();\n            // guard against sending this multiple times on one connection\n            this.agentConfigSent = true;\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"agent.config\", this.privRequestSession.requestId, \"application/json\", agentConfigJson));\n        }\n        return;\n    }\n    sendAgentContext(connection) {\n        const guid = (0, Exports_js_2.createGuid)();\n        const speechActivityTemplate = this.privDialogServiceConnector.properties.getProperty(Exports_js_3.PropertyId.Conversation_Speech_Activity_Template);\n        const agentContext = {\n            channelData: \"\",\n            context: {\n                interactionId: guid\n            },\n            messagePayload: typeof speechActivityTemplate === undefined ? undefined : speechActivityTemplate,\n            version: 0.5\n        };\n        const agentContextJson = JSON.stringify(agentContext);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.agent.context\", this.privRequestSession.requestId, \"application/json\", agentContextJson));\n    }\n    fireEventForResult(serviceResult, properties) {\n        const resultReason = Exports_js_4.EnumTranslation.implTranslateRecognitionResult(serviceResult.RecognitionStatus);\n        const result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, serviceResult.DisplayText, serviceResult.Duration, serviceResult.Offset, serviceResult.Language, serviceResult.LanguageDetectionConfidence, undefined, undefined, serviceResult.asJson(), properties);\n        const ev = new Exports_js_3.SpeechRecognitionEventArgs(result, serviceResult.Offset, this.privRequestSession.sessionId);\n        return ev;\n    }\n    handleResponseMessage(responseMessage) {\n        // \"response\" messages can contain either \"message\" (activity) or \"MessageStatus\" data. Fire the appropriate\n        // event according to the message type that's specified.\n        const responsePayload = JSON.parse(responseMessage.textBody);\n        switch (responsePayload.messageType.toLowerCase()) {\n            case \"message\":\n                const responseRequestId = responseMessage.requestId.toUpperCase();\n                const activityPayload = ActivityResponsePayload_js_1.ActivityPayloadResponse.fromJSON(responseMessage.textBody);\n                const turn = this.privTurnStateManager.GetTurn(responseRequestId);\n                // update the conversation Id\n                if (activityPayload.conversationId) {\n                    const updateAgentConfig = this.agentConfig.get();\n                    updateAgentConfig.botInfo.conversationId = activityPayload.conversationId;\n                    this.agentConfig.set(updateAgentConfig);\n                }\n                const pullAudioOutputStream = turn.processActivityPayload(activityPayload, AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(this.privDialogServiceConnector.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)));\n                const activity = new Exports_js_3.ActivityReceivedEventArgs(activityPayload.messagePayload, pullAudioOutputStream);\n                if (!!this.privDialogServiceConnector.activityReceived) {\n                    try {\n                        this.privDialogServiceConnector.activityReceived(this.privDialogServiceConnector, activity);\n                        /* eslint-disable-next-line no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            case \"messagestatus\":\n                if (!!this.privDialogServiceConnector.turnStatusReceived) {\n                    try {\n                        this.privDialogServiceConnector.turnStatusReceived(this.privDialogServiceConnector, new Exports_js_3.TurnStatusReceivedEventArgs(responseMessage.textBody));\n                        /* eslint-disable-next-line no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            default:\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(`Unexpected response of type ${responsePayload.messageType}. Ignoring.`));\n                break;\n        }\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    addKeywordContextData() {\n        const keywordPropertyValue = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-KeywordsToDetect\");\n        if (keywordPropertyValue === undefined) {\n            return;\n        }\n        const keywordOffsetPropertyValue = this.privRecognizerConfig.parameters\n            .getProperty(\"SPEECH-KeywordsToDetect-Offsets\");\n        const keywordDurationPropertyValue = this.privRecognizerConfig.parameters\n            .getProperty(\"SPEECH-KeywordsToDetect-Durations\");\n        const keywords = keywordPropertyValue.split(\";\");\n        const keywordOffsets = keywordOffsetPropertyValue === undefined ? [] : keywordOffsetPropertyValue.split(\";\");\n        const keywordDurations = keywordDurationPropertyValue === undefined ? [] : keywordDurationPropertyValue.split(\";\");\n        const keywordDefinitionArray = [];\n        for (let i = 0; i < keywords.length; i++) {\n            const definition = {\n                text: keywords[i]\n            };\n            if (i < keywordOffsets.length) {\n                definition.startOffset = Number(keywordOffsets[i]);\n            }\n            if (i < keywordDurations.length) {\n                definition.duration = Number(keywordDurations[i]);\n            }\n            keywordDefinitionArray.push(definition);\n        }\n        this.speechContext.getContext().invocationSource = InvocationSource_js_1.InvocationSource.VoiceActivationWithKeyword;\n        this.speechContext.getContext().keywordDetection = [{\n                clientDetectedKeywords: keywordDefinitionArray,\n                onReject: { action: KeywordDetection_js_1.OnRejectAction.EndOfTurn },\n                type: KeywordDetection_js_1.KeywordDetectionType.StartTrigger\n            }];\n    }\n}\nexports.DialogServiceAdapter = DialogServiceAdapter;\n\n//# sourceMappingURL=DialogServiceAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AgentConfig = void 0;\n/**\n * Represents the JSON used in the agent.config message sent to the speech service.\n */\nclass AgentConfig {\n    toJsonString() {\n        return JSON.stringify(this.iPrivConfig);\n    }\n    get() {\n        return this.iPrivConfig;\n    }\n    /**\n     * Setter for the agent.config object.\n     * @param value a JSON serializable object.\n     */\n    set(value) {\n        this.iPrivConfig = value;\n    }\n}\nexports.AgentConfig = AgentConfig;\n\n//# sourceMappingURL=AgentConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationConnectionConfig = void 0;\nconst RestConfigBase_js_1 = require(\"../../common.browser/RestConfigBase.js\");\nclass ConversationConnectionConfig extends RestConfigBase_js_1.RestConfigBase {\n    static get host() {\n        return ConversationConnectionConfig.privHost;\n    }\n    static get apiVersion() {\n        return ConversationConnectionConfig.privApiVersion;\n    }\n    static get clientAppId() {\n        return ConversationConnectionConfig.privClientAppId;\n    }\n    static get defaultLanguageCode() {\n        return ConversationConnectionConfig.privDefaultLanguageCode;\n    }\n    static get restPath() {\n        return ConversationConnectionConfig.privRestPath;\n    }\n    static get webSocketPath() {\n        return ConversationConnectionConfig.privWebSocketPath;\n    }\n    static get transcriptionEventKeys() {\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\n    }\n}\nexports.ConversationConnectionConfig = ConversationConnectionConfig;\nConversationConnectionConfig.privHost = \"dev.microsofttranslator.com\";\nConversationConnectionConfig.privRestPath = \"/capito/room\";\nConversationConnectionConfig.privApiVersion = \"2.0\";\nConversationConnectionConfig.privDefaultLanguageCode = \"en-US\";\nConversationConnectionConfig.privClientAppId = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\nConversationConnectionConfig.privWebSocketPath = \"/capito/translate\";\nConversationConnectionConfig.privTranscriptionEventKeys = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\n\n//# sourceMappingURL=ConversationConnectionConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationManager = void 0;\nconst Exports_js_1 = require(\"../../common.browser/Exports.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_2 = require(\"../../sdk/Exports.js\");\nconst ConversationConnectionConfig_js_1 = require(\"./ConversationConnectionConfig.js\");\nclass ConversationManager {\n    constructor() {\n        //\n        this.privRequestParams = ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams;\n        this.privErrors = ConversationConnectionConfig_js_1.ConversationConnectionConfig.restErrors;\n        this.privHost = ConversationConnectionConfig_js_1.ConversationConnectionConfig.host;\n        this.privApiVersion = ConversationConnectionConfig_js_1.ConversationConnectionConfig.apiVersion;\n        this.privRestPath = ConversationConnectionConfig_js_1.ConversationConnectionConfig.restPath;\n        this.privRestAdapter = new Exports_js_1.RestMessageAdapter({});\n    }\n    /**\n     * Make a POST request to the Conversation Manager service endpoint to create or join a conversation.\n     * @param args\n     * @param conversationCode\n     * @param callback\n     * @param errorCallback\n     */\n    createOrJoin(args, conversationCode, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(args, \"args\");\n            const languageCode = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, ConversationConnectionConfig_js_1.ConversationConnectionConfig.defaultLanguageCode);\n            const nickname = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Name, \"conversation_host\");\n            const endpointHost = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Host, this.privHost);\n            const correlationId = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_CorrelationId);\n            const subscriptionKey = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n            const subscriptionRegion = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n            const authToken = args.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(languageCode, \"languageCode\");\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(endpointHost, \"endpointHost\");\n            const queryParams = {};\n            queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\n            queryParams[this.privRequestParams.languageCode] = languageCode;\n            queryParams[this.privRequestParams.nickname] = nickname;\n            const headers = {};\n            if (correlationId) {\n                headers[this.privRequestParams.correlationId] = correlationId;\n            }\n            headers[this.privRequestParams.clientAppId] = ConversationConnectionConfig_js_1.ConversationConnectionConfig.clientAppId;\n            if (conversationCode !== undefined) {\n                queryParams[this.privRequestParams.roomId] = conversationCode;\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(subscriptionRegion, this.privErrors.authInvalidSubscriptionRegion);\n                headers[this.privRequestParams.subscriptionRegion] = subscriptionRegion;\n                if (subscriptionKey) {\n                    headers[this.privRequestParams.subscriptionKey] = subscriptionKey;\n                }\n                else if (authToken) {\n                    headers[this.privRequestParams.authorization] = `Bearer ${authToken}`;\n                }\n                else {\n                    Contracts_js_1.Contracts.throwIfNullOrUndefined(subscriptionKey, this.privErrors.authInvalidSubscriptionKey);\n                }\n            }\n            const config = {};\n            config.headers = headers;\n            this.privRestAdapter.options = config;\n            const endpoint = `https://${endpointHost}${this.privRestPath}`;\n            // TODO: support a proxy and certificate validation\n            this.privRestAdapter.request(Exports_js_1.RestRequestType.Post, endpoint, queryParams, null).then((response) => {\n                const requestId = Exports_js_1.RestMessageAdapter.extractHeaderValue(this.privRequestParams.requestId, response.headers);\n                if (!response.ok) {\n                    if (!!err) {\n                        // get the error\n                        let errorMessage = this.privErrors.invalidCreateJoinConversationResponse.replace(\"{status}\", response.status.toString());\n                        let errMessageRaw;\n                        try {\n                            errMessageRaw = JSON.parse(response.data);\n                            errorMessage += ` [${errMessageRaw.error.code}: ${errMessageRaw.error.message}]`;\n                        }\n                        catch (e) {\n                            errorMessage += ` [${response.data}]`;\n                        }\n                        if (requestId) {\n                            errorMessage += ` ${requestId}`;\n                        }\n                        err(errorMessage);\n                    }\n                    return;\n                }\n                const conversation = JSON.parse(response.data);\n                if (conversation) {\n                    conversation.requestId = requestId;\n                }\n                if (!!cb) {\n                    try {\n                        cb(conversation);\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(e);\n                        }\n                    }\n                    cb = undefined;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n            }).catch(() => { });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    }\n    /**\n     * Make a DELETE request to the Conversation Manager service endpoint to leave the conversation.\n     * @param args\n     * @param sessionToken\n     * @param callback\n     */\n    leave(args, sessionToken) {\n        return new Promise((resolve, reject) => {\n            try {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(args, this.privErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(sessionToken, this.privErrors.invalidArgs.replace(\"{arg}\", \"token\"));\n                const endpointHost = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Host, this.privHost);\n                const correlationId = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_CorrelationId);\n                const queryParams = {};\n                queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\n                queryParams[this.privRequestParams.sessionToken] = sessionToken;\n                const headers = {};\n                if (correlationId) {\n                    headers[this.privRequestParams.correlationId] = correlationId;\n                }\n                const config = {};\n                config.headers = headers;\n                this.privRestAdapter.options = config;\n                const endpoint = `https://${endpointHost}${this.privRestPath}`;\n                // TODO: support a proxy and certificate validation\n                this.privRestAdapter.request(Exports_js_1.RestRequestType.Delete, endpoint, queryParams, null).then((response) => {\n                    if (!response.ok) {\n                        // ignore errors on delete\n                    }\n                    resolve();\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                }).catch(() => { });\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    reject(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    reject(error);\n                }\n            }\n        });\n    }\n}\nexports.ConversationManager = ConversationManager;\n\n//# sourceMappingURL=ConversationManager.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationConnectionMessage = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nclass ConversationConnectionMessage extends Exports_js_1.ConnectionMessage {\n    constructor(messageType, body, headers, id) {\n        super(messageType, body, headers, id);\n        const json = JSON.parse(this.textBody);\n        if (json.type !== undefined) {\n            this.privConversationMessageType = json.type;\n        }\n    }\n    get conversationMessageType() {\n        return this.privConversationMessageType;\n    }\n}\nexports.ConversationConnectionMessage = ConversationConnectionMessage;\n\n//# sourceMappingURL=ConversationConnectionMessage.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationWebsocketMessageFormatter = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst ConversationConnectionMessage_js_1 = require(\"./ConversationConnectionMessage.js\");\n/**\n * Based off WebsocketMessageFormatter. The messages for Conversation Translator have some variations from the Speech messages.\n */\nclass ConversationWebsocketMessageFormatter {\n    /**\n     * Format incoming messages: text (speech partial/final, IM) or binary (tts)\n     */\n    toConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const incomingMessage = new ConversationConnectionMessage_js_1.ConversationConnectionMessage(message.messageType, message.textContent, {}, message.id);\n                deferral.resolve(incomingMessage);\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                deferral.resolve(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(message.messageType, message.binaryContent, undefined, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. Error: ${e}`);\n        }\n        return deferral.promise;\n    }\n    /**\n     * Format outgoing messages: text (commands or IM)\n     */\n    fromConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const payload = `${message.textBody ? message.textBody : \"\"}`;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, payload, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. ${e}`);\n        }\n        return deferral.promise;\n    }\n}\nexports.ConversationWebsocketMessageFormatter = ConversationWebsocketMessageFormatter;\n\n//# sourceMappingURL=ConversationWebsocketMessageFormatter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationConnectionFactory = void 0;\nconst Exports_js_1 = require(\"../../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_3 = require(\"../../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"../ConnectionFactoryBase.js\");\nconst ConversationConnectionConfig_js_1 = require(\"./ConversationConnectionConfig.js\");\nconst ConversationWebsocketMessageFormatter_js_1 = require(\"./ConversationWebsocketMessageFormatter.js\");\n/**\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\n * The conversation must already have been started or joined.\n */\nclass ConversationConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        const endpointHost = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Host, ConversationConnectionConfig_js_1.ConversationConnectionConfig.host);\n        const correlationId = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_CorrelationId, (0, Exports_js_2.createGuid)());\n        const endpoint = `wss://${endpointHost}${ConversationConnectionConfig_js_1.ConversationConnectionConfig.webSocketPath}`;\n        const token = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Token, undefined);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(token, \"token\");\n        const queryParams = {};\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig_js_1.ConversationConnectionConfig.apiVersion;\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.token] = token;\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.correlationId] = correlationId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return Promise.resolve(new Exports_js_1.WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter_js_1.ConversationWebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId));\n    }\n}\nexports.ConversationConnectionFactory = ConversationConnectionFactory;\n\n//# sourceMappingURL=ConversationConnectionFactory.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationRequestSession = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\n/**\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\n * TODO: define what telemetry is required.\n */\nclass ConversationRequestSession {\n    constructor(sessionId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privSessionId = sessionId;\n        this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n        this.privRequestCompletionDeferral = new Exports_js_1.Deferred();\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get completionPromise() {\n        return this.privRequestCompletionDeferral.promise;\n    }\n    onPreConnectionStart(authFetchEventId, connectionId) {\n        this.privSessionId = connectionId;\n    }\n    onAuthCompleted(isError) {\n        if (isError) {\n            this.onComplete();\n        }\n    }\n    onConnectionEstablishCompleted(statusCode) {\n        if (statusCode === 200) {\n            return;\n        }\n        else if (statusCode === 403) {\n            this.onComplete();\n        }\n    }\n    onServiceTurnEndResponse(continuousRecognition) {\n        if (!continuousRecognition) {\n            this.onComplete();\n        }\n        else {\n            this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n        }\n    }\n    async dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n        }\n    }\n    onComplete() {\n        //\n    }\n}\nexports.ConversationRequestSession = ConversationRequestSession;\n\n//# sourceMappingURL=ConversationRequestSession.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationReceivedTranslationEventArgs = exports.ParticipantsListEventArgs = exports.ParticipantAttributeEventArgs = exports.ParticipantEventArgs = exports.LockRoomEventArgs = exports.MuteAllEventArgs = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../sdk/Exports.js\");\nclass MuteAllEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(isMuted, sessionId) {\n        super(sessionId);\n        this.privIsMuted = isMuted;\n    }\n    get isMuted() {\n        return this.privIsMuted;\n    }\n}\nexports.MuteAllEventArgs = MuteAllEventArgs;\nclass LockRoomEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(isLocked, sessionId) {\n        super(sessionId);\n        this.privIsLocked = isLocked;\n    }\n    get isMuted() {\n        return this.privIsLocked;\n    }\n}\nexports.LockRoomEventArgs = LockRoomEventArgs;\nclass ParticipantEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(participant, sessionId) {\n        super(sessionId);\n        this.privParticipant = participant;\n    }\n    get participant() {\n        return this.privParticipant;\n    }\n}\nexports.ParticipantEventArgs = ParticipantEventArgs;\nclass ParticipantAttributeEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(participantId, key, value, sessionId) {\n        super(sessionId);\n        this.privKey = key;\n        this.privValue = value;\n        this.privParticipantId = participantId;\n    }\n    get value() {\n        return this.privValue;\n    }\n    get key() {\n        return this.privKey;\n    }\n    get id() {\n        return this.privParticipantId;\n    }\n}\nexports.ParticipantAttributeEventArgs = ParticipantAttributeEventArgs;\nclass ParticipantsListEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(conversationId, token, translateTo, profanityFilter, roomProfanityFilter, isRoomLocked, isMuteAll, participants, sessionId) {\n        super(sessionId);\n        this.privRoomId = conversationId;\n        this.privSessionToken = token;\n        this.privTranslateTo = translateTo;\n        this.privProfanityFilter = profanityFilter;\n        this.privRoomProfanityFilter = roomProfanityFilter;\n        this.privIsRoomLocked = isRoomLocked;\n        this.privIsRoomLocked = isMuteAll;\n        this.privParticipants = participants;\n    }\n    get sessionToken() {\n        return this.privSessionToken;\n    }\n    get conversationId() {\n        return this.privRoomId;\n    }\n    get translateTo() {\n        return this.privTranslateTo;\n    }\n    get profanityFilter() {\n        return this.privProfanityFilter;\n    }\n    get roomProfanityFilter() {\n        return this.privRoomProfanityFilter;\n    }\n    get isRoomLocked() {\n        return this.privIsRoomLocked;\n    }\n    get isMuteAll() {\n        return this.privIsMuteAll;\n    }\n    get participants() {\n        return this.privParticipants;\n    }\n}\nexports.ParticipantsListEventArgs = ParticipantsListEventArgs;\nclass ConversationReceivedTranslationEventArgs {\n    constructor(command, payload, sessionId) {\n        this.privPayload = payload;\n        this.privCommand = command;\n        this.privSessionId = sessionId;\n    }\n    get payload() {\n        return this.privPayload;\n    }\n    get command() {\n        return this.privCommand;\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.ConversationReceivedTranslationEventArgs = ConversationReceivedTranslationEventArgs;\n\n//# sourceMappingURL=ConversationTranslatorEventArgs.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslatorCommandTypes = exports.ConversationTranslatorMessageTypes = exports.InternalParticipants = void 0;\n/** Users participating in the conversation */\nclass InternalParticipants {\n    constructor(participants = [], meId) {\n        this.participants = participants;\n        this.meId = meId;\n    }\n    /**\n     * Add or update a participant\n     * @param value\n     */\n    addOrUpdateParticipant(value) {\n        if (value === undefined) {\n            return;\n        }\n        const exists = this.getParticipantIndex(value.id);\n        if (exists > -1) {\n            this.participants.splice(exists, 1, value);\n        }\n        else {\n            this.participants.push(value);\n        }\n        // ensure it was added ok\n        return this.getParticipant(value.id);\n    }\n    /**\n     * Find the participant's position in the participants list.\n     * @param id\n     */\n    getParticipantIndex(id) {\n        return this.participants.findIndex((p) => p.id === id);\n    }\n    /**\n     * Find the participant by id.\n     * @param id\n     */\n    getParticipant(id) {\n        return this.participants.find((p) => p.id === id);\n    }\n    /**\n     * Remove a participant from the participants list.\n     */\n    deleteParticipant(id) {\n        this.participants = this.participants.filter((p) => p.id !== id);\n    }\n    /**\n     * Helper to return the conversation host.\n     */\n    get host() {\n        return this.participants.find((p) => p.isHost === true);\n    }\n    /**\n     * Helper to return the current user.\n     */\n    get me() {\n        return this.getParticipant(this.meId);\n    }\n}\nexports.InternalParticipants = InternalParticipants;\n/**\n * List of command message types\n */\nexports.ConversationTranslatorMessageTypes = {\n    command: \"command\",\n    final: \"final\",\n    info: \"info\",\n    instantMessage: \"instant_message\",\n    keepAlive: \"keep_alive\",\n    partial: \"partial\",\n    participantCommand: \"participant_command\",\n    translatedMessage: \"translated_message\"\n};\n/**\n * List of command types\n */\nexports.ConversationTranslatorCommandTypes = {\n    changeNickname: \"ChangeNickname\",\n    disconnectSession: \"DisconnectSession\",\n    ejectParticipant: \"EjectParticipant\",\n    instant_message: \"instant_message\",\n    joinSession: \"JoinSession\",\n    leaveSession: \"LeaveSession\",\n    participantList: \"ParticipantList\",\n    roomExpirationWarning: \"RoomExpirationWarning\",\n    setLockState: \"SetLockState\",\n    setMute: \"SetMute\",\n    setMuteAll: \"SetMuteAll\",\n    setProfanityFiltering: \"SetProfanityFiltering\",\n    setTranslateToLanguages: \"SetTranslateToLanguages\",\n    setUseTTS: \"SetUseTTS\"\n};\n\n//# sourceMappingURL=ConversationTranslatorInterfaces.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandResponsePayload = void 0;\nconst parseCommandResponse = (json) => JSON.parse(json);\nclass CommandResponsePayload {\n    constructor(json) {\n        this.privCommandResponse = parseCommandResponse(json);\n    }\n    get type() {\n        return this.privCommandResponse.type;\n    }\n    get command() {\n        return this.privCommandResponse.command;\n    }\n    get id() {\n        return this.privCommandResponse.id;\n    }\n    get nickname() {\n        return this.privCommandResponse.nickname;\n    }\n    get participantId() {\n        return this.privCommandResponse.participantId;\n    }\n    get roomid() {\n        return this.privCommandResponse.roomid;\n    }\n    get value() {\n        return this.privCommandResponse.value;\n    }\n    get token() {\n        return this.privCommandResponse.token;\n    }\n    static fromJSON(json) {\n        return new CommandResponsePayload(json);\n    }\n}\nexports.CommandResponsePayload = CommandResponsePayload;\n\n//# sourceMappingURL=CommandResponsePayload.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticipantPayloadResponse = exports.ParticipantsListPayloadResponse = void 0;\nconst parseListResponse = (json) => JSON.parse(json);\nconst parseParticipantResponse = (json) => JSON.parse(json);\nclass ParticipantsListPayloadResponse {\n    constructor(json) {\n        this.privParticipantsPayloadResponse = parseListResponse(json);\n    }\n    get roomid() {\n        return this.privParticipantsPayloadResponse.roomid;\n    }\n    get id() {\n        return this.privParticipantsPayloadResponse.id;\n    }\n    get command() {\n        return this.privParticipantsPayloadResponse.command;\n    }\n    get participants() {\n        return this.privParticipantsPayloadResponse.participants;\n    }\n    get token() {\n        return this.privParticipantsPayloadResponse.token;\n    }\n    get translateTo() {\n        return this.privParticipantsPayloadResponse.translateTo;\n    }\n    get profanityFilter() {\n        return this.privParticipantsPayloadResponse.profanityFilter;\n    }\n    get roomProfanityFilter() {\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\n    }\n    get roomLocked() {\n        return this.privParticipantsPayloadResponse.roomLocked;\n    }\n    get muteAll() {\n        return this.privParticipantsPayloadResponse.muteAll;\n    }\n    get type() {\n        return this.privParticipantsPayloadResponse.type;\n    }\n    static fromJSON(json) {\n        return new ParticipantsListPayloadResponse(json);\n    }\n}\nexports.ParticipantsListPayloadResponse = ParticipantsListPayloadResponse;\nclass ParticipantPayloadResponse {\n    constructor(json) {\n        this.privParticipantPayloadResponse = parseParticipantResponse(json);\n    }\n    get nickname() {\n        return this.privParticipantPayloadResponse.nickname;\n    }\n    get locale() {\n        return this.privParticipantPayloadResponse.locale;\n    }\n    get usetts() {\n        return this.privParticipantPayloadResponse.usetts;\n    }\n    get ismuted() {\n        return this.privParticipantPayloadResponse.ismuted;\n    }\n    get ishost() {\n        return this.privParticipantPayloadResponse.ishost;\n    }\n    get participantId() {\n        return this.privParticipantPayloadResponse.participantId;\n    }\n    get avatar() {\n        return this.privParticipantPayloadResponse.avatar;\n    }\n    static fromJSON(json) {\n        return new ParticipantPayloadResponse(json);\n    }\n}\nexports.ParticipantPayloadResponse = ParticipantPayloadResponse;\n\n//# sourceMappingURL=ParticipantResponsePayload.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextResponsePayload = exports.SpeechResponsePayload = void 0;\nconst parseSpeechResponse = (json) => JSON.parse(json);\nconst parseTextResponse = (json) => JSON.parse(json);\nclass SpeechResponsePayload {\n    constructor(json) {\n        this.privSpeechResponse = parseSpeechResponse(json);\n    }\n    get recognition() {\n        return this.privSpeechResponse.recognition;\n    }\n    get translations() {\n        return this.privSpeechResponse.translations;\n    }\n    get id() {\n        return this.privSpeechResponse.id;\n    }\n    get language() {\n        return this.privSpeechResponse.language;\n    }\n    get nickname() {\n        return this.privSpeechResponse.nickname;\n    }\n    get participantId() {\n        return this.privSpeechResponse.participantId;\n    }\n    get roomid() {\n        return this.privSpeechResponse.roomid;\n    }\n    get timestamp() {\n        return this.privSpeechResponse.timestamp;\n    }\n    get type() {\n        return this.privSpeechResponse.type;\n    }\n    get isFinal() {\n        return this.privSpeechResponse.type === \"final\";\n    }\n    static fromJSON(json) {\n        return new SpeechResponsePayload(json);\n    }\n}\nexports.SpeechResponsePayload = SpeechResponsePayload;\nclass TextResponsePayload {\n    constructor(json) {\n        this.privTextResponse = parseTextResponse(json);\n    }\n    get originalText() {\n        return this.privTextResponse.originalText;\n    }\n    get translations() {\n        return this.privTextResponse.translations;\n    }\n    get id() {\n        return this.privTextResponse.id;\n    }\n    get language() {\n        return this.privTextResponse.language;\n    }\n    get nickname() {\n        return this.privTextResponse.nickname;\n    }\n    get participantId() {\n        return this.privTextResponse.participantId;\n    }\n    get roomid() {\n        return this.privTextResponse.roomid;\n    }\n    get timestamp() {\n        return this.privTextResponse.timestamp;\n    }\n    get type() {\n        return this.privTextResponse.type;\n    }\n    static fromJSON(json) {\n        return new TextResponsePayload(json);\n    }\n}\nexports.TextResponsePayload = TextResponsePayload;\n\n//# sourceMappingURL=TranslationResponsePayload.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextResponsePayload = exports.SpeechResponsePayload = exports.ParticipantPayloadResponse = exports.ParticipantsListPayloadResponse = exports.CommandResponsePayload = void 0;\nvar CommandResponsePayload_js_1 = require(\"./CommandResponsePayload.js\");\nObject.defineProperty(exports, \"CommandResponsePayload\", { enumerable: true, get: function () { return CommandResponsePayload_js_1.CommandResponsePayload; } });\nvar ParticipantResponsePayload_js_1 = require(\"./ParticipantResponsePayload.js\");\nObject.defineProperty(exports, \"ParticipantsListPayloadResponse\", { enumerable: true, get: function () { return ParticipantResponsePayload_js_1.ParticipantsListPayloadResponse; } });\nObject.defineProperty(exports, \"ParticipantPayloadResponse\", { enumerable: true, get: function () { return ParticipantResponsePayload_js_1.ParticipantPayloadResponse; } });\nvar TranslationResponsePayload_js_1 = require(\"./TranslationResponsePayload.js\");\nObject.defineProperty(exports, \"SpeechResponsePayload\", { enumerable: true, get: function () { return TranslationResponsePayload_js_1.SpeechResponsePayload; } });\nObject.defineProperty(exports, \"TextResponsePayload\", { enumerable: true, get: function () { return TranslationResponsePayload_js_1.TextResponsePayload; } });\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationServiceAdapter = void 0;\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst Exports_js_2 = require(\"../../sdk/Exports.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst ConversationConnectionMessage_js_1 = require(\"./ConversationConnectionMessage.js\");\nconst ConversationRequestSession_js_1 = require(\"./ConversationRequestSession.js\");\nconst ConversationTranslatorEventArgs_js_1 = require(\"./ConversationTranslatorEventArgs.js\");\nconst ConversationTranslatorInterfaces_js_1 = require(\"./ConversationTranslatorInterfaces.js\");\nconst Exports_js_4 = require(\"./ServiceMessages/Exports.js\");\n/**\n * The service adapter handles sending and receiving messages to the Conversation Translator websocket.\n */\nclass ConversationServiceAdapter extends Exports_js_3.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector);\n        this.privConnectionConfigPromise = undefined;\n        this.privLastPartialUtteranceId = \"\";\n        this.privConversationServiceConnector = conversationServiceConnector;\n        this.privConversationAuthentication = authentication;\n        this.receiveMessageOverride = () => this.receiveConversationMessageOverride();\n        this.recognizeOverride = () => this.noOp();\n        this.postConnectImplOverride = (connection) => this.conversationConnectImpl(connection);\n        this.configConnectionOverride = () => this.configConnection();\n        this.disconnectOverride = () => this.privDisconnect();\n        this.privConversationRequestSession = new ConversationRequestSession_js_1.ConversationRequestSession((0, Exports_js_1.createNoDashGuid)());\n        this.privConversationConnectionFactory = connectionFactory;\n        this.privConversationIsDisposed = false;\n    }\n    isDisposed() {\n        return super.isDisposed() || this.privConversationIsDisposed;\n    }\n    async dispose(reason) {\n        this.privConversationIsDisposed = true;\n        if (this.privConnectionConfigPromise !== undefined) {\n            const connection = await this.privConnectionConfigPromise;\n            await connection.dispose(reason);\n        }\n        await super.dispose(reason);\n    }\n    async sendMessage(message) {\n        const connection = await this.fetchConnection();\n        return connection.send(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(Exports_js_1.MessageType.Text, message));\n    }\n    async sendMessageAsync(message) {\n        const connection = await this.fetchConnection();\n        await connection.send(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(Exports_js_1.MessageType.Text, message));\n    }\n    privDisconnect() {\n        if (this.terminateMessageLoop) {\n            return;\n        }\n        this.cancelRecognition(this.privConversationRequestSession.sessionId, this.privConversationRequestSession.requestId, Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.NoError, \"Disconnecting\");\n        this.terminateMessageLoop = true;\n        return Promise.resolve();\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async processTypeSpecificMessages() {\n        return true;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        this.terminateMessageLoop = true;\n        const cancelEvent = new Exports_js_2.ConversationTranslationCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n        try {\n            if (!!this.privConversationServiceConnector.canceled) {\n                this.privConversationServiceConnector.canceled(this.privConversationServiceConnector, cancelEvent);\n            }\n        }\n        catch {\n            // continue on error\n        }\n    }\n    /**\n     * Establishes a websocket connection to the end point.\n     */\n    async conversationConnectImpl(connection) {\n        this.privConnectionLoop = this.startMessageLoop();\n        return connection;\n    }\n    /**\n     * Process incoming websocket messages\n     */\n    async receiveConversationMessageOverride() {\n        if (this.isDisposed() || this.terminateMessageLoop) {\n            return Promise.resolve();\n        }\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\n        const communicationCustodian = new Exports_js_1.Deferred();\n        try {\n            const connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.isDisposed() || this.terminateMessageLoop) {\n                // We're done.\n                communicationCustodian.resolve();\n                return Promise.resolve();\n            }\n            if (!message) {\n                return this.receiveConversationMessageOverride();\n            }\n            const sessionId = this.privConversationRequestSession.sessionId;\n            const conversationMessageType = message.conversationMessageType.toLowerCase();\n            let sendFinal = false;\n            try {\n                switch (conversationMessageType) {\n                    case \"info\":\n                    case \"participant_command\":\n                    case \"command\":\n                        const commandPayload = Exports_js_4.CommandResponsePayload.fromJSON(message.textBody);\n                        switch (commandPayload.command.toLowerCase()) {\n                            /**\n                             * 'ParticpantList' is the first message sent to the user after the websocket connection has opened.\n                             * The consuming client must wait for this message to arrive\n                             * before starting to send their own data.\n                             */\n                            case \"participantlist\":\n                                const participantsPayload = Exports_js_4.ParticipantsListPayloadResponse.fromJSON(message.textBody);\n                                const participantsResult = participantsPayload.participants.map((p) => {\n                                    const participant = {\n                                        avatar: p.avatar,\n                                        displayName: p.nickname,\n                                        id: p.participantId,\n                                        isHost: p.ishost,\n                                        isMuted: p.ismuted,\n                                        isUsingTts: p.usetts,\n                                        preferredLanguage: p.locale\n                                    };\n                                    return participant;\n                                });\n                                if (!!this.privConversationServiceConnector.participantsListReceived) {\n                                    this.privConversationServiceConnector.participantsListReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantsListEventArgs(participantsPayload.roomid, participantsPayload.token, participantsPayload.translateTo, participantsPayload.profanityFilter, participantsPayload.roomProfanityFilter, participantsPayload.roomLocked, participantsPayload.muteAll, participantsResult, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetTranslateToLanguages' represents the list of languages being used in the Conversation by all users(?).\n                             * This is sent at the start of the Conversation\n                             */\n                            case \"settranslatetolanguages\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetProfanityFiltering' lets the client set the level of profanity filtering.\n                             * If sent by the participant the setting will effect only their own profanity level.\n                             * If sent by the host, the setting will effect all participants including the host.\n                             * Note: the profanity filters differ from Speech Service (?): 'marked', 'raw', 'removed', 'tagged'\n                             */\n                            case \"setprofanityfiltering\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetMute' is sent if the participant has been muted by the host.\n                             * Check the 'participantId' to determine if the current user has been muted.\n                             */\n                            case \"setmute\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setMute, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetMuteAll' is sent if the Conversation has been muted by the host.\n                             */\n                            case \"setmuteall\":\n                                if (!!this.privConversationServiceConnector.muteAllCommandReceived) {\n                                    this.privConversationServiceConnector.muteAllCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.MuteAllEventArgs(commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'RoomExpirationWarning' is sent towards the end of the Conversation session to give a timeout warning.\n                             */\n                            case \"roomexpirationwarning\":\n                                if (!!this.privConversationServiceConnector.conversationExpiration) {\n                                    this.privConversationServiceConnector.conversationExpiration(this.privConversationServiceConnector, new Exports_js_2.ConversationExpirationEventArgs(commandPayload.value, this.privConversationRequestSession.sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetUseTts' is sent as a confirmation if the user requests TTS to be turned on or off.\n                             */\n                            case \"setusetts\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setUseTTS, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetLockState' is set if the host has locked or unlocked the Conversation.\n                             */\n                            case \"setlockstate\":\n                                if (!!this.privConversationServiceConnector.lockRoomCommandReceived) {\n                                    this.privConversationServiceConnector.lockRoomCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.LockRoomEventArgs(commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'ChangeNickname' is received if a user changes their display name.\n                             * Any cached particpiants list should be updated to reflect the display name.\n                             */\n                            case \"changenickname\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.changeNickname, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'JoinSession' is sent when a user joins the Conversation.\n                             */\n                            case \"joinsession\":\n                                const joinParticipantPayload = Exports_js_4.ParticipantPayloadResponse.fromJSON(message.textBody);\n                                const joiningParticipant = {\n                                    avatar: joinParticipantPayload.avatar,\n                                    displayName: joinParticipantPayload.nickname,\n                                    id: joinParticipantPayload.participantId,\n                                    isHost: joinParticipantPayload.ishost,\n                                    isMuted: joinParticipantPayload.ismuted,\n                                    isUsingTts: joinParticipantPayload.usetts,\n                                    preferredLanguage: joinParticipantPayload.locale,\n                                };\n                                if (!!this.privConversationServiceConnector.participantJoinCommandReceived) {\n                                    this.privConversationServiceConnector.participantJoinCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantEventArgs(joiningParticipant, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'LeaveSession' is sent when a user leaves the Conversation'.\n                             */\n                            case \"leavesession\":\n                                const leavingParticipant = {\n                                    id: commandPayload.participantId\n                                };\n                                if (!!this.privConversationServiceConnector.participantLeaveCommandReceived) {\n                                    this.privConversationServiceConnector.participantLeaveCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantEventArgs(leavingParticipant, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'DisconnectSession' is sent when a user is disconnected from the session (e.g. network problem).\n                             * Check the 'ParticipantId' to check whether the message is for the current user.\n                             */\n                            case \"disconnectsession\":\n                                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                                const disconnectParticipant = {\n                                    id: commandPayload.participantId\n                                };\n                                break;\n                            case \"token\":\n                                const token = new Exports_js_3.CognitiveTokenAuthentication(() => {\n                                    const authorizationToken = commandPayload.token;\n                                    return Promise.resolve(authorizationToken);\n                                }, () => {\n                                    const authorizationToken = commandPayload.token;\n                                    return Promise.resolve(authorizationToken);\n                                });\n                                this.authentication = token;\n                                this.privConversationServiceConnector.onToken(token);\n                                break;\n                            /**\n                             * Message not recognized.\n                             */\n                            default:\n                                break;\n                        }\n                        break;\n                    /**\n                     * 'partial' (or 'hypothesis') represents a unfinalized speech message.\n                     */\n                    case \"partial\":\n                    /**\n                     * 'final' (or 'phrase') represents a finalized speech message.\n                     */\n                    case \"final\":\n                        const speechPayload = Exports_js_4.SpeechResponsePayload.fromJSON(message.textBody);\n                        const conversationResultReason = (conversationMessageType === \"final\") ? Exports_js_2.ResultReason.TranslatedParticipantSpeech : Exports_js_2.ResultReason.TranslatingParticipantSpeech;\n                        const speechResult = new Exports_js_2.ConversationTranslationResult(speechPayload.participantId, this.getTranslations(speechPayload.translations), speechPayload.language, speechPayload.id, conversationResultReason, speechPayload.recognition, undefined, undefined, message.textBody, undefined);\n                        if (speechPayload.isFinal) {\n                            // check the length, sometimes empty finals are returned\n                            if (speechResult.text !== undefined && speechResult.text.length > 0) {\n                                sendFinal = true;\n                            }\n                            else if (speechPayload.id === this.privLastPartialUtteranceId) {\n                                // send final as normal. We had a non-empty partial for this same utterance\n                                // so sending the empty final is important\n                                sendFinal = true;\n                            }\n                            else {\n                                // suppress unneeded final\n                            }\n                            if (sendFinal) {\n                                if (!!this.privConversationServiceConnector.translationReceived) {\n                                    this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.final, speechResult, sessionId));\n                                }\n                            }\n                        }\n                        else if (speechResult.text !== undefined) {\n                            this.privLastPartialUtteranceId = speechPayload.id;\n                            if (!!this.privConversationServiceConnector.translationReceived) {\n                                this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.partial, speechResult, sessionId));\n                            }\n                        }\n                        break;\n                    /**\n                     * \"translated_message\" is a text message or instant message (IM).\n                     */\n                    case \"translated_message\":\n                        const textPayload = Exports_js_4.TextResponsePayload.fromJSON(message.textBody);\n                        // TODO: (Native parity) a result reason should be set based whether the participantId is ours or not\n                        const textResult = new Exports_js_2.ConversationTranslationResult(textPayload.participantId, this.getTranslations(textPayload.translations), textPayload.language, undefined, undefined, textPayload.originalText, undefined, undefined, undefined, message.textBody, undefined);\n                        if (!!this.privConversationServiceConnector.translationReceived) {\n                            this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.instantMessage, textResult, sessionId));\n                        }\n                        break;\n                    default:\n                        // ignore any unsupported message types\n                        break;\n                }\n            }\n            catch (e) {\n                // continue\n            }\n            return this.receiveConversationMessageOverride();\n        }\n        catch (e) {\n            this.terminateMessageLoop = true;\n        }\n        return communicationCustodian.promise;\n    }\n    async startMessageLoop() {\n        if (this.isDisposed()) {\n            return Promise.resolve();\n        }\n        this.terminateMessageLoop = false;\n        const messageRetrievalPromise = this.receiveConversationMessageOverride();\n        try {\n            const r = await messageRetrievalPromise;\n            return r;\n        }\n        catch (error) {\n            this.cancelRecognition(this.privRequestSession ? this.privRequestSession.sessionId : \"\", this.privRequestSession ? this.privRequestSession.requestId : \"\", Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.RuntimeError, error);\n            return null;\n        }\n    }\n    // Takes an established websocket connection to the endpoint\n    configConnection() {\n        if (this.isDisposed()) {\n            return Promise.resolve(undefined);\n        }\n        if (this.privConnectionConfigPromise !== undefined) {\n            return this.privConnectionConfigPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigPromise = undefined;\n                    return this.configConnection();\n                }\n                return this.privConnectionConfigPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigPromise = undefined;\n                return this.configConnection();\n            });\n        }\n        if (this.terminateMessageLoop) {\n            return Promise.resolve(undefined);\n        }\n        this.privConnectionConfigPromise = this.connectImpl().then((connection) => connection);\n        return this.privConnectionConfigPromise;\n    }\n    getTranslations(serviceResultTranslations) {\n        let translations;\n        if (undefined !== serviceResultTranslations) {\n            translations = new Exports_js_2.Translations();\n            for (const translation of serviceResultTranslations) {\n                translations.set(translation.lang, translation.translation);\n            }\n        }\n        return translations;\n    }\n}\nexports.ConversationServiceAdapter = ConversationServiceAdapter;\n\n//# sourceMappingURL=ConversationServiceAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConversationTranslatorRecognizer = exports.ConversationRecognizerFactory = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst Exports_js_1 = require(\"../../common.speech/Exports.js\");\nconst Exports_js_2 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_3 = require(\"../../sdk/Exports.js\");\nconst ConversationConnectionFactory_js_1 = require(\"./ConversationConnectionFactory.js\");\nconst ConversationServiceAdapter_js_1 = require(\"./ConversationServiceAdapter.js\");\nclass ConversationRecognizerFactory {\n    static fromConfig(conversation, speechConfig, audioConfig) {\n        return new ConversationTranslatorRecognizer(conversation, speechConfig, audioConfig);\n    }\n}\nexports.ConversationRecognizerFactory = ConversationRecognizerFactory;\n/**\n * Sends messages to the Conversation Translator websocket and listens for incoming events containing websocket messages.\n * Based off the recognizers in the SDK folder.\n */\nclass ConversationTranslatorRecognizer extends Exports_js_3.Recognizer {\n    constructor(conversation, speechConfig, audioConfig) {\n        const serviceConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(serviceConfigImpl, \"speechConfig\");\n        const conversationImpl = conversation;\n        Contracts_js_1.Contracts.throwIfNull(conversationImpl, \"conversationImpl\");\n        super(audioConfig, serviceConfigImpl.properties, new ConversationConnectionFactory_js_1.ConversationConnectionFactory());\n        this.privConversation = conversationImpl;\n        this.privIsDisposed = false;\n        this.privProperties = serviceConfigImpl.properties.clone();\n        this.privConnection = Exports_js_3.Connection.fromRecognizer(this);\n        const webWorkerLoadType = this.privProperties.getProperty(Exports_js_3.PropertyId.WebWorkerLoadType, \"on\").toLowerCase();\n        if (webWorkerLoadType === \"on\" && typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\n            this.privSetTimeout = Exports_js_2.Timeout.setTimeout;\n            this.privClearTimeout = Exports_js_2.Timeout.clearTimeout;\n        }\n        else {\n            if (typeof window !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = window.setTimeout.bind(window);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privClearTimeout = window.clearTimeout.bind(window);\n            }\n            else {\n                this.privSetTimeout = setTimeout;\n                this.privClearTimeout = clearTimeout;\n            }\n        }\n    }\n    set connected(cb) {\n        this.privConnection.connected = cb;\n    }\n    set disconnected(cb) {\n        this.privConnection.disconnected = cb;\n    }\n    /**\n     * Return the speech language used by the recognizer\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechRecognitionLanguage;\n    }\n    /**\n     * Return the properties for the recognizer\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    /**\n     * Connect to the recognizer\n     * @param token\n     */\n    connect(token, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n            this.privReco.conversationTranslatorToken = token;\n            this.resetConversationTimeout();\n            this.privReco.connectAsync(cb, err);\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    }\n    /**\n     * Disconnect from the recognizer\n     */\n    disconnect(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (this.privTimeoutToken !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privClearTimeout(this.privTimeoutToken);\n            }\n            this.privReco.disconnect().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the recognizer.\n            this.dispose(true).catch((reason) => {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n            });\n        }\n    }\n    /**\n     * Send the mute all participants command to the websocket\n     * @param conversationId\n     * @param participantId\n     * @param isMuted\n     */\n    sendRequest(command, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            this.sendMessage(command, cb, err);\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the recognizer.\n            this.dispose(true).catch((reason) => {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n            });\n        }\n    }\n    /**\n     * Handle update of service auth token (#694)\n     */\n    onToken(token) {\n        this.privConversation.onToken(token);\n    }\n    /**\n     * Close and dispose the recognizer\n     */\n    async close() {\n        if (!this.privIsDisposed) {\n            if (!!this.privConnection) {\n                this.privConnection.closeConnection();\n                this.privConnection.close();\n            }\n            this.privConnection = undefined;\n            await this.dispose(true);\n        }\n    }\n    /**\n     * Dispose the recognizer\n     * @param disposing\n     */\n    async dispose(disposing) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (disposing) {\n            if (this.privTimeoutToken !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privClearTimeout(this.privTimeoutToken);\n            }\n            this.privIsDisposed = true;\n            if (!!this.privConnection) {\n                this.privConnection.closeConnection();\n                this.privConnection.close();\n                this.privConnection = undefined;\n            }\n            await super.dispose(disposing);\n        }\n    }\n    /**\n     * Create the config for the recognizer\n     * @param speechConfig\n     */\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    /**\n     * Create the service recognizer.\n     * The audio source is redundnant here but is required by the implementation.\n     * @param authentication\n     * @param connectionFactory\n     * @param audioConfig\n     * @param recognizerConfig\n     */\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioSource = audioConfig;\n        return new ConversationServiceAdapter_js_1.ConversationServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\n    }\n    sendMessage(msg, cb, err) {\n        const withAsync = this.privReco;\n        const PromiseToEmptyCallback = (promise, cb, err) => {\n            if (promise !== undefined) {\n                promise.then(() => {\n                    try {\n                        if (!!cb) {\n                            cb();\n                        }\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(`'Unhandled error on promise callback: ${e}'`);\n                        }\n                    }\n                }, (reason) => {\n                    try {\n                        if (!!err) {\n                            err(reason);\n                        }\n                        // eslint-disable-next-line no-empty\n                    }\n                    catch (error) { }\n                });\n            }\n            else {\n                if (!!err) {\n                    err(\"Null promise\");\n                }\n            }\n        };\n        PromiseToEmptyCallback(withAsync.sendMessageAsync(msg), cb, err);\n        this.resetConversationTimeout();\n    }\n    resetConversationTimeout() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.privClearTimeout(this.privTimeoutToken);\n        }\n        this.privTimeoutToken = this.privSetTimeout(() => {\n            this.sendRequest(this.privConversation.getKeepAlive());\n        }, 60000);\n    }\n}\nexports.ConversationTranslatorRecognizer = ConversationTranslatorRecognizer;\n\n//# sourceMappingURL=ConversationTranslatorRecognizer.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranscriberRecognizer = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nconst Exports_js_1 = require(\"../../common/Exports.js\");\nconst Contracts_js_1 = require(\"../../sdk/Contracts.js\");\nconst Exports_js_2 = require(\"../../sdk/Exports.js\");\nconst Exports_js_3 = require(\"../Exports.js\");\nconst PhraseDetectionContext_js_1 = require(\"../ServiceMessages/PhraseDetection/PhraseDetectionContext.js\");\nclass TranscriberRecognizer extends Exports_js_2.Recognizer {\n    /**\n     * TranscriberRecognizer constructor.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechTranslationConfig - Non-audio configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An audio configuration associated with the recognizer\n     */\n    constructor(speechTranslationConfig, audioConfig) {\n        const speechTranslationConfigImpl = speechTranslationConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\n        const audioConfigImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNull(audioConfigImpl, \"audioConfigImpl\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechTranslationConfigImpl.speechRecognitionLanguage, Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechTranslationConfigImpl.properties, new Exports_js_3.TranscriberConnectionFactory());\n        this.privDisposedRecognizer = false;\n        this.isMeetingRecognizer = false;\n    }\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    set conversation(c) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(c, \"Conversation\");\n        this.isMeetingRecognizer = false;\n        this.privConversation = c;\n    }\n    getConversationInfo() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\n        return this.privConversation.conversationInfo;\n    }\n    set meeting(m) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(m, \"Meeting\");\n        this.isMeetingRecognizer = true;\n        this.privMeeting = m;\n    }\n    getMeetingInfo() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privMeeting, \"Meeting\");\n        return this.privMeeting.meetingInfo;\n    }\n    IsMeetingRecognizer() {\n        return this.isMeetingRecognizer;\n    }\n    startContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_1.marshalPromiseToCallbacks)(this.startContinuousRecognitionAsyncImpl(PhraseDetectionContext_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    stopContinuousRecognitionAsync(cb, err) {\n        (0, Exports_js_1.marshalPromiseToCallbacks)(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    async close() {\n        if (!this.privDisposedRecognizer) {\n            await this.dispose(true);\n        }\n    }\n    // Push async join/leave conversation message via serviceRecognizer\n    async pushConversationEvent(conversationInfo, command) {\n        const reco = (this.privReco);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n        await reco.sendSpeechEventAsync(conversationInfo, command);\n    }\n    // Push async join/leave meeting message via serviceRecognizer\n    async pushMeetingEvent(meetingInfo, command) {\n        const reco = (this.privReco);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n        await reco.sendMeetingSpeechEventAsync(meetingInfo, command);\n    }\n    async enforceAudioGating() {\n        const audioConfigImpl = this.audioConfig;\n        const format = await audioConfigImpl.format;\n        const channels = format.channels;\n        if (channels === 1) {\n            if (this.properties.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() !== \"true\") {\n                throw new Error(\"Single channel audio configuration for MeetingTranscriber is currently under private preview, please contact diarizationrequest@microsoft.com for more details\");\n            }\n        }\n        else if (channels !== 8) {\n            throw new Error(`Unsupported audio configuration: Detected ${channels}-channel audio`);\n        }\n        return;\n    }\n    connectMeetingCallbacks(transcriber) {\n        this.isMeetingRecognizer = true;\n        this.canceled = (s, e) => {\n            if (!!transcriber.canceled) {\n                transcriber.canceled(transcriber, e);\n            }\n        };\n        this.recognizing = (s, e) => {\n            if (!!transcriber.transcribing) {\n                transcriber.transcribing(transcriber, e);\n            }\n        };\n        this.recognized = (s, e) => {\n            if (!!transcriber.transcribed) {\n                transcriber.transcribed(transcriber, e);\n            }\n        };\n        this.sessionStarted = (s, e) => {\n            if (!!transcriber.sessionStarted) {\n                transcriber.sessionStarted(transcriber, e);\n            }\n        };\n        this.sessionStopped = (s, e) => {\n            if (!!transcriber.sessionStopped) {\n                transcriber.sessionStopped(transcriber, e);\n            }\n        };\n    }\n    disconnectCallbacks() {\n        this.canceled = undefined;\n        this.recognizing = undefined;\n        this.recognized = undefined;\n        this.sessionStarted = undefined;\n        this.sessionStopped = undefined;\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member ConversationTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_3.RecognizerConfig(speechConfig, this.properties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_3.TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.TranscriberRecognizer = TranscriberRecognizer;\n\n//# sourceMappingURL=TranscriberRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalParticipants = exports.ConversationTranslatorMessageTypes = exports.ConversationTranslatorCommandTypes = exports.ParticipantsListEventArgs = exports.ParticipantEventArgs = exports.ParticipantAttributeEventArgs = exports.MuteAllEventArgs = exports.LockRoomEventArgs = exports.ConversationReceivedTranslationEventArgs = exports.TranscriberRecognizer = exports.ConversationRecognizerFactory = exports.ConversationConnectionConfig = exports.ConversationManager = void 0;\nvar ConversationManager_js_1 = require(\"./ConversationManager.js\");\nObject.defineProperty(exports, \"ConversationManager\", { enumerable: true, get: function () { return ConversationManager_js_1.ConversationManager; } });\nvar ConversationConnectionConfig_js_1 = require(\"./ConversationConnectionConfig.js\");\nObject.defineProperty(exports, \"ConversationConnectionConfig\", { enumerable: true, get: function () { return ConversationConnectionConfig_js_1.ConversationConnectionConfig; } });\nvar ConversationTranslatorRecognizer_js_1 = require(\"./ConversationTranslatorRecognizer.js\");\nObject.defineProperty(exports, \"ConversationRecognizerFactory\", { enumerable: true, get: function () { return ConversationTranslatorRecognizer_js_1.ConversationRecognizerFactory; } });\nvar TranscriberRecognizer_js_1 = require(\"./TranscriberRecognizer.js\");\nObject.defineProperty(exports, \"TranscriberRecognizer\", { enumerable: true, get: function () { return TranscriberRecognizer_js_1.TranscriberRecognizer; } });\nvar ConversationTranslatorEventArgs_js_1 = require(\"./ConversationTranslatorEventArgs.js\");\nObject.defineProperty(exports, \"ConversationReceivedTranslationEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs; } });\nObject.defineProperty(exports, \"LockRoomEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.LockRoomEventArgs; } });\nObject.defineProperty(exports, \"MuteAllEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.MuteAllEventArgs; } });\nObject.defineProperty(exports, \"ParticipantAttributeEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs; } });\nObject.defineProperty(exports, \"ParticipantEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantEventArgs; } });\nObject.defineProperty(exports, \"ParticipantsListEventArgs\", { enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantsListEventArgs; } });\nvar ConversationTranslatorInterfaces_js_1 = require(\"./ConversationTranslatorInterfaces.js\");\nObject.defineProperty(exports, \"ConversationTranslatorCommandTypes\", { enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes; } });\nObject.defineProperty(exports, \"ConversationTranslatorMessageTypes\", { enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes; } });\nObject.defineProperty(exports, \"InternalParticipants\", { enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.InternalParticipants; } });\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisAudioMetadata = exports.MetadataType = void 0;\nvar MetadataType;\n(function (MetadataType) {\n    MetadataType[\"WordBoundary\"] = \"WordBoundary\";\n    MetadataType[\"Bookmark\"] = \"Bookmark\";\n    MetadataType[\"Viseme\"] = \"Viseme\";\n    MetadataType[\"SentenceBoundary\"] = \"SentenceBoundary\";\n    MetadataType[\"SessionEnd\"] = \"SessionEnd\";\n    MetadataType[\"AvatarSignal\"] = \"TalkingAvatarSignal\";\n})(MetadataType = exports.MetadataType || (exports.MetadataType = {}));\nclass SynthesisAudioMetadata {\n    constructor(json) {\n        this.privSynthesisAudioMetadata = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new SynthesisAudioMetadata(json);\n    }\n    get Metadata() {\n        return this.privSynthesisAudioMetadata.Metadata;\n    }\n}\nexports.SynthesisAudioMetadata = SynthesisAudioMetadata;\n\n//# sourceMappingURL=SynthesisAudioMetadata.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisStartedEvent = exports.ConnectingToSynthesisServiceEvent = exports.SynthesisTriggeredEvent = exports.SpeechSynthesisEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../common/Exports.js\");\nclass SpeechSynthesisEvent extends Exports_js_1.PlatformEvent {\n    constructor(eventName, requestId, eventType = Exports_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privRequestId = requestId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n}\nexports.SpeechSynthesisEvent = SpeechSynthesisEvent;\nclass SynthesisTriggeredEvent extends SpeechSynthesisEvent {\n    constructor(requestId, sessionAudioDestinationId, turnAudioDestinationId) {\n        super(\"SynthesisTriggeredEvent\", requestId);\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\n    }\n    get audioSessionDestinationId() {\n        return this.privSessionAudioDestinationId;\n    }\n    get audioTurnDestinationId() {\n        return this.privTurnAudioDestinationId;\n    }\n}\nexports.SynthesisTriggeredEvent = SynthesisTriggeredEvent;\nclass ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\n    constructor(requestId, authFetchEventId) {\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.ConnectingToSynthesisServiceEvent = ConnectingToSynthesisServiceEvent;\nclass SynthesisStartedEvent extends SpeechSynthesisEvent {\n    constructor(requestId, authFetchEventId) {\n        super(\"SynthesisStartedEvent\", requestId);\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.SynthesisStartedEvent = SynthesisStartedEvent;\n\n//# sourceMappingURL=SynthesisEvents.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisTurn = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst AudioOutputStream_js_1 = require(\"../sdk/Audio/AudioOutputStream.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst SynthesisAudioMetadata_js_1 = require(\"./ServiceMessages/SynthesisAudioMetadata.js\");\nconst SynthesisEvents_js_1 = require(\"./SynthesisEvents.js\");\nclass SynthesisTurn {\n    constructor() {\n        this.privIsDisposed = false;\n        this.privIsSynthesizing = false;\n        this.privIsSynthesisEnded = false;\n        this.privBytesReceived = 0;\n        this.privInTurn = false;\n        this.privTextOffset = 0;\n        this.privNextSearchTextIndex = 0;\n        this.privSentenceOffset = 0;\n        this.privNextSearchSentenceIndex = 0;\n        this.privRequestId = (0, Exports_js_1.createNoDashGuid)();\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        // We're not in a turn, so resolve.\n        this.privTurnDeferral.resolve();\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get streamId() {\n        return this.privStreamId;\n    }\n    set streamId(value) {\n        this.privStreamId = value;\n    }\n    get audioOutputFormat() {\n        return this.privAudioOutputFormat;\n    }\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n    }\n    get turnCompletionPromise() {\n        return this.privTurnDeferral.promise;\n    }\n    get isSynthesisEnded() {\n        return this.privIsSynthesisEnded;\n    }\n    get isSynthesizing() {\n        return this.privIsSynthesizing;\n    }\n    get currentTextOffset() {\n        return this.privTextOffset;\n    }\n    get currentSentenceOffset() {\n        return this.privSentenceOffset;\n    }\n    // The number of bytes received for current turn\n    get bytesReceived() {\n        return this.privBytesReceived;\n    }\n    get audioDuration() {\n        return this.privAudioDuration;\n    }\n    get extraProperties() {\n        if (!!this.privWebRTCSDP) {\n            const properties = new Exports_js_2.PropertyCollection();\n            properties.setProperty(Exports_js_2.PropertyId.TalkingAvatarService_WebRTC_SDP, this.privWebRTCSDP);\n            return properties;\n        }\n        return undefined;\n    }\n    async getAllReceivedAudio() {\n        if (!!this.privReceivedAudio) {\n            return Promise.resolve(this.privReceivedAudio);\n        }\n        if (!this.privIsSynthesisEnded) {\n            return null;\n        }\n        await this.readAllAudioFromStream();\n        return Promise.resolve(this.privReceivedAudio);\n    }\n    async getAllReceivedAudioWithHeader() {\n        if (!!this.privReceivedAudioWithHeader) {\n            return this.privReceivedAudioWithHeader;\n        }\n        if (!this.privIsSynthesisEnded) {\n            return null;\n        }\n        if (this.audioOutputFormat.hasHeader) {\n            const audio = await this.getAllReceivedAudio();\n            this.privReceivedAudioWithHeader = this.audioOutputFormat.addHeader(audio);\n            return this.privReceivedAudioWithHeader;\n        }\n        else {\n            return this.getAllReceivedAudio();\n        }\n    }\n    startNewSynthesis(requestId, rawText, isSSML, audioDestination) {\n        this.privIsSynthesisEnded = false;\n        this.privIsSynthesizing = true;\n        this.privRequestId = requestId;\n        this.privRawText = rawText;\n        this.privIsSSML = isSSML;\n        this.privAudioOutputStream = new AudioOutputStream_js_1.PullAudioOutputStreamImpl();\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\n        this.privReceivedAudio = null;\n        this.privReceivedAudioWithHeader = null;\n        this.privBytesReceived = 0;\n        this.privTextOffset = 0;\n        this.privNextSearchTextIndex = 0;\n        this.privSentenceOffset = 0;\n        this.privNextSearchSentenceIndex = 0;\n        this.privPartialVisemeAnimation = \"\";\n        this.privWebRTCSDP = \"\";\n        if (audioDestination !== undefined) {\n            this.privTurnAudioDestination = audioDestination;\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\n        }\n        this.onEvent(new SynthesisEvents_js_1.SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\n    }\n    onPreConnectionStart(authFetchEventId) {\n        this.privAuthFetchEventId = authFetchEventId;\n        this.onEvent(new SynthesisEvents_js_1.ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\n    }\n    onAuthCompleted(isError) {\n        if (isError) {\n            this.onComplete();\n        }\n    }\n    onConnectionEstablishCompleted(statusCode) {\n        if (statusCode === 200) {\n            this.onEvent(new SynthesisEvents_js_1.SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\n            this.privBytesReceived = 0;\n            return;\n        }\n        else if (statusCode === 403) {\n            this.onComplete();\n        }\n    }\n    onServiceResponseMessage(responseJson) {\n        const response = JSON.parse(responseJson);\n        this.streamId = response.audio.streamId;\n    }\n    onServiceTurnEndResponse() {\n        this.privInTurn = false;\n        this.privTurnDeferral.resolve();\n        this.onComplete();\n    }\n    onServiceTurnStartResponse(responseJson) {\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\n            // What? How are we starting a turn with another not done?\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            this.privTurnDeferral.promise.then().catch(() => { });\n        }\n        this.privInTurn = true;\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        const response = JSON.parse(responseJson);\n        if (!!response.webrtc) {\n            this.privWebRTCSDP = response.webrtc.connectionString;\n        }\n    }\n    onAudioChunkReceived(data) {\n        if (this.isSynthesizing) {\n            this.privAudioOutputStream.write(data);\n            this.privBytesReceived += data.byteLength;\n            if (this.privTurnAudioDestination !== undefined) {\n                this.privTurnAudioDestination.write(data);\n            }\n        }\n    }\n    onTextBoundaryEvent(metadata) {\n        this.updateTextOffset(metadata.Data.text.Text, metadata.Type);\n    }\n    onVisemeMetadataReceived(metadata) {\n        if (metadata.Data.AnimationChunk !== undefined) {\n            this.privPartialVisemeAnimation += metadata.Data.AnimationChunk;\n        }\n    }\n    onSessionEnd(metadata) {\n        this.privAudioDuration = metadata.Data.Offset;\n    }\n    async constructSynthesisResult() {\n        const audioBuffer = await this.getAllReceivedAudioWithHeader();\n        return new Exports_js_2.SpeechSynthesisResult(this.requestId, Exports_js_2.ResultReason.SynthesizingAudioCompleted, audioBuffer, undefined, this.extraProperties, this.audioDuration);\n    }\n    dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n        }\n    }\n    onStopSynthesizing() {\n        this.onComplete();\n    }\n    /**\n     * Gets the viseme animation string (merged from animation chunk), and clears the internal\n     * partial animation.\n     */\n    getAndClearVisemeAnimation() {\n        const animation = this.privPartialVisemeAnimation;\n        this.privPartialVisemeAnimation = \"\";\n        return animation;\n    }\n    onEvent(event) {\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    /**\n     * Check if the text is an XML(SSML) tag\n     * @param text\n     * @private\n     */\n    static isXmlTag(text) {\n        return text.length >= 2 && text[0] === \"<\" && text[text.length - 1] === \">\";\n    }\n    updateTextOffset(text, type) {\n        if (type === SynthesisAudioMetadata_js_1.MetadataType.WordBoundary) {\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\n            if (this.privTextOffset >= 0) {\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\n                if (this.privIsSSML) {\n                    if (this.withinXmlTag(this.privTextOffset) && !SynthesisTurn.isXmlTag(text)) {\n                        this.updateTextOffset(text, type);\n                    }\n                }\n            }\n        }\n        else {\n            this.privSentenceOffset = this.privRawText.indexOf(text, this.privNextSearchSentenceIndex);\n            if (this.privSentenceOffset >= 0) {\n                this.privNextSearchSentenceIndex = this.privSentenceOffset + text.length;\n                if (this.privIsSSML) {\n                    if (this.withinXmlTag(this.privSentenceOffset) && !SynthesisTurn.isXmlTag(text)) {\n                        this.updateTextOffset(text, type);\n                    }\n                }\n            }\n        }\n    }\n    onComplete() {\n        if (this.privIsSynthesizing) {\n            this.privIsSynthesizing = false;\n            this.privIsSynthesisEnded = true;\n            this.privAudioOutputStream.close();\n            this.privInTurn = false;\n            if (this.privTurnAudioDestination !== undefined) {\n                this.privTurnAudioDestination.close();\n                this.privTurnAudioDestination = undefined;\n            }\n        }\n    }\n    async readAllAudioFromStream() {\n        if (this.privIsSynthesisEnded) {\n            this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\n            try {\n                await this.privAudioOutputStream.read(this.privReceivedAudio);\n            }\n            catch (e) {\n                this.privReceivedAudio = new ArrayBuffer(0);\n            }\n        }\n    }\n    /**\n     * Check if current idx is in XML(SSML) tag\n     * @param idx\n     * @private\n     */\n    withinXmlTag(idx) {\n        return this.privRawText.indexOf(\"<\", idx + 1) > this.privRawText.indexOf(\">\", idx + 1);\n    }\n}\nexports.SynthesisTurn = SynthesisTurn;\n\n//# sourceMappingURL=SynthesisTurn.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisAdapterBase = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst Exports_js_3 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\nclass SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, audioDestination) {\n        this.speakOverride = undefined;\n        this.receiveMessageOverride = undefined;\n        this.connectImplOverride = undefined;\n        this.configConnectionOverride = undefined;\n        // A promise for a configured connection.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionConfigurationPromise = undefined;\n        if (!authentication) {\n            throw new Exports_js_1.ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new Exports_js_1.ArgumentNullError(\"connectionFactory\");\n        }\n        if (!synthesizerConfig) {\n            throw new Exports_js_1.ArgumentNullError(\"synthesizerConfig\");\n        }\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privSynthesizerConfig = synthesizerConfig;\n        this.privIsDisposed = false;\n        this.privSessionAudioDestination = audioDestination;\n        this.privSynthesisTurn = new Exports_js_3.SynthesisTurn();\n        this.privConnectionEvents = new Exports_js_1.EventSource();\n        this.privServiceEvents = new Exports_js_1.EventSource();\n        this.privSynthesisContext = new Exports_js_3.SynthesisContext();\n        this.privAgentConfig = new Exports_js_3.AgentConfig();\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                const connectionClosedEvent = connectionEvent;\n                if (connectionClosedEvent.statusCode !== 1000) {\n                    this.cancelSynthesisLocal(Exports_js_2.CancellationReason.Error, connectionClosedEvent.statusCode === 1007 ? Exports_js_2.CancellationErrorCode.BadRequestParameters : Exports_js_2.CancellationErrorCode.ConnectionFailure, `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\n                }\n            }\n        });\n    }\n    get synthesizerConfig() {\n        return this.privSynthesizerConfig;\n    }\n    get synthesisContext() {\n        return this.privSynthesisContext;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n    get connectionEvents() {\n        return this.privConnectionEvents;\n    }\n    get serviceEvents() {\n        return this.privServiceEvents;\n    }\n    set activityTemplate(messagePayload) {\n        this.privActivityTemplate = messagePayload;\n    }\n    get activityTemplate() {\n        return this.privActivityTemplate;\n    }\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n        this.privSynthesisTurn.audioOutputFormat = format;\n        if (this.privSessionAudioDestination !== undefined) {\n            this.privSessionAudioDestination.format = format;\n        }\n        if (this.synthesisContext !== undefined) {\n            this.synthesisContext.audioOutputFormat = format;\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    async dispose(reason) {\n        this.privIsDisposed = true;\n        if (this.privSessionAudioDestination !== undefined) {\n            this.privSessionAudioDestination.close();\n        }\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            const connection = await this.privConnectionConfigurationPromise;\n            await connection.dispose(reason);\n        }\n    }\n    async connect() {\n        await this.connectImpl();\n    }\n    async sendNetworkMessage(path, payload) {\n        const type = typeof payload === \"string\" ? Exports_js_1.MessageType.Text : Exports_js_1.MessageType.Binary;\n        const contentType = typeof payload === \"string\" ? \"application/json\" : \"\";\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\n    }\n    async Speak(text, isSSML, requestId, successCallback, errorCallBack, audioDestination) {\n        let ssml;\n        if (isSSML) {\n            ssml = text;\n        }\n        else {\n            ssml = this.privSynthesizer.buildSsml(text);\n        }\n        if (this.speakOverride !== undefined) {\n            return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\n        }\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallBack;\n        this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\n        try {\n            await this.connectImpl();\n            const connection = await this.fetchConnection();\n            await this.sendSynthesisContext(connection);\n            await this.sendSsmlMessage(connection, ssml, requestId);\n            this.onSynthesisStarted(requestId);\n            void this.receiveMessage();\n        }\n        catch (e) {\n            this.cancelSynthesisLocal(Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.ConnectionFailure, e);\n            return Promise.reject(e);\n        }\n    }\n    async stopSpeaking() {\n        await this.connectImpl();\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"synthesis.control\", this.privSynthesisTurn.requestId, \"application/json\", JSON.stringify({\n            action: \"stop\"\n        })));\n    }\n    // Cancels synthesis.\n    cancelSynthesis(requestId, _cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        const result = new Exports_js_2.SpeechSynthesisResult(requestId, Exports_js_2.ResultReason.Canceled, undefined, error, properties);\n        this.onSynthesisCancelled(result);\n        if (!!this.privSuccessCallback) {\n            try {\n                this.privSuccessCallback(result);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    // Cancels synthesis.\n    cancelSynthesisLocal(cancellationReason, errorCode, error) {\n        if (!!this.privSynthesisTurn.isSynthesizing) {\n            this.privSynthesisTurn.onStopSynthesizing();\n            this.cancelSynthesis(this.privSynthesisTurn.requestId, cancellationReason, errorCode, error);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    processTypeSpecificMessages(_connectionMessage) {\n        return true;\n    }\n    async receiveMessage() {\n        try {\n            const connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.receiveMessageOverride !== undefined) {\n                return this.receiveMessageOverride();\n            }\n            if (this.privIsDisposed) {\n                // We're done.\n                return;\n            }\n            // indicates we are draining the queue and it came with no message;\n            if (!message) {\n                if (!this.privSynthesisTurn.isSynthesizing) {\n                    return;\n                }\n                else {\n                    return this.receiveMessage();\n                }\n            }\n            const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n            if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        this.privSynthesisTurn.onServiceTurnStartResponse(connectionMessage.textBody);\n                        break;\n                    case \"response\":\n                        this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\n                        break;\n                    case \"audio\":\n                        if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\n                            && !!connectionMessage.binaryBody) {\n                            this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\n                            this.onSynthesizing(connectionMessage.binaryBody);\n                            if (this.privSessionAudioDestination !== undefined) {\n                                this.privSessionAudioDestination.write(connectionMessage.binaryBody);\n                            }\n                        }\n                        break;\n                    case \"audio.metadata\":\n                        const metadataList = Exports_js_3.SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\n                        for (const metadata of metadataList) {\n                            switch (metadata.Type) {\n                                case Exports_js_3.MetadataType.WordBoundary:\n                                case Exports_js_3.MetadataType.SentenceBoundary:\n                                    this.privSynthesisTurn.onTextBoundaryEvent(metadata);\n                                    const wordBoundaryEventArgs = new Exports_js_2.SpeechSynthesisWordBoundaryEventArgs(metadata.Data.Offset, metadata.Data.Duration, metadata.Data.text.Text, metadata.Data.text.Length, metadata.Type === Exports_js_3.MetadataType.WordBoundary\n                                        ? this.privSynthesisTurn.currentTextOffset : this.privSynthesisTurn.currentSentenceOffset, metadata.Data.text.BoundaryType);\n                                    this.onWordBoundary(wordBoundaryEventArgs);\n                                    break;\n                                case Exports_js_3.MetadataType.Bookmark:\n                                    const bookmarkEventArgs = new Exports_js_2.SpeechSynthesisBookmarkEventArgs(metadata.Data.Offset, metadata.Data.Bookmark);\n                                    this.onBookmarkReached(bookmarkEventArgs);\n                                    break;\n                                case Exports_js_3.MetadataType.Viseme:\n                                    this.privSynthesisTurn.onVisemeMetadataReceived(metadata);\n                                    if (metadata.Data.IsLastAnimation) {\n                                        const visemeEventArgs = new Exports_js_2.SpeechSynthesisVisemeEventArgs(metadata.Data.Offset, metadata.Data.VisemeId, this.privSynthesisTurn.getAndClearVisemeAnimation());\n                                        this.onVisemeReceived(visemeEventArgs);\n                                    }\n                                    break;\n                                case Exports_js_3.MetadataType.AvatarSignal:\n                                    this.onAvatarEvent(metadata);\n                                    break;\n                                case Exports_js_3.MetadataType.SessionEnd:\n                                    this.privSynthesisTurn.onSessionEnd(metadata);\n                                    break;\n                            }\n                        }\n                        break;\n                    case \"turn.end\":\n                        this.privSynthesisTurn.onServiceTurnEndResponse();\n                        let result;\n                        try {\n                            result = await this.privSynthesisTurn.constructSynthesisResult();\n                            if (!!this.privSuccessCallback) {\n                                this.privSuccessCallback(result);\n                            }\n                        }\n                        catch (error) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(error);\n                            }\n                        }\n                        this.onSynthesisCompleted(result);\n                        break;\n                    default:\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\n                            if (!!this.privServiceEvents) {\n                                this.serviceEvents.onEvent(new Exports_js_1.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                            }\n                        }\n                }\n            }\n            return this.receiveMessage();\n        }\n        catch (e) {\n            // TODO: What goes here?\n        }\n    }\n    sendSynthesisContext(connection) {\n        this.setSynthesisContextSynthesisSection();\n        const synthesisContextJson = this.synthesisContext.toJSON();\n        if (synthesisContextJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"synthesis.context\", this.privSynthesisTurn.requestId, \"application/json\", synthesisContextJson));\n        }\n        return;\n    }\n    setSpeechConfigSynthesisSection() {\n        return;\n    }\n    connectImpl(isUnAuthorized = false) {\n        if (this.privConnectionPromise != null) {\n            return this.privConnectionPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionPromise = null;\n                    return this.connectImpl();\n                }\n                return this.privConnectionPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionPromise = null;\n                return this.connectImpl();\n            });\n        }\n        this.privAuthFetchEventId = (0, Exports_js_1.createNoDashGuid)();\n        this.privConnectionId = (0, Exports_js_1.createNoDashGuid)();\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId);\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n        this.privConnectionPromise = authPromise.then(async (result) => {\n            this.privSynthesisTurn.onAuthCompleted(false);\n            const connection = await this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach((event) => {\n                this.connectionEvents.onEvent(event);\n            });\n            const response = await connection.open();\n            if (response.statusCode === 200) {\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.resolve(connection);\n            }\n            else if (response.statusCode === 403 && !isUnAuthorized) {\n                return this.connectImpl(true);\n            }\n            else {\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode},\r\n                    ${this.privSynthesizerConfig.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url)} Reason: ${response.reason}`);\n            }\n        }, (error) => {\n            this.privSynthesisTurn.onAuthCompleted(true);\n            throw new Error(error);\n        });\n        // Attach an empty handler to allow the promise to run in the background while\n        // other startup events happen. It'll eventually be awaited on.\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.privConnectionPromise.catch(() => { });\n        return this.privConnectionPromise;\n    }\n    sendSpeechServiceConfig(connection, SpeechServiceConfigJson) {\n        if (SpeechServiceConfigJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"speech.config\", this.privSynthesisTurn.requestId, \"application/json\", SpeechServiceConfigJson));\n        }\n    }\n    sendSsmlMessage(connection, ssml, requestId) {\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"ssml\", requestId, \"application/ssml+xml\", ssml));\n    }\n    async fetchConnection() {\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            return this.privConnectionConfigurationPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigurationPromise = undefined;\n                    return this.fetchConnection();\n                }\n                return this.privConnectionConfigurationPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigurationPromise = undefined;\n                return this.fetchConnection();\n            });\n        }\n        this.privConnectionConfigurationPromise = this.configureConnection();\n        return await this.privConnectionConfigurationPromise;\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configureConnection() {\n        const connection = await this.connectImpl();\n        if (this.configConnectionOverride !== undefined) {\n            return this.configConnectionOverride(connection);\n        }\n        this.setSpeechConfigSynthesisSection();\n        await this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\n        return connection;\n    }\n    onAvatarEvent(_metadata) {\n        return;\n    }\n    onSynthesisStarted(_requestId) {\n        return;\n    }\n    onSynthesizing(_audio) {\n        return;\n    }\n    onSynthesisCancelled(_result) {\n        return;\n    }\n    onSynthesisCompleted(_result) {\n        return;\n    }\n    onWordBoundary(_wordBoundaryEventArgs) {\n        return;\n    }\n    onVisemeReceived(_visemeEventArgs) {\n        return;\n    }\n    onBookmarkReached(_bookmarkEventArgs) {\n        return;\n    }\n}\nexports.SynthesisAdapterBase = SynthesisAdapterBase;\nSynthesisAdapterBase.telemetryDataEnabled = true;\n\n//# sourceMappingURL=SynthesisAdapterBase.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvatarSynthesisAdapter = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass AvatarSynthesisAdapter extends Exports_js_2.SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, avatarSynthesizer, avatarConfig) {\n        super(authentication, connectionFactory, synthesizerConfig, undefined);\n        this.privAvatarSynthesizer = avatarSynthesizer;\n        this.privSynthesizer = avatarSynthesizer;\n        this.privAvatarConfig = avatarConfig;\n    }\n    setSynthesisContextSynthesisSection() {\n        this.privSynthesisContext.setSynthesisSection(undefined);\n    }\n    setSpeechConfigSynthesisSection() {\n        this.privSynthesizerConfig.synthesisVideoSection = {\n            format: {\n                bitrate: this.privAvatarConfig.videoFormat?.bitrate,\n                codec: this.privAvatarConfig.videoFormat?.codec,\n                crop: {\n                    bottomRight: {\n                        x: this.privAvatarConfig.videoFormat?.cropRange?.bottomRight?.x,\n                        y: this.privAvatarConfig.videoFormat?.cropRange?.bottomRight?.y,\n                    },\n                    topLeft: {\n                        x: this.privAvatarConfig.videoFormat?.cropRange?.topLeft?.x,\n                        y: this.privAvatarConfig.videoFormat?.cropRange?.topLeft?.y,\n                    },\n                },\n                resolution: {\n                    height: this.privAvatarConfig.videoFormat?.height,\n                    width: this.privAvatarConfig.videoFormat?.width,\n                },\n            },\n            protocol: {\n                name: \"WebRTC\",\n                webrtcConfig: {\n                    clientDescription: btoa(this.privSynthesizerConfig.parameters.getProperty(Exports_js_1.PropertyId.TalkingAvatarService_WebRTC_SDP)),\n                    iceServers: this.privAvatarConfig.remoteIceServers ?? this.privAvatarSynthesizer.iceServers,\n                },\n            },\n            talkingAvatar: {\n                background: {\n                    color: this.privAvatarConfig.backgroundColor,\n                    image: {\n                        url: this.privAvatarConfig.backgroundImage?.toString(),\n                    }\n                },\n                character: this.privAvatarConfig.character,\n                customized: this.privAvatarConfig.customized,\n                style: this.privAvatarConfig.style,\n                useBuiltInVoice: this.privAvatarConfig.useBuiltInVoice,\n            }\n        };\n    }\n    onAvatarEvent(metadata) {\n        if (!!this.privAvatarSynthesizer.avatarEventReceived) {\n            const avatarEventArgs = new Exports_js_1.AvatarEventArgs(metadata.Data.Offset, metadata.Data.Name);\n            try {\n                this.privAvatarSynthesizer.avatarEventReceived(this.privAvatarSynthesizer, avatarEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.AvatarSynthesisAdapter = AvatarSynthesisAdapter;\n\n//# sourceMappingURL=AvatarSynthesisAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechSynthesisAdapter = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass SpeechSynthesisAdapter extends Exports_js_2.SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, speechSynthesizer, audioDestination) {\n        super(authentication, connectionFactory, synthesizerConfig, audioDestination);\n        this.privSpeechSynthesizer = speechSynthesizer;\n        this.privSynthesizer = speechSynthesizer;\n    }\n    setSynthesisContextSynthesisSection() {\n        this.privSynthesisContext.setSynthesisSection(this.privSpeechSynthesizer);\n    }\n    onSynthesisStarted(requestId) {\n        const synthesisStartEventArgs = new Exports_js_1.SpeechSynthesisEventArgs(new Exports_js_1.SpeechSynthesisResult(requestId, Exports_js_1.ResultReason.SynthesizingAudioStarted));\n        if (!!this.privSpeechSynthesizer.synthesisStarted) {\n            this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\n        }\n    }\n    onSynthesizing(audio) {\n        if (!!this.privSpeechSynthesizer.synthesizing) {\n            try {\n                const audioWithHeader = this.privSynthesisTurn.audioOutputFormat.addHeader(audio);\n                const ev = new Exports_js_1.SpeechSynthesisEventArgs(new Exports_js_1.SpeechSynthesisResult(this.privSynthesisTurn.requestId, Exports_js_1.ResultReason.SynthesizingAudio, audioWithHeader));\n                this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onSynthesisCancelled(result) {\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\n            const cancelEvent = new Exports_js_1.SpeechSynthesisEventArgs(result);\n            try {\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    onSynthesisCompleted(result) {\n        if (this.privSpeechSynthesizer.synthesisCompleted) {\n            try {\n                this.privSpeechSynthesizer.synthesisCompleted(this.privSpeechSynthesizer, new Exports_js_1.SpeechSynthesisEventArgs(result));\n            }\n            catch (e) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onWordBoundary(wordBoundaryEventArgs) {\n        if (!!this.privSpeechSynthesizer.wordBoundary) {\n            try {\n                this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onVisemeReceived(visemeEventArgs) {\n        if (!!this.privSpeechSynthesizer.visemeReceived) {\n            try {\n                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onBookmarkReached(bookmarkEventArgs) {\n        if (!!this.privSpeechSynthesizer.bookmarkReached) {\n            try {\n                this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.SpeechSynthesisAdapter = SpeechSynthesisAdapter;\n\n//# sourceMappingURL=SpeechSynthesisAdapter.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisRestAdapter = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = require(\"./ConnectionFactoryBase.js\");\nconst HeaderNames_js_1 = require(\"./HeaderNames.js\");\n/**\n * Implements methods for speaker recognition classes, sending requests to endpoint\n * and parsing response into expected format\n * @class SynthesisRestAdapter\n */\nclass SynthesisRestAdapter {\n    constructor(config, authentication) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"westus\");\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, `https://${region}.tts.speech${hostSuffix}`);\n        }\n        this.privUri = `${endpoint}/cognitiveservices/voices/list`;\n        const options = Exports_js_1.RestConfigBase.requestOptions;\n        this.privRestAdapter = new Exports_js_1.RestMessageAdapter(options);\n        this.privAuthentication = authentication;\n    }\n    /**\n     * Sends list voices request to endpoint.\n     * @function\n     * @public\n     * @param connectionId - guid for connectionId\n     * @returns {Promise<IRestResponse>} rest response to status request\n     */\n    getVoicesList(connectionId) {\n        this.privRestAdapter.setHeaders(HeaderNames_js_1.HeaderNames.ConnectionId, connectionId);\n        return this.privAuthentication.fetch(connectionId).then((authInfo) => {\n            this.privRestAdapter.setHeaders(authInfo.headerName, authInfo.token);\n            return this.privRestAdapter.request(Exports_js_1.RestRequestType.Get, this.privUri);\n        });\n    }\n}\nexports.SynthesisRestAdapter = SynthesisRestAdapter;\n\n//# sourceMappingURL=SynthesisRestAdapter.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesizerConfig = exports.SynthesisServiceType = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\nvar SynthesisServiceType;\n(function (SynthesisServiceType) {\n    SynthesisServiceType[SynthesisServiceType[\"Standard\"] = 0] = \"Standard\";\n    SynthesisServiceType[SynthesisServiceType[\"Custom\"] = 1] = \"Custom\";\n})(SynthesisServiceType = exports.SynthesisServiceType || (exports.SynthesisServiceType = {}));\nclass SynthesizerConfig {\n    constructor(speechServiceConfig, parameters) {\n        this.privSynthesisServiceType = SynthesisServiceType.Standard;\n        this.avatarEnabled = false;\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(null));\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get synthesisServiceType() {\n        return this.privSynthesisServiceType;\n    }\n    set synthesisServiceType(value) {\n        this.privSynthesisServiceType = value;\n    }\n    set synthesisVideoSection(value) {\n        this.privSpeechServiceConfig.Context.synthesis = {\n            video: value\n        };\n    }\n    get SpeechServiceConfig() {\n        return this.privSpeechServiceConfig;\n    }\n    setContextFromJson(contextJson) {\n        const context = JSON.parse(contextJson);\n        if (context.system) {\n            this.privSpeechServiceConfig.Context.system = context.system;\n        }\n        if (context.os) {\n            this.privSpeechServiceConfig.Context.os = context.os;\n        }\n        if (context.audio) {\n            this.privSpeechServiceConfig.Context.audio = context.audio;\n        }\n        if (context.synthesis) {\n            this.privSpeechServiceConfig.Context.synthesis = context.synthesis;\n        }\n    }\n}\nexports.SynthesizerConfig = SynthesizerConfig;\n\n//# sourceMappingURL=SynthesizerConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SynthesisContext = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\n/**\n * Represents the JSON used in the synthesis.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nclass SynthesisContext {\n    constructor() {\n        this.privContext = {};\n    }\n    /**\n     * Adds a section to the synthesis.context object.\n     * @param sectionName Name of the section to add.\n     * @param value JSON serializable object that represents the value.\n     */\n    setSection(sectionName, value) {\n        this.privContext[sectionName] = value;\n    }\n    /**\n     * Sets the audio output format for synthesis context generation.\n     * @param format {AudioOutputFormatImpl} the output format\n     */\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n    }\n    toJSON() {\n        return JSON.stringify(this.privContext);\n    }\n    setSynthesisSection(speechSynthesizer) {\n        const synthesisSection = this.buildSynthesisContext(speechSynthesizer);\n        this.setSection(\"synthesis\", synthesisSection);\n    }\n    buildSynthesisContext(speechSynthesizer) {\n        return {\n            audio: {\n                metadataOptions: {\n                    bookmarkEnabled: (!!speechSynthesizer?.bookmarkReached),\n                    punctuationBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestPunctuationBoundary, (!!speechSynthesizer?.wordBoundary)),\n                    sentenceBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestSentenceBoundary, false),\n                    sessionEndEnabled: true,\n                    visemeEnabled: (!!speechSynthesizer?.visemeReceived),\n                    wordBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestWordBoundary, (!!speechSynthesizer?.wordBoundary)),\n                },\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\n            },\n            language: {\n                autoDetection: speechSynthesizer?.autoDetectSourceLanguage\n            }\n        };\n    }\n}\nexports.SynthesisContext = SynthesisContext;\n\n//# sourceMappingURL=SynthesisContext.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerRecognitionConfig = void 0;\nconst Exports_js_1 = require(\"./Exports.js\");\nclass SpeakerRecognitionConfig {\n    constructor(context, parameters) {\n        this.privContext = context ? context : new Exports_js_1.Context(null);\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get Context() {\n        return this.privContext;\n    }\n}\nexports.SpeakerRecognitionConfig = SpeakerRecognitionConfig;\n\n//# sourceMappingURL=SpeakerRecognitionConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeakerServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass SpeakerServiceRecognizer extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privSpeakerRecognizer = recognizer;\n        this.privSpeakerAudioSource = audioSource;\n        this.recognizeSpeaker = (model) => this.recognizeSpeakerOnce(model);\n        this.sendPrePayloadJSONOverride = () => this.noOp();\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let processed = false;\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speaker.response\":\n                const response = JSON.parse(connectionMessage.textBody);\n                let result;\n                if (response.status.statusCode.toLowerCase() !== \"success\") {\n                    result = new Exports_js_3.SpeakerRecognitionResult(response, Exports_js_3.ResultReason.Canceled, Exports_js_3.CancellationErrorCode.ServiceError, response.status.reason);\n                }\n                else {\n                    result = new Exports_js_3.SpeakerRecognitionResult(response, Exports_js_3.ResultReason.RecognizedSpeaker);\n                }\n                if (!!this.privResultDeferral) {\n                    this.privResultDeferral.resolve(result);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_3.PropertyCollection();\n        properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n        if (!!this.privResultDeferral) {\n            const result = new Exports_js_3.SpeakerRecognitionResult({\n                scenario: this.privSpeakerModel.scenario,\n                status: { statusCode: error, reason: error }\n            }, Exports_js_3.ResultReason.Canceled, errorCode, error);\n            try {\n                this.privResultDeferral.resolve(result);\n            }\n            catch (error) {\n                this.privResultDeferral.reject(error);\n            }\n        }\n    }\n    async recognizeSpeakerOnce(model) {\n        this.privSpeakerModel = model;\n        this.voiceProfileType = model.scenario;\n        if (!this.privResultDeferral) {\n            this.privResultDeferral = new Exports_js_2.Deferred();\n        }\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages(this.extractSpeakerContext(model));\n        const node = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privSpeakerAudioSource.format;\n        const deviceInfo = await this.privSpeakerAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (err) {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, err);\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, (error) => {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return this.privResultDeferral.promise;\n    }\n    async sendPreAudioMessages(context) {\n        const connection = await this.fetchConnection();\n        await this.sendSpeakerRecognition(connection, context);\n        // await this.sendWaveHeader(connection);\n    }\n    async sendSpeakerRecognition(connection, context) {\n        const speakerContextJson = JSON.stringify(context);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.context\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", speakerContextJson));\n    }\n    extractSpeakerContext(model) {\n        return {\n            features: {\n                interimResult: \"enabled\",\n                progressiveDetection: \"disabled\",\n            },\n            profileIds: model.profileIds,\n            scenario: model.scenario,\n        };\n    }\n}\nexports.SpeakerServiceRecognizer = SpeakerServiceRecognizer;\n\n//# sourceMappingURL=SpeakerServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceServiceRecognizer = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\nconst Exports_js_3 = require(\"../sdk/Exports.js\");\nconst Exports_js_4 = require(\"./Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = require(\"./SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass VoiceServiceRecognizer extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privDeferralMap = new Exports_js_2.DeferralMap();\n        this.privSpeakerAudioSource = audioSource;\n        this.sendPrePayloadJSONOverride = () => this.noOp();\n    }\n    set SpeakerAudioSource(audioSource) {\n        this.privSpeakerAudioSource = audioSource;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let processed = false;\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            // Profile management response for create, fetch, delete, reset\n            case \"speaker.profiles\":\n                const response = JSON.parse(connectionMessage.textBody);\n                switch (response.operation.toLowerCase()) {\n                    case \"create\":\n                        this.handleCreateResponse(response, connectionMessage.requestId);\n                        break;\n                    case \"delete\":\n                    case \"reset\":\n                        this.handleResultResponse(response, connectionMessage.requestId);\n                        break;\n                    case \"fetch\":\n                        const enrollmentResponse = JSON.parse(connectionMessage.textBody);\n                        this.handleFetchResponse(enrollmentResponse, connectionMessage.requestId);\n                        break;\n                    default:\n                        break;\n                }\n                processed = true;\n                break;\n            // Activation and authorization phrase response\n            case \"speaker.phrases\":\n                const phraseResponse = JSON.parse(connectionMessage.textBody);\n                this.handlePhrasesResponse(phraseResponse, connectionMessage.requestId);\n                processed = true;\n                break;\n            // Enrollment response\n            case \"speaker.profile.enrollment\":\n                const enrollmentResponse = JSON.parse(connectionMessage.textBody);\n                const result = new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(!!enrollmentResponse.enrollment ? enrollmentResponse.enrollment.enrollmentStatus : enrollmentResponse.status.statusCode), !!enrollmentResponse.enrollment ? JSON.stringify(enrollmentResponse.enrollment) : undefined, enrollmentResponse.status.reason);\n                if (!!this.privDeferralMap.getId(connectionMessage.requestId)) {\n                    this.privDeferralMap.complete(connectionMessage.requestId, result);\n                }\n                this.privRequestSession.onSpeechEnded();\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_3.PropertyCollection();\n        // const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\n        properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n        const result = new Exports_js_3.VoiceProfileEnrollmentResult(Exports_js_3.ResultReason.Canceled, error, error);\n        if (!!this.privDeferralMap.getId(requestId)) {\n            this.privDeferralMap.complete(requestId, result);\n        }\n    }\n    async createProfile(profileType, locale) {\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        this.voiceProfileType = profileType.toString();\n        const conPromise = this.connectImpl();\n        try {\n            const createProfileDeferral = new Exports_js_2.Deferred();\n            await conPromise;\n            await this.sendCreateProfile(createProfileDeferral, profileType, locale);\n            void this.receiveMessage();\n            return createProfileDeferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async resetProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        return this.sendCommonRequest(\"reset\", profile.profileType, profile);\n    }\n    async deleteProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        return this.sendCommonRequest(\"delete\", profile.profileType, profile);\n    }\n    async retrieveEnrollmentResult(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        this.privExpectedProfileId = profile.profileId;\n        return this.sendCommonRequest(\"fetch\", profile.profileType, profile);\n    }\n    async getAllProfiles(profileType) {\n        this.voiceProfileType = profileType.toString();\n        return this.sendCommonRequest(\"fetch\", profileType);\n    }\n    async getActivationPhrases(profileType, lang) {\n        this.voiceProfileType = profileType.toString();\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        try {\n            const getPhrasesDeferral = new Exports_js_2.Deferred();\n            await conPromise;\n            await this.sendPhrasesRequest(getPhrasesDeferral, profileType, lang);\n            void this.receiveMessage();\n            return getPhrasesDeferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async enrollProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        const enrollmentDeferral = new Exports_js_2.Deferred();\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages(profile, enrollmentDeferral);\n        const node = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privSpeakerAudioSource.format;\n        const deviceInfo = await this.privSpeakerAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (err) {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, err);\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, (error) => {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return enrollmentDeferral.promise;\n    }\n    async sendPreAudioMessages(profile, enrollmentDeferral) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, enrollmentDeferral);\n        await this.sendBaseRequest(connection, \"enroll\", this.scenarioFrom(profile.profileType), profile);\n    }\n    async sendPhrasesRequest(getPhrasesDeferral, profileType, locale) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, getPhrasesDeferral);\n        const scenario = this.scenarioFrom(profileType);\n        const profileCreateRequest = {\n            locale,\n            scenario,\n        };\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.profile.phrases\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileCreateRequest)));\n    }\n    async sendCreateProfile(createProfileDeferral, profileType, locale) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, createProfileDeferral);\n        const scenario = profileType === Exports_js_3.VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\n            profileType === Exports_js_3.VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\n        const profileCreateRequest = {\n            locale,\n            number: \"1\",\n            scenario,\n        };\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.profile.create\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileCreateRequest)));\n    }\n    async sendCommonRequest(operation, profileType, profile = undefined) {\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        try {\n            const deferral = new Exports_js_2.Deferred();\n            this.privRequestSession.onSpeechContext();\n            await conPromise;\n            const connection = await this.fetchConnection();\n            this.privDeferralMap.add(this.privRequestSession.requestId, deferral);\n            await this.sendBaseRequest(connection, operation, this.scenarioFrom(profileType), profile);\n            void this.receiveMessage();\n            return deferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async sendBaseRequest(connection, operation, scenario, profile) {\n        const profileRequest = {\n            scenario\n        };\n        if (!!profile) {\n            profileRequest.profileIds = [profile.profileId];\n        }\n        else {\n            profileRequest.maxPageSize = -1;\n        }\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, `speaker.profile.${operation}`, this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileRequest)));\n    }\n    extractSpeakerContext(model) {\n        return {\n            features: {\n                interimResult: \"enabled\",\n                progressiveDetection: \"disabled\",\n            },\n            profileIds: model.profileIds,\n            scenario: model.scenario,\n        };\n    }\n    handlePhrasesResponse(response, requestId) {\n        if (!!this.privDeferralMap.getId(requestId)) {\n            if (response.status.statusCode.toLowerCase() !== \"success\") {\n                const reason = Exports_js_3.ResultReason.Canceled;\n                const result = new Exports_js_3.VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, []);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else if (!!response.phrases && response.phrases.length > 0) {\n                const reason = Exports_js_3.ResultReason.EnrollingVoiceProfile;\n                const result = new Exports_js_3.VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, response.phrases);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else {\n                throw new Error(\"Voice Profile get activation phrases failed, no phrases received\");\n            }\n        }\n        else {\n            throw new Error(`Voice Profile get activation phrases request for requestID ${requestId} not found`);\n        }\n    }\n    handleCreateResponse(response, requestId) {\n        if (!!response.profiles && response.profiles.length > 0) {\n            if (!!this.privDeferralMap.getId(requestId)) {\n                const profileIds = response.profiles.map((profile) => profile.profileId);\n                this.privDeferralMap.complete(requestId, profileIds);\n            }\n            else {\n                throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\n            }\n        }\n        else {\n            throw new Error(\"Voice Profile create failed, no profile id received\");\n        }\n    }\n    handleResultResponse(response, requestId) {\n        if (!!this.privDeferralMap.getId(requestId)) {\n            const successReason = response.operation.toLowerCase() === \"delete\" ? Exports_js_3.ResultReason.DeletedVoiceProfile : Exports_js_3.ResultReason.ResetVoiceProfile;\n            const reason = response.status.statusCode.toLowerCase() === \"success\" ? successReason : Exports_js_3.ResultReason.Canceled;\n            const result = new Exports_js_3.VoiceProfileResult(reason, `statusCode: ${response.status.statusCode}, errorDetails: ${response.status.reason}`);\n            this.privDeferralMap.complete(requestId, result);\n        }\n        else {\n            throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\n        }\n    }\n    handleFetchResponse(enrollmentResponse, requestId) {\n        if (!!this.privDeferralMap.getId(requestId) && !!enrollmentResponse.profiles[0]) {\n            if (!!this.privExpectedProfileId && enrollmentResponse.profiles.length === 1 && enrollmentResponse.profiles[0].profileId === this.privExpectedProfileId) {\n                this.privExpectedProfileId = undefined;\n                const profileInfo = enrollmentResponse.profiles[0];\n                const result = new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(profileInfo.enrollmentStatus), JSON.stringify(profileInfo), enrollmentResponse.status.reason);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else if (enrollmentResponse.profiles.length > 0) {\n                const iProfiles = enrollmentResponse.profiles;\n                const profileResults = [];\n                for (const profile of iProfiles) {\n                    profileResults.push(new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(profile.enrollmentStatus), JSON.stringify(profile), enrollmentResponse.status.reason));\n                }\n                this.privDeferralMap.complete(requestId, profileResults);\n            }\n        }\n        else {\n            throw new Error(`Voice Profile fetch request for requestID ${requestId} not found`);\n        }\n    }\n    enrollmentReasonFrom(statusCode) {\n        switch (statusCode.toLowerCase()) {\n            case \"enrolled\":\n                return Exports_js_3.ResultReason.EnrolledVoiceProfile;\n            case \"invalidlocale\":\n            case \"invalidphrase\":\n            case \"invalidaudioformat\":\n            case \"invalidscenario\":\n            case \"invalidprofilecount\":\n            case \"invalidoperation\":\n            case \"audiotooshort\":\n            case \"audiotoolong\":\n            case \"toomanyenrollments\":\n            case \"storageconflict\":\n            case \"profilenotfound\":\n            case \"incompatibleprofiles\":\n            case \"incompleteenrollment\":\n                return Exports_js_3.ResultReason.Canceled;\n            default:\n                return Exports_js_3.ResultReason.EnrollingVoiceProfile;\n        }\n    }\n    scenarioFrom(profileType) {\n        return profileType === Exports_js_3.VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\n            profileType === Exports_js_3.VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\n    }\n}\nexports.VoiceServiceRecognizer = VoiceServiceRecognizer;\n\n//# sourceMappingURL=VoiceServiceRecognizer.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.type = exports.connectivity = exports.Device = exports.OS = exports.System = exports.Context = exports.SpeechServiceConfig = void 0;\n/* eslint-disable max-classes-per-file */\n// The config is serialized and sent as the Speech.Config\nclass SpeechServiceConfig {\n    constructor(context) {\n        this.context = context;\n    }\n    serialize() {\n        return JSON.stringify(this, (key, value) => {\n            if (value && typeof value === \"object\" && !Array.isArray(value)) {\n                const replacement = {};\n                for (const k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\n                    }\n                }\n                return replacement;\n            }\n            return value;\n        });\n    }\n    get Context() {\n        return this.context;\n    }\n    get Recognition() {\n        return this.recognition;\n    }\n    set Recognition(value) {\n        this.recognition = value.toLowerCase();\n    }\n}\nexports.SpeechServiceConfig = SpeechServiceConfig;\nclass Context {\n    constructor(os) {\n        this.system = new System();\n        this.os = os;\n    }\n}\nexports.Context = Context;\nclass System {\n    constructor() {\n        // Note: below will be patched for official builds.\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.45.0\";\n        this.name = \"SpeechSDK\";\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\n        this.build = \"JavaScript\";\n        this.lang = \"JavaScript\";\n    }\n}\nexports.System = System;\nclass OS {\n    constructor(platform, name, version) {\n        this.platform = platform;\n        this.name = name;\n        this.version = version;\n    }\n}\nexports.OS = OS;\nclass Device {\n    constructor(manufacturer, model, version) {\n        this.manufacturer = manufacturer;\n        this.model = model;\n        this.version = version;\n    }\n}\nexports.Device = Device;\nvar connectivity;\n(function (connectivity) {\n    connectivity[\"Bluetooth\"] = \"Bluetooth\";\n    connectivity[\"Wired\"] = \"Wired\";\n    connectivity[\"WiFi\"] = \"WiFi\";\n    connectivity[\"Cellular\"] = \"Cellular\";\n    connectivity[\"InBuilt\"] = \"InBuilt\";\n    connectivity[\"Unknown\"] = \"Unknown\";\n})(connectivity = exports.connectivity || (exports.connectivity = {}));\nvar type;\n(function (type) {\n    type[\"Phone\"] = \"Phone\";\n    type[\"Speaker\"] = \"Speaker\";\n    type[\"Car\"] = \"Car\";\n    type[\"Headset\"] = \"Headset\";\n    type[\"Thermostat\"] = \"Thermostat\";\n    type[\"Microphones\"] = \"Microphones\";\n    type[\"Deskphone\"] = \"Deskphone\";\n    type[\"RemoteControl\"] = \"RemoteControl\";\n    type[\"Unknown\"] = \"Unknown\";\n    type[\"File\"] = \"File\";\n    type[\"Stream\"] = \"Stream\";\n})(type = exports.type || (exports.type = {}));\n\n//# sourceMappingURL=SpeechServiceConfig.js.map\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoDetectSourceLanguagesOpenRangeOptionName = exports.ForceDictationPropertyName = exports.ServicePropertiesPropertyName = exports.CancellationErrorCodePropertyName = exports.OutputFormatPropertyName = exports.SpeechSynthesisAdapter = exports.AvatarSynthesisAdapter = void 0;\n// Make sure not to export internal modules.\n//\n__exportStar(require(\"./CognitiveSubscriptionKeyAuthentication.js\"), exports);\n__exportStar(require(\"./CognitiveTokenAuthentication.js\"), exports);\n__exportStar(require(\"./IAuthentication.js\"), exports);\n__exportStar(require(\"./IConnectionFactory.js\"), exports);\n__exportStar(require(\"./ISynthesisConnectionFactory.js\"), exports);\n__exportStar(require(\"./IntentConnectionFactory.js\"), exports);\n__exportStar(require(\"./SpeakerRecognitionConnectionFactory.js\"), exports);\n__exportStar(require(\"./RecognitionEvents.js\"), exports);\n__exportStar(require(\"./ServiceRecognizerBase.js\"), exports);\n__exportStar(require(\"./ConversationServiceRecognizer.js\"), exports);\n__exportStar(require(\"./RecognizerConfig.js\"), exports);\n__exportStar(require(\"./SpeechServiceInterfaces.js\"), exports);\n__exportStar(require(\"./WebsocketMessageFormatter.js\"), exports);\n__exportStar(require(\"./SpeechConnectionFactory.js\"), exports);\n__exportStar(require(\"./ConversationTranscriberConnectionFactory.js\"), exports);\n__exportStar(require(\"./TranscriberConnectionFactory.js\"), exports);\n__exportStar(require(\"./TranslationConnectionFactory.js\"), exports);\n__exportStar(require(\"./SpeechSynthesisConnectionFactory.js\"), exports);\n__exportStar(require(\"./EnumTranslation.js\"), exports);\n__exportStar(require(\"./ServiceMessages/Enums.js\"), exports);\n__exportStar(require(\"./ServiceMessages/TranslationSynthesisEnd.js\"), exports);\n__exportStar(require(\"./ServiceMessages/TranslationHypothesis.js\"), exports);\n__exportStar(require(\"./ServiceMessages/TranslationPhrase.js\"), exports);\n__exportStar(require(\"./TranslationServiceRecognizer.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SpeechDetected.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SpeechHypothesis.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SpeechKeyword.js\"), exports);\n__exportStar(require(\"./SpeechServiceRecognizer.js\"), exports);\n__exportStar(require(\"./ConversationTranscriptionServiceRecognizer.js\"), exports);\n__exportStar(require(\"./TranscriptionServiceRecognizer.js\"), exports);\n__exportStar(require(\"./ServiceMessages/DetailedSpeechPhrase.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SimpleSpeechPhrase.js\"), exports);\n__exportStar(require(\"./AddedLmIntent.js\"), exports);\n__exportStar(require(\"./IntentServiceRecognizer.js\"), exports);\n__exportStar(require(\"./ServiceMessages/IntentResponse.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SpeakerResponse.js\"), exports);\n__exportStar(require(\"./RequestSession.js\"), exports);\n__exportStar(require(\"./SpeechContext.js\"), exports);\n__exportStar(require(\"./DynamicGrammarBuilder.js\"), exports);\n__exportStar(require(\"./DialogServiceAdapter.js\"), exports);\n__exportStar(require(\"./AgentConfig.js\"), exports);\n__exportStar(require(\"./Transcription/Exports.js\"), exports);\n__exportStar(require(\"./ServiceMessages/SynthesisAudioMetadata.js\"), exports);\n__exportStar(require(\"./SynthesisTurn.js\"), exports);\n__exportStar(require(\"./SynthesisAdapterBase.js\"), exports);\nvar AvatarSynthesisAdapter_js_1 = require(\"./AvatarSynthesisAdapter.js\");\nObject.defineProperty(exports, \"AvatarSynthesisAdapter\", { enumerable: true, get: function () { return AvatarSynthesisAdapter_js_1.AvatarSynthesisAdapter; } });\nvar SpeechSynthesisAdapter_js_1 = require(\"./SpeechSynthesisAdapter.js\");\nObject.defineProperty(exports, \"SpeechSynthesisAdapter\", { enumerable: true, get: function () { return SpeechSynthesisAdapter_js_1.SpeechSynthesisAdapter; } });\n__exportStar(require(\"./SynthesisRestAdapter.js\"), exports);\n__exportStar(require(\"./SynthesizerConfig.js\"), exports);\n__exportStar(require(\"./SynthesisContext.js\"), exports);\n__exportStar(require(\"./SpeakerRecognitionConfig.js\"), exports);\n__exportStar(require(\"./SpeakerServiceRecognizer.js\"), exports);\n__exportStar(require(\"./VoiceServiceRecognizer.js\"), exports);\n__exportStar(require(\"./SpeechServiceConfig.js\"), exports);\nexports.OutputFormatPropertyName = \"OutputFormat\";\nexports.CancellationErrorCodePropertyName = \"CancellationErrorCode\";\nexports.ServicePropertiesPropertyName = \"ServiceProperties\";\nexports.ForceDictationPropertyName = \"ForceDictation\";\nexports.AutoDetectSourceLanguagesOpenRangeOptionName = \"UND\";\n\n//# sourceMappingURL=Exports.js.map\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nconst Exports_js_1 = require(\"./src/common.speech/Exports.js\");\n// Note: this instantiation ensures the above import isn't\n// removed on compile. The import being absent causes an error on running\nvoid new Exports_js_1.AgentConfig();\n// Speech SDK API\n__exportStar(require(\"./src/sdk/Exports.js\"), exports);\n\n//# sourceMappingURL=microsoft.cognitiveservices.speech.sdk.js.map\n"],"names":["rng_1","rng","getRandomValues","rnds8","regex","_default","validate_1","_regex","_interopRequireDefault","obj","validate","uuid","stringify_1","unsafeStringify","_validate","byteToHex","i","arr","offset","stringify","v1_1","_rng","_stringify","require$$1","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","b","node","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","n","parse_1","parse","v","v35_1","v35","require$$0","_parse","stringToBytes","str","bytes","DNS","URL","name","version","hashfunc","generateUUID","value","namespace","_namespace","md5_1","md5","msg","md5ToHexEncodedArray","wordsToMd5","bytesToWords","input","output","length32","hexTab","x","hex","getOutputLength","inputLength8","len","a","c","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","y","lsw","bitRotateLeft","num","cnt","md5cmn","q","s","t","v3_1","_v","_md","native","v4_1","_native","require$$2","v4","rnds","sha1_1","f","z","ROTL","sha1","K","H","l","N","M","j","W","e","T","v5_1","_sha","nil","version_1","exports","_nil","_v2","_v3","_v4","_version","Guid","uuid_1","createGuid","createNoDashGuid","Guid_js_1","EventType","PlatformEvent","eventName","eventType","AudioSourceEvents","PlatformEvent_js_1","AudioSourceEvent","audioSourceId","AudioSourceInitializingEvent","AudioSourceReadyEvent","AudioSourceOffEvent","AudioSourceErrorEvent","error","AudioStreamNodeEvent","audioNodeId","AudioStreamNodeAttachingEvent","AudioStreamNodeAttachedEvent","AudioStreamNodeDetachedEvent","AudioStreamNodeErrorEvent","ConnectionEvents","ServiceEvent","jsonstring","ConnectionEvent","connectionId","ConnectionStartEvent","uri","headers","ConnectionEstablishedEvent","ConnectionClosedEvent","statusCode","reason","ConnectionErrorEvent","message","type","ConnectionEstablishErrorEvent","statuscode","ConnectionMessageReceivedEvent","networkReceivedTimeISO","ConnectionMessageSentEvent","networkSentTimeISO","ConnectionRedirectEvent","redirectUrl","originalUrl","context","_Error","ArgumentNullError","argumentName","InvalidOperationError","ObjectDisposedError","objectName","Error_js_1","MessageType","ConnectionMessage","messageType","body","id","ConnectionOpenResponse_1","ConnectionOpenResponse$1","ConnectionOpenResponse","DeferralMap_1","DeferralMap$1","deferral","result","DeferralMap","DialogEvents","DialogEvent","SendingAgentContextMessageEvent","agentConfig","EventSource_1","EventSource$1","metadata","event","paramName","eventId","onEventCallback","listener","EventSource","Events_1","EventSource_js_1","Events$1","Events","eventSource","IAudioSource","ConnectionState","IDetachable","IDictionary","IDisposable","IEventListener","IEventSource","IErrorMessages","ITimer","IWebsocketMessageFormatter","List_1","List$1","List","list","item","itemIndex","index","count","removedElements","addedCallback","subscriptionId","removedCallback","disposedCallback","seperator","cloneCopy","val","callback","selectList","filteredList","compareFn","orderedArray","array","subscriptions","PromiseState","PromiseResult","promiseResultEventSource","PromiseResultEventSource","onSetResult","onSetError","Deferred","resolve","reject","Sink","errorHandler","successCallback","errorCallback","marshalPromiseToCallbacks","promise","cb","err","typedError","Queue_1","List_js_1","Promise_js_1","SubscriberType","Queue$1","deferredSubscriber","pendingItemProcessor","subs","detachable","promiseArray","wrapper","lists","subscriber","dequeuedItem","Queue","RawWebsocketMessage_1","ConnectionMessage_js_1","RawWebsocketMessage$1","payload","RawWebsocketMessage","RiffPcmEncoder_1","RiffPcmEncoder$1","actualSampleRate","desiredSampleRate","actualAudioFrame","audioFrame","audioLength","buffer","view","srcFrame","srcRate","dstRate","ratio","dstLength","dstFrame","srcOffset","dstOffset","nextSrcOffset","accum","RiffPcmEncoder","Stream_1","Queue_js_1","Stream$1","streamId","streamChunk","Stream","TranslationStatus","ChunkedArrayBufferStream_1","Exports_js_1","ChunkedArrayBufferStream$1","targetChunkSize","chunk","bytesCopiedFromBuffer","bytesToCopy","targetView","sourceView","ChunkedArrayBufferStream","IAudioDestination","Timeout_1","Timeout$1","Timeout","scheduledTimeoutFunctions","unhandledRequests","workerUrl","worker","data","timerId","idOrFunc","unhandledTimerId","func","delay","OCSPEvents","OCSPEvent","signature","OCSPMemoryCacheHitEvent","OCSPCacheMissEvent","OCSPDiskCacheHitEvent","OCSPCacheUpdateNeededEvent","OCSPMemoryCacheStoreEvent","OCSPDiskCacheStoreEvent","OCSPCacheUpdateCompleteEvent","OCSPStapleReceivedEvent","OCSPWSUpgradeStartedEvent","serialNumber","OCSPCacheEntryExpiredEvent","expireTime","OCSPCacheEntryNeedsRefreshEvent","startTime","OCSPCacheHitEvent","OCSPVerificationFailedEvent","OCSPCacheFetchErrorEvent","OCSPResponseRetrievedEvent","OCSPCacheUpdateErrorEvent","BackgroundError","BackgroundEvent","__createBinding","this","o","m","k","k2","__exportStar","p","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","TranslationStatus_js_1","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","HeaderNames_1","HeaderNames$1","HeaderNames","IAuthentication","AuthInfo","headerName","token","CognitiveSubscriptionKeyAuthentication_1","HeaderNames_js_1","IAuthentication_js_1","CognitiveSubscriptionKeyAuthentication$1","subscriptionKey","authFetchEventId","CognitiveSubscriptionKeyAuthentication","CognitiveTokenAuthentication_1","CognitiveTokenAuthentication$1","CognitiveTokenAuthentication","fetchCallback","fetchOnExpiryCallback","IConnectionFactory","ISynthesisConnectionFactory","Contracts_1","Contracts$1","Contracts","param","maxLength","minLength","isDisposed","rangeStart","rangeEnd","__setModuleDefault","__importStar","mod","ConsoleLoggingListener_1","fs","LogLevel_js_1","Contracts_js_1","ConsoleLoggingListener$1","logLevelFilter","path","enableOutput","log","logFragments","prop","valueToLog","ConsoleLoggingListener","IRecorder","AudioFormatTag","AudioStreamFormat","AudioStreamFormatImpl","samplesPerSecond","bitsPerSample","channels","format","samplesPerSec","isWavFormat","sampleRate","AudioContext","Exports_js_2","AudioStreamFormat_js_1","MicAudioSource","privRecorder","deviceId","mediaStream","nav","getUserMedia","constraints","next","errorMsg","stream","label","defaultMicrophoneName","microphoneDeviceId","deferred","devices","device","hasClose","FileAudioSource_1","FileAudioSource$1","file","filename","header","headerResult","processHeader","getWord","formatSize","channelCount","pos","reader","h","onerror","processFile","buff","ev","fileBuffer","FileAudioSource","PCMRecorder","Exports_1","PcmRecorder","stopInputOnRelease","outputStream","waveStreamEncoder","micInput","attachScriptProcessor","scriptNode","bufferSize","audioSampleRate","inputFrame","waveFrame","skipAudioWorklet","workletScript","blob","workletNode","track","url","__importDefault","WebsocketMessageAdapter_1","net","tls","agent_base_1","https_proxy_agent_1","ws_1","WebsocketMessageAdapter$1","WebsocketMessageAdapter","messageFormatter","proxyInfo","enableCompression","protocol","networkReceivedTime","rawMessage","connectionMessage","messageSendStatusDeferral","messageSendDeferral","sendItem","code","closeReason","pendingSendItem","sendError","agent","httpProxyOptions","request","socketPromise","baseAgent","socket","WebsocketConnection_1","WebsocketMessageAdapter_js_1","WebsocketConnection$1","queryParameters","queryParams","key","WebsocketConnection","ReplayableAudioNode_1","ReplayableAudioNode$1","audioSource","bytesPerSecond","offsetToSeek","bytesToSeek","retVal","BufferEntry","startOffset","endOffset","ReplayableAudioNode","serial","byteOffset","AudioFileWriter_1","AudioFileWriter$1","headerOffset","AudioFileWriter","AudioInputStream_1","Exports_js_3","AudioInputStream$1","PushAudioInputStream","PullAudioInputStream","AudioInputStream","PushAudioInputStreamImpl","dataBuffer","arrayBuffer","PullAudioInputStreamImpl","totalBytes","transmitBuff","readBuff","pulledBytes","SpeechSynthesisOutputFormat","AudioOutputFormat","SpeechSynthesisOutputFormat_js_1","AudioOutputFormatImpl","formatTag","avgBytesPerSec","blockAlign","audioFormatString","requestAudioFormatString","hasHeader","speechSynthesisOutputFormat","speechSynthesisOutputFormatString","audio","tmp","AudioOutputStream_1","AudioOutputFormat_js_1","AudioOutputStream$1","PullAudioOutputStream","AudioOutputStream","PullAudioOutputStreamImpl","intView","tmpBuffer","PushAudioOutputStream","PushAudioOutputStreamImpl","AudioConfig_1","AudioFileWriter_js_1","AudioInputStream_js_1","AudioOutputStream_js_1","AudioConfig$1","AudioConfig","pcmRecorder","AudioConfigImpl","audioStream","AudioOutputConfigImpl","player","source","def","destination","CancellationReason","PullAudioInputStreamCallback_1","PullAudioInputStreamCallback$1","PullAudioInputStreamCallback","PushAudioOutputStreamCallback_1","PushAudioOutputStreamCallback$1","PushAudioOutputStreamCallback","KeywordRecognitionModel_1","KeywordRecognitionModel$1","fileName","KeywordRecognitionModel","SessionEventArgs_1","SessionEventArgs$1","sessionId","SessionEventArgs","RecognitionEventArgs_1","RecognitionEventArgs$1","RecognitionEventArgs","OutputFormat","IntentRecognitionEventArgs_1","IntentRecognitionEventArgs$1","IntentRecognitionEventArgs","RecognitionResult_1","RecognitionResult$1","resultId","text","duration","language","languageDetectionConfidence","errorDetails","json","properties","RecognitionResult","SpeechRecognitionResult_1","SpeechRecognitionResult$1","speakerId","SpeechRecognitionResult","IntentRecognitionResult_1","IntentRecognitionResult$1","intentId","IntentRecognitionResult","LanguageUnderstandingModel_1","LanguageUnderstandingModel$1","langModelImp","LanguageUnderstandingModelImpl","firstDot","lastSegment","appId","region","LanguageUnderstandingModel","SpeechRecognitionEventArgs_1","SpeechRecognitionEventArgs$1","SpeechRecognitionEventArgs","ConversationTranscriptionEventArgs","MeetingTranscriptionEventArgs","CancellationEventArgsBase_1","CancellationEventArgsBase$1","errorCode","CancellationEventArgsBase","SpeechRecognitionCanceledEventArgs_1","CancellationEventArgsBase_js_1","SpeechRecognitionCanceledEventArgs$1","SpeechRecognitionCanceledEventArgs","TranslationRecognitionEventArgs_1","TranslationRecognitionEventArgs$1","TranslationRecognitionEventArgs","TranslationSynthesisEventArgs_1","TranslationSynthesisEventArgs$1","TranslationSynthesisEventArgs","TranslationRecognitionResult_1","TranslationRecognitionResult$1","TranslationRecognitionResult","translations","TranslationSynthesisResult_1","TranslationSynthesisResult$1","TranslationSynthesisResult","ResultReason","SpeechConfig_1","SpeechConfig$1","speechImpl","SpeechConfigImpl","endpoint","auth","isValidString","isTokenCredential","isKeyCredential","hostName","authorizationToken","SpeechConfig","tokenCredential","proxyHostName","proxyPort","proxyUserName","proxyPassword","currentProperties","profanity","ret","voice","SpeechTranslationConfig_1","SpeechTranslationConfig$1","SpeechTranslationConfigImpl","SpeechTranslationConfig","languages","PropertyCollection_1","PropertyCollection$1","PropertyCollection","keyToUse","clonedMap","destinationCollection","PropertyId","Recognizer_1","Recognizer$1","Recognizer","audioConfig","connectionFactory","errorCb","disposing","enabled","osPlatform","osName","osVersion","recognizerConfig","recognitionMode","RecognitionMode","SpeechRecognizer_1","PhraseDetectionContext_js_1","SpeechRecognizer$1","SpeechRecognizer","speechConfig","speechConfigImpl","autoDetectSourceLanguageConfig","model","authentication","configImpl","IntentRecognizer_1","IntentRecognizer$1","simplePhrase","intentName","modelImpl","audioImpl","refGrammers","addedLmIntent","grammer","IntentRecognizer","VoiceProfileType","ConnectionMessage_1","PropertyCollection_js_1","PropertyId_js_1","ConnectionMessage$1","ConnectionMessageImpl","Connection_1","Connection$1","Connection","recognizer","recoBase","synthesizer","synthBase","propertyName","propertyValue","success","connectionEvent","TranslationRecognizer_1","Connection_js_1","TranslationRecognizer$1","TranslationRecognizer","speechTranslationConfig","speechTranslationConfigImpl","lang","conn","Translations_1","Translations$1","Translations","NoMatchReason","NoMatchDetails_1","NoMatchDetails$1","NoMatchDetails","simpleSpeech","TranslationRecognitionCanceledEventArgs_1","TranslationRecognitionCanceledEventArgs$1","sessionid","cancellationReason","TranslationRecognitionCanceledEventArgs","IntentRecognitionCanceledEventArgs_1","IntentRecognitionCanceledEventArgs$1","IntentRecognitionCanceledEventArgs","CancellationDetailsBase_1","CancellationDetailsBase$1","CancellationDetailsBase","CancellationDetails_1","CancellationDetailsBase_js_1","CancellationDetails$1","CancellationDetails","CancellationErrorCode","ConnectionEventArgs_1","ConnectionEventArgs$1","ConnectionEventArgs","ServiceEventArgs_1","ServiceEventArgs$1","ServiceEventArgs","PhraseListGrammar_1","PhraseListGrammar$1","PhraseListGrammar","recogBase","phrase","phrases","weight","DialogServiceConfig_1","DialogServiceConfig$1","DialogServiceConfig","DialogServiceConfigImpl","channel","BotFrameworkConfig_1","DialogServiceConfig_js_1","BotFrameworkConfig$1","subscription","botId","botFrameworkConfig","host","resolvedHost","BotFrameworkConfig","CustomCommandsConfig_1","CustomCommandsConfig$1","applicationId","customCommandsConfig","CustomCommandsConfig","QueryParameterNames_1","QueryParameterNames$1","QueryParameterNames","ConnectionFactoryBase_1","QueryParameterNames_js_1","ConnectionFactoryBase$1","config","parameterName","propertyId","serviceProperties","propId","redirectedUrlString","redirectResponse","redirectUrlString","ConnectionFactoryBase","DialogConnectorFactory","ConnectionFactoryBase_js_1","Exports_js_4","DialogConnectionFactory","authInfo","dialogType","requestTurnStatus","resourceInfix","hostSuffix","DialogServiceConnector_1","DialogConnectorFactory_js_1","DialogServiceConnector$1","dialogConfig","dialogServiceConfigImpl","speechActivityTemplate","retPromise","activity","errCb","DialogServiceConnector","ActivityReceivedEventArgs_1","ActivityReceivedEventArgs$1","ActivityReceivedEventArgs","TurnStatusPayload","TurnStatusResponsePayload","TurnStatusReceivedEventArgs_1","TurnStatusPayload_js_1","TurnStatusReceivedEventArgs$1","turnStatus","TurnStatusReceivedEventArgs","ServicePropertyChannel","ProfanityOption","BaseAudioPlayer_1","BaseAudioPlayer$1","audioFormat","newAudioData","audioData","newSamplesData","timerPeriod","maxValue","float32Data","bufferSource","frameCount","audioBuffer","channelOffset","newBuffer","BaseAudioPlayer","ConnectionMessageEventArgs_1","ConnectionMessageEventArgs$1","ConnectionMessageEventArgs","VoiceProfile_1","VoiceProfile$1","profileId","profileType","VoiceProfile","VoiceProfileEnrollmentResult_1","VoiceProfileEnrollmentResult$1","VoiceProfileEnrollmentResult","statusText","results","VoiceProfileEnrollmentCancellationDetails","VoiceProfileResult_1","VoiceProfileResult$1","VoiceProfileResult","VoiceProfileCancellationDetails","VoiceProfilePhraseResult_1","VoiceProfilePhraseResult$1","phraseArray","VoiceProfilePhraseResult","VoiceProfileClient_1","AudioConfig_js_1","VoiceProfileClient$1","profileIds","profile","successReason","VoiceProfileClient","SpeakerRecognizer_1","SpeakerRecognizer$1","SpeakerRecognizer","SpeakerIdentificationModel_1","SpeakerIdentificationModel$1","SpeakerIdentificationModel","profiles","SpeakerVerificationModel_1","SpeakerVerificationModel$1","SpeakerVerificationModel","LanguageIdMode","AutoDetectSourceLanguageConfig_1","LanguageIdMode_js_1","AutoDetectSourceLanguageConfig$1","AutoDetectSourceLanguageConfig","configs","autoConfig","langs","customProperty","mode","AutoDetectSourceLanguageResult_1","AutoDetectSourceLanguageResult$1","AutoDetectSourceLanguageResult","SourceLanguageConfig_1","SourceLanguageConfig$1","SourceLanguageConfig","endpointId","SpeakerRecognitionResultType","SpeakerRecognitionResult","response","resultReason","cancellationErrorCode","resultType","SpeakerRecognitionCancellationDetails","Conversation_1","Conversation$1","arg2","arg3","arg4","conversationImpl","ConversationImpl","Conversation","r","updatedParticipant","newParticipant","ejectedParticipant","nickname","hostNickname","convId","part","props","conversationTranslator","room","participant","conversationId","userId","participantId","conversationInfo","dispose","includeHost","participants","isMuted","isLocked","ConversationCommon_1","ConversationCommon$1","ConversationCommon","ConversationExpirationEventArgs_1","ConversationExpirationEventArgs$1","expirationTime","ConversationExpirationEventArgs","ConversationParticipantsChangedEventArgs_1","ConversationParticipantsChangedEventArgs$1","ConversationParticipantsChangedEventArgs","ConversationTranslationCanceledEventArgs_1","ConversationTranslationCanceledEventArgs$1","ConversationTranslationCanceledEventArgs","ConversationTranslationEventArgs_1","ConversationTranslationEventArgs$1","ConversationTranslationEventArgs","ConversationTranslationResult_1","TranslationRecognitionResult_js_1","ConversationTranslationResult$1","originalLanguage","ConversationTranslationResult","StringUtils_1","StringUtils$1","replacements","formatted","appendToFormatted","appendToKey","appendFunc","StringUtils","ConversationTranslatorConnectionFactory_1","StringUtils_js_1","ConversationTranslatorConnectionFactory$1","ConversationTranslatorConnectionFactory","convGetter","isVirtMicArrayEndpoint","convInfo","replacementValues","endpointUrl","parsedUrl","connFactory","ConversationTranslatorConnectionFactory_js_1","Conversation_js_1","SpeechState","ConversationTranslationRecognizer","translator","tr","newState","cancelEvent","ConversationTranslator","conversation","param1","param2","param3","propertyIdsToCopy","ConversationTranscriber_1","ConversationTranscriber$1","ConversationTranscriber","IParticipant","User","Participant","avatar","displayName","isHost","isUsingTts","preferredLanguage","ParticipantChangedReason","Meeting_1","Meeting$1","meetingId","meetingImpl","MeetingImpl","Meeting","meetingInfo","MeetingTranscriptionCanceledEventArgs_1","MeetingTranscriptionCanceledEventArgs","MeetingTranscriber_1","MeetingTranscriber$1","meeting","MeetingTranscriber","ConversationTranscriptionResult_1","ConversationTranscriptionResult$1","ConversationTranscriptionResult","ConversationCommon_js_1","ConversationExpirationEventArgs_js_1","ConversationParticipantsChangedEventArgs_js_1","ConversationTranslationCanceledEventArgs_js_1","ConversationTranslationEventArgs_js_1","ConversationTranslationResult_js_1","ConversationTranslator_js_1","ConversationTranscriber_js_1","IParticipant_js_1","ParticipantChangedReason_js_1","Meeting_js_1","MeetingTranscriptionCanceledEventArgs_js_1","MeetingTranscriber_js_1","ConversationTranscriptionResult_js_1","Synthesizer_1","Synthesizer$1","Synthesizer","languageToDefaultVoice","ssml","synthesizerConfig","SynthesisRequest","requestId","isSSML","dataStream","SpeechSynthesizer_1","Synthesizer_js_1","SpeechSynthesizer$1","SpeechSynthesizer","locale","IsSsml","audioDestination","SynthesisResult_1","SynthesisResult$1","SynthesisResult","SpeechSynthesisResult_1","SpeechSynthesisResult$1","audioDuration","SpeechSynthesisResult","SpeechSynthesisEventArgs_1","SpeechSynthesisEventArgs$1","SpeechSynthesisEventArgs","SpeechSynthesisWordBoundaryEventArgs_1","SpeechSynthesisWordBoundaryEventArgs$1","audioOffset","wordLength","textOffset","boundaryType","SpeechSynthesisWordBoundaryEventArgs","SpeechSynthesisBookmarkEventArgs_1","SpeechSynthesisBookmarkEventArgs$1","SpeechSynthesisBookmarkEventArgs","SpeechSynthesisVisemeEventArgs_1","SpeechSynthesisVisemeEventArgs$1","visemeId","animation","SpeechSynthesisVisemeEventArgs","SpeechSynthesisBoundaryType","SynthesisVoicesResult_1","SynthesisVoicesResult$1","SynthesisVoicesResult","SynthesisVoiceGender","SynthesisVoiceType","GENDER_LOOKUP","VOICE_TYPE_LOOKUP","VoiceInfo","style","SpeakerAudioDestination_1","MediaDurationPlaceholderSeconds","AudioFormatToMimeType","SpeakerAudioDestination$1","audioDestinationId","receivedAudio","audioBlob","mimeType","volume","binary","SpeakerAudioDestination","ConversationTranscriptionCanceledEventArgs_1","ConversationTranscriptionCanceledEventArgs$1","ConversationTranscriptionCanceledEventArgs","MeetingTranscriptionCanceledEventArgs$1","PronunciationAssessmentGradingSystem","PronunciationAssessmentGranularity","PronunciationAssessmentConfig_1","PronunciationAssessmentConfig$1","PronunciationAssessmentConfig","referenceText","gradingSystem","granularity","enableMiscue","phonemeAlphabet","enableMiscueString","nbestPhonemeCount","enableProsodyAssessment","topic","jsonString","paramsJson","PronunciationAssessmentResult_1","ContentAssessmentResult","detailResult","PronunciationAssessmentResult$1","PronunciationAssessmentResult","AvatarConfig_1","AvatarConfig$1","character","videoFormat","AvatarConfig","AvatarEventTypes","AvatarEventArgs","description","SpeechSynthesisConnectionFactory_1","SpeechSynthesisConnectionFactory$1","hostPrefix","pathName","SpeechSynthesisConnectionFactory","AvatarSynthesizer_1","SpeechSynthesisConnectionFactory_js_1","AvatarSynthesizer$1","avatarConfig","peerConnection","iceGatheringDone","sdp","sdpAnswerString","sdpAnswer","_authentication","_synthesizerConfig","deferredResult","AvatarSynthesizer","AvatarVideoFormat_1","Coordinate","AvatarVideoFormat$1","codec","bitrate","width","height","topLeft","bottomRight","AvatarVideoFormat","AvatarWebRTCConnectionResult_1","AvatarWebRTCConnectionResult$1","SDPAnswer","AvatarWebRTCConnectionResult","Diagnostics_1","Diagnostics$1","logLevel","Diagnostics","CancellationReason_js_1","PullAudioInputStreamCallback_js_1","PushAudioOutputStreamCallback_js_1","KeywordRecognitionModel_js_1","SessionEventArgs_js_1","RecognitionEventArgs_js_1","OutputFormat_js_1","IntentRecognitionEventArgs_js_1","RecognitionResult_js_1","SpeechRecognitionResult_js_1","IntentRecognitionResult_js_1","LanguageUnderstandingModel_js_1","SpeechRecognitionEventArgs_js_1","SpeechRecognitionCanceledEventArgs_js_1","TranslationRecognitionEventArgs_js_1","TranslationSynthesisEventArgs_js_1","TranslationSynthesisResult_js_1","ResultReason_js_1","SpeechConfig_js_1","SpeechTranslationConfig_js_1","Recognizer_js_1","SpeechRecognizer_js_1","IntentRecognizer_js_1","VoiceProfileType_js_1","TranslationRecognizer_js_1","Translations_js_1","NoMatchReason_js_1","require$$33","NoMatchDetails_js_1","require$$34","TranslationRecognitionCanceledEventArgs_js_1","require$$35","IntentRecognitionCanceledEventArgs_js_1","require$$36","require$$37","CancellationDetails_js_1","require$$38","CancellationErrorCodes_js_1","require$$39","ConnectionEventArgs_js_1","require$$40","ServiceEventArgs_js_1","require$$41","require$$42","PhraseListGrammar_js_1","require$$43","require$$44","BotFrameworkConfig_js_1","require$$45","CustomCommandsConfig_js_1","require$$46","DialogServiceConnector_js_1","require$$47","ActivityReceivedEventArgs_js_1","require$$48","TurnStatusReceivedEventArgs_js_1","require$$49","ServicePropertyChannel_js_1","require$$50","ProfanityOption_js_1","require$$51","BaseAudioPlayer_js_1","require$$52","ConnectionMessageEventArgs_js_1","require$$53","require$$54","VoiceProfile_js_1","require$$55","VoiceProfileEnrollmentResult_js_1","require$$56","VoiceProfileResult_js_1","require$$57","VoiceProfilePhraseResult_js_1","require$$58","VoiceProfileClient_js_1","require$$59","SpeakerRecognizer_js_1","require$$60","SpeakerIdentificationModel_js_1","require$$61","SpeakerVerificationModel_js_1","require$$62","AutoDetectSourceLanguageConfig_js_1","require$$63","AutoDetectSourceLanguageResult_js_1","require$$64","SourceLanguageConfig_js_1","require$$65","SpeakerRecognitionResult_js_1","require$$66","require$$67","require$$68","require$$69","SpeechSynthesizer_js_1","require$$70","SynthesisResult_js_1","require$$71","SpeechSynthesisResult_js_1","require$$72","SpeechSynthesisEventArgs_js_1","require$$73","SpeechSynthesisWordBoundaryEventArgs_js_1","require$$74","SpeechSynthesisBookmarkEventArgs_js_1","require$$75","SpeechSynthesisVisemeEventArgs_js_1","require$$76","SpeechSynthesisBoundaryType_js_1","require$$77","SynthesisVoicesResult_js_1","require$$78","VoiceInfo_js_1","require$$79","SpeakerAudioDestination_js_1","require$$80","ConversationTranscriptionCanceledEventArgs_js_1","require$$81","require$$82","PronunciationAssessmentGradingSystem_js_1","require$$83","PronunciationAssessmentGranularity_js_1","require$$84","PronunciationAssessmentConfig_js_1","require$$85","PronunciationAssessmentResult_js_1","require$$86","require$$87","AvatarConfig_js_1","require$$88","AvatarEventArgs_js_1","require$$89","AvatarSynthesizer_js_1","require$$90","AvatarVideoFormat_js_1","require$$91","AvatarWebRTCConnectionResult_js_1","require$$92","Diagnostics_js_1","require$$93","require$$94","ProxyInfo_1","ProxyInfo$1","ProxyInfo","parameters","encodings","core","mkrequest","args","statusCodes","method","encoding","baseurl","arg","StatusError","res","params","browser","_url","_headers","parsed","resp","bent_1","RestRequestType","RestMessageAdapter$1","configParams","headerKey","headerValue","headerMap","line","parts","responseReceivedDeferral","requestCommand","handleRestResponse","send","postData","sendRequest","RestMessageAdapter","RestConfigBase_1","RestConfigBase$1","RestConfigBase","IntentConnectionFactory_1","IntentConnectionFactory$1","intentRegion","IntentConnectionFactory","SpeakerRecognitionConnectionFactory_1","SpeakerRecognitionConnectionFactoryBase","endpointPath","scenario","SpeakerRecognitionConnectionFactory","VoiceProfileConnectionFactory","SpeechRecognitionEvent","RecognitionTriggeredEvent","ListeningStartedEvent","ConnectingToServiceEvent","authFetchEventid","RecognitionStartedEvent","RecognitionCompletionStatus","RecognitionEndedEvent","serviceTag","status","SpeechConnectionMessage_Internal","SpeechConnectionMessage","contentType","additionalHeaders","SegmentationMode","NextAction","Mode","LanguageIdDetectionMode","LanguageIdDetectionPriority","OnUnknownAction","ResultType","PhraseResultOutputType","ServiceRecognizerBase_1","SpeechConnectionMessage_Internal_js_1","Segmentation_js_1","OnSuccess_js_1","InterimResults_js_1","LanguageIdContext_js_1","OnSuccess_js_2","OnUnknown_js_1","InterimResults_js_2","PhraseResults_js_1","OnSuccess_js_3","ServiceRecognizerBase$1","ServiceRecognizerBase","connectionClosedEvent","targetLanguages","translationVoice","categoryId","action","languageToVoiceMap","phraseDetection","speechSegmentationSilenceTimeoutMs","speechSegmentationMaximumTimeMs","speechSegmentationStrategy","segmentation","configuredSegment","segMode","segmentationSilenceTimeoutMs","segmentationMaximumTimeMs","sourceLanguages","speechContextLidMode","customModels","recoMode","errorCallBack","conPromise","audioNode","audioStreamNode","deviceInfo","sessionStartEventArgs","messagePayload","telemetryData","connection","speechStartDetected","speechStartEventArgs","speechStopDetected","speechStopEventArgs","sessionStopEventArgs","bytesSent","audioOffsetMs","generateNewRequestId","speechContextJson","hasLanguageId","translationContext","requestSession","SpeechServiceConfigJson","replacement","nextSendTime","fastLaneSizeMs","maxSendUnthrottledBytes","startRecogNumber","readAndUploadCycle","audioStreamChunk","sendDelay","isUnAuthorized","lastStatusCode","lastReason","delayMs","out","readView","ConversationServiceRecognizer_1","ConversationServiceRecognizer$1","textBody","processed","simple","resultProps","cancelReason","detailed","hypothesis","ConversationServiceRecognizer","SpeechResultFormat","RecognizerConfig","speechServiceConfig","models","modelsExist","modelId","SpeechServiceInterfaces","WebsocketMessageFormatter_1","CRLF","WebsocketMessageFormatter$1","textMessage","headerBodySplit","binaryMessage","dataView","headerLength","headersString","content","headerBuffer","headerInt8Array","payloadInt8Array","bodyInt8Array","headerMatches","separatorIndex","WebsocketMessageFormatter","SpeechConnectionFactory_1","SpeechConnectionFactory$1","webSocketConnection","SpeechConnectionFactory","ConversationTranscriberConnectionFactory_1","ConversationTranscriberConnectionFactory$1","ConversationTranscriberConnectionFactory","TranscriberConnectionFactory_1","TranscriberConnectionFactory$1","hostDefault","wordLevelTimings","TranscriberConnectionFactory","TranslationConnectionFactory_1","TranslationConnectionFactory$1","returnRegionPlaceholder","TranslationConnectionFactory","EnumTranslation_1","EnumTranslation$1","recognitionStatus","expectEndOfDictation","EnumTranslation","SynthesisStatus","RecognitionStatus","TranslationSynthesisEnd_1","TranslationSynthesisEnd$1","TranslationSynthesisEnd","TranslationHypothesis_1","TranslationHypothesis$1","TranslationHypothesis","baseOffset","translationHypothesis","jsonObj","TranslationPhrase_1","TranslationPhrase$1","TranslationPhrase","translationResponse","serializedObj","TranslationServiceRecognizer_1","TranslationServiceRecognizer$1","translationRecognizer","handleTranslationPhrase","translatedPhrase","handleTranslationHypothesis","synthEnd","retEvent","canceledResult","serviceResult","translation","confidence","TranslationServiceRecognizer","SpeechDetected_1","SpeechDetected$1","SpeechDetected","SpeechHypothesis_1","SpeechHypothesis$1","SpeechHypothesis","SpeechKeyword_1","SpeechKeyword$1","SpeechKeyword","SpeechServiceRecognizer_1","SpeechServiceRecognizer$1","speechRecognizer","SpeechServiceRecognizer","SpeakerDiarizationMode","IdentityProvider","ConversationTranscriptionServiceRecognizer_1","SpeakerDiarization_js_1","ConversationTranscriptionServiceRecognizer$1","conversationTranscriber","speakerDiarization","ConversationTranscriptionServiceRecognizer","TranscriptionServiceRecognizer_1","TranscriptionServiceRecognizer$1","transcriber","info","command","speechEventJson","eventDict","TranscriptionServiceRecognizer","DetailedSpeechPhrase_1","DetailedSpeechPhrase$1","DetailedSpeechPhrase","word","SimpleSpeechPhrase_1","SimpleSpeechPhrase$1","SimpleSpeechPhrase","AddedLmIntent_1","AddedLmIntent$1","AddedLmIntent","IntentServiceRecognizer_1","IntentServiceRecognizer$1","addedIntents","umbrellaIntent","speechHypothesis","sendEvent","intentResponse","addedIntent","defferal","IntentServiceRecognizer","IntentResponse_1","IntentResponse$1","IntentResponse","SpeakerResponse","ServiceTelemetryListener_Internal","RecognitionEvents_js_1","ServiceTelemetryListener","audioReceivedTime","metrics","telemetry","RequestSession_1","ServiceTelemetryListener_Internal_js_1","RequestSession$1","isError","continuousRecognition","RequestSession","PhraseOption","PhraseExtension","TentativePhraseResultsOption","SpeechContext_1","PhraseOutput_js_1","SpeechContext$1","dynamicGrammar","contentAssessmentTopic","isSpeakerDiarizationEnabled","dgi","SpeechContext","GroupType","SubstringMatchType","DynamicGrammarBuilder_1","Group_js_1","DynamicGrammarBuilder$1","grammar","retObj","retPhrases","DynamicGrammarBuilder","ActivityPayloadResponse","MessageDataStreamType","DialogServiceTurnState_1","ActivityResponsePayload_js_1","DialogServiceTurnState$1","manager","DialogServiceTurnState","DialogServiceTurnStateManager_1","DialogServiceTurnState_js_1","DialogServiceTurnStateManager$1","turnState","DialogServiceTurnStateManager","InvocationSource","KeywordDetectionType","OnRejectAction","DialogServiceAdapter_1","DialogEvents_js_1","DialogServiceTurnStateManager_js_1","InvocationSource_js_1","KeywordDetection_js_1","DialogServiceAdapter$1","dialogServiceConnector","interactionGuid","agentMessage","agentMessageJson","speechPhrase","keyword","audioRequestId","turn","preAudioPromise","communicationCustodian","loop","terminateMessageLoop","turnRequestId","audioSessionReqId","turnEndRequestId","agentConfigJson","guid","agentContextJson","responseMessage","responsePayload","responseRequestId","activityPayload","updateAgentConfig","pullAudioOutputStream","keywordPropertyValue","keywordOffsetPropertyValue","keywordDurationPropertyValue","keywords","keywordOffsets","keywordDurations","keywordDefinitionArray","definition","DialogServiceAdapter","AgentConfig_1","AgentConfig$1","AgentConfig","ConversationConnectionConfig_1","RestConfigBase_js_1","ConversationConnectionConfig$1","ConversationConnectionConfig","ConversationManager_1","ConversationConnectionConfig_js_1","ConversationManager$1","conversationCode","languageCode","endpointHost","correlationId","subscriptionRegion","authToken","errorMessage","errMessageRaw","sessionToken","ConversationManager","ConversationConnectionMessage_1","ConversationConnectionMessage$1","ConversationConnectionMessage","ConversationWebsocketMessageFormatter_1","ConversationConnectionMessage_js_1","ConversationWebsocketMessageFormatter$1","incomingMessage","ConversationWebsocketMessageFormatter","ConversationConnectionFactory_1","ConversationWebsocketMessageFormatter_js_1","ConversationConnectionFactory$1","ConversationConnectionFactory","ConversationRequestSession_1","ConversationRequestSession$1","ConversationRequestSession","ConversationTranslatorEventArgs","MuteAllEventArgs","LockRoomEventArgs","ParticipantEventArgs","ParticipantAttributeEventArgs","ParticipantsListEventArgs","translateTo","profanityFilter","roomProfanityFilter","isRoomLocked","isMuteAll","ConversationReceivedTranslationEventArgs","ConversationTranslatorInterfaces","InternalParticipants","meId","exists","CommandResponsePayload_1","parseCommandResponse","CommandResponsePayload$1","CommandResponsePayload","ParticipantResponsePayload","parseListResponse","parseParticipantResponse","ParticipantsListPayloadResponse","ParticipantPayloadResponse","TranslationResponsePayload","parseSpeechResponse","parseTextResponse","SpeechResponsePayload","TextResponsePayload","CommandResponsePayload_js_1","ParticipantResponsePayload_js_1","TranslationResponsePayload_js_1","ConversationServiceAdapter_1","ConversationRequestSession_js_1","ConversationTranslatorEventArgs_js_1","ConversationTranslatorInterfaces_js_1","ConversationServiceAdapter$1","conversationServiceConnector","conversationMessageType","sendFinal","commandPayload","participantsPayload","participantsResult","joinParticipantPayload","joiningParticipant","leavingParticipant","disconnectParticipant","speechPayload","conversationResultReason","speechResult","textPayload","textResult","messageRetrievalPromise","serviceResultTranslations","ConversationServiceAdapter","ConversationTranslatorRecognizer_1","ConversationConnectionFactory_js_1","ConversationServiceAdapter_js_1","ConversationRecognizerFactory","ConversationTranslatorRecognizer","ConversationTranslatorRecognizer$1","serviceConfigImpl","withAsync","TranscriberRecognizer_1","TranscriberRecognizer$1","audioConfigImpl","reco","TranscriberRecognizer","ConversationManager_js_1","ConversationTranslatorRecognizer_js_1","TranscriberRecognizer_js_1","MetadataType","SynthesisAudioMetadata","SynthesisEvents","SpeechSynthesisEvent","SynthesisTriggeredEvent","sessionAudioDestinationId","turnAudioDestinationId","ConnectingToSynthesisServiceEvent","SynthesisStartedEvent","SynthesisTurn_1","SynthesisAudioMetadata_js_1","SynthesisEvents_js_1","SynthesisTurn$1","SynthesisTurn","rawText","responseJson","idx","SynthesisAdapterBase_1","SynthesisAdapterBase$1","_cancellationReason","_connectionMessage","metadataList","wordBoundaryEventArgs","bookmarkEventArgs","visemeEventArgs","synthesisContextJson","authPromise","_metadata","_requestId","_audio","_result","_wordBoundaryEventArgs","_visemeEventArgs","_bookmarkEventArgs","SynthesisAdapterBase","AvatarSynthesisAdapter_1","AvatarSynthesisAdapter$1","avatarSynthesizer","avatarEventArgs","AvatarSynthesisAdapter","SpeechSynthesisAdapter_1","SpeechSynthesisAdapter$1","speechSynthesizer","synthesisStartEventArgs","audioWithHeader","SpeechSynthesisAdapter","SynthesisRestAdapter_1","SynthesisRestAdapter$1","SynthesisRestAdapter","SynthesisServiceType","SynthesizerConfig","contextJson","SynthesisContext_1","SynthesisContext$1","sectionName","synthesisSection","SynthesisContext","SpeakerRecognitionConfig_1","SpeakerRecognitionConfig$1","SpeakerRecognitionConfig","SpeakerServiceRecognizer_1","SpeakerServiceRecognizer$1","speakerContextJson","SpeakerServiceRecognizer","VoiceServiceRecognizer_1","VoiceServiceRecognizer$1","enrollmentResponse","phraseResponse","createProfileDeferral","getPhrasesDeferral","enrollmentDeferral","profileCreateRequest","operation","profileRequest","profileInfo","iProfiles","profileResults","VoiceServiceRecognizer","SpeechServiceConfig","Context","os","System","SPEECHSDK_CLIENTSDK_VERSION","OS","platform","Device","manufacturer","connectivity","AvatarSynthesisAdapter_js_1","SpeechSynthesisAdapter_js_1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277]}