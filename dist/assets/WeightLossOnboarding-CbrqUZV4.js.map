{"version":3,"file":"WeightLossOnboarding-CbrqUZV4.js","sources":["../../src/pages/WeightLossOnboarding.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { weightLossProfileService } from '../weightloss/weightLossProfile.service';\nimport type {\n  WeightLossProfile,\n  Demographics,\n  MedicalContext,\n  DietaryProfile,\n  LifestyleFactors,\n  HealthTargets,\n  EngagementPreferences,\n} from '../weightloss/types';\n\nconst ONBOARDING_STEPS = [\n  { id: 'demographics', title: 'Basic Information', emoji: 'üë§' },\n  { id: 'medical', title: 'Medical History', emoji: 'üè•' },\n  { id: 'dietary', title: 'Diet & Culture', emoji: 'üçΩÔ∏è' },\n  { id: 'lifestyle', title: 'Lifestyle', emoji: 'üèÉ' },\n  { id: 'targets', title: 'Health Goals', emoji: 'üéØ' },\n  { id: 'preferences', title: 'Communication', emoji: 'üí¨' },\n];\n\nexport default function WeightLossOnboarding() {\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [profile, setProfile] = useState<WeightLossProfile | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Form state for each section\n  const [demographics, setDemographics] = useState<Demographics>({\n    age: 0,\n    sex: 'female',\n    height: 170,\n    startingWeight: 80,\n    targetWeight: 70,\n    preferredUnits: { weight: 'kg', height: 'cm' },\n  });\n\n  const [medical, setMedical] = useState<MedicalContext>({\n    diagnoses: [],\n    currentMedications: [],\n    labResults: {},\n    medicalHistory: {},\n  });\n\n  const [dietary, setDietary] = useState<DietaryProfile>({\n    dietPattern: 'omnivore',\n    foodsToAvoid: {\n      allergies: [],\n      intolerances: [],\n      preferences: [],\n      religious: [],\n      medical: [],\n    },\n    staples: {\n      breakfast: [],\n      lunch: [],\n      dinner: [],\n      snacks: [],\n    },\n    cuisinePreferences: [],\n  });\n\n  const [lifestyle, setLifestyle] = useState<LifestyleFactors>({\n    schedule: {\n      wakeTime: '07:00',\n      sleepTime: '23:00',\n      workShift: 'day',\n      mealTimes: {},\n    },\n    activity: {\n      baseline: 'sedentary',\n      exerciseHabits: {\n        frequency: 'none',\n        types: [],\n        gymAccess: false,\n        homeEquipment: [],\n      },\n    },\n    cooking: {\n      homeVsRestaurant: 50,\n      skillLevel: 'beginner',\n      timeAvailable: 'moderate',\n      budget: 'moderate',\n    },\n    travel: {\n      frequency: 'occasional',\n      types: 'domestic',\n    },\n  });\n\n  const [targets, setTargets] = useState<HealthTargets>({\n    protein: {\n      target: 80,\n      calculation: 'per_kg',\n      perKg: 1.2,\n    },\n    steps: {\n      minimum: 5000,\n      target: 8000,\n    },\n    sleep: {\n      minimumHours: 6,\n      targetHours: 8,\n    },\n    hydration: {\n      target: 2000,\n    },\n    redFlags: {\n      dizziness: true,\n      vomitingDuration: 24,\n      severNausea: true,\n      chestPain: true,\n      severeWeakness: true,\n      customRules: [],\n    },\n  });\n\n  const [preferences, setPreferences] = useState<EngagementPreferences>({\n    communication: {\n      bestTimes: ['08:00', '12:00', '18:00'],\n      quietHours: {\n        start: '22:00',\n        end: '07:00',\n      },\n      frequency: 'daily',\n      channels: ['app', 'push'],\n    },\n    tone: 'coach',\n    language: 'en',\n    consent: {\n      dataSharing: false,\n      anonymizedAnalytics: true,\n      coachingBoundaries: [],\n    },\n  });\n\n  useEffect(() => {\n    initializeProfile();\n  }, []);\n\n  const initializeProfile = () => {\n    // For now, create a new profile with a random ID\n    const patientId = `patient_${Date.now()}`;\n    const existingProfile = weightLossProfileService.loadProfile(patientId);\n\n    if (existingProfile) {\n      setProfile(existingProfile);\n      // Load existing data\n      setDemographics(existingProfile.demographics);\n      setMedical(existingProfile.medical);\n      setDietary(existingProfile.dietary);\n      setLifestyle(existingProfile.lifestyle);\n      setTargets(existingProfile.targets);\n      setPreferences(existingProfile.preferences);\n    } else {\n      const newProfile = weightLossProfileService.createProfile(patientId);\n      setProfile(newProfile);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleNext = () => {\n    if (!profile) return;\n\n    // Save current step data\n    switch (ONBOARDING_STEPS[currentStep].id) {\n      case 'demographics':\n        weightLossProfileService.updateProfileSection(\n          profile.patientId,\n          'demographics',\n          demographics\n        );\n        break;\n      case 'medical':\n        weightLossProfileService.updateProfileSection(profile.patientId, 'medical', medical);\n        break;\n      case 'dietary':\n        weightLossProfileService.updateProfileSection(profile.patientId, 'dietary', dietary);\n        break;\n      case 'lifestyle':\n        weightLossProfileService.updateProfileSection(profile.patientId, 'lifestyle', lifestyle);\n        break;\n      case 'targets':\n        weightLossProfileService.updateProfileSection(profile.patientId, 'targets', targets);\n        break;\n      case 'preferences':\n        weightLossProfileService.updateProfileSection(\n          profile.patientId,\n          'preferences',\n          preferences\n        );\n        break;\n    }\n\n    if (currentStep < ONBOARDING_STEPS.length - 1) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      // Complete onboarding and navigate to summary\n      weightLossProfileService.completeOnboarding(profile.patientId);\n      navigate('/weightloss/summary');\n    }\n  };\n\n  const handleBack = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const renderDemographicsStep = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900\">Let's get to know you</h2>\n\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Age</label>\n          <input\n            type=\"number\"\n            value={demographics.age || ''}\n            onChange={e => setDemographics({ ...demographics, age: parseInt(e.target.value) })}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter your age\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sex</label>\n          <select\n            value={demographics.sex}\n            onChange={e =>\n              setDemographics({\n                ...demographics,\n                sex: e.target.value as 'male' | 'female' | 'other',\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"female\">Female</option>\n            <option value=\"male\">Male</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Height ({demographics.preferredUnits.height})\n          </label>\n          <input\n            type=\"number\"\n            value={demographics.height || ''}\n            onChange={e => setDemographics({ ...demographics, height: parseFloat(e.target.value) })}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder={demographics.preferredUnits.height === 'cm' ? '170' : '67'}\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Starting Weight ({demographics.preferredUnits.weight})\n          </label>\n          <input\n            type=\"number\"\n            value={demographics.startingWeight || ''}\n            onChange={e =>\n              setDemographics({ ...demographics, startingWeight: parseFloat(e.target.value) })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder={demographics.preferredUnits.weight === 'kg' ? '80' : '176'}\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Target Weight ({demographics.preferredUnits.weight})\n          </label>\n          <input\n            type=\"number\"\n            value={demographics.targetWeight || ''}\n            onChange={e =>\n              setDemographics({ ...demographics, targetWeight: parseFloat(e.target.value) })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder={demographics.preferredUnits.weight === 'kg' ? '70' : '154'}\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Preferred Units</label>\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={() =>\n                setDemographics({ ...demographics, preferredUnits: { weight: 'kg', height: 'cm' } })\n              }\n              className={`px-4 py-2 rounded-lg ${\n                demographics.preferredUnits.weight === 'kg'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              Metric (kg/cm)\n            </button>\n            <button\n              onClick={() =>\n                setDemographics({\n                  ...demographics,\n                  preferredUnits: { weight: 'lb', height: 'inches' },\n                })\n              }\n              className={`px-4 py-2 rounded-lg ${\n                demographics.preferredUnits.weight === 'lb'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              Imperial (lb/in)\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderMedicalStep = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900\">Medical Context</h2>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Current Diagnoses</label>\n        <div className=\"space-y-2\">\n          {['Type 2 Diabetes', 'PCOS', 'Hypothyroid', 'Hypertension', 'High Cholesterol'].map(\n            condition => (\n              <label key={condition} className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={medical.diagnoses.some(d => d.condition === condition)}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      setMedical({\n                        ...medical,\n                        diagnoses: [...medical.diagnoses, { condition }],\n                      });\n                    } else {\n                      setMedical({\n                        ...medical,\n                        diagnoses: medical.diagnoses.filter(d => d.condition !== condition),\n                      });\n                    }\n                  }}\n                  className=\"mr-3\"\n                />\n                <span className=\"text-gray-700\">{condition}</span>\n              </label>\n            )\n          )}\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Current Medications</label>\n        <div className=\"space-y-2\">\n          {['Ozempic/Wegovy', 'Mounjaro/Zepbound', 'Metformin', 'Levothyroxine', 'Insulin'].map(\n            med => (\n              <label key={med} className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={medical.currentMedications.some(m => m.name === med)}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      const type =\n                        med.includes('Ozempic') || med.includes('Mounjaro')\n                          ? 'glp1'\n                          : med === 'Levothyroxine'\n                            ? 'thyroid'\n                            : med === 'Insulin'\n                              ? 'insulin'\n                              : 'other';\n                      setMedical({\n                        ...medical,\n                        currentMedications: [...medical.currentMedications, { name: med, type }],\n                      });\n                    } else {\n                      setMedical({\n                        ...medical,\n                        currentMedications: medical.currentMedications.filter(m => m.name !== med),\n                      });\n                    }\n                  }}\n                  className=\"mr-3\"\n                />\n                <span className=\"text-gray-700\">{med}</span>\n              </label>\n            )\n          )}\n        </div>\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Most Recent A1C</label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={medical.labResults.a1c || ''}\n            onChange={e =>\n              setMedical({\n                ...medical,\n                labResults: { ...medical.labResults, a1c: parseFloat(e.target.value) },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"e.g., 6.5\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Pregnancy Status</label>\n          <select\n            value={medical.medicalHistory.pregnancyStatus || 'not_applicable'}\n            onChange={e =>\n              setMedical({\n                ...medical,\n                medicalHistory: {\n                  ...medical.medicalHistory,\n                  pregnancyStatus: e.target.value as any,\n                },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"not_applicable\">Not Applicable</option>\n            <option value=\"not_pregnant\">Not Pregnant</option>\n            <option value=\"pregnant\">Currently Pregnant</option>\n            <option value=\"planning\">Planning Pregnancy</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderDietaryStep = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900\">Dietary Preferences & Culture</h2>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Diet Pattern</label>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n          {[\n            { value: 'omnivore', label: 'Omnivore', emoji: 'üçñ' },\n            { value: 'vegetarian', label: 'Vegetarian', emoji: 'ü•¨' },\n            { value: 'vegan', label: 'Vegan', emoji: 'üå±' },\n            { value: 'pescatarian', label: 'Pescatarian', emoji: 'üêü' },\n            { value: 'flexitarian', label: 'Flexitarian', emoji: 'ü•ó' },\n          ].map(diet => (\n            <button\n              key={diet.value}\n              onClick={() => setDietary({ ...dietary, dietPattern: diet.value as any })}\n              className={`p-3 rounded-lg border-2 transition-all ${\n                dietary.dietPattern === diet.value\n                  ? 'border-blue-500 bg-blue-50'\n                  : 'border-gray-300 hover:border-gray-400'\n              }`}\n            >\n              <div className=\"text-2xl mb-1\">{diet.emoji}</div>\n              <div className=\"text-sm font-medium\">{diet.label}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Cultural/Religious Diet\n        </label>\n        <select\n          value={dietary.culturalDiet || 'none'}\n          onChange={e =>\n            setDietary({\n              ...dietary,\n              culturalDiet: e.target.value === 'none' ? undefined : (e.target.value as any),\n            })\n          }\n          className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n        >\n          <option value=\"none\">None</option>\n          <option value=\"halal\">Halal</option>\n          <option value=\"kosher\">Kosher</option>\n          <option value=\"jain\">Jain</option>\n          <option value=\"hindu_vegetarian\">Hindu Vegetarian</option>\n          <option value=\"other\">Other</option>\n        </select>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Food Allergies</label>\n        <div className=\"flex flex-wrap gap-2\">\n          {[\n            'Peanuts',\n            'Tree Nuts',\n            'Dairy',\n            'Eggs',\n            'Soy',\n            'Wheat/Gluten',\n            'Shellfish',\n            'Fish',\n          ].map(allergy => (\n            <button\n              key={allergy}\n              onClick={() => {\n                const allergies = dietary.foodsToAvoid.allergies;\n                if (allergies.includes(allergy)) {\n                  setDietary({\n                    ...dietary,\n                    foodsToAvoid: {\n                      ...dietary.foodsToAvoid,\n                      allergies: allergies.filter(a => a !== allergy),\n                    },\n                  });\n                } else {\n                  setDietary({\n                    ...dietary,\n                    foodsToAvoid: {\n                      ...dietary.foodsToAvoid,\n                      allergies: [...allergies, allergy],\n                    },\n                  });\n                }\n              }}\n              className={`px-3 py-1 rounded-full text-sm ${\n                dietary.foodsToAvoid.allergies.includes(allergy)\n                  ? 'bg-red-500 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              {allergy}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Preferred Cuisines</label>\n        <div className=\"flex flex-wrap gap-2\">\n          {[\n            'American',\n            'Mexican',\n            'Italian',\n            'Chinese',\n            'Indian',\n            'Thai',\n            'Japanese',\n            'Mediterranean',\n          ].map(cuisine => (\n            <button\n              key={cuisine}\n              onClick={() => {\n                const cuisines = dietary.cuisinePreferences;\n                if (cuisines.includes(cuisine)) {\n                  setDietary({\n                    ...dietary,\n                    cuisinePreferences: cuisines.filter(c => c !== cuisine),\n                  });\n                } else {\n                  setDietary({\n                    ...dietary,\n                    cuisinePreferences: [...cuisines, cuisine],\n                  });\n                }\n              }}\n              className={`px-3 py-1 rounded-full text-sm ${\n                dietary.cuisinePreferences.includes(cuisine)\n                  ? 'bg-blue-500 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              {cuisine}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderLifestyleStep = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900\">Your Lifestyle</h2>\n\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Wake Time</label>\n          <input\n            type=\"time\"\n            value={lifestyle.schedule.wakeTime}\n            onChange={e =>\n              setLifestyle({\n                ...lifestyle,\n                schedule: { ...lifestyle.schedule, wakeTime: e.target.value },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sleep Time</label>\n          <input\n            type=\"time\"\n            value={lifestyle.schedule.sleepTime}\n            onChange={e =>\n              setLifestyle({\n                ...lifestyle,\n                schedule: { ...lifestyle.schedule, sleepTime: e.target.value },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Work Schedule</label>\n          <select\n            value={lifestyle.schedule.workShift}\n            onChange={e =>\n              setLifestyle({\n                ...lifestyle,\n                schedule: { ...lifestyle.schedule, workShift: e.target.value as any },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"day\">Day Shift</option>\n            <option value=\"night\">Night Shift</option>\n            <option value=\"rotating\">Rotating Shifts</option>\n            <option value=\"flexible\">Flexible/Remote</option>\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Activity Level</label>\n          <select\n            value={lifestyle.activity.baseline}\n            onChange={e =>\n              setLifestyle({\n                ...lifestyle,\n                activity: { ...lifestyle.activity, baseline: e.target.value as any },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"sedentary\">Sedentary (desk job)</option>\n            <option value=\"lightly_active\">Lightly Active</option>\n            <option value=\"moderately_active\">Moderately Active</option>\n            <option value=\"very_active\">Very Active</option>\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Exercise Frequency</label>\n          <select\n            value={lifestyle.activity.exerciseHabits.frequency}\n            onChange={e =>\n              setLifestyle({\n                ...lifestyle,\n                activity: {\n                  ...lifestyle.activity,\n                  exerciseHabits: {\n                    ...lifestyle.activity.exerciseHabits,\n                    frequency: e.target.value as any,\n                  },\n                },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"none\">No Regular Exercise</option>\n            <option value=\"occasional\">Occasional</option>\n            <option value=\"1-2x_week\">1-2 times/week</option>\n            <option value=\"3-4x_week\">3-4 times/week</option>\n            <option value=\"5+_week\">5+ times/week</option>\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Gym Access</label>\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={() =>\n                setLifestyle({\n                  ...lifestyle,\n                  activity: {\n                    ...lifestyle.activity,\n                    exerciseHabits: { ...lifestyle.activity.exerciseHabits, gymAccess: true },\n                  },\n                })\n              }\n              className={`px-4 py-2 rounded-lg ${\n                lifestyle.activity.exerciseHabits.gymAccess\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              Yes\n            </button>\n            <button\n              onClick={() =>\n                setLifestyle({\n                  ...lifestyle,\n                  activity: {\n                    ...lifestyle.activity,\n                    exerciseHabits: { ...lifestyle.activity.exerciseHabits, gymAccess: false },\n                  },\n                })\n              }\n              className={`px-4 py-2 rounded-lg ${\n                !lifestyle.activity.exerciseHabits.gymAccess\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              No\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          How much do you cook at home? ({lifestyle.cooking.homeVsRestaurant}%)\n        </label>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          step=\"10\"\n          value={lifestyle.cooking.homeVsRestaurant}\n          onChange={e =>\n            setLifestyle({\n              ...lifestyle,\n              cooking: { ...lifestyle.cooking, homeVsRestaurant: parseInt(e.target.value) },\n            })\n          }\n          className=\"w-full\"\n        />\n        <div className=\"flex justify-between text-sm text-gray-600\">\n          <span>All Restaurant</span>\n          <span>50/50</span>\n          <span>All Home Cooking</span>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTargetsStep = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900\">Health Targets & Goals</h2>\n\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Daily Protein Target (g)\n          </label>\n          <input\n            type=\"number\"\n            value={targets.protein.target}\n            onChange={e =>\n              setTargets({\n                ...targets,\n                protein: { ...targets.protein, target: parseInt(e.target.value) },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"80\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Protein per kg body weight\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={targets.protein.perKg}\n            onChange={e =>\n              setTargets({\n                ...targets,\n                protein: { ...targets.protein, perKg: parseFloat(e.target.value) },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"1.2\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Minimum Daily Steps\n          </label>\n          <input\n            type=\"number\"\n            value={targets.steps.minimum}\n            onChange={e =>\n              setTargets({\n                ...targets,\n                steps: { ...targets.steps, minimum: parseInt(e.target.value) },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"5000\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Target Daily Steps</label>\n          <input\n            type=\"number\"\n            value={targets.steps.target}\n            onChange={e =>\n              setTargets({\n                ...targets,\n                steps: { ...targets.steps, target: parseInt(e.target.value) },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"8000\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Minimum Sleep (hours)\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.5\"\n            value={targets.sleep.minimumHours}\n            onChange={e =>\n              setTargets({\n                ...targets,\n                sleep: { ...targets.sleep, minimumHours: parseFloat(e.target.value) },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"6\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Target Sleep (hours)\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.5\"\n            value={targets.sleep.targetHours}\n            onChange={e =>\n              setTargets({\n                ...targets,\n                sleep: { ...targets.sleep, targetHours: parseFloat(e.target.value) },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"8\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Daily Water Goal (ml)\n          </label>\n          <input\n            type=\"number\"\n            step=\"250\"\n            value={targets.hydration.target}\n            onChange={e =>\n              setTargets({\n                ...targets,\n                hydration: { ...targets.hydration, target: parseInt(e.target.value) },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"2000\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <h3 className=\"font-medium text-gray-900 mb-3\">Red Flag Symptoms (auto-escalate)</h3>\n        <div className=\"space-y-2\">\n          {[\n            { key: 'dizziness', label: 'Severe Dizziness' },\n            { key: 'severNausea', label: 'Severe Nausea' },\n            { key: 'chestPain', label: 'Chest Pain' },\n            { key: 'severeWeakness', label: 'Severe Weakness' },\n          ].map(flag => (\n            <label key={flag.key} className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={targets.redFlags[flag.key as keyof typeof targets.redFlags] as boolean}\n                onChange={e =>\n                  setTargets({\n                    ...targets,\n                    redFlags: { ...targets.redFlags, [flag.key]: e.target.checked },\n                  })\n                }\n                className=\"mr-3\"\n              />\n              <span className=\"text-gray-700\">{flag.label}</span>\n            </label>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPreferencesStep = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900\">Communication Preferences</h2>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Coaching Tone</label>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n          {[\n            { value: 'coach', label: 'Coach', emoji: 'üèÜ', desc: 'Supportive & instructional' },\n            {\n              value: 'cheerleader',\n              label: 'Cheerleader',\n              emoji: 'üì£',\n              desc: 'Enthusiastic & motivating',\n            },\n            {\n              value: 'matter_of_fact',\n              label: 'Matter of Fact',\n              emoji: 'üìä',\n              desc: 'Direct & data-focused',\n            },\n            { value: 'tough_love', label: 'Tough Love', emoji: 'üí™', desc: 'Firm & challenging' },\n            { value: 'medical', label: 'Medical', emoji: 'üè•', desc: 'Clinical & professional' },\n          ].map(tone => (\n            <button\n              key={tone.value}\n              onClick={() => setPreferences({ ...preferences, tone: tone.value as any })}\n              className={`p-3 rounded-lg border-2 transition-all ${\n                preferences.tone === tone.value\n                  ? 'border-blue-500 bg-blue-50'\n                  : 'border-gray-300 hover:border-gray-400'\n              }`}\n            >\n              <div className=\"text-2xl mb-1\">{tone.emoji}</div>\n              <div className=\"text-sm font-medium\">{tone.label}</div>\n              <div className=\"text-xs text-gray-500\">{tone.desc}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Message Frequency</label>\n        <select\n          value={preferences.communication.frequency}\n          onChange={e =>\n            setPreferences({\n              ...preferences,\n              communication: { ...preferences.communication, frequency: e.target.value as any },\n            })\n          }\n          className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n        >\n          <option value=\"minimal\">Minimal (weekly summary)</option>\n          <option value=\"daily\">Daily check-ins</option>\n          <option value=\"multiple_daily\">Multiple times daily</option>\n        </select>\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Quiet Hours Start</label>\n          <input\n            type=\"time\"\n            value={preferences.communication.quietHours.start}\n            onChange={e =>\n              setPreferences({\n                ...preferences,\n                communication: {\n                  ...preferences.communication,\n                  quietHours: { ...preferences.communication.quietHours, start: e.target.value },\n                },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Quiet Hours End</label>\n          <input\n            type=\"time\"\n            value={preferences.communication.quietHours.end}\n            onChange={e =>\n              setPreferences({\n                ...preferences,\n                communication: {\n                  ...preferences.communication,\n                  quietHours: { ...preferences.communication.quietHours, end: e.target.value },\n                },\n              })\n            }\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <h3 className=\"font-medium text-gray-900 mb-3\">Data & Privacy Consent</h3>\n        <div className=\"space-y-2\">\n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={preferences.consent.dataSharing}\n              onChange={e =>\n                setPreferences({\n                  ...preferences,\n                  consent: { ...preferences.consent, dataSharing: e.target.checked },\n                })\n              }\n              className=\"mr-3\"\n            />\n            <span className=\"text-gray-700\">Allow sharing data with healthcare provider</span>\n          </label>\n\n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={preferences.consent.anonymizedAnalytics}\n              onChange={e =>\n                setPreferences({\n                  ...preferences,\n                  consent: { ...preferences.consent, anonymizedAnalytics: e.target.checked },\n                })\n              }\n              className=\"mr-3\"\n            />\n            <span className=\"text-gray-700\">Contribute anonymized data for research</span>\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderCurrentStep = () => {\n    switch (ONBOARDING_STEPS[currentStep].id) {\n      case 'demographics':\n        return renderDemographicsStep();\n      case 'medical':\n        return renderMedicalStep();\n      case 'dietary':\n        return renderDietaryStep();\n      case 'lifestyle':\n        return renderLifestyleStep();\n      case 'targets':\n        return renderTargetsStep();\n      case 'preferences':\n        return renderPreferencesStep();\n      default:\n        return null;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-green-600 mx-auto mb-4\"></div>\n          <p className=\"text-lg text-gray-600\">Loading your profile...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-6\">\n          <h1 className=\"text-3xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent mb-4\">\n            Weight Loss Journey Setup\n          </h1>\n\n          {/* Progress Steps */}\n          <div className=\"flex items-center justify-between mb-6\">\n            {ONBOARDING_STEPS.map((step, index) => (\n              <div key={step.id} className=\"flex items-center\">\n                <div\n                  className={`\n                  w-12 h-12 rounded-full flex items-center justify-center text-lg\n                  ${\n                    index < currentStep\n                      ? 'bg-green-500 text-white'\n                      : index === currentStep\n                        ? 'bg-blue-500 text-white'\n                        : 'bg-gray-200 text-gray-500'\n                  }\n                `}\n                >\n                  {index < currentStep ? '‚úì' : step.emoji}\n                </div>\n                {index < ONBOARDING_STEPS.length - 1 && (\n                  <div\n                    className={`\n                    h-1 w-full mx-2\n                    ${index < currentStep ? 'bg-green-500' : 'bg-gray-200'}\n                  `}\n                  />\n                )}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-lg font-medium text-gray-900\">\n              Step {currentStep + 1} of {ONBOARDING_STEPS.length}:{' '}\n              {ONBOARDING_STEPS[currentStep].title}\n            </p>\n          </div>\n        </div>\n\n        {/* Current Step Content */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-6\">{renderCurrentStep()}</div>\n\n        {/* Navigation */}\n        <div className=\"flex justify-between\">\n          <button\n            onClick={handleBack}\n            disabled={currentStep === 0}\n            className={`\n              px-8 py-3 rounded-lg font-semibold transition-all\n              ${\n                currentStep === 0\n                  ? 'bg-gray-200 text-gray-400 cursor-not-allowed'\n                  : 'bg-white text-gray-700 border-2 border-gray-300 hover:bg-gray-50'\n              }\n            `}\n          >\n            Back\n          </button>\n\n          <button\n            onClick={handleNext}\n            className=\"px-8 py-3 bg-gradient-to-r from-green-600 to-blue-600 text-white font-semibold rounded-lg hover:from-green-700 hover:to-blue-700 transition-all shadow-lg\"\n          >\n            {currentStep === ONBOARDING_STEPS.length - 1 ? 'Complete Setup' : 'Continue'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["ONBOARDING_STEPS","WeightLossOnboarding","navigate","useNavigate","currentStep","setCurrentStep","useState","profile","setProfile","isLoading","setIsLoading","demographics","setDemographics","medical","setMedical","dietary","setDietary","lifestyle","setLifestyle","targets","setTargets","preferences","setPreferences","useEffect","initializeProfile","patientId","existingProfile","weightLossProfileService","newProfile","handleNext","handleBack","renderDemographicsStep","jsxs","jsx","e","renderMedicalStep","condition","d","med","m","type","renderDietaryStep","diet","allergy","allergies","a","cuisine","cuisines","c","renderLifestyleStep","renderTargetsStep","flag","renderPreferencesStep","tone","renderCurrentStep","step","index"],"mappings":"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"}