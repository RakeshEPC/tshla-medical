{"version":3,"file":"CaseManagementDashboard-YNfjsV26.js","sources":["../../src/pages/CaseManagementDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { unifiedAuthService } from '../services/unifiedAuth.service';\nimport { logError, logWarn, logInfo, logDebug } from '../services/logger.service';\n\ninterface CommunicationLog {\n  id: string;\n  call_sid?: string;\n  message_sid?: string;\n  communication_type: 'voice' | 'sms' | 'conversation';\n  direction: 'inbound' | 'outbound';\n  from_number: string;\n  to_number: string;\n  raw_transcript?: string;\n  processed_transcript?: string;\n  ai_summary?: string;\n  extracted_entities?: any;\n  confidence_score?: number;\n  status: 'received' | 'processing' | 'processed' | 'reviewed';\n  processing_stage?: string;\n  needs_review: boolean;\n  duration_seconds?: number;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface ExtractedAppointment {\n  id: string;\n  communication_log_id: string;\n  patient_name?: string;\n  patient_phone?: string;\n  patient_dob?: string;\n  patient_mrn?: string;\n  requested_date?: string;\n  requested_time?: string;\n  flexible_scheduling: boolean;\n  appointment_type?: string;\n  reason_for_visit?: string;\n  urgency_level: 'emergency' | 'urgent' | 'routine';\n  preferred_doctor?: string;\n  symptoms?: any;\n  medications?: any;\n  allergies?: any;\n  status: 'extracted' | 'validated' | 'scheduled' | 'rejected';\n  validation_status?: string;\n  confidence_score?: number;\n  scheduled_date?: string;\n  created_at: string;\n}\n\ninterface StaffCase {\n  id: string;\n  case_number: string;\n  case_type:\n    | 'appointment_request'\n    | 'medical_question'\n    | 'prescription_refill'\n    | 'insurance_issue'\n    | 'emergency'\n    | 'technical_issue';\n  title: string;\n  description: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent' | 'emergency';\n  category?: string;\n  patient_name?: string;\n  patient_phone?: string;\n  patient_mrn?: string;\n  assigned_to?: string;\n  assigned_department?: 'front_desk' | 'clinical' | 'billing' | 'management';\n  status:\n    | 'new'\n    | 'assigned'\n    | 'in_progress'\n    | 'waiting_patient'\n    | 'waiting_provider'\n    | 'resolved'\n    | 'closed';\n  action_required?: string;\n  due_date?: string;\n  resolution_notes?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface ActionItem {\n  id: string;\n  communication_log_id?: string;\n  staff_case_id?: string;\n  action_type:\n    | 'call_patient'\n    | 'schedule_appointment'\n    | 'send_prescription'\n    | 'update_records'\n    | 'follow_up';\n  action_title: string;\n  action_description?: string;\n  assigned_to?: string;\n  status: 'pending' | 'in_progress' | 'completed' | 'cancelled' | 'failed';\n  priority: 'low' | 'medium' | 'high';\n  due_date?: string;\n  context?: any;\n  created_at: string;\n}\n\nexport default function CaseManagementDashboard() {\n  const navigate = useNavigate();\n  const [currentUser] = useState(unifiedAuthService.getCurrentUser());\n\n  // UI State\n  const [activeTab, setActiveTab] = useState<\n    'communications' | 'appointments' | 'cases' | 'actions'\n  >('cases');\n  const [selectedCase, setSelectedCase] = useState<StaffCase | null>(null);\n  const [showCaseDetail, setShowCaseDetail] = useState(false);\n\n  // Data State\n  const [communications, setCommunications] = useState<CommunicationLog[]>([]);\n  const [appointments, setAppointments] = useState<ExtractedAppointment[]>([]);\n  const [staffCases, setStaffCases] = useState<StaffCase[]>([]);\n  const [actionItems, setActionItems] = useState<ActionItem[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // Filters\n  const [priorityFilter, setPriorityFilter] = useState<string>('all');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [assigneeFilter, setAssigneeFilter] = useState<string>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n\n    loadData();\n  }, [currentUser, navigate]);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      // Real API calls to our dashboard backend\n      const API_BASE = 'http://localhost:9006/api/dashboard';\n\n      // Load real communication logs from database\n      const communicationsResponse = await fetch(`${API_BASE}/communications`);\n      const communicationsData = await communicationsResponse.json();\n      const realCommunications = communicationsData.success ? communicationsData.data : [];\n\n      // Load sample communication logs (fallback if no real data yet)\n      const sampleCommunications: CommunicationLog[] =\n        realCommunications.length > 0\n          ? realCommunications\n          : [\n              {\n                id: '1',\n                call_sid: 'CA_sample_001',\n                communication_type: 'voice',\n                direction: 'inbound',\n                from_number: '+15551234567',\n                to_number: '+18324027671',\n                raw_transcript:\n                  'Hi, I need to schedule an appointment with Dr. Smith for next Tuesday around 2 PM. This is John Doe.',\n                ai_summary:\n                  'Patient John Doe requesting appointment with Dr. Smith for Tuesday 2 PM',\n                status: 'processed',\n                confidence_score: 0.92,\n                needs_review: false,\n                duration_seconds: 120,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString(),\n              },\n            ];\n\n      // Load sample extracted appointments\n      const sampleAppointments: ExtractedAppointment[] = [\n        {\n          id: '1',\n          communication_log_id: '1',\n          patient_name: 'John Doe',\n          patient_phone: '+15551234567',\n          requested_date: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n          requested_time: '14:00',\n          flexible_scheduling: false,\n          appointment_type: 'Follow-up',\n          reason_for_visit: 'Routine check-up',\n          urgency_level: 'routine',\n          preferred_doctor: 'Dr. Smith',\n          status: 'extracted',\n          confidence_score: 0.89,\n          created_at: new Date().toISOString(),\n        },\n      ];\n\n      // Load sample staff cases\n      const sampleCases: StaffCase[] = [\n        {\n          id: '1',\n          case_number: `CASE-${new Date().toISOString().slice(0, 10).replace(/-/g, '')}-0001`,\n          case_type: 'appointment_request',\n          title: 'Appointment Request - John Doe',\n          description:\n            'Patient John Doe called requesting appointment with Dr. Smith for Tuesday 2 PM',\n          priority: 'medium',\n          patient_name: 'John Doe',\n          patient_phone: '+15551234567',\n          status: 'new',\n          action_required: 'Schedule appointment and confirm with patient',\n          due_date: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n        },\n        {\n          id: '2',\n          case_number: `CASE-${new Date().toISOString().slice(0, 10).replace(/-/g, '')}-0002`,\n          case_type: 'prescription_refill',\n          title: 'Prescription Refill - Sarah Johnson',\n          description: 'Patient needs refill for metformin, running low',\n          priority: 'high',\n          patient_name: 'Sarah Johnson',\n          patient_phone: '+15559876543',\n          status: 'assigned',\n          assigned_to: 'Clinical Team',\n          assigned_department: 'clinical',\n          action_required: 'Verify prescription history and process refill',\n          due_date: new Date(Date.now() + 12 * 60 * 60 * 1000).toISOString(),\n          created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n          updated_at: new Date().toISOString(),\n        },\n      ];\n\n      // Load sample action items\n      const sampleActions: ActionItem[] = [\n        {\n          id: '1',\n          staff_case_id: '1',\n          action_type: 'schedule_appointment',\n          action_title: 'Schedule appointment for John Doe',\n          action_description: 'Book Tuesday 2 PM slot with Dr. Smith',\n          status: 'pending',\n          priority: 'medium',\n          due_date: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n          created_at: new Date().toISOString(),\n        },\n        {\n          id: '2',\n          staff_case_id: '2',\n          action_type: 'send_prescription',\n          action_title: 'Process metformin refill',\n          action_description: 'Send prescription to pharmacy for Sarah Johnson',\n          status: 'pending',\n          priority: 'high',\n          due_date: new Date(Date.now() + 12 * 60 * 60 * 1000).toISOString(),\n          created_at: new Date().toISOString(),\n        },\n      ];\n\n      // Load real appointments from API\n      const appointmentsResponse = await fetch(`${API_BASE}/appointments`);\n      const appointmentsData = await appointmentsResponse.json();\n      const realAppointments = appointmentsData.success ? appointmentsData.data : [];\n\n      // Load real staff cases from API\n      const casesResponse = await fetch(`${API_BASE}/cases`);\n      const casesData = await casesResponse.json();\n      const realCases = casesData.success ? casesData.data : [];\n\n      // Load real action items from API\n      const actionsResponse = await fetch(`${API_BASE}/actions`);\n      const actionsData = await actionsResponse.json();\n      const realActions = actionsData.success ? actionsData.data : [];\n\n      logDebug('CaseManagementDashboard', 'Debug message', {});\n\n      setCommunications([...realCommunications, ...sampleCommunications]);\n      setAppointments([...realAppointments, ...sampleAppointments]);\n      setStaffCases([...realCases, ...sampleCases]);\n      setActionItems([...realActions, ...sampleActions]);\n    } catch (error) {\n      logError('CaseManagementDashboard', 'Error message', {});\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    unifiedAuthService.logout();\n    navigate('/login');\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'emergency':\n        return 'bg-red-100 text-red-800 border-red-200';\n      case 'urgent':\n        return 'bg-orange-100 text-orange-800 border-orange-200';\n      case 'high':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'medium':\n        return 'bg-blue-100 text-blue-800 border-blue-200';\n      case 'low':\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'new':\n        return 'bg-green-100 text-green-800';\n      case 'assigned':\n        return 'bg-blue-100 text-blue-800';\n      case 'in_progress':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'waiting_patient':\n        return 'bg-purple-100 text-purple-800';\n      case 'waiting_provider':\n        return 'bg-indigo-100 text-indigo-800';\n      case 'resolved':\n        return 'bg-gray-100 text-gray-800';\n      case 'closed':\n        return 'bg-gray-100 text-gray-500';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const filteredCases = staffCases.filter(case_ => {\n    if (priorityFilter !== 'all' && case_.priority !== priorityFilter) return false;\n    if (statusFilter !== 'all' && case_.status !== statusFilter) return false;\n    if (typeFilter !== 'all' && case_.case_type !== typeFilter) return false;\n    if (assigneeFilter !== 'all') {\n      if (assigneeFilter === 'unassigned' && case_.assigned_to) return false;\n      if (assigneeFilter !== 'unassigned' && case_.assigned_to !== assigneeFilter) return false;\n    }\n    return true;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading case management data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-xl font-semibold text-gray-900\">Case Management Dashboard</h1>\n              <span className=\"ml-4 text-sm text-gray-500\">\n                AI-Powered Communication Intelligence\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm text-gray-600\">Welcome, {currentUser?.name}</span>\n              <button onClick={handleLogout} className=\"text-sm text-red-600 hover:text-red-800\">\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Stats Cards */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white text-sm font-bold\">{communications.length}</span>\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">Communications</p>\n                <p className=\"text-lg font-semibold text-gray-900\">Today</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white text-sm font-bold\">{appointments.length}</span>\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">Appointments</p>\n                <p className=\"text-lg font-semibold text-gray-900\">Extracted</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white text-sm font-bold\">\n                    {\n                      staffCases.filter(c => ['new', 'assigned', 'in_progress'].includes(c.status))\n                        .length\n                    }\n                  </span>\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">Active Cases</p>\n                <p className=\"text-lg font-semibold text-gray-900\">Need Attention</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center\">\n                  <span className=\"text-white text-sm font-bold\">\n                    {actionItems.filter(a => a.status === 'pending').length}\n                  </span>\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">Pending Actions</p>\n                <p className=\"text-lg font-semibold text-gray-900\">To Complete</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className=\"bg-white rounded-lg shadow mb-6\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n              {[\n                { id: 'cases', name: 'Staff Cases', count: filteredCases.length },\n                { id: 'communications', name: 'Communications', count: communications.length },\n                { id: 'appointments', name: 'Appointments', count: appointments.length },\n                {\n                  id: 'actions',\n                  name: 'Action Items',\n                  count: actionItems.filter(a => a.status === 'pending').length,\n                },\n              ].map(tab => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id as any)}\n                  className={`py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  {tab.name}\n                  {tab.count > 0 && (\n                    <span className=\"ml-2 bg-gray-100 text-gray-900 py-0.5 px-2 rounded-full text-xs\">\n                      {tab.count}\n                    </span>\n                  )}\n                </button>\n              ))}\n            </nav>\n          </div>\n\n          {/* Tab Content */}\n          <div className=\"p-6\">\n            {/* Cases Tab */}\n            {activeTab === 'cases' && (\n              <div className=\"space-y-4\">\n                {/* Filters */}\n                <div className=\"flex flex-wrap gap-4\">\n                  <select\n                    value={priorityFilter}\n                    onChange={e => setPriorityFilter(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                  >\n                    <option value=\"all\">All Priorities</option>\n                    <option value=\"emergency\">Emergency</option>\n                    <option value=\"urgent\">Urgent</option>\n                    <option value=\"high\">High</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"low\">Low</option>\n                  </select>\n\n                  <select\n                    value={statusFilter}\n                    onChange={e => setStatusFilter(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                  >\n                    <option value=\"all\">All Statuses</option>\n                    <option value=\"new\">New</option>\n                    <option value=\"assigned\">Assigned</option>\n                    <option value=\"in_progress\">In Progress</option>\n                    <option value=\"waiting_patient\">Waiting Patient</option>\n                    <option value=\"waiting_provider\">Waiting Provider</option>\n                    <option value=\"resolved\">Resolved</option>\n                  </select>\n\n                  <select\n                    value={typeFilter}\n                    onChange={e => setTypeFilter(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                  >\n                    <option value=\"all\">All Types</option>\n                    <option value=\"appointment_request\">Appointment Request</option>\n                    <option value=\"prescription_refill\">Prescription Refill</option>\n                    <option value=\"medical_question\">Medical Question</option>\n                    <option value=\"insurance_issue\">Insurance Issue</option>\n                    <option value=\"emergency\">Emergency</option>\n                  </select>\n                </div>\n\n                {/* Cases List */}\n                <div className=\"space-y-3\">\n                  {filteredCases.length === 0 ? (\n                    <div className=\"text-center py-8 text-gray-500\">\n                      <p>No cases match the current filters</p>\n                    </div>\n                  ) : (\n                    filteredCases.map(case_ => (\n                      <div\n                        key={case_.id}\n                        className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow cursor-pointer\"\n                        onClick={() => {\n                          setSelectedCase(case_);\n                          setShowCaseDetail(true);\n                        }}\n                      >\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-2 mb-2\">\n                              <span className=\"text-sm font-mono text-gray-500\">\n                                {case_.case_number}\n                              </span>\n                              <span\n                                className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium border ${getPriorityColor(case_.priority)}`}\n                              >\n                                {case_.priority.toUpperCase()}\n                              </span>\n                              <span\n                                className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${getStatusColor(case_.status)}`}\n                              >\n                                {case_.status.replace('_', ' ').toUpperCase()}\n                              </span>\n                            </div>\n                            <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">\n                              {case_.title}\n                            </h3>\n                            <p className=\"text-sm text-gray-600 mb-2\">{case_.description}</p>\n                            <div className=\"flex items-center text-xs text-gray-500 space-x-4\">\n                              {case_.patient_name && <span>Patient: {case_.patient_name}</span>}\n                              {case_.assigned_to && <span>Assigned: {case_.assigned_to}</span>}\n                              <span>Created: {new Date(case_.created_at).toLocaleString()}</span>\n                              {case_.due_date && (\n                                <span>Due: {new Date(case_.due_date).toLocaleString()}</span>\n                              )}\n                            </div>\n                          </div>\n                          <button\n                            className=\"ml-4 px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\n                            onClick={e => {\n                              e.stopPropagation();\n                              // Handle case action\n                            }}\n                          >\n                            Action\n                          </button>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Communications Tab */}\n            {activeTab === 'communications' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold mb-4\">Recent Communications</h3>\n                {communications.map(comm => (\n                  <div key={comm.id} className=\"border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-start justify-between mb-2\">\n                      <div>\n                        <span\n                          className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${\n                            comm.communication_type === 'voice'\n                              ? 'bg-blue-100 text-blue-800'\n                              : 'bg-green-100 text-green-800'\n                          }`}\n                        >\n                          {comm.communication_type.toUpperCase()}\n                        </span>\n                        <span className=\"ml-2 text-sm text-gray-500\">\n                          {comm.direction === 'inbound' ? '→' : '←'} {comm.from_number}\n                        </span>\n                      </div>\n                      <span\n                        className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${getStatusColor(comm.status)}`}\n                      >\n                        {comm.status.toUpperCase()}\n                      </span>\n                    </div>\n                    {comm.ai_summary && (\n                      <p className=\"text-sm text-gray-800 mb-2 font-medium\">{comm.ai_summary}</p>\n                    )}\n                    {comm.raw_transcript && (\n                      <p className=\"text-sm text-gray-600 mb-2\">\"{comm.raw_transcript}\"</p>\n                    )}\n                    <div className=\"flex items-center text-xs text-gray-500 space-x-4\">\n                      {comm.confidence_score && (\n                        <span>Confidence: {(comm.confidence_score * 100).toFixed(0)}%</span>\n                      )}\n                      {comm.duration_seconds && <span>Duration: {comm.duration_seconds}s</span>}\n                      <span>Received: {new Date(comm.created_at).toLocaleString()}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Other tabs would be implemented similarly */}\n            {activeTab === 'appointments' && (\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4\">Extracted Appointments</h3>\n                <p className=\"text-gray-600\">Appointment extraction interface coming soon...</p>\n              </div>\n            )}\n\n            {activeTab === 'actions' && (\n              <div>\n                <h3 className=\"text-lg font-semibold mb-4\">Pending Action Items</h3>\n                <p className=\"text-gray-600\">Action items management interface coming soon...</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Case Detail Modal */}\n      {showCaseDetail && selectedCase && (\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg max-w-2xl w-full p-6 max-h-screen overflow-y-auto\">\n            <div className=\"flex justify-between items-start mb-4\">\n              <div>\n                <h2 className=\"text-xl font-semibold text-gray-900\">{selectedCase.title}</h2>\n                <p className=\"text-sm font-mono text-gray-500\">{selectedCase.case_number}</p>\n              </div>\n              <button\n                onClick={() => setShowCaseDetail(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Priority</label>\n                  <span\n                    className={`inline-flex items-center px-2 py-1 rounded text-sm font-medium border ${getPriorityColor(selectedCase.priority)}`}\n                  >\n                    {selectedCase.priority.toUpperCase()}\n                  </span>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                  <span\n                    className={`inline-flex items-center px-2 py-1 rounded text-sm font-medium ${getStatusColor(selectedCase.status)}`}\n                  >\n                    {selectedCase.status.replace('_', ' ').toUpperCase()}\n                  </span>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\n                <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded\">\n                  {selectedCase.description}\n                </p>\n              </div>\n\n              {selectedCase.patient_name && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Patient Information\n                  </label>\n                  <div className=\"bg-gray-50 p-3 rounded\">\n                    <p className=\"text-sm text-gray-900\">{selectedCase.patient_name}</p>\n                    {selectedCase.patient_phone && (\n                      <p className=\"text-sm text-gray-600\">{selectedCase.patient_phone}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {selectedCase.action_required && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Action Required\n                  </label>\n                  <p className=\"text-sm text-gray-900 bg-yellow-50 p-3 rounded border border-yellow-200\">\n                    {selectedCase.action_required}\n                  </p>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-2 gap-4 text-sm text-gray-600\">\n                <div>\n                  <span className=\"font-medium\">Created:</span>{' '}\n                  {new Date(selectedCase.created_at).toLocaleString()}\n                </div>\n                <div>\n                  <span className=\"font-medium\">Updated:</span>{' '}\n                  {new Date(selectedCase.updated_at).toLocaleString()}\n                </div>\n              </div>\n\n              <div className=\"flex justify-end space-x-3 pt-4 border-t\">\n                <button\n                  onClick={() => setShowCaseDetail(false)}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n                >\n                  Close\n                </button>\n                <button className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700\">\n                  Assign to Me\n                </button>\n                <button className=\"px-4 py-2 text-sm font-medium text-white bg-green-600 rounded-md hover:bg-green-700\">\n                  Mark Complete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["CaseManagementDashboard","navigate","useNavigate","currentUser","useState","unifiedAuthService","activeTab","setActiveTab","selectedCase","setSelectedCase","showCaseDetail","setShowCaseDetail","communications","setCommunications","appointments","setAppointments","staffCases","setStaffCases","actionItems","setActionItems","loading","setLoading","priorityFilter","setPriorityFilter","statusFilter","setStatusFilter","assigneeFilter","setAssigneeFilter","typeFilter","setTypeFilter","useEffect","loadData","API_BASE","communicationsData","realCommunications","sampleCommunications","sampleAppointments","sampleCases","sampleActions","appointmentsData","realAppointments","casesData","realCases","actionsData","realActions","logDebug","logError","handleLogout","getPriorityColor","priority","getStatusColor","status","filteredCases","case_","jsxs","jsx","c","a","tab","e","comm"],"mappings":"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"}