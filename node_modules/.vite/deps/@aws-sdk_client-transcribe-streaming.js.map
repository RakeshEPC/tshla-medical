{
  "version": 3,
  "sources": ["../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-host-header/dist-es/index.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/configuration.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/recursionDetectionMiddleware.browser.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/getRecursionDetectionPlugin.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partitions.json", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/util-endpoints/dist-es/aws.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/jsonReplacer.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/xml-builder/dist-es/xml-parser.browser.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-user-agent/dist-es/check-features.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-user-agent/dist-es/encode-features.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/auth/httpAuthSchemeProvider.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/endpoint/EndpointParameters.js", "../../@aws-sdk/client-transcribe-streaming/package.json", "../../@aws-sdk/middleware-sdk-transcribe-streaming/dist-es/eventstream-handler.js", "../../@aws-sdk/middleware-sdk-transcribe-streaming/dist-es/middleware-inject-response-values.js", "../../@aws-sdk/middleware-sdk-transcribe-streaming/dist-es/middleware-port.js", "../../@aws-sdk/middleware-sdk-transcribe-streaming/dist-es/getTranscribeStreamingPlugin.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/endpoint/ruleset.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/endpoint/endpointResolver.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/runtimeConfig.shared.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/runtimeConfig.browser.js", "../../@aws-sdk/client-transcribe-streaming/node_modules/@aws-sdk/region-config-resolver/dist-es/extensions/index.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/auth/httpAuthExtensionConfiguration.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/runtimeExtensions.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/TranscribeStreamingClient.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/models/TranscribeStreamingServiceException.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/models/models_0.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/protocols/Aws_restJson1.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/commands/GetMedicalScribeStreamCommand.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/commands/StartCallAnalyticsStreamTranscriptionCommand.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/commands/StartMedicalScribeStreamCommand.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/commands/StartMedicalStreamTranscriptionCommand.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/commands/StartStreamTranscriptionCommand.js", "../../@aws-sdk/client-transcribe-streaming/dist-es/TranscribeStreaming.js"],
  "sourcesContent": ["import { HttpRequest } from \"@smithy/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n", "export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n", "export const recursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\n", "export const recursionDetectionMiddleware = () => (next) => async (args) => next(args);\n", "import { recursionDetectionMiddlewareOptions } from \"./configuration\";\nimport { recursionDetectionMiddleware } from \"./recursionDetectionMiddleware\";\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(), recursionDetectionMiddlewareOptions);\n    },\n});\n", "import { normalizeProvider } from \"@smithy/core\";\nexport const DEFAULT_UA_APP_ID = undefined;\nfunction isValidUserAgentAppId(appId) {\n    if (appId === undefined) {\n        return true;\n    }\n    return typeof appId === \"string\" && appId.length <= 50;\n}\nexport function resolveUserAgentConfig(input) {\n    const normalizedAppIdProvider = normalizeProvider(input.userAgentAppId ?? DEFAULT_UA_APP_ID);\n    const { customUserAgent } = input;\n    return Object.assign(input, {\n        customUserAgent: typeof customUserAgent === \"string\" ? [[customUserAgent]] : customUserAgent,\n        userAgentAppId: async () => {\n            const appId = await normalizedAppIdProvider();\n            if (!isValidUserAgentAppId(appId)) {\n                const logger = input.logger?.constructor?.name === \"NoOpLogger\" || !input.logger ? console : input.logger;\n                if (typeof appId !== \"string\") {\n                    logger?.warn(\"userAgentAppId must be a string or undefined.\");\n                }\n                else if (appId.length > 50) {\n                    logger?.warn(\"The provided userAgentAppId exceeds the maximum length of 50 characters.\");\n                }\n            }\n            return appId;\n        },\n    });\n}\n", "import { isValidHostLabel } from \"@smithy/util-endpoints\";\nimport { isIpAddress } from \"../isIpAddress\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n", "const ARN_DELIMITER = \":\";\nconst RESOURCE_DELIMITER = \"/\";\nexport const parseArn = (value) => {\n    const segments = value.split(ARN_DELIMITER);\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourcePath] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourcePath.join(ARN_DELIMITER) === \"\")\n        return null;\n    const resourceId = resourcePath.map((resource) => resource.split(RESOURCE_DELIMITER)).flat();\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId,\n    };\n};\n", "{\n    \"partitions\": [{\n            \"id\": \"aws\",\n            \"outputs\": {\n                \"dnsSuffix\": \"amazonaws.com\",\n                \"dualStackDnsSuffix\": \"api.aws\",\n                \"implicitGlobalRegion\": \"us-east-1\",\n                \"name\": \"aws\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^(us|eu|ap|sa|ca|me|af|il|mx)\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"af-south-1\": {\n                    \"description\": \"Africa (Cape Town)\"\n                },\n                \"ap-east-1\": {\n                    \"description\": \"Asia Pacific (Hong Kong)\"\n                },\n                \"ap-east-2\": {\n                    \"description\": \"Asia Pacific (Taipei)\"\n                },\n                \"ap-northeast-1\": {\n                    \"description\": \"Asia Pacific (Tokyo)\"\n                },\n                \"ap-northeast-2\": {\n                    \"description\": \"Asia Pacific (Seoul)\"\n                },\n                \"ap-northeast-3\": {\n                    \"description\": \"Asia Pacific (Osaka)\"\n                },\n                \"ap-south-1\": {\n                    \"description\": \"Asia Pacific (Mumbai)\"\n                },\n                \"ap-south-2\": {\n                    \"description\": \"Asia Pacific (Hyderabad)\"\n                },\n                \"ap-southeast-1\": {\n                    \"description\": \"Asia Pacific (Singapore)\"\n                },\n                \"ap-southeast-2\": {\n                    \"description\": \"Asia Pacific (Sydney)\"\n                },\n                \"ap-southeast-3\": {\n                    \"description\": \"Asia Pacific (Jakarta)\"\n                },\n                \"ap-southeast-4\": {\n                    \"description\": \"Asia Pacific (Melbourne)\"\n                },\n                \"ap-southeast-5\": {\n                    \"description\": \"Asia Pacific (Malaysia)\"\n                },\n                \"ap-southeast-6\": {\n                    \"description\": \"Asia Pacific (New Zealand)\"\n                },\n                \"ap-southeast-7\": {\n                    \"description\": \"Asia Pacific (Thailand)\"\n                },\n                \"aws-global\": {\n                    \"description\": \"aws global region\"\n                },\n                \"ca-central-1\": {\n                    \"description\": \"Canada (Central)\"\n                },\n                \"ca-west-1\": {\n                    \"description\": \"Canada West (Calgary)\"\n                },\n                \"eu-central-1\": {\n                    \"description\": \"Europe (Frankfurt)\"\n                },\n                \"eu-central-2\": {\n                    \"description\": \"Europe (Zurich)\"\n                },\n                \"eu-north-1\": {\n                    \"description\": \"Europe (Stockholm)\"\n                },\n                \"eu-south-1\": {\n                    \"description\": \"Europe (Milan)\"\n                },\n                \"eu-south-2\": {\n                    \"description\": \"Europe (Spain)\"\n                },\n                \"eu-west-1\": {\n                    \"description\": \"Europe (Ireland)\"\n                },\n                \"eu-west-2\": {\n                    \"description\": \"Europe (London)\"\n                },\n                \"eu-west-3\": {\n                    \"description\": \"Europe (Paris)\"\n                },\n                \"il-central-1\": {\n                    \"description\": \"Israel (Tel Aviv)\"\n                },\n                \"me-central-1\": {\n                    \"description\": \"Middle East (UAE)\"\n                },\n                \"me-south-1\": {\n                    \"description\": \"Middle East (Bahrain)\"\n                },\n                \"mx-central-1\": {\n                    \"description\": \"Mexico (Central)\"\n                },\n                \"sa-east-1\": {\n                    \"description\": \"South America (Sao Paulo)\"\n                },\n                \"us-east-1\": {\n                    \"description\": \"US East (N. Virginia)\"\n                },\n                \"us-east-2\": {\n                    \"description\": \"US East (Ohio)\"\n                },\n                \"us-west-1\": {\n                    \"description\": \"US West (N. California)\"\n                },\n                \"us-west-2\": {\n                    \"description\": \"US West (Oregon)\"\n                }\n            }\n        }, {\n            \"id\": \"aws-cn\",\n            \"outputs\": {\n                \"dnsSuffix\": \"amazonaws.com.cn\",\n                \"dualStackDnsSuffix\": \"api.amazonwebservices.com.cn\",\n                \"implicitGlobalRegion\": \"cn-northwest-1\",\n                \"name\": \"aws-cn\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-cn-global\": {\n                    \"description\": \"aws-cn global region\"\n                },\n                \"cn-north-1\": {\n                    \"description\": \"China (Beijing)\"\n                },\n                \"cn-northwest-1\": {\n                    \"description\": \"China (Ningxia)\"\n                }\n            }\n        }, {\n            \"id\": \"aws-eusc\",\n            \"outputs\": {\n                \"dnsSuffix\": \"amazonaws.eu\",\n                \"dualStackDnsSuffix\": \"api.amazonwebservices.eu\",\n                \"implicitGlobalRegion\": \"eusc-de-east-1\",\n                \"name\": \"aws-eusc\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^eusc\\\\-(de)\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"eusc-de-east-1\": {\n                    \"description\": \"EU (Germany)\"\n                }\n            }\n        }, {\n            \"id\": \"aws-iso\",\n            \"outputs\": {\n                \"dnsSuffix\": \"c2s.ic.gov\",\n                \"dualStackDnsSuffix\": \"api.aws.ic.gov\",\n                \"implicitGlobalRegion\": \"us-iso-east-1\",\n                \"name\": \"aws-iso\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-iso-global\": {\n                    \"description\": \"aws-iso global region\"\n                },\n                \"us-iso-east-1\": {\n                    \"description\": \"US ISO East\"\n                },\n                \"us-iso-west-1\": {\n                    \"description\": \"US ISO WEST\"\n                }\n            }\n        }, {\n            \"id\": \"aws-iso-b\",\n            \"outputs\": {\n                \"dnsSuffix\": \"sc2s.sgov.gov\",\n                \"dualStackDnsSuffix\": \"api.aws.scloud\",\n                \"implicitGlobalRegion\": \"us-isob-east-1\",\n                \"name\": \"aws-iso-b\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-iso-b-global\": {\n                    \"description\": \"aws-iso-b global region\"\n                },\n                \"us-isob-east-1\": {\n                    \"description\": \"US ISOB East (Ohio)\"\n                }\n            }\n        }, {\n            \"id\": \"aws-iso-e\",\n            \"outputs\": {\n                \"dnsSuffix\": \"cloud.adc-e.uk\",\n                \"dualStackDnsSuffix\": \"api.cloud-aws.adc-e.uk\",\n                \"implicitGlobalRegion\": \"eu-isoe-west-1\",\n                \"name\": \"aws-iso-e\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^eu\\\\-isoe\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-iso-e-global\": {\n                    \"description\": \"aws-iso-e global region\"\n                },\n                \"eu-isoe-west-1\": {\n                    \"description\": \"EU ISOE West\"\n                }\n            }\n        }, {\n            \"id\": \"aws-iso-f\",\n            \"outputs\": {\n                \"dnsSuffix\": \"csp.hci.ic.gov\",\n                \"dualStackDnsSuffix\": \"api.aws.hci.ic.gov\",\n                \"implicitGlobalRegion\": \"us-isof-south-1\",\n                \"name\": \"aws-iso-f\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^us\\\\-isof\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-iso-f-global\": {\n                    \"description\": \"aws-iso-f global region\"\n                },\n                \"us-isof-east-1\": {\n                    \"description\": \"US ISOF EAST\"\n                },\n                \"us-isof-south-1\": {\n                    \"description\": \"US ISOF SOUTH\"\n                }\n            }\n        }, {\n            \"id\": \"aws-us-gov\",\n            \"outputs\": {\n                \"dnsSuffix\": \"amazonaws.com\",\n                \"dualStackDnsSuffix\": \"api.aws\",\n                \"implicitGlobalRegion\": \"us-gov-west-1\",\n                \"name\": \"aws-us-gov\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-us-gov-global\": {\n                    \"description\": \"aws-us-gov global region\"\n                },\n                \"us-gov-east-1\": {\n                    \"description\": \"AWS GovCloud (US-East)\"\n                },\n                \"us-gov-west-1\": {\n                    \"description\": \"AWS GovCloud (US-West)\"\n                }\n            }\n        }],\n    \"version\": \"1.1\"\n}\n", "import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n", "import { customEndpointFunctions } from \"@smithy/util-endpoints\";\nimport { isVirtualHostableS3Bucket } from \"./lib/aws/isVirtualHostableS3Bucket\";\nimport { parseArn } from \"./lib/aws/parseArn\";\nimport { partition } from \"./lib/aws/partition\";\nexport const awsEndpointFunctions = {\n    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket,\n    parseArn: parseArn,\n    partition: partition,\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n", "export function setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n", "export function setFeature(context, feature, value) {\n    if (!context.__aws_sdk_context) {\n        context.__aws_sdk_context = {\n            features: {},\n        };\n    }\n    else if (!context.__aws_sdk_context.features) {\n        context.__aws_sdk_context.features = {};\n    }\n    context.__aws_sdk_context.features[feature] = value;\n}\n", "import { HttpResponse } from \"@smithy/protocol-http\";\nexport const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n", "export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n", "import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n", "import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getDateHeader, getSkewCorrectedDate, getUpdatedSystemClockOffset } from \"../utils\";\nconst throwSigningPropertyError = (name, property) => {\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nexport const validateSigningProperties = async (signingProperties) => {\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingRegionSet = signingProperties?.signingRegionSet;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingRegionSet,\n        signingName,\n    };\n};\nexport class AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const validatedProps = await validateSigningProperties(signingProperties);\n        const { config, signer } = validatedProps;\n        let { signingRegion, signingName } = validatedProps;\n        const handlerExecutionContext = signingProperties.context;\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n            const [first, second] = handlerExecutionContext.authSchemes;\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n                signingRegion = second?.signingRegion ?? signingRegion;\n                signingName = second?.signingName ?? signingName;\n            }\n        }\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error) => {\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = getDateHeader(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n        }\n    }\n}\nexport const AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n", "import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { doesIdentityRequireRefresh, isIdentityExpired, memoizeIdentityProvider, normalizeProvider, } from \"@smithy/core\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nexport const resolveAwsSdkSigV4Config = (config) => {\n    let inputCredentials = config.credentials;\n    let isUserSupplied = !!config.credentials;\n    let resolvedCredentials = undefined;\n    Object.defineProperty(config, \"credentials\", {\n        set(credentials) {\n            if (credentials && credentials !== inputCredentials && credentials !== resolvedCredentials) {\n                isUserSupplied = true;\n            }\n            inputCredentials = credentials;\n            const memoizedProvider = normalizeCredentialProvider(config, {\n                credentials: inputCredentials,\n                credentialDefaultProvider: config.credentialDefaultProvider,\n            });\n            const boundProvider = bindCallerConfig(config, memoizedProvider);\n            if (isUserSupplied && !boundProvider.attributed) {\n                resolvedCredentials = async (options) => boundProvider(options).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_CODE\", \"e\"));\n                resolvedCredentials.memoized = boundProvider.memoized;\n                resolvedCredentials.configBound = boundProvider.configBound;\n                resolvedCredentials.attributed = true;\n            }\n            else {\n                resolvedCredentials = boundProvider;\n            }\n        },\n        get() {\n            return resolvedCredentials;\n        },\n        enumerable: true,\n        configurable: true,\n    });\n    config.credentials = inputCredentials;\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\n    let signer;\n    if (config.signer) {\n        signer = normalizeProvider(config.signer);\n    }\n    else if (config.regionInfoProvider) {\n        signer = () => normalizeProvider(config.region)()\n            .then(async (region) => [\n            (await config.regionInfoProvider(region, {\n                useFipsEndpoint: await config.useFipsEndpoint(),\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            config.signingRegion = config.signingRegion || signingRegion || region;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await normalizeProvider(config.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    const resolvedConfig = Object.assign(config, {\n        systemClockOffset,\n        signingEscapePath,\n        signer,\n    });\n    return resolvedConfig;\n};\nexport const resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\nfunction normalizeCredentialProvider(config, { credentials, credentialDefaultProvider, }) {\n    let credentialsProvider;\n    if (credentials) {\n        if (!credentials?.memoized) {\n            credentialsProvider = memoizeIdentityProvider(credentials, isIdentityExpired, doesIdentityRequireRefresh);\n        }\n        else {\n            credentialsProvider = credentials;\n        }\n    }\n    else {\n        if (credentialDefaultProvider) {\n            credentialsProvider = normalizeProvider(credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config,\n            })));\n        }\n        else {\n            credentialsProvider = async () => {\n                throw new Error(\"@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.\");\n            };\n        }\n    }\n    credentialsProvider.memoized = true;\n    return credentialsProvider;\n}\nfunction bindCallerConfig(config, credentialsProvider) {\n    if (credentialsProvider.configBound) {\n        return credentialsProvider;\n    }\n    const fn = async (options) => credentialsProvider({ ...options, callerClientConfig: config });\n    fn.memoized = credentialsProvider.memoized;\n    fn.configBound = true;\n    return fn;\n}\n", "import { collectBody } from \"@smithy/smithy-client\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nexport const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => (context?.utf8Encoder ?? toUtf8)(body));\n", "import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data && typeof data === \"object\") {\n        const codeKey = findKey(data, \"code\");\n        if (codeKey && data[codeKey] !== undefined) {\n            return sanitizeErrorCode(data[codeKey]);\n        }\n        if (data[\"__type\"] !== undefined) {\n            return sanitizeErrorCode(data[\"__type\"]);\n        }\n    }\n};\n", "import { NumericValue } from \"@smithy/core/serde\";\nconst NUMERIC_CONTROL_CHAR = String.fromCharCode(925);\nexport class JsonReplacer {\n    values = new Map();\n    counter = 0;\n    stage = 0;\n    createReplacer() {\n        if (this.stage === 1) {\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer already created.\");\n        }\n        if (this.stage === 2) {\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer exhausted.\");\n        }\n        this.stage = 1;\n        return (key, value) => {\n            if (value instanceof NumericValue) {\n                const v = `${NUMERIC_CONTROL_CHAR + \"nv\" + this.counter++}_` + value.string;\n                this.values.set(`\"${v}\"`, value.string);\n                return v;\n            }\n            if (typeof value === \"bigint\") {\n                const s = value.toString();\n                const v = `${NUMERIC_CONTROL_CHAR + \"b\" + this.counter++}_` + s;\n                this.values.set(`\"${v}\"`, s);\n                return v;\n            }\n            return value;\n        };\n    }\n    replaceInJson(json) {\n        if (this.stage === 0) {\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer not created yet.\");\n        }\n        if (this.stage === 2) {\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer exhausted.\");\n        }\n        this.stage = 2;\n        if (this.counter === 0) {\n            return json;\n        }\n        for (const [key, value] of this.values) {\n            json = json.replace(key, value);\n        }\n        return json;\n    }\n}\n", "const parser = new DOMParser();\nexport function parseXML(xmlString) {\n    const xmlDocument = parser.parseFromString(xmlString, \"application/xml\");\n    if (xmlDocument.getElementsByTagName(\"parsererror\").length > 0) {\n        throw new Error(\"DOMParser XML parsing error.\");\n    }\n    const xmlToObj = (node) => {\n        if (node.nodeType === Node.TEXT_NODE) {\n            if (node.textContent?.trim()) {\n                return node.textContent;\n            }\n        }\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const element = node;\n            if (element.attributes.length === 0 && element.childNodes.length === 0) {\n                return \"\";\n            }\n            const obj = {};\n            const attributes = Array.from(element.attributes);\n            for (const attr of attributes) {\n                obj[`${attr.name}`] = attr.value;\n            }\n            const childNodes = Array.from(element.childNodes);\n            for (const child of childNodes) {\n                const childResult = xmlToObj(child);\n                if (childResult != null) {\n                    const childName = child.nodeName;\n                    if (childNodes.length === 1 && attributes.length === 0 && childName === \"#text\") {\n                        return childResult;\n                    }\n                    if (obj[childName]) {\n                        if (Array.isArray(obj[childName])) {\n                            obj[childName].push(childResult);\n                        }\n                        else {\n                            obj[childName] = [obj[childName], childResult];\n                        }\n                    }\n                    else {\n                        obj[childName] = childResult;\n                    }\n                }\n                else if (childNodes.length === 1 && attributes.length === 0) {\n                    return element.textContent;\n                }\n            }\n            return obj;\n        }\n        return null;\n    };\n    return {\n        [xmlDocument.documentElement.nodeName]: xmlToObj(xmlDocument.documentElement),\n    };\n}\n", "import { setFeature } from \"@aws-sdk/core\";\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nexport async function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            setFeature(context, key, value);\n        }\n    }\n}\n", "export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_NAME_SEPARATOR = \"/\";\nexport const UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nexport const UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nexport const UA_ESCAPE_CHAR = \"-\";\n", "const BYTE_LIMIT = 1024;\nexport function encodeFeatures(features) {\n    let buffer = \"\";\n    for (const key in features) {\n        const val = features[key];\n        if (buffer.length + val.length + 1 <= BYTE_LIMIT) {\n            if (buffer.length) {\n                buffer += \",\" + val;\n            }\n            else {\n                buffer += val;\n            }\n            continue;\n        }\n        break;\n    }\n    return buffer;\n}\n", "import { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { checkFeatures } from \"./check-features\";\nimport { SPACE, UA_ESCAPE_CHAR, UA_NAME_ESCAPE_REGEX, UA_NAME_SEPARATOR, UA_VALUE_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT, } from \"./constants\";\nimport { encodeFeatures } from \"./encode-features\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    await checkFeatures(context, options, args);\n    const awsContext = context;\n    defaultUserAgent.push(`m/${encodeFeatures(Object.assign({}, context.__smithy_context?.features, awsContext.__aws_sdk_context?.features))}`);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const appId = await options.userAgentAppId();\n    if (appId) {\n        defaultUserAgent.push(escapeUserAgent([`app/${appId}`]));\n    }\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n", "import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultTranscribeStreamingHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"transcribe\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nexport const defaultTranscribeStreamingHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return Object.assign(config_0, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n", "export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"transcribe\",\n    });\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n", "{\n  \"name\": \"@aws-sdk/client-transcribe-streaming\",\n  \"description\": \"AWS SDK for JavaScript Transcribe Streaming Client for Node.js, Browser and React Native\",\n  \"version\": \"3.899.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-transcribe-streaming\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo transcribe-streaming\",\n    \"test:e2e\": \"yarn g:vitest run -c vitest.config.e2e.mts --mode development\",\n    \"test:e2e:watch\": \"yarn g:vitest watch -c vitest.config.e2e.mts\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.899.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.899.0\",\n    \"@aws-sdk/eventstream-handler-node\": \"3.893.0\",\n    \"@aws-sdk/middleware-eventstream\": \"3.893.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.893.0\",\n    \"@aws-sdk/middleware-logger\": \"3.893.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.893.0\",\n    \"@aws-sdk/middleware-sdk-transcribe-streaming\": \"3.896.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.899.0\",\n    \"@aws-sdk/middleware-websocket\": \"3.893.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.893.0\",\n    \"@aws-sdk/types\": \"3.893.0\",\n    \"@aws-sdk/util-endpoints\": \"3.895.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.893.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.899.0\",\n    \"@smithy/config-resolver\": \"^4.2.2\",\n    \"@smithy/core\": \"^3.13.0\",\n    \"@smithy/eventstream-serde-browser\": \"^4.1.1\",\n    \"@smithy/eventstream-serde-config-resolver\": \"^4.2.1\",\n    \"@smithy/eventstream-serde-node\": \"^4.1.1\",\n    \"@smithy/fetch-http-handler\": \"^5.2.1\",\n    \"@smithy/hash-node\": \"^4.1.1\",\n    \"@smithy/invalid-dependency\": \"^4.1.1\",\n    \"@smithy/middleware-content-length\": \"^4.1.1\",\n    \"@smithy/middleware-endpoint\": \"^4.2.5\",\n    \"@smithy/middleware-retry\": \"^4.3.1\",\n    \"@smithy/middleware-serde\": \"^4.1.1\",\n    \"@smithy/middleware-stack\": \"^4.1.1\",\n    \"@smithy/node-config-provider\": \"^4.2.2\",\n    \"@smithy/node-http-handler\": \"^4.2.1\",\n    \"@smithy/protocol-http\": \"^5.2.1\",\n    \"@smithy/smithy-client\": \"^4.6.5\",\n    \"@smithy/types\": \"^4.5.0\",\n    \"@smithy/url-parser\": \"^4.1.1\",\n    \"@smithy/util-base64\": \"^4.1.0\",\n    \"@smithy/util-body-length-browser\": \"^4.1.0\",\n    \"@smithy/util-body-length-node\": \"^4.1.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^4.1.5\",\n    \"@smithy/util-defaults-mode-node\": \"^4.1.5\",\n    \"@smithy/util-endpoints\": \"^3.1.2\",\n    \"@smithy/util-middleware\": \"^4.1.1\",\n    \"@smithy/util-retry\": \"^4.1.2\",\n    \"@smithy/util-utf8\": \"^4.1.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node18\": \"18.2.4\",\n    \"@types/node\": \"^18.19.69\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~5.8.3\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-transcribe-streaming\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-transcribe-streaming\"\n  }\n}\n", "export const eventStreamPayloadHandler = {\n    handle: (next, args) => next(args),\n};\n", "import { v4 } from \"@smithy/uuid\";\nexport const injectResponseValuesMiddleware = (config) => (next) => async (args) => {\n    if (args.input.SessionId === undefined && isWebSocket(config)) {\n        args.input.SessionId = v4();\n    }\n    const requestParams = {\n        ...args.input,\n    };\n    const response = await next(args);\n    const output = response.output;\n    for (const key of Object.keys(output)) {\n        if (output[key] === undefined && requestParams[key]) {\n            output[key] = requestParams[key];\n        }\n    }\n    return response;\n};\nconst isWebSocket = (config) => config.requestHandler.metadata?.handlerProtocol?.includes(\"websocket\");\nexport const injectResponseValuesMiddlewareOptions = {\n    step: \"initialize\",\n    name: \"injectResponseValuesMiddleware\",\n    tags: [\"WEBSOCKET\", \"EVENT_STREAM\"],\n    override: true,\n};\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nexport const websocketPortMiddleware = (options) => (next) => (args) => {\n    const { request } = args;\n    if (HttpRequest.isInstance(request) && options.requestHandler.metadata?.handlerProtocol?.includes(\"websocket\")) {\n        request.hostname = `${request.hostname}:8443`;\n        request.headers.host = request.hostname;\n    }\n    return next(args);\n};\nexport const websocketPortMiddlewareOptions = {\n    name: \"websocketPortMiddleware\",\n    tags: [\"WEBSOCKET\", \"EVENT_STREAM\", \"PORT\"],\n    relation: \"after\",\n    toMiddleware: \"eventStreamHeaderMiddleware\",\n    override: true,\n};\n", "import { injectResponseValuesMiddleware, injectResponseValuesMiddlewareOptions, } from \"./middleware-inject-response-values\";\nimport { websocketPortMiddleware, websocketPortMiddlewareOptions } from \"./middleware-port\";\nexport const getTranscribeStreamingPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(websocketPortMiddleware(config), websocketPortMiddlewareOptions);\n        clientStack.add(injectResponseValuesMiddleware(config), injectResponseValuesMiddlewareOptions);\n    },\n});\n", "import bowser from \"bowser\";\nexport const createDefaultUserAgentProvider = ({ serviceId, clientVersion }) => async (config) => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [\"ua\", \"2.1\"],\n        [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n        [\"lang/js\"],\n        [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n    ];\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    const appId = await config?.userAgentAppId?.();\n    if (appId) {\n        sections.push([`app/${appId}`]);\n    }\n    return sections;\n};\nexport const defaultUserAgent = createDefaultUserAgentProvider;\n", "const s = \"required\", t = \"fn\", u = \"argv\", v = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = { [s]: false, \"type\": \"String\" }, i = { [s]: true, \"default\": false, \"type\": \"Boolean\" }, j = { [v]: \"Endpoint\" }, k = { [t]: c, [u]: [{ [v]: \"UseFIPS\" }, true] }, l = { [t]: c, [u]: [{ [v]: \"UseDualStack\" }, true] }, m = {}, n = { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsFIPS\"] }, o = { [t]: c, [u]: [true, { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsDualStack\"] }] }, p = [k], q = [l], r = [{ [v]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: h, UseDualStack: i, UseFIPS: i, Endpoint: h }, rules: [{ conditions: [{ [t]: b, [u]: [j] }], rules: [{ conditions: p, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: q, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: j, properties: m, headers: m }, type: e }], type: f }, { conditions: [{ [t]: b, [u]: r }], rules: [{ conditions: [{ [t]: \"aws.partition\", [u]: r, assign: g }], rules: [{ conditions: [k, l], rules: [{ conditions: [{ [t]: c, [u]: [a, n] }, o], rules: [{ endpoint: { url: \"https://transcribestreaming-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: p, rules: [{ conditions: [{ [t]: c, [u]: [n, a] }], rules: [{ endpoint: { url: \"https://transcribestreaming-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: q, rules: [{ conditions: [o], rules: [{ endpoint: { url: \"https://transcribestreaming.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://transcribestreaming.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n", "import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n", "import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultTranscribeStreamingHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2017-10-26\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultTranscribeStreamingHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Transcribe Streaming\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n", "import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { eventStreamPayloadHandler } from \"@aws-sdk/middleware-sdk-transcribe-streaming\";\nimport { WebSocketFetchHandler as WebSocketRequestHandler, } from \"@aws-sdk/middleware-websocket\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as HttpRequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        eventStreamPayloadHandlerProvider: config?.eventStreamPayloadHandlerProvider ?? (() => eventStreamPayloadHandler),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: WebSocketRequestHandler.create(config?.requestHandler ?? defaultConfigProvider, HttpRequestHandler.create(defaultConfigProvider)),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n", "export const getAwsRegionExtensionConfiguration = (runtimeConfig) => {\n    return {\n        setRegion(region) {\n            runtimeConfig.region = region;\n        },\n        region() {\n            return runtimeConfig.region;\n        },\n    };\n};\nexport const resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {\n    return {\n        region: awsRegionExtensionConfiguration.region(),\n    };\n};\n", "export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n", "import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n", "import { resolveEventStreamConfig, } from \"@aws-sdk/middleware-eventstream\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveWebSocketConfig } from \"@aws-sdk/middleware-websocket\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { resolveEventStreamSerdeConfig, } from \"@smithy/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultTranscribeStreamingHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class TranscribeStreamingClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveEventStreamSerdeConfig(_config_6);\n        const _config_8 = resolveHttpAuthSchemeConfig(_config_7);\n        const _config_9 = resolveEventStreamConfig(_config_8);\n        const _config_10 = resolveWebSocketConfig(_config_9);\n        const _config_11 = resolveRuntimeExtensions(_config_10, configuration?.extensions || []);\n        this.config = _config_11;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultTranscribeStreamingHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n", "import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class TranscribeStreamingServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, TranscribeStreamingServiceException.prototype);\n    }\n}\n", "import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { TranscribeStreamingServiceException as __BaseException } from \"./TranscribeStreamingServiceException\";\nexport const ItemType = {\n    PRONUNCIATION: \"pronunciation\",\n    PUNCTUATION: \"punctuation\",\n};\nexport const ParticipantRole = {\n    AGENT: \"AGENT\",\n    CUSTOMER: \"CUSTOMER\",\n};\nexport const ContentRedactionOutput = {\n    REDACTED: \"redacted\",\n    REDACTED_AND_UNREDACTED: \"redacted_and_unredacted\",\n};\nexport var AudioStream;\n(function (AudioStream) {\n    AudioStream.visit = (value, visitor) => {\n        if (value.AudioEvent !== undefined)\n            return visitor.AudioEvent(value.AudioEvent);\n        if (value.ConfigurationEvent !== undefined)\n            return visitor.ConfigurationEvent(value.ConfigurationEvent);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(AudioStream || (AudioStream = {}));\nexport class BadRequestException extends __BaseException {\n    name = \"BadRequestException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"BadRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, BadRequestException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const CallAnalyticsLanguageCode = {\n    DE_DE: \"de-DE\",\n    EN_AU: \"en-AU\",\n    EN_GB: \"en-GB\",\n    EN_US: \"en-US\",\n    ES_US: \"es-US\",\n    FR_CA: \"fr-CA\",\n    FR_FR: \"fr-FR\",\n    IT_IT: \"it-IT\",\n    PT_BR: \"pt-BR\",\n};\nexport class ConflictException extends __BaseException {\n    name = \"ConflictException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ConflictException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InternalFailureException extends __BaseException {\n    name = \"InternalFailureException\";\n    $fault = \"server\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InternalFailureException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InternalFailureException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class LimitExceededException extends __BaseException {\n    name = \"LimitExceededException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ServiceUnavailableException extends __BaseException {\n    name = \"ServiceUnavailableException\";\n    $fault = \"server\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ServiceUnavailableException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const Sentiment = {\n    MIXED: \"MIXED\",\n    NEGATIVE: \"NEGATIVE\",\n    NEUTRAL: \"NEUTRAL\",\n    POSITIVE: \"POSITIVE\",\n};\nexport var CallAnalyticsTranscriptResultStream;\n(function (CallAnalyticsTranscriptResultStream) {\n    CallAnalyticsTranscriptResultStream.visit = (value, visitor) => {\n        if (value.UtteranceEvent !== undefined)\n            return visitor.UtteranceEvent(value.UtteranceEvent);\n        if (value.CategoryEvent !== undefined)\n            return visitor.CategoryEvent(value.CategoryEvent);\n        if (value.BadRequestException !== undefined)\n            return visitor.BadRequestException(value.BadRequestException);\n        if (value.LimitExceededException !== undefined)\n            return visitor.LimitExceededException(value.LimitExceededException);\n        if (value.InternalFailureException !== undefined)\n            return visitor.InternalFailureException(value.InternalFailureException);\n        if (value.ConflictException !== undefined)\n            return visitor.ConflictException(value.ConflictException);\n        if (value.ServiceUnavailableException !== undefined)\n            return visitor.ServiceUnavailableException(value.ServiceUnavailableException);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(CallAnalyticsTranscriptResultStream || (CallAnalyticsTranscriptResultStream = {}));\nexport const ClinicalNoteGenerationStatus = {\n    COMPLETED: \"COMPLETED\",\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n};\nexport const MedicalScribeNoteTemplate = {\n    BEHAVIORAL_SOAP: \"BEHAVIORAL_SOAP\",\n    BIRP: \"BIRP\",\n    DAP: \"DAP\",\n    GIRPP: \"GIRPP\",\n    HISTORY_AND_PHYSICAL: \"HISTORY_AND_PHYSICAL\",\n    PHYSICAL_SOAP: \"PHYSICAL_SOAP\",\n    SIRP: \"SIRP\",\n};\nexport const ContentIdentificationType = {\n    PII: \"PII\",\n};\nexport const ContentRedactionType = {\n    PII: \"PII\",\n};\nexport const MedicalScribeParticipantRole = {\n    CLINICIAN: \"CLINICIAN\",\n    PATIENT: \"PATIENT\",\n};\nexport const MedicalScribeLanguageCode = {\n    EN_US: \"en-US\",\n};\nexport const MedicalScribeMediaEncoding = {\n    FLAC: \"flac\",\n    OGG_OPUS: \"ogg-opus\",\n    PCM: \"pcm\",\n};\nexport const MedicalScribeStreamStatus = {\n    COMPLETED: \"COMPLETED\",\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n    PAUSED: \"PAUSED\",\n};\nexport const MedicalScribeVocabularyFilterMethod = {\n    MASK: \"mask\",\n    REMOVE: \"remove\",\n    TAG: \"tag\",\n};\nexport class ResourceNotFoundException extends __BaseException {\n    name = \"ResourceNotFoundException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const LanguageCode = {\n    AF_ZA: \"af-ZA\",\n    AR_AE: \"ar-AE\",\n    AR_SA: \"ar-SA\",\n    CA_ES: \"ca-ES\",\n    CS_CZ: \"cs-CZ\",\n    DA_DK: \"da-DK\",\n    DE_CH: \"de-CH\",\n    DE_DE: \"de-DE\",\n    EL_GR: \"el-GR\",\n    EN_AB: \"en-AB\",\n    EN_AU: \"en-AU\",\n    EN_GB: \"en-GB\",\n    EN_IE: \"en-IE\",\n    EN_IN: \"en-IN\",\n    EN_NZ: \"en-NZ\",\n    EN_US: \"en-US\",\n    EN_WL: \"en-WL\",\n    EN_ZA: \"en-ZA\",\n    ES_ES: \"es-ES\",\n    ES_US: \"es-US\",\n    EU_ES: \"eu-ES\",\n    FA_IR: \"fa-IR\",\n    FI_FI: \"fi-FI\",\n    FR_CA: \"fr-CA\",\n    FR_FR: \"fr-FR\",\n    GL_ES: \"gl-ES\",\n    HE_IL: \"he-IL\",\n    HI_IN: \"hi-IN\",\n    HR_HR: \"hr-HR\",\n    ID_ID: \"id-ID\",\n    IT_IT: \"it-IT\",\n    JA_JP: \"ja-JP\",\n    KO_KR: \"ko-KR\",\n    LV_LV: \"lv-LV\",\n    MS_MY: \"ms-MY\",\n    NL_NL: \"nl-NL\",\n    NO_NO: \"no-NO\",\n    PL_PL: \"pl-PL\",\n    PT_BR: \"pt-BR\",\n    PT_PT: \"pt-PT\",\n    RO_RO: \"ro-RO\",\n    RU_RU: \"ru-RU\",\n    SK_SK: \"sk-SK\",\n    SO_SO: \"so-SO\",\n    SR_RS: \"sr-RS\",\n    SV_SE: \"sv-SE\",\n    TH_TH: \"th-TH\",\n    TL_PH: \"tl-PH\",\n    UK_UA: \"uk-UA\",\n    VI_VN: \"vi-VN\",\n    ZH_CN: \"zh-CN\",\n    ZH_HK: \"zh-HK\",\n    ZH_TW: \"zh-TW\",\n    ZU_ZA: \"zu-ZA\",\n};\nexport const MediaEncoding = {\n    FLAC: \"flac\",\n    OGG_OPUS: \"ogg-opus\",\n    PCM: \"pcm\",\n};\nexport const MedicalContentIdentificationType = {\n    PHI: \"PHI\",\n};\nexport const Pronouns = {\n    HE_HIM: \"HE_HIM\",\n    SHE_HER: \"SHE_HER\",\n    THEY_THEM: \"THEY_THEM\",\n};\nexport const MedicalScribeSessionControlEventType = {\n    END_OF_SESSION: \"END_OF_SESSION\",\n};\nexport var MedicalScribeInputStream;\n(function (MedicalScribeInputStream) {\n    MedicalScribeInputStream.visit = (value, visitor) => {\n        if (value.AudioEvent !== undefined)\n            return visitor.AudioEvent(value.AudioEvent);\n        if (value.SessionControlEvent !== undefined)\n            return visitor.SessionControlEvent(value.SessionControlEvent);\n        if (value.ConfigurationEvent !== undefined)\n            return visitor.ConfigurationEvent(value.ConfigurationEvent);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(MedicalScribeInputStream || (MedicalScribeInputStream = {}));\nexport const MedicalScribeTranscriptItemType = {\n    PRONUNCIATION: \"pronunciation\",\n    PUNCTUATION: \"punctuation\",\n};\nexport var MedicalScribeResultStream;\n(function (MedicalScribeResultStream) {\n    MedicalScribeResultStream.visit = (value, visitor) => {\n        if (value.TranscriptEvent !== undefined)\n            return visitor.TranscriptEvent(value.TranscriptEvent);\n        if (value.BadRequestException !== undefined)\n            return visitor.BadRequestException(value.BadRequestException);\n        if (value.LimitExceededException !== undefined)\n            return visitor.LimitExceededException(value.LimitExceededException);\n        if (value.InternalFailureException !== undefined)\n            return visitor.InternalFailureException(value.InternalFailureException);\n        if (value.ConflictException !== undefined)\n            return visitor.ConflictException(value.ConflictException);\n        if (value.ServiceUnavailableException !== undefined)\n            return visitor.ServiceUnavailableException(value.ServiceUnavailableException);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(MedicalScribeResultStream || (MedicalScribeResultStream = {}));\nexport var MedicalTranscriptResultStream;\n(function (MedicalTranscriptResultStream) {\n    MedicalTranscriptResultStream.visit = (value, visitor) => {\n        if (value.TranscriptEvent !== undefined)\n            return visitor.TranscriptEvent(value.TranscriptEvent);\n        if (value.BadRequestException !== undefined)\n            return visitor.BadRequestException(value.BadRequestException);\n        if (value.LimitExceededException !== undefined)\n            return visitor.LimitExceededException(value.LimitExceededException);\n        if (value.InternalFailureException !== undefined)\n            return visitor.InternalFailureException(value.InternalFailureException);\n        if (value.ConflictException !== undefined)\n            return visitor.ConflictException(value.ConflictException);\n        if (value.ServiceUnavailableException !== undefined)\n            return visitor.ServiceUnavailableException(value.ServiceUnavailableException);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(MedicalTranscriptResultStream || (MedicalTranscriptResultStream = {}));\nexport const PartialResultsStability = {\n    HIGH: \"high\",\n    LOW: \"low\",\n    MEDIUM: \"medium\",\n};\nexport const Specialty = {\n    CARDIOLOGY: \"CARDIOLOGY\",\n    NEUROLOGY: \"NEUROLOGY\",\n    ONCOLOGY: \"ONCOLOGY\",\n    PRIMARYCARE: \"PRIMARYCARE\",\n    RADIOLOGY: \"RADIOLOGY\",\n    UROLOGY: \"UROLOGY\",\n};\nexport const VocabularyFilterMethod = {\n    MASK: \"mask\",\n    REMOVE: \"remove\",\n    TAG: \"tag\",\n};\nexport const Type = {\n    CONVERSATION: \"CONVERSATION\",\n    DICTATION: \"DICTATION\",\n};\nexport var TranscriptResultStream;\n(function (TranscriptResultStream) {\n    TranscriptResultStream.visit = (value, visitor) => {\n        if (value.TranscriptEvent !== undefined)\n            return visitor.TranscriptEvent(value.TranscriptEvent);\n        if (value.BadRequestException !== undefined)\n            return visitor.BadRequestException(value.BadRequestException);\n        if (value.LimitExceededException !== undefined)\n            return visitor.LimitExceededException(value.LimitExceededException);\n        if (value.InternalFailureException !== undefined)\n            return visitor.InternalFailureException(value.InternalFailureException);\n        if (value.ConflictException !== undefined)\n            return visitor.ConflictException(value.ConflictException);\n        if (value.ServiceUnavailableException !== undefined)\n            return visitor.ServiceUnavailableException(value.ServiceUnavailableException);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(TranscriptResultStream || (TranscriptResultStream = {}));\nexport const AudioStreamFilterSensitiveLog = (obj) => {\n    if (obj.AudioEvent !== undefined)\n        return { AudioEvent: obj.AudioEvent };\n    if (obj.ConfigurationEvent !== undefined)\n        return { ConfigurationEvent: obj.ConfigurationEvent };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const CallAnalyticsTranscriptResultStreamFilterSensitiveLog = (obj) => {\n    if (obj.UtteranceEvent !== undefined)\n        return { UtteranceEvent: obj.UtteranceEvent };\n    if (obj.CategoryEvent !== undefined)\n        return { CategoryEvent: obj.CategoryEvent };\n    if (obj.BadRequestException !== undefined)\n        return { BadRequestException: obj.BadRequestException };\n    if (obj.LimitExceededException !== undefined)\n        return { LimitExceededException: obj.LimitExceededException };\n    if (obj.InternalFailureException !== undefined)\n        return { InternalFailureException: obj.InternalFailureException };\n    if (obj.ConflictException !== undefined)\n        return { ConflictException: obj.ConflictException };\n    if (obj.ServiceUnavailableException !== undefined)\n        return { ServiceUnavailableException: obj.ServiceUnavailableException };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const MedicalScribePatientContextFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Pronouns && { Pronouns: SENSITIVE_STRING }),\n});\nexport const MedicalScribeContextFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.PatientContext && { PatientContext: MedicalScribePatientContextFilterSensitiveLog(obj.PatientContext) }),\n});\nexport const MedicalScribeConfigurationEventFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.MedicalScribeContext && {\n        MedicalScribeContext: MedicalScribeContextFilterSensitiveLog(obj.MedicalScribeContext),\n    }),\n});\nexport const MedicalScribeInputStreamFilterSensitiveLog = (obj) => {\n    if (obj.AudioEvent !== undefined)\n        return { AudioEvent: obj.AudioEvent };\n    if (obj.SessionControlEvent !== undefined)\n        return { SessionControlEvent: obj.SessionControlEvent };\n    if (obj.ConfigurationEvent !== undefined)\n        return { ConfigurationEvent: MedicalScribeConfigurationEventFilterSensitiveLog(obj.ConfigurationEvent) };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const MedicalScribeResultStreamFilterSensitiveLog = (obj) => {\n    if (obj.TranscriptEvent !== undefined)\n        return { TranscriptEvent: obj.TranscriptEvent };\n    if (obj.BadRequestException !== undefined)\n        return { BadRequestException: obj.BadRequestException };\n    if (obj.LimitExceededException !== undefined)\n        return { LimitExceededException: obj.LimitExceededException };\n    if (obj.InternalFailureException !== undefined)\n        return { InternalFailureException: obj.InternalFailureException };\n    if (obj.ConflictException !== undefined)\n        return { ConflictException: obj.ConflictException };\n    if (obj.ServiceUnavailableException !== undefined)\n        return { ServiceUnavailableException: obj.ServiceUnavailableException };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const MedicalTranscriptResultStreamFilterSensitiveLog = (obj) => {\n    if (obj.TranscriptEvent !== undefined)\n        return { TranscriptEvent: obj.TranscriptEvent };\n    if (obj.BadRequestException !== undefined)\n        return { BadRequestException: obj.BadRequestException };\n    if (obj.LimitExceededException !== undefined)\n        return { LimitExceededException: obj.LimitExceededException };\n    if (obj.InternalFailureException !== undefined)\n        return { InternalFailureException: obj.InternalFailureException };\n    if (obj.ConflictException !== undefined)\n        return { ConflictException: obj.ConflictException };\n    if (obj.ServiceUnavailableException !== undefined)\n        return { ServiceUnavailableException: obj.ServiceUnavailableException };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const StartCallAnalyticsStreamTranscriptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AudioStream && { AudioStream: \"STREAMING_CONTENT\" }),\n});\nexport const StartCallAnalyticsStreamTranscriptionResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.CallAnalyticsTranscriptResultStream && { CallAnalyticsTranscriptResultStream: \"STREAMING_CONTENT\" }),\n});\nexport const StartMedicalScribeStreamRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InputStream && { InputStream: \"STREAMING_CONTENT\" }),\n});\nexport const StartMedicalScribeStreamResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ResultStream && { ResultStream: \"STREAMING_CONTENT\" }),\n});\nexport const StartMedicalStreamTranscriptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AudioStream && { AudioStream: \"STREAMING_CONTENT\" }),\n});\nexport const StartMedicalStreamTranscriptionResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TranscriptResultStream && { TranscriptResultStream: \"STREAMING_CONTENT\" }),\n});\nexport const StartStreamTranscriptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AudioStream && { AudioStream: \"STREAMING_CONTENT\" }),\n});\nexport const TranscriptResultStreamFilterSensitiveLog = (obj) => {\n    if (obj.TranscriptEvent !== undefined)\n        return { TranscriptEvent: obj.TranscriptEvent };\n    if (obj.BadRequestException !== undefined)\n        return { BadRequestException: obj.BadRequestException };\n    if (obj.LimitExceededException !== undefined)\n        return { LimitExceededException: obj.LimitExceededException };\n    if (obj.InternalFailureException !== undefined)\n        return { InternalFailureException: obj.InternalFailureException };\n    if (obj.ConflictException !== undefined)\n        return { ConflictException: obj.ConflictException };\n    if (obj.ServiceUnavailableException !== undefined)\n        return { ServiceUnavailableException: obj.ServiceUnavailableException };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const StartStreamTranscriptionResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TranscriptResultStream && { TranscriptResultStream: \"STREAMING_CONTENT\" }),\n});\n", "import { loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectObject as __expectObject, expectString as __expectString, isSerializableHeaderValue, limitedParseDouble as __limitedParseDouble, map, parseBoolean as __parseBoolean, parseEpochTimestamp as __parseEpochTimestamp, strictParseInt32 as __strictParseInt32, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { AudioStream, BadRequestException, ConflictException, InternalFailureException, LimitExceededException, MedicalScribeInputStream, ResourceNotFoundException, ServiceUnavailableException, } from \"../models/models_0\";\nimport { TranscribeStreamingServiceException as __BaseException } from \"../models/TranscribeStreamingServiceException\";\nexport const se_GetMedicalScribeStreamCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/medical-scribe-stream/{SessionId}\");\n    b.p(\"SessionId\", () => input.SessionId, \"{SessionId}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_StartCallAnalyticsStreamTranscriptionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        [_xatlc]: input[_LC],\n        [_xatsr]: [() => isSerializableHeaderValue(input[_MSRH]), () => input[_MSRH].toString()],\n        [_xatme]: input[_ME],\n        [_xatvn]: input[_VN],\n        [_xatsi]: input[_SI],\n        [_xatvfn]: input[_VFN],\n        [_xatvfm]: input[_VFM],\n        [_xatlmn]: input[_LMN],\n        [_xatil]: [() => isSerializableHeaderValue(input[_IL]), () => input[_IL].toString()],\n        [_xatlo]: input[_LO],\n        [_xatpl]: input[_PL],\n        [_xatvn_]: input[_VNo],\n        [_xatvfn_]: input[_VFNo],\n        [_xateprs]: [() => isSerializableHeaderValue(input[_EPRS]), () => input[_EPRS].toString()],\n        [_xatprs]: input[_PRS],\n        [_xatcit]: input[_CIT],\n        [_xatcrt]: input[_CRT],\n        [_xatpet]: input[_PET],\n    });\n    b.bp(\"/call-analytics-stream-transcription\");\n    let body;\n    if (input.AudioStream !== undefined) {\n        body = se_AudioStream(input.AudioStream, context);\n    }\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_StartMedicalScribeStreamCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        [_xatsi]: input[_SI],\n        [_xatlc]: input[_LC],\n        [_xatsr]: [() => isSerializableHeaderValue(input[_MSRH]), () => input[_MSRH].toString()],\n        [_xatme]: input[_ME],\n    });\n    b.bp(\"/medical-scribe-stream\");\n    let body;\n    if (input.InputStream !== undefined) {\n        body = se_MedicalScribeInputStream(input.InputStream, context);\n    }\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_StartMedicalStreamTranscriptionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        [_xatlc]: input[_LC],\n        [_xatsr]: [() => isSerializableHeaderValue(input[_MSRH]), () => input[_MSRH].toString()],\n        [_xatme]: input[_ME],\n        [_xatvn]: input[_VN],\n        [_xats]: input[_S],\n        [_xatt]: input[_T],\n        [_xatssl]: [() => isSerializableHeaderValue(input[_SSL]), () => input[_SSL].toString()],\n        [_xatsi]: input[_SI],\n        [_xateci]: [() => isSerializableHeaderValue(input[_ECI]), () => input[_ECI].toString()],\n        [_xatnoc]: [() => isSerializableHeaderValue(input[_NOC]), () => input[_NOC].toString()],\n        [_xatcit]: input[_CIT],\n    });\n    b.bp(\"/medical-stream-transcription\");\n    let body;\n    if (input.AudioStream !== undefined) {\n        body = se_AudioStream(input.AudioStream, context);\n    }\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_StartStreamTranscriptionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        [_xatlc]: input[_LC],\n        [_xatsr]: [() => isSerializableHeaderValue(input[_MSRH]), () => input[_MSRH].toString()],\n        [_xatme]: input[_ME],\n        [_xatvn]: input[_VN],\n        [_xatsi]: input[_SI],\n        [_xatvfn]: input[_VFN],\n        [_xatvfm]: input[_VFM],\n        [_xatssl]: [() => isSerializableHeaderValue(input[_SSL]), () => input[_SSL].toString()],\n        [_xateci]: [() => isSerializableHeaderValue(input[_ECI]), () => input[_ECI].toString()],\n        [_xatnoc]: [() => isSerializableHeaderValue(input[_NOC]), () => input[_NOC].toString()],\n        [_xateprs]: [() => isSerializableHeaderValue(input[_EPRS]), () => input[_EPRS].toString()],\n        [_xatprs]: input[_PRS],\n        [_xatcit]: input[_CIT],\n        [_xatcrt]: input[_CRT],\n        [_xatpet]: input[_PET],\n        [_xatlmn]: input[_LMN],\n        [_xatil]: [() => isSerializableHeaderValue(input[_IL]), () => input[_IL].toString()],\n        [_xatlo]: input[_LO],\n        [_xatpl]: input[_PL],\n        [_xatiml]: [() => isSerializableHeaderValue(input[_IML]), () => input[_IML].toString()],\n        [_xatvn_]: input[_VNo],\n        [_xatvfn_]: input[_VFNo],\n    });\n    b.bp(\"/stream-transcription\");\n    let body;\n    if (input.AudioStream !== undefined) {\n        body = se_AudioStream(input.AudioStream, context);\n    }\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const de_GetMedicalScribeStreamCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        MedicalScribeStreamDetails: (_) => de_MedicalScribeStreamDetails(_, context),\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_StartCallAnalyticsStreamTranscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RI]: [, output.headers[_xari]],\n        [_LC]: [, output.headers[_xatlc]],\n        [_MSRH]: [() => void 0 !== output.headers[_xatsr], () => __strictParseInt32(output.headers[_xatsr])],\n        [_ME]: [, output.headers[_xatme]],\n        [_VN]: [, output.headers[_xatvn]],\n        [_SI]: [, output.headers[_xatsi]],\n        [_VFN]: [, output.headers[_xatvfn]],\n        [_VFM]: [, output.headers[_xatvfm]],\n        [_LMN]: [, output.headers[_xatlmn]],\n        [_IL]: [() => void 0 !== output.headers[_xatil], () => __parseBoolean(output.headers[_xatil])],\n        [_LO]: [, output.headers[_xatlo]],\n        [_PL]: [, output.headers[_xatpl]],\n        [_VNo]: [, output.headers[_xatvn_]],\n        [_VFNo]: [, output.headers[_xatvfn_]],\n        [_EPRS]: [() => void 0 !== output.headers[_xateprs], () => __parseBoolean(output.headers[_xateprs])],\n        [_PRS]: [, output.headers[_xatprs]],\n        [_CIT]: [, output.headers[_xatcit]],\n        [_CRT]: [, output.headers[_xatcrt]],\n        [_PET]: [, output.headers[_xatpet]],\n    });\n    const data = output.body;\n    contents.CallAnalyticsTranscriptResultStream = de_CallAnalyticsTranscriptResultStream(data, context);\n    return contents;\n};\nexport const de_StartMedicalScribeStreamCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_SI]: [, output.headers[_xatsi]],\n        [_RI]: [, output.headers[_xari]],\n        [_LC]: [, output.headers[_xatlc]],\n        [_MSRH]: [() => void 0 !== output.headers[_xatsr], () => __strictParseInt32(output.headers[_xatsr])],\n        [_ME]: [, output.headers[_xatme]],\n    });\n    const data = output.body;\n    contents.ResultStream = de_MedicalScribeResultStream(data, context);\n    return contents;\n};\nexport const de_StartMedicalStreamTranscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RI]: [, output.headers[_xari]],\n        [_LC]: [, output.headers[_xatlc]],\n        [_MSRH]: [() => void 0 !== output.headers[_xatsr], () => __strictParseInt32(output.headers[_xatsr])],\n        [_ME]: [, output.headers[_xatme]],\n        [_VN]: [, output.headers[_xatvn]],\n        [_S]: [, output.headers[_xats]],\n        [_T]: [, output.headers[_xatt]],\n        [_SSL]: [() => void 0 !== output.headers[_xatssl], () => __parseBoolean(output.headers[_xatssl])],\n        [_SI]: [, output.headers[_xatsi]],\n        [_ECI]: [() => void 0 !== output.headers[_xateci], () => __parseBoolean(output.headers[_xateci])],\n        [_NOC]: [() => void 0 !== output.headers[_xatnoc], () => __strictParseInt32(output.headers[_xatnoc])],\n        [_CIT]: [, output.headers[_xatcit]],\n    });\n    const data = output.body;\n    contents.TranscriptResultStream = de_MedicalTranscriptResultStream(data, context);\n    return contents;\n};\nexport const de_StartStreamTranscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_RI]: [, output.headers[_xari]],\n        [_LC]: [, output.headers[_xatlc]],\n        [_MSRH]: [() => void 0 !== output.headers[_xatsr], () => __strictParseInt32(output.headers[_xatsr])],\n        [_ME]: [, output.headers[_xatme]],\n        [_VN]: [, output.headers[_xatvn]],\n        [_SI]: [, output.headers[_xatsi]],\n        [_VFN]: [, output.headers[_xatvfn]],\n        [_VFM]: [, output.headers[_xatvfm]],\n        [_SSL]: [() => void 0 !== output.headers[_xatssl], () => __parseBoolean(output.headers[_xatssl])],\n        [_ECI]: [() => void 0 !== output.headers[_xateci], () => __parseBoolean(output.headers[_xateci])],\n        [_NOC]: [() => void 0 !== output.headers[_xatnoc], () => __strictParseInt32(output.headers[_xatnoc])],\n        [_EPRS]: [() => void 0 !== output.headers[_xateprs], () => __parseBoolean(output.headers[_xateprs])],\n        [_PRS]: [, output.headers[_xatprs]],\n        [_CIT]: [, output.headers[_xatcit]],\n        [_CRT]: [, output.headers[_xatcrt]],\n        [_PET]: [, output.headers[_xatpet]],\n        [_LMN]: [, output.headers[_xatlmn]],\n        [_IL]: [() => void 0 !== output.headers[_xatil], () => __parseBoolean(output.headers[_xatil])],\n        [_LO]: [, output.headers[_xatlo]],\n        [_PL]: [, output.headers[_xatpl]],\n        [_IML]: [() => void 0 !== output.headers[_xatiml], () => __parseBoolean(output.headers[_xatiml])],\n        [_VNo]: [, output.headers[_xatvn_]],\n        [_VFNo]: [, output.headers[_xatvfn_]],\n    });\n    const data = output.body;\n    contents.TranscriptResultStream = de_TranscriptResultStream(data, context);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.transcribestreaming#BadRequestException\":\n            throw await de_BadRequestExceptionRes(parsedOutput, context);\n        case \"InternalFailureException\":\n        case \"com.amazonaws.transcribestreaming#InternalFailureException\":\n            throw await de_InternalFailureExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.transcribestreaming#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.transcribestreaming#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.transcribestreaming#ConflictException\":\n            throw await de_ConflictExceptionRes(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.transcribestreaming#ServiceUnavailableException\":\n            throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_BadRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new BadRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ConflictExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InternalFailureExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalFailureException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ServiceUnavailableExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ServiceUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst se_AudioStream = (input, context) => {\n    const eventMarshallingVisitor = (event) => AudioStream.visit(event, {\n        AudioEvent: (value) => se_AudioEvent_event(value, context),\n        ConfigurationEvent: (value) => se_ConfigurationEvent_event(value, context),\n        _: (value) => value,\n    });\n    return context.eventStreamMarshaller.serialize(input, eventMarshallingVisitor);\n};\nconst se_MedicalScribeInputStream = (input, context) => {\n    const eventMarshallingVisitor = (event) => MedicalScribeInputStream.visit(event, {\n        AudioEvent: (value) => se_MedicalScribeAudioEvent_event(value, context),\n        SessionControlEvent: (value) => se_MedicalScribeSessionControlEvent_event(value, context),\n        ConfigurationEvent: (value) => se_MedicalScribeConfigurationEvent_event(value, context),\n        _: (value) => value,\n    });\n    return context.eventStreamMarshaller.serialize(input, eventMarshallingVisitor);\n};\nconst se_AudioEvent_event = (input, context) => {\n    const headers = {\n        \":event-type\": { type: \"string\", value: \"AudioEvent\" },\n        \":message-type\": { type: \"string\", value: \"event\" },\n        \":content-type\": { type: \"string\", value: \"application/octet-stream\" },\n    };\n    let body = new Uint8Array();\n    if (input.AudioChunk != null) {\n        body = input.AudioChunk;\n    }\n    return { headers, body };\n};\nconst se_ConfigurationEvent_event = (input, context) => {\n    const headers = {\n        \":event-type\": { type: \"string\", value: \"ConfigurationEvent\" },\n        \":message-type\": { type: \"string\", value: \"event\" },\n        \":content-type\": { type: \"string\", value: \"application/json\" },\n    };\n    let body = new Uint8Array();\n    body = _json(input);\n    body = context.utf8Decoder(JSON.stringify(body));\n    return { headers, body };\n};\nconst se_MedicalScribeAudioEvent_event = (input, context) => {\n    const headers = {\n        \":event-type\": { type: \"string\", value: \"AudioEvent\" },\n        \":message-type\": { type: \"string\", value: \"event\" },\n        \":content-type\": { type: \"string\", value: \"application/octet-stream\" },\n    };\n    let body = new Uint8Array();\n    if (input.AudioChunk != null) {\n        body = input.AudioChunk;\n    }\n    return { headers, body };\n};\nconst se_MedicalScribeConfigurationEvent_event = (input, context) => {\n    const headers = {\n        \":event-type\": { type: \"string\", value: \"ConfigurationEvent\" },\n        \":message-type\": { type: \"string\", value: \"event\" },\n        \":content-type\": { type: \"string\", value: \"application/json\" },\n    };\n    let body = new Uint8Array();\n    body = _json(input);\n    body = context.utf8Decoder(JSON.stringify(body));\n    return { headers, body };\n};\nconst se_MedicalScribeSessionControlEvent_event = (input, context) => {\n    const headers = {\n        \":event-type\": { type: \"string\", value: \"SessionControlEvent\" },\n        \":message-type\": { type: \"string\", value: \"event\" },\n        \":content-type\": { type: \"string\", value: \"application/json\" },\n    };\n    let body = new Uint8Array();\n    body = _json(input);\n    body = context.utf8Decoder(JSON.stringify(body));\n    return { headers, body };\n};\nconst de_CallAnalyticsTranscriptResultStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"UtteranceEvent\"] != null) {\n            return {\n                UtteranceEvent: await de_UtteranceEvent_event(event[\"UtteranceEvent\"], context),\n            };\n        }\n        if (event[\"CategoryEvent\"] != null) {\n            return {\n                CategoryEvent: await de_CategoryEvent_event(event[\"CategoryEvent\"], context),\n            };\n        }\n        if (event[\"BadRequestException\"] != null) {\n            return {\n                BadRequestException: await de_BadRequestException_event(event[\"BadRequestException\"], context),\n            };\n        }\n        if (event[\"LimitExceededException\"] != null) {\n            return {\n                LimitExceededException: await de_LimitExceededException_event(event[\"LimitExceededException\"], context),\n            };\n        }\n        if (event[\"InternalFailureException\"] != null) {\n            return {\n                InternalFailureException: await de_InternalFailureException_event(event[\"InternalFailureException\"], context),\n            };\n        }\n        if (event[\"ConflictException\"] != null) {\n            return {\n                ConflictException: await de_ConflictException_event(event[\"ConflictException\"], context),\n            };\n        }\n        if (event[\"ServiceUnavailableException\"] != null) {\n            return {\n                ServiceUnavailableException: await de_ServiceUnavailableException_event(event[\"ServiceUnavailableException\"], context),\n            };\n        }\n        return { $unknown: event };\n    });\n};\nconst de_MedicalScribeResultStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"TranscriptEvent\"] != null) {\n            return {\n                TranscriptEvent: await de_MedicalScribeTranscriptEvent_event(event[\"TranscriptEvent\"], context),\n            };\n        }\n        if (event[\"BadRequestException\"] != null) {\n            return {\n                BadRequestException: await de_BadRequestException_event(event[\"BadRequestException\"], context),\n            };\n        }\n        if (event[\"LimitExceededException\"] != null) {\n            return {\n                LimitExceededException: await de_LimitExceededException_event(event[\"LimitExceededException\"], context),\n            };\n        }\n        if (event[\"InternalFailureException\"] != null) {\n            return {\n                InternalFailureException: await de_InternalFailureException_event(event[\"InternalFailureException\"], context),\n            };\n        }\n        if (event[\"ConflictException\"] != null) {\n            return {\n                ConflictException: await de_ConflictException_event(event[\"ConflictException\"], context),\n            };\n        }\n        if (event[\"ServiceUnavailableException\"] != null) {\n            return {\n                ServiceUnavailableException: await de_ServiceUnavailableException_event(event[\"ServiceUnavailableException\"], context),\n            };\n        }\n        return { $unknown: event };\n    });\n};\nconst de_MedicalTranscriptResultStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"TranscriptEvent\"] != null) {\n            return {\n                TranscriptEvent: await de_MedicalTranscriptEvent_event(event[\"TranscriptEvent\"], context),\n            };\n        }\n        if (event[\"BadRequestException\"] != null) {\n            return {\n                BadRequestException: await de_BadRequestException_event(event[\"BadRequestException\"], context),\n            };\n        }\n        if (event[\"LimitExceededException\"] != null) {\n            return {\n                LimitExceededException: await de_LimitExceededException_event(event[\"LimitExceededException\"], context),\n            };\n        }\n        if (event[\"InternalFailureException\"] != null) {\n            return {\n                InternalFailureException: await de_InternalFailureException_event(event[\"InternalFailureException\"], context),\n            };\n        }\n        if (event[\"ConflictException\"] != null) {\n            return {\n                ConflictException: await de_ConflictException_event(event[\"ConflictException\"], context),\n            };\n        }\n        if (event[\"ServiceUnavailableException\"] != null) {\n            return {\n                ServiceUnavailableException: await de_ServiceUnavailableException_event(event[\"ServiceUnavailableException\"], context),\n            };\n        }\n        return { $unknown: event };\n    });\n};\nconst de_TranscriptResultStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"TranscriptEvent\"] != null) {\n            return {\n                TranscriptEvent: await de_TranscriptEvent_event(event[\"TranscriptEvent\"], context),\n            };\n        }\n        if (event[\"BadRequestException\"] != null) {\n            return {\n                BadRequestException: await de_BadRequestException_event(event[\"BadRequestException\"], context),\n            };\n        }\n        if (event[\"LimitExceededException\"] != null) {\n            return {\n                LimitExceededException: await de_LimitExceededException_event(event[\"LimitExceededException\"], context),\n            };\n        }\n        if (event[\"InternalFailureException\"] != null) {\n            return {\n                InternalFailureException: await de_InternalFailureException_event(event[\"InternalFailureException\"], context),\n            };\n        }\n        if (event[\"ConflictException\"] != null) {\n            return {\n                ConflictException: await de_ConflictException_event(event[\"ConflictException\"], context),\n            };\n        }\n        if (event[\"ServiceUnavailableException\"] != null) {\n            return {\n                ServiceUnavailableException: await de_ServiceUnavailableException_event(event[\"ServiceUnavailableException\"], context),\n            };\n        }\n        return { $unknown: event };\n    });\n};\nconst de_BadRequestException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_BadRequestExceptionRes(parsedOutput, context);\n};\nconst de_CategoryEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, _json(data));\n    return contents;\n};\nconst de_ConflictException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ConflictExceptionRes(parsedOutput, context);\n};\nconst de_InternalFailureException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_InternalFailureExceptionRes(parsedOutput, context);\n};\nconst de_LimitExceededException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_LimitExceededExceptionRes(parsedOutput, context);\n};\nconst de_MedicalScribeTranscriptEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_MedicalScribeTranscriptEvent(data, context));\n    return contents;\n};\nconst de_MedicalTranscriptEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_MedicalTranscriptEvent(data, context));\n    return contents;\n};\nconst de_ServiceUnavailableException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ServiceUnavailableExceptionRes(parsedOutput, context);\n};\nconst de_TranscriptEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_TranscriptEvent(data, context));\n    return contents;\n};\nconst de_UtteranceEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_UtteranceEvent(data, context));\n    return contents;\n};\nconst de_Alternative = (output, context) => {\n    return take(output, {\n        Entities: (_) => de_EntityList(_, context),\n        Items: (_) => de_ItemList(_, context),\n        Transcript: __expectString,\n    });\n};\nconst de_AlternativeList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Alternative(entry, context);\n    });\n    return retVal;\n};\nconst de_CallAnalyticsEntity = (output, context) => {\n    return take(output, {\n        BeginOffsetMillis: __expectLong,\n        Category: __expectString,\n        Confidence: __limitedParseDouble,\n        Content: __expectString,\n        EndOffsetMillis: __expectLong,\n        Type: __expectString,\n    });\n};\nconst de_CallAnalyticsEntityList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CallAnalyticsEntity(entry, context);\n    });\n    return retVal;\n};\nconst de_CallAnalyticsItem = (output, context) => {\n    return take(output, {\n        BeginOffsetMillis: __expectLong,\n        Confidence: __limitedParseDouble,\n        Content: __expectString,\n        EndOffsetMillis: __expectLong,\n        Stable: __expectBoolean,\n        Type: __expectString,\n        VocabularyFilterMatch: __expectBoolean,\n    });\n};\nconst de_CallAnalyticsItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CallAnalyticsItem(entry, context);\n    });\n    return retVal;\n};\nconst de_CallAnalyticsLanguageIdentification = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CallAnalyticsLanguageWithScore(entry, context);\n    });\n    return retVal;\n};\nconst de_CallAnalyticsLanguageWithScore = (output, context) => {\n    return take(output, {\n        LanguageCode: __expectString,\n        Score: __limitedParseDouble,\n    });\n};\nconst de_Entity = (output, context) => {\n    return take(output, {\n        Category: __expectString,\n        Confidence: __limitedParseDouble,\n        Content: __expectString,\n        EndTime: __limitedParseDouble,\n        StartTime: __limitedParseDouble,\n        Type: __expectString,\n    });\n};\nconst de_EntityList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Entity(entry, context);\n    });\n    return retVal;\n};\nconst de_Item = (output, context) => {\n    return take(output, {\n        Confidence: __limitedParseDouble,\n        Content: __expectString,\n        EndTime: __limitedParseDouble,\n        Speaker: __expectString,\n        Stable: __expectBoolean,\n        StartTime: __limitedParseDouble,\n        Type: __expectString,\n        VocabularyFilterMatch: __expectBoolean,\n    });\n};\nconst de_ItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Item(entry, context);\n    });\n    return retVal;\n};\nconst de_LanguageIdentification = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_LanguageWithScore(entry, context);\n    });\n    return retVal;\n};\nconst de_LanguageWithScore = (output, context) => {\n    return take(output, {\n        LanguageCode: __expectString,\n        Score: __limitedParseDouble,\n    });\n};\nconst de_MedicalAlternative = (output, context) => {\n    return take(output, {\n        Entities: (_) => de_MedicalEntityList(_, context),\n        Items: (_) => de_MedicalItemList(_, context),\n        Transcript: __expectString,\n    });\n};\nconst de_MedicalAlternativeList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MedicalAlternative(entry, context);\n    });\n    return retVal;\n};\nconst de_MedicalEntity = (output, context) => {\n    return take(output, {\n        Category: __expectString,\n        Confidence: __limitedParseDouble,\n        Content: __expectString,\n        EndTime: __limitedParseDouble,\n        StartTime: __limitedParseDouble,\n    });\n};\nconst de_MedicalEntityList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MedicalEntity(entry, context);\n    });\n    return retVal;\n};\nconst de_MedicalItem = (output, context) => {\n    return take(output, {\n        Confidence: __limitedParseDouble,\n        Content: __expectString,\n        EndTime: __limitedParseDouble,\n        Speaker: __expectString,\n        StartTime: __limitedParseDouble,\n        Type: __expectString,\n    });\n};\nconst de_MedicalItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MedicalItem(entry, context);\n    });\n    return retVal;\n};\nconst de_MedicalResult = (output, context) => {\n    return take(output, {\n        Alternatives: (_) => de_MedicalAlternativeList(_, context),\n        ChannelId: __expectString,\n        EndTime: __limitedParseDouble,\n        IsPartial: __expectBoolean,\n        ResultId: __expectString,\n        StartTime: __limitedParseDouble,\n    });\n};\nconst de_MedicalResultList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MedicalResult(entry, context);\n    });\n    return retVal;\n};\nconst de_MedicalScribeStreamDetails = (output, context) => {\n    return take(output, {\n        ChannelDefinitions: _json,\n        EncryptionSettings: _json,\n        LanguageCode: __expectString,\n        MediaEncoding: __expectString,\n        MediaSampleRateHertz: __expectInt32,\n        MedicalScribeContextProvided: __expectBoolean,\n        PostStreamAnalyticsResult: _json,\n        PostStreamAnalyticsSettings: _json,\n        ResourceAccessRoleArn: __expectString,\n        SessionId: __expectString,\n        StreamCreatedAt: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        StreamEndedAt: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        StreamStatus: __expectString,\n        VocabularyFilterMethod: __expectString,\n        VocabularyFilterName: __expectString,\n        VocabularyName: __expectString,\n    });\n};\nconst de_MedicalScribeTranscriptEvent = (output, context) => {\n    return take(output, {\n        TranscriptSegment: (_) => de_MedicalScribeTranscriptSegment(_, context),\n    });\n};\nconst de_MedicalScribeTranscriptItem = (output, context) => {\n    return take(output, {\n        BeginAudioTime: __limitedParseDouble,\n        Confidence: __limitedParseDouble,\n        Content: __expectString,\n        EndAudioTime: __limitedParseDouble,\n        Type: __expectString,\n        VocabularyFilterMatch: __expectBoolean,\n    });\n};\nconst de_MedicalScribeTranscriptItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MedicalScribeTranscriptItem(entry, context);\n    });\n    return retVal;\n};\nconst de_MedicalScribeTranscriptSegment = (output, context) => {\n    return take(output, {\n        BeginAudioTime: __limitedParseDouble,\n        ChannelId: __expectString,\n        Content: __expectString,\n        EndAudioTime: __limitedParseDouble,\n        IsPartial: __expectBoolean,\n        Items: (_) => de_MedicalScribeTranscriptItemList(_, context),\n        SegmentId: __expectString,\n    });\n};\nconst de_MedicalTranscript = (output, context) => {\n    return take(output, {\n        Results: (_) => de_MedicalResultList(_, context),\n    });\n};\nconst de_MedicalTranscriptEvent = (output, context) => {\n    return take(output, {\n        Transcript: (_) => de_MedicalTranscript(_, context),\n    });\n};\nconst de_Result = (output, context) => {\n    return take(output, {\n        Alternatives: (_) => de_AlternativeList(_, context),\n        ChannelId: __expectString,\n        EndTime: __limitedParseDouble,\n        IsPartial: __expectBoolean,\n        LanguageCode: __expectString,\n        LanguageIdentification: (_) => de_LanguageIdentification(_, context),\n        ResultId: __expectString,\n        StartTime: __limitedParseDouble,\n    });\n};\nconst de_ResultList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Result(entry, context);\n    });\n    return retVal;\n};\nconst de_Transcript = (output, context) => {\n    return take(output, {\n        Results: (_) => de_ResultList(_, context),\n    });\n};\nconst de_TranscriptEvent = (output, context) => {\n    return take(output, {\n        Transcript: (_) => de_Transcript(_, context),\n    });\n};\nconst de_UtteranceEvent = (output, context) => {\n    return take(output, {\n        BeginOffsetMillis: __expectLong,\n        EndOffsetMillis: __expectLong,\n        Entities: (_) => de_CallAnalyticsEntityList(_, context),\n        IsPartial: __expectBoolean,\n        IssuesDetected: _json,\n        Items: (_) => de_CallAnalyticsItemList(_, context),\n        LanguageCode: __expectString,\n        LanguageIdentification: (_) => de_CallAnalyticsLanguageIdentification(_, context),\n        ParticipantRole: __expectString,\n        Sentiment: __expectString,\n        Transcript: __expectString,\n        UtteranceId: __expectString,\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst _CIT = \"ContentIdentificationType\";\nconst _CRT = \"ContentRedactionType\";\nconst _ECI = \"EnableChannelIdentification\";\nconst _EPRS = \"EnablePartialResultsStabilization\";\nconst _IL = \"IdentifyLanguage\";\nconst _IML = \"IdentifyMultipleLanguages\";\nconst _LC = \"LanguageCode\";\nconst _LMN = \"LanguageModelName\";\nconst _LO = \"LanguageOptions\";\nconst _ME = \"MediaEncoding\";\nconst _MSRH = \"MediaSampleRateHertz\";\nconst _NOC = \"NumberOfChannels\";\nconst _PET = \"PiiEntityTypes\";\nconst _PL = \"PreferredLanguage\";\nconst _PRS = \"PartialResultsStability\";\nconst _RI = \"RequestId\";\nconst _S = \"Specialty\";\nconst _SI = \"SessionId\";\nconst _SSL = \"ShowSpeakerLabel\";\nconst _T = \"Type\";\nconst _VFM = \"VocabularyFilterMethod\";\nconst _VFN = \"VocabularyFilterName\";\nconst _VFNo = \"VocabularyFilterNames\";\nconst _VN = \"VocabularyName\";\nconst _VNo = \"VocabularyNames\";\nconst _xari = \"x-amzn-request-id\";\nconst _xatcit = \"x-amzn-transcribe-content-identification-type\";\nconst _xatcrt = \"x-amzn-transcribe-content-redaction-type\";\nconst _xateci = \"x-amzn-transcribe-enable-channel-identification\";\nconst _xateprs = \"x-amzn-transcribe-enable-partial-results-stabilization\";\nconst _xatil = \"x-amzn-transcribe-identify-language\";\nconst _xatiml = \"x-amzn-transcribe-identify-multiple-languages\";\nconst _xatlc = \"x-amzn-transcribe-language-code\";\nconst _xatlmn = \"x-amzn-transcribe-language-model-name\";\nconst _xatlo = \"x-amzn-transcribe-language-options\";\nconst _xatme = \"x-amzn-transcribe-media-encoding\";\nconst _xatnoc = \"x-amzn-transcribe-number-of-channels\";\nconst _xatpet = \"x-amzn-transcribe-pii-entity-types\";\nconst _xatpl = \"x-amzn-transcribe-preferred-language\";\nconst _xatprs = \"x-amzn-transcribe-partial-results-stability\";\nconst _xats = \"x-amzn-transcribe-specialty\";\nconst _xatsi = \"x-amzn-transcribe-session-id\";\nconst _xatsr = \"x-amzn-transcribe-sample-rate\";\nconst _xatssl = \"x-amzn-transcribe-show-speaker-label\";\nconst _xatt = \"x-amzn-transcribe-type\";\nconst _xatvfm = \"x-amzn-transcribe-vocabulary-filter-method\";\nconst _xatvfn = \"x-amzn-transcribe-vocabulary-filter-name\";\nconst _xatvfn_ = \"x-amzn-transcribe-vocabulary-filter-names\";\nconst _xatvn = \"x-amzn-transcribe-vocabulary-name\";\nconst _xatvn_ = \"x-amzn-transcribe-vocabulary-names\";\n", "import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_GetMedicalScribeStreamCommand, se_GetMedicalScribeStreamCommand } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class GetMedicalScribeStreamCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"Transcribe\", \"GetMedicalScribeStream\", {})\n    .n(\"TranscribeStreamingClient\", \"GetMedicalScribeStreamCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetMedicalScribeStreamCommand)\n    .de(de_GetMedicalScribeStreamCommand)\n    .build() {\n}\n", "import { getEventStreamPlugin } from \"@aws-sdk/middleware-eventstream\";\nimport { getTranscribeStreamingPlugin } from \"@aws-sdk/middleware-sdk-transcribe-streaming\";\nimport { getWebSocketPlugin } from \"@aws-sdk/middleware-websocket\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { StartCallAnalyticsStreamTranscriptionRequestFilterSensitiveLog, StartCallAnalyticsStreamTranscriptionResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_StartCallAnalyticsStreamTranscriptionCommand, se_StartCallAnalyticsStreamTranscriptionCommand, } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class StartCallAnalyticsStreamTranscriptionCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n        getEventStreamPlugin(config),\n        getWebSocketPlugin(config, {\n            headerPrefix: \"x-amzn-transcribe-\",\n        }),\n        getTranscribeStreamingPlugin(config),\n    ];\n})\n    .s(\"Transcribe\", \"StartCallAnalyticsStreamTranscription\", {\n    eventStream: {\n        input: true,\n        output: true,\n    },\n})\n    .n(\"TranscribeStreamingClient\", \"StartCallAnalyticsStreamTranscriptionCommand\")\n    .f(StartCallAnalyticsStreamTranscriptionRequestFilterSensitiveLog, StartCallAnalyticsStreamTranscriptionResponseFilterSensitiveLog)\n    .ser(se_StartCallAnalyticsStreamTranscriptionCommand)\n    .de(de_StartCallAnalyticsStreamTranscriptionCommand)\n    .build() {\n}\n", "import { getEventStreamPlugin } from \"@aws-sdk/middleware-eventstream\";\nimport { getTranscribeStreamingPlugin } from \"@aws-sdk/middleware-sdk-transcribe-streaming\";\nimport { getWebSocketPlugin } from \"@aws-sdk/middleware-websocket\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { StartMedicalScribeStreamRequestFilterSensitiveLog, StartMedicalScribeStreamResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_StartMedicalScribeStreamCommand, se_StartMedicalScribeStreamCommand } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class StartMedicalScribeStreamCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n        getEventStreamPlugin(config),\n        getWebSocketPlugin(config, {\n            headerPrefix: \"x-amzn-transcribe-\",\n        }),\n        getTranscribeStreamingPlugin(config),\n    ];\n})\n    .s(\"Transcribe\", \"StartMedicalScribeStream\", {\n    eventStream: {\n        input: true,\n        output: true,\n    },\n})\n    .n(\"TranscribeStreamingClient\", \"StartMedicalScribeStreamCommand\")\n    .f(StartMedicalScribeStreamRequestFilterSensitiveLog, StartMedicalScribeStreamResponseFilterSensitiveLog)\n    .ser(se_StartMedicalScribeStreamCommand)\n    .de(de_StartMedicalScribeStreamCommand)\n    .build() {\n}\n", "import { getEventStreamPlugin } from \"@aws-sdk/middleware-eventstream\";\nimport { getTranscribeStreamingPlugin } from \"@aws-sdk/middleware-sdk-transcribe-streaming\";\nimport { getWebSocketPlugin } from \"@aws-sdk/middleware-websocket\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { StartMedicalStreamTranscriptionRequestFilterSensitiveLog, StartMedicalStreamTranscriptionResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_StartMedicalStreamTranscriptionCommand, se_StartMedicalStreamTranscriptionCommand, } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class StartMedicalStreamTranscriptionCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n        getEventStreamPlugin(config),\n        getWebSocketPlugin(config, {\n            headerPrefix: \"x-amzn-transcribe-\",\n        }),\n        getTranscribeStreamingPlugin(config),\n    ];\n})\n    .s(\"Transcribe\", \"StartMedicalStreamTranscription\", {\n    eventStream: {\n        input: true,\n        output: true,\n    },\n})\n    .n(\"TranscribeStreamingClient\", \"StartMedicalStreamTranscriptionCommand\")\n    .f(StartMedicalStreamTranscriptionRequestFilterSensitiveLog, StartMedicalStreamTranscriptionResponseFilterSensitiveLog)\n    .ser(se_StartMedicalStreamTranscriptionCommand)\n    .de(de_StartMedicalStreamTranscriptionCommand)\n    .build() {\n}\n", "import { getEventStreamPlugin } from \"@aws-sdk/middleware-eventstream\";\nimport { getTranscribeStreamingPlugin } from \"@aws-sdk/middleware-sdk-transcribe-streaming\";\nimport { getWebSocketPlugin } from \"@aws-sdk/middleware-websocket\";\nimport { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { StartStreamTranscriptionRequestFilterSensitiveLog, StartStreamTranscriptionResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_StartStreamTranscriptionCommand, se_StartStreamTranscriptionCommand } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class StartStreamTranscriptionCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n        getEventStreamPlugin(config),\n        getWebSocketPlugin(config, {\n            headerPrefix: \"x-amzn-transcribe-\",\n        }),\n        getTranscribeStreamingPlugin(config),\n    ];\n})\n    .s(\"Transcribe\", \"StartStreamTranscription\", {\n    eventStream: {\n        input: true,\n        output: true,\n    },\n})\n    .n(\"TranscribeStreamingClient\", \"StartStreamTranscriptionCommand\")\n    .f(StartStreamTranscriptionRequestFilterSensitiveLog, StartStreamTranscriptionResponseFilterSensitiveLog)\n    .ser(se_StartStreamTranscriptionCommand)\n    .de(de_StartStreamTranscriptionCommand)\n    .build() {\n}\n", "import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { GetMedicalScribeStreamCommand, } from \"./commands/GetMedicalScribeStreamCommand\";\nimport { StartCallAnalyticsStreamTranscriptionCommand, } from \"./commands/StartCallAnalyticsStreamTranscriptionCommand\";\nimport { StartMedicalScribeStreamCommand, } from \"./commands/StartMedicalScribeStreamCommand\";\nimport { StartMedicalStreamTranscriptionCommand, } from \"./commands/StartMedicalStreamTranscriptionCommand\";\nimport { StartStreamTranscriptionCommand, } from \"./commands/StartStreamTranscriptionCommand\";\nimport { TranscribeStreamingClient } from \"./TranscribeStreamingClient\";\nconst commands = {\n    GetMedicalScribeStreamCommand,\n    StartCallAnalyticsStreamTranscriptionCommand,\n    StartMedicalScribeStreamCommand,\n    StartMedicalStreamTranscriptionCommand,\n    StartStreamTranscriptionCommand,\n};\nexport class TranscribeStreaming extends TranscribeStreamingClient {\n}\ncreateAggregatedClient(commands, TranscribeStreaming);\n"],
  "mappings": "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",
  "names": ["normalizeProvider", "partition", "partition", "normalizeProvider", "normalizeProvider", "e", "k", "getRuntimeConfig", "getRuntimeConfig", "AudioStream", "CallAnalyticsTranscriptResultStream", "MedicalScribeInputStream", "MedicalScribeResultStream", "MedicalTranscriptResultStream", "TranscriptResultStream", "b", "e", "Command", "o", "Command", "o", "Command", "o", "Command", "o", "Command", "o"]
}
