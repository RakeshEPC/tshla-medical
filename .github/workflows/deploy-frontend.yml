name: Deploy Frontend to Azure Static Web Apps

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'vite.config.ts'
      - 'package.json'
      - '.env.production'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy Frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps
          npm rebuild @rollup/rollup-linux-x64-gnu || true

      - name: Pre-Build Validation
        run: |
          echo "üîç Validating configuration before build..."
          if [ ! -f "public/staticwebapp.config.json" ]; then
            echo "‚ùå CRITICAL: staticwebapp.config.json must be in public/ folder!"
            echo "   This will cause 404 errors on /admin/* routes in production."
            echo "   See DEPLOYMENT_FAILURES.md #5"
            exit 1
          fi
          echo "‚úÖ staticwebapp.config.json in correct location"

      - name: Build application
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_PUMP_API_URL: https://tshla-pump-api-container.redpebble-e4551b7a.eastus.azurecontainerapps.io
          VITE_SCHEDULE_API_URL: https://tshla-schedule-api-container.redpebble-e4551b7a.eastus.azurecontainerapps.io
          VITE_AUTH_API_URL: https://tshla-auth-api-container.redpebble-e4551b7a.eastus.azurecontainerapps.io
          VITE_ADMIN_ACCOUNT_API_URL: https://tshla-admin-api-container.redpebble-e4551b7a.eastus.azurecontainerapps.io
          VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}
          VITE_OPENAI_MODEL_STAGE4: gpt-4o-mini
          VITE_OPENAI_MODEL_STAGE5: gpt-4o
          VITE_OPENAI_MODEL_STAGE6: gpt-4o
          VITE_PRIMARY_AI_PROVIDER: openai
          VITE_AZURE_OPENAI_ENDPOINT: ${{ secrets.VITE_AZURE_OPENAI_ENDPOINT }}
          VITE_AZURE_OPENAI_KEY: ${{ secrets.VITE_AZURE_OPENAI_KEY }}
          VITE_AZURE_OPENAI_DEPLOYMENT: ${{ secrets.VITE_AZURE_OPENAI_DEPLOYMENT }}
          VITE_AZURE_OPENAI_API_VERSION: 2024-02-01
          VITE_DEEPGRAM_API_KEY: ${{ secrets.VITE_DEEPGRAM_API_KEY }}
          VITE_DEEPGRAM_MODEL: nova-2-medical
          VITE_DEEPGRAM_LANGUAGE: en-US
          VITE_DEEPGRAM_TIER: enhanced
          VITE_PRIMARY_STT_PROVIDER: deepgram
          VITE_USE_DEEPGRAM_SDK: "true"
          VITE_PRIMARY_SPEECH_PROVIDER: deepgram
          VITE_USE_DEEPGRAM_PROXY: "true"
          VITE_DEEPGRAM_PROXY_URL: wss://tshla-deepgram-proxy.redpebble-e4551b7a.eastus.azurecontainerapps.io
        run: npm run build

      - name: Post-Build Validation
        run: |
          echo "üîç Validating build output..."
          chmod +x scripts/validate-build.sh
          ./scripts/validate-build.sh

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "dist"
          output_location: ""
          skip_app_build: true

      - name: Wait for Deployment Propagation
        run: |
          echo "‚è≥ Waiting 30 seconds for deployment to propagate..."
          sleep 30

      - name: Post-Deployment Validation
        run: |
          echo "üîç Validating production deployment..."

          FRONTEND_URL="https://mango-sky-0ba265c0f.1.azurestaticapps.net"

          echo "Testing frontend root..."
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$FRONTEND_URL" --max-time 10)
          if [ "$STATUS" = "200" ]; then
            echo "‚úÖ Frontend root: $STATUS"
          else
            echo "‚ùå Frontend root: $STATUS (expected 200)"
            exit 1
          fi

          echo "Testing /admin/pump-comparison (CRITICAL)..."
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$FRONTEND_URL/admin/pump-comparison" --max-time 10)
          if [ "$STATUS" = "200" ]; then
            echo "‚úÖ Admin pump comparison: $STATUS"
          else
            echo "‚ùå Admin pump comparison: $STATUS (expected 200)"
            echo "   This indicates staticwebapp.config.json may be missing!"
            exit 1
          fi

          echo "Testing staticwebapp.config.json exists..."
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$FRONTEND_URL/staticwebapp.config.json" --max-time 10)
          if [ "$STATUS" = "200" ]; then
            echo "‚úÖ Config file deployed: $STATUS"
          else
            echo "‚ùå Config file missing: $STATUS"
            exit 1
          fi

          echo ""
          echo "‚úÖ All deployment validation checks passed!"
          echo "   Production URL: $FRONTEND_URL"
